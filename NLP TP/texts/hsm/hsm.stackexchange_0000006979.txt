Q:

What is the most number of digits of a mathematical transcendental constant that have been required for a real computation?

What is the most number of digits of a transcendental mathematical constant (for example, $\pi$ or $\mathrm{e}$) that have been necessary for an actual computation?

Note that I am asking about the most extreme case, not usual practice. Usual practice is well documented; for example, this article quotes a NASA engineer as saying that they use only 15 digits for their calculations.
By "actual computation" I mean a computation that has been performed with some scientific or engineering purpose.
By "necessary" I mean that if the value of the fundamental constant were less precise, then the computation could give a result so inaccurate as to be legitimately less useful for the intended scientific or engineering purpose.

A:

Lamb discusses the issue in How Much Pi Do You Need?:

"I asked a NASA scientist how many digits of pi the agency uses for its calculations. Susan Gomez, manager of the International Space Station Guidance Navigation and Control (GNC) subsystem for NASA, said that calculations involving pi use 15 digits for GNC code and 16 for the Space Integrated Global Positioning System/Inertial Navigation System (SIGI). SIGI is the program that controls and stabilizes spacecraft during missions.
Believe it or not, there is a committee that makes recommendations about the values of these fundamental constants. The Committee on Data for Science and Technology, or CODATA, an interdisciplinary group from the International Council for Science, periodically publishes a set of accepted values of the fundamental physical constants... Peter Mohr, a physicist who works for the Fundamental Constants Data Center at the National Institute for Standards and Technology, which is involved in calculating and disseminating the accepted CODATA values, says that the institute uses 32 significant digits of pi in their computations."

NASA's Marc Rayman explained why one would not need to go far beyond the CODATA precision even in the hypothetical future astronomy:

"The radius of the universe is about 46 billion light years. Now let me ask a different question: How many digits of pi would we need to calculate the circumference of a circle with a radius of 46 billion light years to an accuracy equal to the diameter of a hydrogen atom (the simplest atom)? The answer is that you would need 39 or 40 decimal places. If you think about how fantastically vast the universe is... and think about how incredibly tiny a single atom is, you can see that we would not need to use many digits of pi to cover the entire range."

One may worry that sensitivity effects in ill-posed problems, such as weather forecasts, would require extra high precision in the input. However, in those cases the imprecision of measured inputs makes high precision in mathematical constants pointless. Still, in 2002 Tucker employed a combination of interval arithmetic and 80-bit IEEE extended arithmetic (17-digit precision) to prove that the Lorenz equations support a “strange” attractor, which solved Smale's problem. Bailey and Borwein describe other examples in High-Precision Arithmetic in Mathematical Physics.
But if "scientific or engineering purpose" includes cryptography then the threshold is raised dramatically. Ciphers based on transcendental numbers have been proposed, and they require exorbitant precision to maintain security. Here is a simple version from Viswanath's Transcendental Numbers and Cryptography:

"The decimal  expansion  of $\pi$ is  known  for  more  than  1000  million  places of  decimals and is known as the mountain of $\pi$. We use this mountain of $\pi$ in the encryption of  messages.  One  can  use  any  other transcendental  number  for  which  the mountain is available! Assume that Bob is encrypting a message with he mountain of $\pi$. In this encryption, the Key $\alpha$ is the position of the decimal place of $\pi$ which is used to begin  the  encryption.  The  number  at $\alpha$-th place,  say $n$ is  used  to  substitute  the beginning  letter  of  the  plaintext  by  shifting the  alphabet by $n$ units(mod 26). Afterwards the  process is continued with the next integer and the next alphabet in the  plaintext and  so  on,  till  the  entire  message  is  encrypted. One  can  raise  the  level  of  security  further  by  using  two  transcendental numbers one for encryption and the other for decryption and the key is chosen as before."

Actually, digits of $\pi$ are known to 10 trillion places now.

