Q:

Why are there so many different, and widely accepted, notational systems for boolean logic?

I can write out the following CNF in various different ways:
In mathematical textbook notation:
$(A \land B \land C) \lor (\lnot A \land B \land \lnot C) $
In C-like programming notation:
(A && B && C) || (!A && B && !C)
In engineering logic notation: $(ABC) + (\overline{A}B\overline{C})$
So, I guess my question is in the title: why do we have so many different systems of boolean logic notation when boolean logic as a field is quite a recent invention?

A:

The software part is easy:  it uses standard ASCII characters so the source code can be universally applied.
"Engineering Logic" has its own variations,but notice that "addition" is similar to "OR" and "multiplication" is similar to "AND" when dealing with base-2 numbers -- and that Boolean logic is fundamentally binary.
As to tilde vs. exclamation point vs. overbar, my guess is that different groups or locales got started independently.

