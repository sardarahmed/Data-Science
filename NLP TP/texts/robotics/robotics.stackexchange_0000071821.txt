Q:

In general: How to catch subscription errors?

How do i catch errors from subscribers, or even better in general. Originally I tried to catch only subscription errors but as I moved on how to do catch ros exceptions in general as its done in c++ via (...)
e.g. InvalidNameException & ConflictingSubscriptionException
try{  for (unsigned i=0; i<strVec.size(); i++){
 
    //subscribe stuff
}
} catch (...)
    { //how to catch here, like e.what() in c++
        exit(1);
    } 

Originally posted by user23fj239 on ROS Answers with karma: 748 on 2016-02-05
Post score: 2

A:

Unitl the guidelines are updated, I do it like so:
e.g. tf can throw these, so I check for:
try
{
    // lookupTransform of tf
}
catch ( const tf2::TransformException& e )
{
    // handle custom exception
}
catch ( const tf2::LookupException& e )
{
    // handle custom exception
}
catch ( const tf2::ConnectivityException& e )
{
    // standard exceptions
}
catch ( ... )
{
    // everything else
}

In general simply by this, because

All of roscpp's exceptions inherit from a common ros::Exception base class.

   try
    {
        // throws something
    }
    catch ( ros::Exception &e )
    {
     ROS_ERROR("Error occured: %s ", e.what());
    }

Originally posted by user23fj239 with karma: 748 on 2016-07-28
This answer was ACCEPTED on the original site
Post score: 0

