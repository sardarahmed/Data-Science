Q:

Issues creating a rosbuild overlay on top of catkin packages

I'm having an issue similar to 49825/how-do-i-create-a-rosbuild-overlay-on-a-catkin-workspace
http://answers.ros.org/question/49825/how-do-i-create-a-rosbuild-overlay-on-a-catkin-workspace/
That is, I'm attempting a fresh ROS groovy source install using the installation guide on a fresh copy of Ubuntu 12.04, and it seems my ROS_PACKAGE_PATH is not setup correctly.
This command:
sudo dpkg -s python-rosinstall 

Gives:
...
Maintainer: Tully Foote <tfoote@willowgarage.com>
Architecture: all
Source: rosinstall
Version: 0.6.22-1
Provides: python2.6-rosinstall
...

I have my workspace setup as specified by the instructions, thus, my directory structure looks like this:
wet workspace:
$HOME/ros_catkin_ws/
 ../devel_isolated/
 ../install_isolated/
 ../src/
 ...

dry workspace:
$HOME/ros_ws/
 ../<dry_package_1>
 ../<dry_package_2>
 ../<dry_package_3>
 ../setup.sh
 ../setup.bash
 ...

Before attempting to build my dry packages using rosmake, I source $HOME/ros_ws/setup.bash. And then invoke rosmake in the package i'd like to build.
This results in output like:
[rosmake-0] Starting >>> turtlebot_driver [ make ]
[rosmake-1] Starting >>> turtlebot_description [ make ]
[rosmake-2] Starting >>> turtlebot_node [ make ]       
[rosmake-3] Starting >>> pointcloud_to_laserscan [ make ]
[rosmake-0] Finished <<< turtlebot_driver [SKIP] No rule to make target None
[rosmake-0] Starting >>> turtlebot_bringup [ make ]
[rosmake-3] Finished <<< pointcloud_to_laserscan [SKIP] No rule to make target None 
[rosmake-2] Finished <<< turtlebot_node [SKIP] No rule to make target None 
 ...

If I execute the following command:
ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:$HOME/ros_catkin_ws/src/

Then the packages will build as I expect. Can someone please point out my mistake?

Originally posted by erikbeerepoot on ROS Answers with karma: 1 on 2013-01-18
Post score: 0

Original comments
Comment by erikbeerepoot on 2013-01-20:
@piyushk When you say "all your tools" are you talking about all ros packages, or the python based install tools?
Comment by piyushk on 2013-01-20:
I think re installing python-rosinstall should be sufficient.
Comment by erikbeerepoot on 2013-01-27:
Tried this, but no dice. Same results.
Comment by piyushk on 2013-01-29:
@erikbeerepoot: see updated answer

A:

My best guess is that your rosbuild workspace has not been initializaed properly. In the relevant tutorial, take a look at the rosws init command. Note that it initializes on top of the catkin workspace and not /opt/ros/groovy
To get this same effect after the rosbuild workspace has been initialized, modify your .rosinstall file in your rosbuild workspace. Change the setup-file entry to point to the setup file in catkin_ws/devel, and I believe you should be good.
Edit#1
catkin_make_isolated is behaving differently from catkin_make and no setup.bash is generated. I don't know if this is intended behavior, but I have reported it here: https://github.com/ros/catkin/issues/339
You might try calling catkin_make and using catkin_ws/devel as the target. I haven't looked into the scripts in enough detail to figure out if that will make a difference or not.

Originally posted by piyushk with karma: 2871 on 2013-01-19
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by piyushk on 2013-01-20:
@erikbeerepoot: It looks about right, through I ran rosws init on the devel workspace. Can you upgrade all youur tools through apt, and try out the tutorial on new workspaces after clearing out your bashrc? Let's see if the same thing happens.

