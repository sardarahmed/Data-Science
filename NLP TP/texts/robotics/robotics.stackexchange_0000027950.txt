Q:

What is the meaning of LOCAL and GLOBAL CoordinateTypes in SphericalCoordinates class

Hi all, I am looking at the SphericalCoordinates class, in particular at the CoordinateType: https://bitbucket.org/osrf/gazebo/src/43789bfd0f1bf3d6aa4e2ca785e5a1b557880ec4/gazebo/common/SphericalCoordinates.hh?at=default&fileviewer=file-view-default#SphericalCoordinates.hh-52.
Now what is the meaning of LOCAL and GLOBAL? Would this correspond to base_link and map respectively as defined in http://www.ros.org/reps/rep-0105.html? And would in ROS world be a localization node that would do this transform for me?
Secondly, what do GlobalFromLocal and LocalFromGlobal functions of the same class only convert velocity vectors (and not e.g. positions)?
Thx ahead, D.

Originally posted by dejanpan on Gazebo Answers with karma: 60 on 2016-11-15
Post score: 1

A:

The GLOBAL coordinate frame is a Cartesian coordinate frame with its origin at the latitude, longitude, and height specified in the spherical_coordinates tags. It is documented as having XYZ directions mapped to East-North-Up (ENU), but there is currently a bug that causes them to be interpreted as West-South-Up (issue 2022).
The LOCAL frame is similar to the GLOBAL frame but with an additional heading offset (also specified in the sdf tags).
Update: sorry I missed the second question.
The LocalToGlobal and GlobalToLocal functions were written first (by me) but were somewhat limited. The PositionTransform and VelocityTransform functions should be more general. We could possibly deprecate the LocalToGlobal and GlobalToLocal, but we haven't gotten around to it yet.
As to the question about the reason for the order of transformations, I'm not sure of the answer.

Originally posted by scpeters with karma: 2861 on 2016-11-16
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by dejanpan on 2016-11-16:
Thx.
Did you also see my other question: why do GlobalFromLocal and LocalFromGlobal functions of the same class only convert velocity vectors (and not e.g. positions)?
One more follow-up question, why is the conversion exactly this way (LLA -> ECEF -> ENU)? Why people do not convert directly from LLA -> ENU? Or why don't they just convert LLA -> ECEF and work in ECEF? Is it because the ENU is more intuitive?

