Q:

No link elements found in urdf file

I'm trying to simulate intel realsense in Gazebo and for that i run into error :No link elements found in urdf file.
My urdf.xacro file: d435.urdf.xacro:
<?xml version="1.0"?>

<!--
License: Apache 2.0. See LICENSE file in root directory.
Copyright(c) 2017 Intel Corporation. All Rights Reserved

This is the URDF model for the Intel RealSense 430 camera, in it's
aluminum peripherial evaluation case.
-->

<robot name= "intel" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:include filename="$(find realsense_gazebo_plugin)/urdf/d435.gazebo.xacro"/> 

  <xacro:macro name="sensor_d435" params="parent *origin">
    <xacro:property name="M_PI" value="3.1415926535897931" />
  
    <!-- The following values are approximate, and the camera node
     publishing TF values with actual calibrated camera extrinsic values -->
    <xacro:property name="d435_cam_depth_to_left_ir_offset" value="0.0"/>
    <xacro:property name="d435_cam_depth_to_right_ir_offset" value="-0.050"/>
    <xacro:property name="d435_cam_depth_to_color_offset" value="0.015"/>
  
    <!-- The following values model the aluminum peripherial case for the
    D435 camera, with the camera joint represented by the actual 
    peripherial camera tripod mount -->
    <xacro:property name="d435_cam_width" value="0.090"/>
    <xacro:property name="d435_cam_height" value="0.025"/>
    <xacro:property name="d435_cam_depth" value="0.02505"/>
    <xacro:property name="d435_cam_mount_from_center_offset" value="0.0149"/>
  
    <!-- The following offset is relative the the physical D435 camera peripherial
    camera tripod mount -->
    <xacro:property name="d435_cam_depth_px" value="${d435_cam_mount_from_center_offset}"/>
    <xacro:property name="d435_cam_depth_py" value="0.0175"/>
    <xacro:property name="d435_cam_depth_pz" value="${d435_cam_height/2}"/>

    <material name="aluminum">
      <color rgba="0.5 0.5 0.5 1"/>
    </material>

    <!-- camera body, with origin at bottom screw mount -->
    <joint name="camera_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent}"/>
      <child link="camera_link" />
    </joint>

    <link name="camera_link">
      <visual>
      <origin xyz="${d435_cam_mount_from_center_offset} 0.0 ${d435_cam_height/2}" rpy="${M_PI/2} 0 ${M_PI/2}"/>
    <geometry>
        <mesh filename="package://realsense_gazebo_plugin/meshes/d435.dae" />
    </geometry>
    <material name="aluminum"/>
      </visual>
      <collision>
    <origin xyz="0.0 0.0 ${d435_cam_height/2}" rpy="0 0 0"/>
    <geometry>
    <box size="${d435_cam_depth} ${d435_cam_width} ${d435_cam_height}"/>
    </geometry>
      </collision>
      <inertial>
    <!-- The following are not reliable values, and should not be used for modeling -->
    <mass value="0.564" />
    <origin xyz="0 0 0" />
    <inertia ixx="0.003881243" ixy="0.0" ixz="0.0" iyy="0.000498940" iyz="0.0" izz="0.003879257" />
      </inertial>
    </link>
   
    <!-- camera depth joints and links -->
    <joint name="camera_depth_joint" type="fixed">
      <origin xyz="${d435_cam_depth_px} ${d435_cam_depth_py} ${d435_cam_depth_pz}" rpy="0 0 0"/>
      <parent link="camera_link"/>
      <child link="camera_depth_frame" />
    </joint>
    <link name="camera_depth_frame"/>

    <joint name="camera_depth_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="camera_depth_frame" />
      <child link="camera_depth_optical_frame" />
    </joint>
    <link name="camera_depth_optical_frame"/>
      
    <!-- camera left IR joints and links -->
    <joint name="camera_left_ir_joint" type="fixed">
      <origin xyz="0 ${d435_cam_depth_to_left_ir_offset} 0" rpy="0 0 0" />
      <parent link="camera_depth_frame" />
      <child link="camera_left_ir_frame" />
    </joint>
    <link name="camera_left_ir_frame"/>

    <joint name="camera_left_ir_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="camera_left_ir_frame" />
      <child link="camera_left_ir_optical_frame" />
    </joint>
    <link name="camera_left_ir_optical_frame"/>

    <!-- camera right IR joints and links -->
    <joint name="camera_right_ir_joint" type="fixed">
      <origin xyz="0 ${d435_cam_depth_to_right_ir_offset} 0" rpy="0 0 0" />
      <parent link="camera_depth_frame" />
      <child link="camera_right_ir_frame" />
    </joint>
    <link name="camera_right_ir_frame"/>

    <joint name="camera_right_ir_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="camera_right_ir_frame" />
      <child link="camera_right_ir_optical_frame" />
    </joint>
    <link name="camera_right_ir_optical_frame"/>

    <!-- camera color joints and links -->
    <joint name="camera_color_joint" type="fixed">
      <origin xyz="0 ${d435_cam_depth_to_color_offset} 0" rpy="0 0 0" />
      <parent link="camera_depth_frame" />
      <child link="camera_color_frame" />
    </joint>
    <link name="camera_color_frame">
      <inertial>
    <mass value="0.01" />
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <inertia ixx="0.0"  ixy="0.0"  ixz="0.0"
             iyy="0.0"  iyz="0.0"
             izz="0.0" />
      </inertial>
    </link>

    <joint name="camera_color_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="camera_color_frame" />
      <child link="camera_color_optical_frame" />
    </joint>
    <link name="camera_color_optical_frame">
      <inertial>
    <mass value="0.01" />
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <inertia ixx="0.0"  ixy="0.0"  ixz="0.0"
             iyy="0.0"  iyz="0.0"
             izz="0.0" />
      </inertial>
    </link>

    <xacro:simulation_d435 camera_name="realsense" depth_optical_frame="camera_depth_optical_frame" color_optical_frame="camera_color_optical_frame" infrared1_optical_frame="camera_left_ir_optical_frame" infrared2_optical_frame="camera_right_ir_optical_frame"/>

  </xacro:macro>
</robot>

file : d435.gazebo.xacro
<?xml version="1.0"?>

<!--
License: Apache 2.0. See LICENSE file in root directory.
Copyright(c) 2017 PAL Robotics, S.L. All Rights Reserved

This is the Gazebo URDF model for the Intel RealSense D435 camera
-->
  
<robot xmlns:xacro="http://ros.org/wiki/xacro">
  
  <xacro:macro name="simulation_d435" params="camera_name depth_optical_frame color_optical_frame infrared1_optical_frame infrared2_optical_frame" >

    <!-- Load parameters to model's main link-->
    <gazebo reference="camera_link">
      <self_collide>0</self_collide>
      <enable_wind>0</enable_wind>
      <kinematic>0</kinematic>
      <gravity>1</gravity>
      <!--<mu>1</mu>-->
      <mu2>1</mu2>
      <fdir1>0 0 0</fdir1>
      <!--<slip1>0</slip1>
      <slip2>0</slip2>-->
      <kp>1e+13</kp>
      <kd>1</kd>
      <!--<max_vel>0.01</max_vel>
      <min_depth>0</min_depth>-->
      <sensor name="color" type="camera">
    <camera name="${camera_name}">
      <horizontal_fov>${69.4*deg_to_rad}</horizontal_fov>
      <image>
        <width>1920</width>
        <height>1080</height>
        <format>RGB_INT8</format>
      </image>
      <clip>
        <near>0.1</near>
        <far>100</far>
      </clip>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.007</stddev>
      </noise>
    </camera>
    <always_on>1</always_on>
    <update_rate>30</update_rate>
    <visualize>1</visualize>
      </sensor>
      <sensor name="ired1" type="camera">
    <camera name="${camera_name}">
      <horizontal_fov>${85.2*deg_to_rad}</horizontal_fov>
      <image>
        <width>1280</width>
        <height>720</height>
        <format>L_INT8</format>
      </image>
      <clip>
        <near>0.1</near>
        <far>100</far>
      </clip>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.05</stddev>
      </noise>
    </camera>
    <always_on>1</always_on>
    <update_rate>90</update_rate>
    <visualize>0</visualize>
      </sensor>
      <sensor name="ired2" type="camera">
    <camera name="${camera_name}">
      <horizontal_fov>${85.2*deg_to_rad}</horizontal_fov>
      <image>
        <width>1280</width>
        <height>720</height>
        <format>L_INT8</format>
      </image>
      <clip>
        <near>0.1</near>
        <far>100</far>
      </clip>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.05</stddev>
      </noise>
    </camera>
    <always_on>1</always_on>
    <update_rate>90</update_rate>
    <visualize>0</visualize>
      </sensor>
      <sensor name="depth" type="depth">
    <camera name="${camera_name}">
      <horizontal_fov>${85.2*deg_to_rad}</horizontal_fov>
      <image>
        <width>1280</width>
        <height>720</height>
      </image>
      <clip>
        <near>0.1</near>
        <far>100</far>
      </clip>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.100</stddev>
      </noise>
    </camera>
    <always_on>1</always_on>
    <update_rate>90</update_rate>
    <visualize>0</visualize>
      </sensor>
    </gazebo>

    <gazebo>
      <plugin name="realsense_plugin" filename="librealsense_gazebo_plugin.so">
        <depthUpdateRate>60.0</depthUpdateRate>
        <colorUpdateRate>60.0</colorUpdateRate>
        <infraredUpdateRate>60.0</infraredUpdateRate>
        <depthTopicName>depth/image_raw</depthTopicName>
        <depthCameraInfoTopicName>depth/camera_info</depthCameraInfoTopicName>
        <colorTopicName>color/image_raw</colorTopicName>
        <colorCameraInfoTopicName>color/camera_info</colorCameraInfoTopicName>
        <infrared1TopicName>infra1/image_raw</infrared1TopicName>
        <infrared1CameraInfoTopicName>infra1/camera_info</infrared1CameraInfoTopicName>
        <infrared2TopicName>infra2/image_raw</infrared2TopicName>
        <infrared2CameraInfoTopicName>infra2/camera_info</infrared2CameraInfoTopicName>
        <colorOpticalframeName>${color_optical_frame}</colorOpticalframeName>
        <depthOpticalframeName>${depth_optical_frame}</depthOpticalframeName>
        <infrared1OpticalframeName>${infrared1_optical_frame}</infrared1OpticalframeName>
        <infrared2OpticalframeName>${infrared2_optical_frame}</infrared2OpticalframeName>
        <rangeMinDepth>0.2</rangeMinDepth>
        <rangeMaxDepth>10.0</rangeMaxDepth>
        <pointCloud>false</pointCloud>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
      </plugin>
    </gazebo>

  </xacro:macro>
</robot>

and launch file :-
    <launch>
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find realsense_gazebo_plugin)/urdf/d435.urdf.xacro' " />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

    <arg name="gui" default="True" />
    <param name="use_gui" value="$(arg gui)" />

</launch>

Originally posted by q8wwe on ROS Answers with karma: 73 on 2020-03-02
Post score: 1

A:

It looks like all your urdf.xacro file is doing is:

including d435.gazebo.xacro
defining a macro named "sensor_d435"

Is there any code actually instantiating that macro ?
If not the resultung URDF will be empty, explaining why gazebo cannot find any link in it.

For the macro sensor_d435 to take effect you need to instantiate it, similar to how you instantiate simulation_d435 insidesensor_d435:
<xacro:simulation_d435 camera_name="realsense" depth_optical_frame="camera_depth_optical_frame" color_optical_frame="camera_color_optical_frame" infrared1_optical_frame="camera_left_ir_optical_frame" infrared2_optical_frame="camera_right_ir_optical_frame"/>

Originally posted by marguedas with karma: 3606 on 2020-03-02
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by q8wwe on 2020-03-02:
where shall I instantiate sensor_d435 , shall I instantiate it in the same file or create new file and what parameter shall i include .
I'm totally new to this and I'm trying to make this file work
Comment by marguedas on 2020-03-03:
Both will work.
Usually macros like this ae ddefined to be included in a higher level file.
E.g. as you provide a way to pass the "parent" parameter to the macro, that means you want to attach this sensor to an existing link. If that's the case it's better to instantiate the macro in the xacro file where that parent link is defined.
Comment by q8wwe on 2020-03-21:
thanks, it worked after I instantiate it  as marguedas mentioned
Comment by marguedas on 2020-03-21:
glad you got it to work. Could you please mark the question as solved by hitting the checkmark on the left ? this will remove it from the list of questions that need attention from the community.

