Q:

How to extend available "2D navigation stack"

Hey Robot Enthusiasts,
I am currently working on a robot that is supposed to navigate a dynamic environment. So far I managed to build a robot model (with sensors like camera and LASERS) that I can spawn in Gazebo, use the already provided navigation stack to enable the robot to localize itself and to find a good path to a target position. So far so good.
Right now I have introduced a Visual Servoing controller which is suppose to take over the robot as soon as I can ensure a save control. So I still need the navigation stack to do its work in the beginning (to get me on the right track). Basically I am looking for a modular navigation in which I (or a supervising controller) can choose which sub-controller (my visual servoing controller, the ros navigation solution, further controllers) is used at any given time.
So what is my question:
Is there a way to stop (and later reengage) the published <geometry_msgs::Twist> from the ros navigation stack? I already tried "overwriting" this message with my own, but it did not work.
Thanks in advance
Marcus

Originally posted by Marcus on ROS Answers with karma: 164 on 2014-01-20
Post score: 1

A:

One (computationally expensive) way to do it is to create a node that listens to the navigation's twist command, and the other twist command, and republishes which ever one you want to use.

Originally posted by David Lu with karma: 10932 on 2014-05-14
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Dan Lazewatsky on 2014-05-14:
There is actually already a node that will do the multiplexing: http://wiki.ros.org/cmd_vel_mux.
Comment by Marcus on 2014-05-18:
Hey guys, thanks for the answers, I was not in the lab the last week, so I just now saw your replies. Since I posted my question a few months ago, I actually had already implemented the solution proposed by David. I will have a look at Dan's idea this week. Maybe it is less computational demanding.

