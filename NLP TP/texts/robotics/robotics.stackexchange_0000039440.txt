Q:

publish message in main class instead of talker

Hi all,
I'm working on a project that receives data from a sensor and sends the data back to pc using rosjava.
I'm trying to realize this function on the base of rosjava_tutorial_pubsub. I realized almost all the tutorials tend to use NodeMainExecute to run a node, and the publish function is implemented in the Talker.java itself.
Since my data are retrieved and stored in the main class and updates constantly, i want to publish my message in main class, which means moving the following snippet from talker.java into main.java.
org.ros.message.std_msgs.String str = publisher.newMessage();
str.data = mdata;
publisher.publish(str);

how should I modify the main.java? Should I add a variable Publisher publisher in the beginning?

actually I want to run roscore on PC.

Originally posted by rosdai on ROS Answers with karma: 61 on 2012-04-10
Post score: 0

Original comments
Comment by rosdai on 2012-04-11:
as far as I understand, I should create a main class which implements NodeMain. Then link my own application as source?

A:

You should think of your NodeMain as the main method. In there, you can use Node.executeCancelableLoop() to start a thread which will do the work for you and be shut down once the Node is shut down.
You should not try to write code in the main method of your application. In fact, you should use org.ros.RosRun as your application's main class as is done in the pubsub tutorial.

Originally posted by damonkohler with karma: 3838 on 2012-04-10
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by rosdai on 2012-04-12:
what is the advantage of doing so? I currently wrote a new method called publish in NodeMain, which fills the function of public. and in my main method i call this publish method every time my data updates
Comment by rosdai on 2012-04-12:
what is the advantage of doing so?
Comment by damonkohler on 2012-04-23:
There are several reasons. One is that it makes your NodeMain self contained so it can be easily reused in another application. Another is that it allows you to easily stop the thread that's doing work by shutting down the NodeMain.
Comment by rosdai on 2012-04-24:
thank you damon

