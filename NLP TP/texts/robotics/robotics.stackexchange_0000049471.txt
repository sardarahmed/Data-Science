Q:

how to make rosserial work with 32 bit micro controller. please help

I have a max32 and I am trying to relay wheel encoder data from the max32 board to ros. The max32 is a arduino compatible device. It is almost identical to the arduino 2500 or the due, except the max32 is a pic32 and 32 bit. I tried rosserial_arduino, but looses connection and tries to reconnect. I'm not sure how to write a new hardware class for the chip kit. Or should I try to modify the arduino class? I am running ros groovy and Ubuntu 12.04 lts.
thanks for any help you can give.

Originally posted by packrat on ROS Answers with karma: 51 on 2013-03-17
Post score: 0

A:

Are you able to run a debugger to see why the connection is lost? If it's a 32-bit processor, my guess is that your chip-side program is segfaulting when rosserial tries to buffer serialized data, the reason being that memory access on non-8-bit platforms often has to be 'aligned' - e.g., the memory address has to be divisible by 32. The rosserial library doesn't take this into account.
It's kind of a non-trivial problem to fix, unfortunately. You can 'hack' it to work by adding arbitrary offsets to memory writes in the serialization function, so that the writes are aligned. What I did was to rip out the serialization function and replace it with Google's protocol buffers. Someone with formal knowledge of embedded programming (I'm a convert from mechanical engineering :) ) might be able to solve it better than me.

Originally posted by danep with karma: 197 on 2013-04-05
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by packrat on 2013-04-06:
I did try your rosserial protobuff from git hub but sadly it did the same thing. I have looked at some of the files in MPIDE(chipkit's version of arduino ide) and all the serial data uses "uint8_t", if I read the code right, they are using ring buffers to read and store the data.

