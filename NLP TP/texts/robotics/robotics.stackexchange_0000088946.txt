Q:

tf::Quaternion getAngle() eqivalent for rospy

Is there an equivalent to the getAngle() method of C++ interface of tf in Python version too?

Originally posted by smihael on ROS Answers with karma: 45 on 2018-09-10
Post score: 0

A:

I don't know if there's a built in function to do this. But the relationship between the w element of a quaternion and the angle it's rotating by is fairly simple.
w = cos(angle / 2)

therefore:
angle = 2 x arccos(w)

So you can calculate this yourself using this equation from the w element.
Update:
This is mathematically equivalent to the more complex form shown on the Wikipedia page here. See their curves here:
angle = 2 x arccos(w)
angle = 2*atan2(sqrt(1-w^2), w)
Note: I've replaced sqrt(qi^2 + qj^2 + qk^2) with sqrt(1-qr^2) since this expression can more easily be calculated using just the w value.

Originally posted by PeteBlackerThe3rd with karma: 9529 on 2018-09-10
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by smihael on 2018-09-11:
Are there any preconditions to be met to use this formula? Wikipedia uses atan2 (https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation#Recovering_the_axis-angle_representation)
Comment by PeteBlackerThe3rd on 2018-09-11:
The two equations are mathematically equivalent, for some reason they've put the more complex form on Wikipedia! I've added the graphs of them both to my answer, as you can see they give the same results.
Comment by smihael on 2018-09-11:
Ok thanks, I thought that the Wikipedia was maybe better because essentially it enforces normalization on the vector part or something into this direction.
Comment by PeteBlackerThe3rd on 2018-09-11:
No worries, rotation quaternions are 4D unit vectors so they should always be normalized.

