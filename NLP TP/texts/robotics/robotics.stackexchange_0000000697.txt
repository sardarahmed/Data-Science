Q:

Standalone (or capable of being) Robotics Simulator

I'm a software engineer who volunteers with a non-profit that introduces young girls to technology. We have recently been talking about methods of introducing these children to the world of robotics, and I am curious what types of low-cost options we have.
One very appealing idea would be to have an online simulator, or (more preferable) an off-line standalone-simulator that we can build and program simple robots with. Perhaps nothing more than dragging components together, and then programming the interactions between those components.
What solution(s) exist that I might be able to make use of in our outreach?

A:

Stage and Gazebo are open source 2D and 3D simulators respectively. They are created and maintained by the Player project. They are very easy to use and have a lot of pre-built maps and robots. Depending on the experience of your audience you may need to do a bit of the heavy lifting (i.e. building configuration files and the main classes).
They have a couple of additional benefits as well. First, so long as you create your main control code as player plug-ins then they can be easily adapted to real robots. Second, there are a large number of plug-ins already built to work with real hardware. Third, they work with ROS.

A:

May be it is a bit pricy (CHF 75) but I still suggest Colobot. It is a nice, almost game-like environment where robots need to help humans to make a space base habitable. Robots are programmed by the kids while increasingly complex tasks are performed. The program teaches the fundamentals of programming in a goal-oriented, funny way.

A:

Microsoft robotics is FREE and includes a simulator. It is not exactly the easiest environment in the world, however it IS robust and appropriate to real robotics.  I think with some teacher involvement to set things up beforehand, it could be usable. There is a simulator 'package' for LEGO, Neato and some other robots, and they can be programmed in C# or a visual drag and drop language. 
Again, I think it would need some work up front to make it easy for youngsters to use, but it wouldn't be that hard, and would be my approach given your requirements. I would say as far as complexity goes, this (windows) vs. a Linux environment with Gazebo/ROS, the windows environment would be slightly less complicated, although most of that would hopefully be hidden with preparation work.

