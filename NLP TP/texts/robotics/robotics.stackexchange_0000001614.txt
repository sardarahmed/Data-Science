Q:

ArduIMU noisy output in Quadrotor

We are using ArduIMU (V3) as our Quadrotor's inertial measurement unit. (we have a separate board to control all motors, not with ArduIMU itself). 
Now we have a problem with ArduIMU's sensors output. When we put our quadrotor steady on the ground with motors on, instead of getting 0 degree in roll and pitch we have a noisy output something like the image below( -6 to 6 degree error ):

delta_t = 0.2s
We are sure that this isn't a mechanical problem, because we checked the mechanical joints and everything.
I should mention that with motors off everything is going well. Also we checked that if we vibrate the device slowly on yaw axis or any other axis, it still shows the noisy output.
We are using DCM filter inside ArduIMU, also we tested with Kalman filter but no difference.
We also tested FRI low-pass filter, results is good but there is about 3 seconds delay in the output.
We also checked that if we separate the ArduImu's power from our circuit, it still no difference.
What's the problem with ArduIMU and how we can get rid off this noisy output ?
Update: 
We think that the problem with our PID controller is because of these noises ... Is this a true assumption ? We can't tune our PID parameters ( using Ziegler–Nichols method ) when we have noisy data. We tested Ziegler–Nichols method when we have low rate noises and we successfully tuned our PID but when noise appears we are unable to tune PIDs. Is there anyway for us for tuning our PID in such situation ? Is this problem is because of the noises or the PID itself can get rid of them ?

A:

This answer is incorrect (TaW) It is based on IMU noise that's about 1000 times faster than it really is, based on a typo in the discussion following the original question.
I'm not a big fan of the Ziegler-Nichols method.  It's an ad-hoc method that is not only not guaranteed to stabilize all plants, it comes with a guarantee that there will be some plants that it cannot stabilize.  Furthermore, it has a history of coughing up an underdamped system.  Its only advantage seems to be that it comes up often in web searches.
I would suspend the copter on one of the horizontal axes, parallel to the IMU, and I would tune the PID controller using the usual seat of the pants method (derivative, then proportional, then integral).  Then I'd go back and measure the frequency response of the thing (still tethered), and tune the PID properly.
Then I would repeat for the vertical axis.
Only then would I cross my fingers, hold my breath, and go fly.
For some reason, I seem to think that this is a good description of the seat of the pants PID tuning method:
http://www.embedded.com/design/prototyping-and-development/4211211/PID-without-a-PhD
With that much noise in the IMU output would bandlimit my differentiator.  That'll limit the bandwidth of your control loop, but if you don't do it then your differentiator will swamp out any other control signals.

A:

We build a new version and its now available for download:
http://code.google.com/p/ardu-imu/downloads/detail?name=arduimu_vD....
The problem completely gone in this version. Read comments in arduimu_vd.ino for more info.

