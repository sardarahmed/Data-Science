Q:

How do I interpret this data, received by the I2C controller on an NXT 2 brick?

I have been trying to write code to connect a HiTechnic prototype board to my lego brick. Although I am using MSRDS studio, that isn't the issue; reading and writing to the serial port that the device is connected to works fine. 
Where I am lacking is that I don't understand the data is that is being sent and received. It goes out and comes back in the form of a byte array. For example:
[128]
[15]
[0]
[2]
[16]
[2]
[8]
Is this byte array converted from hex? What is this response telling me? 
Obviously I am a total newbie at this, I can program but I don't really understand electronics and I am trying to make that connection between what I have read about how an I2C controller works and what is happening when I send and receive data over a serial port. 

A:

Your question is not clear. "Is this byte array converted from hex?"  If you know what the values are, you should know how you got them. 128 is not a hex number, it is the same as a hex 80, also written as 0x80.  It indicates a 'Direct command, reply not required' as a serial to NXT stream. 15 = 0x0F = LSWRITE.
It does not make sense to decode any more, as it is your program but you have not told us what you are trying to do and how you are trying to do it.
Just to be clear, there is NO connection between the serial port (usb or bluetooth) and the i2c bus. But the LSWRITE/LSREAD would be the appropriate direct commands (I was wrong earlier, had to look at it some more). I would suggest starting on just the NXT using NXC or LeJOS or RobotC and getting an understanding of the I2C protocol before trying to extend that to a remote PC connection with MRDS.
Start here And download all the PDFs. They describe the command that can be sent over the PC to NXT serial link.
I2C is another step. Start with the Wiki. But you will find that LEGO vendors often do not completely implement the protocol, or they implement it incorrectly. You pretty much need to analyse each device and adjust how you treat it.

I would suggest something like the Saleae logic to analyse what is actually happening.

