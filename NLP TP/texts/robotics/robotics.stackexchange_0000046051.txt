Q:

Cannot ouput string service via ROS_INFO

I have a service of type string, my server simply responds with a string. I am trying to implement my client to simply call the service and ROS_INFO out the response. However, when I try to compile I get an error on the line where I am doing the ROS_INFO output. The error is:
error: cannot pass objects of non-trivially-copyable type ‘struct std::basic_string’ through ‘...’
Here is my code:
parallax_eddie_robot::get_version srv;
if(get_version_client_.call(srv))
{
ROS_INFO("%s",srv.response.version);
}
I don't know why it thinks my service is returning a struct because my service file (myservice.srv) is only for a string. It looks like this:
--
string version

Originally posted by kbedolla on ROS Answers with karma: 48 on 2012-11-24
Post score: 2

A:

In a nutshell, changing your print to ROS_INFO("%s", srv.response.version.c_str()) should fix your compile error.
A string type in a ROS message/service maps to a std::string in C++ (see the msg package for more details). std::string's are not printable with something like printf, unless you get access to the underlying const char* data which is what printf's "%s" format string is expecting. You can get access to the C-string via the c_str() member on std::string.

Originally posted by Eric Perko with karma: 8406 on 2012-11-24
This answer was ACCEPTED on the original site
Post score: 15

Original comments
Comment by kbedolla on 2012-11-24:
Thank you!
Comment by joq on 2012-11-26:
You can also use the C++ stream interface if you like: ROS_INFO_STREAM(srv.response.version)

