Q:

Passing a parameter to a ROS Timer callback

I'm trying to pass a parameter to a ROS Timer callback using boost bind as I'd have done it for a subscriber callback but it's not working for me.
Here's the relevant part of the code.
MyClass::MyClass()
{
    int my_arg = 0;
    node.createTimer(ros.Duration(1.0),
                     boost::bind(&MyClass::callback, this, _1, _2, my_arg),
                     true); //for oneshot
}

void MyClass::callback(int arg)
{
    ROS_ERROR_STREAM("callback: " << arg);
}

But this is not compiling:
/usr/include/boost/bind/bind.hpp:69:37: error: ‘void (MyClass::*)(int)’ is not a class, struct, or union type

Any idea?

Originally posted by Ugo on ROS Answers with karma: 1620 on 2012-08-14
Post score: 0

A:

The bind call should match the function signature. You'll have to remove the _1, _2 part from the bind call.

Originally posted by dornhege with karma: 31395 on 2012-08-14
This answer was ACCEPTED on the original site
Post score: 1

