Q:

[ROS Communication] Multiple sockets and ports

Hello,
I would like to confirm this:

Suppose that there is one publisher. Therefore, it opens a socket. There, any subscriber can connect to the same socket but on different ports, right?
Let's say there is now a second publisher. So, it will open a new socket and any subscriber can connect to it, also if there are multiple, over different ports.

Is that correct?
Thank you very much.

Update:
Just to confirm if I understood correctly. Let's say I have a publisher, a subscriber and ros master all running on 3 different computers. From the publisher perspective, it will need one socket to communicate with the master via xmlrpc, and two sockets per subscriber, one for the negotiation part with xmlrpc (to receive requestTopic) and a third one to actually send data to the subscriber. Is that correct?
If it is, then the publisher will need two extra sockets if a second subscriber comes, right?
Thanks

Originally posted by Ariel on ROS Answers with karma: 65 on 2019-07-17
Post score: 0

A:

Suppose that there is one publisher. Therefore, it opens a socket. There, any subscriber can connect to the same socket but on different ports, right?

Not entirely: the server socket will always be listening on the same port, but clients will use a random (ie: ephemeral) port to connect to it.

Let's say there is now a second publisher. So, it will open a new socket and any subscriber can connect to it, also if there are multiple, over different ports.

A new publisher will use a different socket, and thus port, yes.
At least, that is how it works with TCP and UDP, which is essentially what TCPROS and UDPROS use.

Originally posted by gvdhoorn with karma: 86574 on 2019-07-17
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by gvdhoorn on 2019-07-17:
To make this a bit more of a meaningful Q&A: what made you ask these questions? They seem not very specific to ROS, but more about basic networking and socket programming.
Comment by Ariel on 2019-07-17:
I want to implement a ros node on a platform where I cannot run ROS. Therefore the question.
Thanks for clearing my questions
Comment by gvdhoorn on 2019-07-17:\

I want to implement a ros node on a platform where I cannot run ROS

what does that mean exactly?
Have you looked at any of the alternative client libraries? rosbridge?
Might be easier to realise than implementing TCPROS from scratch.
Comment by Ariel on 2019-07-17:
I have limited resources. So, the plan is to use xmlrpc to communicate with ros master and then when use tcpros. Based on the documentation, I need to build the header and stream the corresponding data over a tcp/ip standard communication, or not?
Comment by gvdhoorn on 2019-07-17:
If "limited resources" means: limited memory, limited cpu or limited runtime, perhaps a pure ansi c implementation suitable for running on PLCs might be a way forward? Something like cros?
Comment by Ariel on 2019-07-17:
I did not know about cros. I will check it out.
The main concern is how to build the frame to send from a publisher to a subscriber (tcpros). The xml-rpc part should be no problem as it is a simple design, just registering nodes and only using topics. For now, there is no need for services.
Comment by gvdhoorn on 2019-07-17:\

I did not know about cros

I would advise you to at least take a look at it.

