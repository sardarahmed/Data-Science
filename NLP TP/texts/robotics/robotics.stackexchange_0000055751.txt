Q:

Switching between autonomous control and keyboard control in ROS

I want to write a C++ program to switch the control from keyboard to autonomous and vice-versa. Will it be feasible in ROS?
Because, my program need to communicate through two packages namely move_base and brown_remotelab (http://wiki.ros.org/brown_remotelab). I can’t visualize the whole scenario and it’s complexity.
Can you give some insight about the situation and some idea to design the program?

Originally posted by RB on ROS Answers with karma: 229 on 2013-11-28
Post score: 1

A:

ROS already provides tools for that.
Mux will let you switch an output topic from multiple incoming topics by calling a service, basically what you were asking for.
What might be more convenient to use is the cmd_vel_mux. It lets you define a couple of sources for a cmd_vel topic that are ordered by priorities. From the active topics the one with highest priority is used. Usually one puts autonomous control at the lowest and uses a teleop setup that is silent when no commands are issued. In this case the switch to autonomy will happen automatically when teleop is not used.

Originally posted by dornhege with karma: 31395 on 2013-11-28
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by RB on 2013-12-03:
Thanks for your reply.
I have one doubt. Are you sure that even if in maze; ROS can produce an effective autonomous plan to achieve a certain goal? Will there be any chance that the Robot halts at various junction like L, T or +?
Comment by RB on 2013-12-03:
Till now I have not achieved autonomous navigation, so I am aware of only cmd_vel topic by teleop. After achieving High level navigation, will there be any auto_cmd_vel (auto tends for autonomous) by move_base node?
Again cmd_vel_mux is bang on target and if I can use it then it will be very useful for me, but as I am using USARSimROS (for P3AT robot) and my knowledge regarding kobuki_node is very less. I if cmd_vel of teleop and cmd_vel of move_base must publish messages to mux node; I think. Do, I need to write custom code to link move_base node to mux node?
Comment by dornhege on 2013-12-04:
This works out of the box. It's intended for the turltebots/kobuki, but independent. The only thing it does is automatically switch between the cmd_vel topics. Usually you'd just remap them accordingly, e.g. move_base's will go to /cmd_vel_mux/autonomy_cmd_vel or something like that.
Comment by dornhege on 2013-12-04:
Something like autonomous plans to achieve goals in a maze is out of the scope for this question and a very different problem. Open a new question if you want to inquire about some capabilities of the navigation stack.
Comment by RB on 2013-12-04:
ok.. Thanks sir @dornhege
Comment by RB on 2013-12-08:
One more question @dornhege; can I assign two different priorities(at time instant t1, priority p1 and in another time instant t2, priority p2) to the same cmd_vel topic?
Comment by dornhege on 2013-12-09:
I don't know. Maybe just try it?
Comment by RB on 2014-01-29:
@dornhege cmd_vel_mux (http://wiki.ros.org/cmd_vel_mux) is written for Groovy/hydro. I am using Fuerte. So can I use this package directly by simply modifying subscriber and publisher? Is there any problem with communication between nodelet and normal nodes? I have seen in here http://www.isep.ipp.pt/roswiki/kobuki(2f)Tutorials(2f)Kobuki(27)s(20)Control(20)System.html
Where mobile_base has to be a nodelet as well. PLEASE REPLY
Comment by RB on 2014-04-20:
@dornhege, I have used cmd_vel_mux, but I have not achieved the proper behavior as the package summary CLAIMED. I have included a question (http://answers.ros.org/question/126391/nodelet-usage-and-its-role-in-designing-a-complex-controller/) and later part of the question tackles how the changing of PRIORITy and TIMEOUT parameter does not improve the performance. Do you have any suggestion?
Comment by dornhege on 2014-04-20:
Please open a new question for specific problems.
Comment by RB on 2014-04-20:
@dornhege, I added a new question; you may look over here http://answers.ros.org/question/155326/proper-working-of-cmd_vel_mux-for-velocity-multiplexing/

