Q:

TF2 - static_transform_publisher - Extrapolation into the future

Hello,
I have a couple of static_transform_publishers from the TF2 package running. How is it possible that a node complains about extrapolating into the future, when it tries to lookup a transformation from a random element to the static one? In my understanding, the static-transforms should be valid for all eternity, so why would you complain about timing issues?
A further explanation about my setup:
I have 2 Kinects and I am using those in my moveIt setup to create the Octomap.
As explained here, moveIt complains about extrapolation into the future while looking up a transform from my robot to the cameras.
My first solution was to write a python node, which would handle all the publishing instead of seperate static_transform_publishers from the old TF. There, I could date the transformations back in time to avoid those issues.
Now I read about the static transforms in TF2 and implemented all the camera transformations like this:
<node pkg="tf2_ros" type="static_transform_publisher" name="camera_top_base_link_1" args="0 -0.045 0 0 0 0 1 /camera_top/camera_top_link camera_top/camera_top_rgb_frame  " /> 

Still, moveIt is complaining
[ERROR] [1411130239.665581579]: Transform error: Lookup would require extrapolation into the future.  Requested time 1411130239.663295803 but the latest data is at time 1411130239.541714906, when looking up transform from frame [finger_2_link_0] to frame [camera_top/camera_top_depth_optical_frame]
[ERROR] [1411130239.997648183]: Transform cache was not updated. Self-filtering may fail

But running ``rosrun tf tf_echo /finger_2_link_0 camera_top/camera_top_depth_optical_frame` has no problems and tells me the transforms moveIt couldn't find?
Thanks in advance,
Rabe

Originally posted by Rabe on ROS Answers with karma: 683 on 2014-09-19
Post score: 0

Original comments
Comment by Mani on 2014-09-19:
Have you tried reducing static_transform_publisher's publishing frequency from the current rate (1000Hz)? I would suggest that you decrease that frequency to 10Hz or even 1Hz.
Comment by Rabe on 2014-09-19:
Why is there a rate at all? My understandin was that it was "static" as in "published once"? Anyway, I can't even set the rate in the current way it is implemented, see the file here
Comment by Rabe on 2014-09-19:
I also tried various rates with the old implementation of tf, which didn't change anything either
Comment by Mani on 2014-09-19:
@Rabe Sorry, I made a mistake when reading your static_transform_publisher command.

A:

I suspect static transform isn't the problem here.
The problem here is that MoveIt is requesting a very recent transform, and your system hasn't published that transform yet. Note that the time differential here is pretty small, about 0.12 seconds, so it's most likely just a processing delay somewhere in your system.
I would start by running rosrun tf tf_monitor to inspect the transform delays in your system, and then follow up by looking through the tf Troubleshooting guide

Originally posted by ahendrix with karma: 47576 on 2014-09-19
This answer was ACCEPTED on the original site
Post score: 3

