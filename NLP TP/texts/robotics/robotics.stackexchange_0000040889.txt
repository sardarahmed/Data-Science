Q:

Problem with Rviz with Planning Description Configuration Wizard

Hi everybody,
I would like to create an interface to control a 6 dof arm. I would like at least something that enables me to reach a goal position by entering the coordinates (with an IK solver). I'm begining with ROS and I thought at first time to use the "Planning Description Configuration Wizard" which autogenerate all the needed files to create a planner. But I dealed with some difficulties.
When I launch:
roslaunch planning_environment planning_description_configuration_wizard.launch urdf_package:=modular_arm urdf_path:=ros/robots/modular_arm_PG.urdf.xacro

The Wizard and Rviz are launching without any error but only the base_link of my model appears. I can't identify where this problem belongs. When I load my model in gazebo and do "rosrun rviz rviz" in another terminal, evrything goes well with the model in Rviz but I can't see the links in the Wizard.
Here are the xacro.urdf of my model:
<?xml version="1.0"?>
<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
       xmlns:xacro="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
       name="modular_arm" >
  
  <!-- The following included files set up definitions of parts of the robot body -->
  <!-- misc common stuff? -->
  <include filename="$(find modular_arm)/ros/urdf/common.xacro" />
  
  <include filename="$(find modular_arm)/ros/calibration/modular_arm.urdf.xacro" />

  <!-- cob arm-->
  <include filename="$(find modular_arm)/ros/urdf/modular_arm.urdf.xacro" />

  <!-- PG -->
  <include filename="$(find modular_arm)/ros/urdf/PG.urdf.xacro" />

  <!-- generic simulator_gazebo plugins for starting mechanism control, ros time, ros battery -->
  <include filename="$(find modular_arm)/ros/gazebo/gazebo.urdf.xacro" />
  
  <!-- materials for visualization -->
  <include filename="$(find modular_arm)/ros/urdf/materials.urdf.xacro" />

  <!-- foot for arm-->
    <link name="base_link">
        <inertial>
        <!--origin xyz="0 0 0.1" rpy="0 0 0"--> 
           <origin xyz="0 0 0.474" rpy="0 0 0"/>
           <mass value="100.0"/>
           <inertia ixx="10.0"  ixy="0"  ixz="0" iyy="100.0" iyz="0" izz="100.0" />
        </inertial>

        <visual>
        <!--origin xyz="0 0 0.1" rpy="0 0 0"--> 
           <origin xyz="0 0 0.474" rpy="0 0 0" />
           <geometry>   
            <mesh filename="package://modular_arm/ros/meshes/frame.stl" scale="0.001 0.001 0.001" />
           </geometry>
        <material name="Grey">
        <color rgba="0.7 0.7 0.7 1.0"/>
        </material>
        </visual>

        <collision>
        <!--origin xyz="0 0 0.1" rpy="0 0 0"--> 
           <origin xyz="0 0 0.474" rpy="0 0 0" />
           <geometry>
             <mesh filename="package://modular_arm/ros/meshes/frame.stl" scale="0.001 0.001 0.001" />
           </geometry>
        </collision>
    </link>

  <!-- arm -->
  <xacro:cob_arm_v0 name="arm" parent="base_link">  
    <origin xyz="0 0 0.474" rpy="0 3.14159265 1.570796325" />
  </xacro:cob_arm_v0>
  
  <!-- sdh -->
  <!--xacro:cob_sdh_v0 name="sdh" parent="arm_6_link">
    <origin xyz="0 -0.0595 0" rpy="1.57079633 0 0 " />
  </xacro:cob_sdh_v0-->

  <!-- PG -->
  <xacro:PG name="PG" parent="arm_6_link">
    <!--origin xyz="0 -0.0595 0" rpy="0 0 0"/-->
    <origin xyz="0 0 0" rpy="-1.570796325 3.14159265 0"/>
  </xacro:PG>

</robot>

<?xml version="1.0"?>
<robot  xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
    xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
    xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
        xmlns:xacro="http://ros.org/wiki/xacro">

  <include filename="$(find modular_arm)/ros/urdf/modular_arm.gazebo.xacro" />
  <include filename="$(find modular_arm)/ros/urdf/modular_arm.transmission.xacro" />
  

<!--####################################################################-->
                       <!--Fix Some Parameters Later-->
<!--####################################################################-->

  <xacro:macro name="cob_arm_v0" params="parent name *origin">

       <!--joint between base_link and arm_0_link -->
        <joint name="${name}_0_joint" type="fixed" >
          <insert_block name="origin" />
          <parent link="${parent}" />
          <child link="${name}_0_link" />
        </joint>

    <link name="${name}_0_link">
        <inertial>
           <origin xyz="0 0 0" rpy="0 0 0"/>
           <mass value="1.0"/>
           <inertia ixx="0.01"  ixy="0"  ixz="0" iyy="0.01" iyz="0" izz="0.01" />
        </inertial>

        <visual>
           <origin xyz="0 0 0" rpy="0 0 0" />
           <geometry>
              <cylinder radius="0.045" length="0.18"/>
           </geometry>
          <material name="Red">
          <color rgba="0.8 0.0 0.0 1.0"/>
          </material>
        </visual>

        <collision>
           <origin xyz="0 0 0" rpy="0 0 0" />
           <geometry>
              <cylinder radius="0.045" length="0.18"/>
           </geometry>
        </collision>
    </link>

       <!--joint between arm_0_link and arm_1_link -->
    <joint name="${name}_1_joint" type="revolute">
        <origin xyz="0 0 -0.240" rpy="0 0 3.1415926"/>
        <parent link="${name}_0_link"/>
        <child link="${name}_1_link"/>
        <axis xyz="0 0 1"/>
            <calibration rising="${arm_1_ref}"/>
        <dynamics damping="10.0" friction="10.0" />
        <limit effort="370" velocity="0.4363" lower="-3.14159" upper="3.14159"/>
            <safety_controller k_position="20" k_velocity="500" soft_lower_limit="${-3.14159 + 0.01}" soft_upper_limit="${3.14159 - 0.01}" />
    </joint>

    <link name="${name}_1_link">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <mass value="4.827"/>
            <inertia ixx="0.01"  ixy="0"  ixz="0" iyy="0.01" iyz="0" izz="0.01" />
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://modular_arm/ros/meshes/modular1.stl" />
            </geometry>
            <material name="Green">
            <color rgba="0.0 0.8 0.0 1.0"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://modular_arm/ros/meshes/modular1.stl" />
            </geometry>
        </collision>
    </link>

        <!--joint between arm_1_link and arm_2_link-->  
    <joint name="${name}_2_joint" type="revolute">
        <origin xyz="0 0 0" rpy="1.5708 0 0"/>
        <parent link="${name}_1_link"/>
        <child link="${name}_2_link"/>
        <axis xyz="0 0 1"/>
            <calibration rising="${arm_2_ref}"/>
        <dynamics damping="10.0" friction="10.0" />
        <limit effort="370" velocity="0.4363" lower="-2.19911" upper="2.19911"/> 
        <safety_controller k_position="20" k_velocity="500" soft_lower_limit="${-2.19911 + 0.01}" soft_upper_limit="${2.19911 - 0.01}" />
    </joint>

    <link name="${name}_2_link">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="6.908"/>
            <inertia ixx="0.03"  ixy="0"  ixz="0" iyy="0.03" iyz="0" izz="0.03" />
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://modular_arm/ros/meshes/modular2.stl" />
            </geometry>
            <material name="Red">
            <color rgba="0.8 0.0 0.0 1.0"/>
            </material>                  
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://modular_arm/ros/meshes/modular2.stl"/>
            </geometry>
        </collision>
    </link>

        <!--joint between arm_2_link and arm_3_link-->  
    <joint name="${name}_3_joint" type="revolute">
        <origin xyz="0 -0.540 0" rpy="-1.5708 0 0"/>
        <parent link="${name}_2_link"/>
        <child link="${name}_3_link"/>
        <axis xyz="0 1 0"/>
            <calibration rising="${arm_3_ref}"/>
        <dynamics damping="10.0" friction="10.0" />
        <limit effort="176" velocity="0.4189" lower="-1.745329" upper="1.745329"/> 
    </joint>

    <link name="${name}_3_link">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="2.570"/>
            <inertia ixx="0.03"  ixy="0"  ixz="0" iyy="0.03" iyz="0" izz="0.03" />
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" /> 
            <geometry>
                <mesh filename="package://modular_arm/ros/meshes/modular3.stl" />
            </geometry>
            <material name="Green">
            <color rgba="0.0 0.8 0.0 1.0"/>
            </material>                   
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://modular_arm/ros/meshes/modular3.stl"/>
            </geometry>
        </collision>
    </link> 

         <!--joint between arm_3_link and arm_4_link-->
    <joint name="${name}_4_joint" type="revolute">
        <origin xyz="0 0 -0.416" rpy="1.5708 0 0" />
        <parent link="${name}_3_link"/>
        <child link="${name}_4_link"/>
        <axis xyz="0 1 0" />
            <calibration rising="${arm_4_ref}"/>
        <dynamics damping="10.0" friction="10.0" />
        <limit effort="176" velocity="0.4189" lower="-3.14159" upper="3.14159"/> 
    </joint>

    <link name="${name}_4_link">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="2.068"/>
            <inertia ixx="0.03"  ixy="0"  ixz="0" iyy="0.03" iyz="0" izz="0.03" />
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://modular_arm/ros/meshes/modular4.stl" />
            </geometry>
            <material name="Red">
            <color rgba="0.8 0.0 0.0 1.0"/>
            </material>               
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://modular_arm/ros/meshes/modular4.stl"/>
            </geometry>
        </collision>
    </link>

        <!--joint between arm_4_link and arm_5_link-->
    <joint name="${name}_5_joint" type="revolute">
                <origin xyz="0 0 0" rpy="-1.5708 0 0"/>
        <parent link="${name}_4_link"/>
        <child link="${name}_5_link"/>
        <axis xyz="0 1 0" />
            <calibration rising="${arm_5_ref}"/>
        <dynamics damping="10.0" friction="10.0" />
        <limit effort="41.6" velocity="0.4363" lower="-1.57079" upper="1.57079" />
    </joint>

    <link name="${name}_5_link">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="1.567"/>
            <inertia ixx="0.03"  ixy="0"  ixz="0" iyy="0.03" iyz="0" izz="0.03" />
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://modular_arm/ros/meshes/modular5.stl" />
            </geometry>
            <material name="Green">
            <color rgba="0.0 0.8 0.0 1.0"/>
            </material>             
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://modular_arm/ros/meshes/modular5.stl"/>
            </geometry>
        </collision>
    </link>

    <!--joint between arm_5_link and arm_6_link-->
    <joint name="${name}_6_joint" type="revolute">
        <!-- origin xyz="0 0.0098 -0.1205 rpy="1.5708 0 0" /-->
        <!-- origin xyz="0 0.0098 0.1847 rpy="1.5708 0 0" /-->
                <origin xyz="0.0 0.0 -0.177" rpy="1.5708 0 1.5708"/>
        <parent link="${name}_5_link"/>
        <child link="${name}_6_link"/>
        <!--axis xyz="0 1 0" / -->
                <axis xyz="0 1 0" />
            <calibration rising="${arm_6_ref}"/>
        <dynamics damping="10.0" friction="10.0" />
        <limit effort="20.1" velocity="0.4363" lower="-3.14159" upper="3.14159" /> 
    </joint>
    
    <link name="${name}_6_link">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="0.785"/>
            <inertia ixx="0.01"  ixy="0"  ixz="0" iyy="0.01" iyz="0" izz="0.01" />
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://modular_arm/ros/meshes/modular6.stl" />
            </geometry>
            <material name="Red">
            <color rgba="0.8 0.0 0.0 1.0"/>
            </material>                
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://modular_arm/ros/meshes/modular6.stl" />
            </geometry>
        </collision>
    </link>

    
        <!-- extensions -->
        <xacro:cob_arm_gazebo_v0 name="${name}" />
        <xacro:cob_arm_transmission_v0 name="${name}" />

  </xacro:macro>

</robot>

<?xml version="1.0"?>
<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
       xmlns:xacro="http://ros.org/wiki/xacro">

    <include filename="$(find modular_arm)/ros/urdf/PG.gazebo.xacro" />
    <include filename="$(find modular_arm)/ros/urdf/PG.transmission.xacro" />

    <xacro:macro name="PG" params="parent name *origin">

        <!-- joint between arm_6_link and PG_box_link -->
        <joint name="${name}_box_joint" type="fixed" >
            <insert_block name="origin" />
            <parent link="${parent}" />
            <child link="${name}_box_link" />
        </joint>

        <link name="${name}_box_link">
            <inertial>
                <origin xyz="0 0 0" rpy="3.1415926 0 0"/>
                <mass value="1"/>
                <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01" />
            </inertial>
            
            <visual>
                <origin xyz="0 0 0" rpy="3.1415926 0 0" />
                <geometry>
                    <mesh filename="package://modular_arm/ros/meshes/PG/box.stl" />
                </geometry>
                <material name="Green">
                <color rgba="0.0 0.8 0.0 1.0"/>
                </material>         
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="3.1415926 0 0" />
                <geometry>
                    <mesh filename="package://modular_arm/ros/meshes/PG/box.stl" />
                </geometry>
            </collision>
        </link>

        <!-- joint between PG_box_link and PG_gripper1_link -->
        <joint name="${name}_gripper1_joint" type="prismatic">
            <origin xyz="0 0 -0.0465" rpy="0 0 0" />
            <parent link="${name}_box_link"/>
            <child link="${name}_gripper1_link"/>
            <axis xyz="1 0 0"/>
            <dynamics damping="1" />
            <limit effort="100" lower="-0.28" upper="0" velocity="5"/>
        </joint>

        <link name="${name}_gripper1_link">
            <inertial>
            <origin xyz="0 0 -0.0465" rpy="0 0 0" />
                <mass value="0.1"/>
                <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01" />
            </inertial>
            <visual>
                <origin xyz="0 0 -0.0465" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://modular_arm/ros/meshes/PG/gripper1.stl" scale="0.001 0.001 0.001" />
                </geometry>
                <material name="Grey">
                <color rgba="0.7 0.7 0.7 1.0"/>
                </material>
            </visual>       
            <collision>
                <origin xyz="0 0 -0.0465" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://modular_arm/ros/meshes/PG/gripper1.stl" scale="0.001 0.001 0.001" />
                </geometry>
            </collision>
        </link>

        <!-- joint between PG_box_link and PG_gripper2_link -->
        <joint name="${name}_gripper2_joint" type="prismatic">
            <origin xyz="0 0 -0.0465" rpy="0 0 0" />
            <parent link="${name}_box_link"/>
            <child link="${name}_gripper2_link"/>
            <axis xyz="1 0 0" />
            <dynamics damping="1" />
            <limit effort="100" lower="0" upper="0.28" velocity="5"/>
        </joint>

        <link name="${name}_gripper2_link">
            <inertial>
                <origin xyz="0 0 -0.0465" rpy="0 0 0" />
                <mass value="0.1"/>
                <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01" />
            </inertial>
            <visual>
                <origin xyz="0 0 -0.0465" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://modular_arm/ros/meshes/PG/gripper2.stl" scale="0.001 0.001 0.001" />
                </geometry>
                <material name="Grey">
                <color rgba="0.7 0.7 0.7 1.0"/>
                </material>
            </visual>
            <collision>
                <origin xyz="0 0 -0.0465" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://modular_arm/ros/meshes/PG/gripper2.stl" scale="0.001 0.001 0.001" />
                </geometry>
            </collision>
        </link>
            
        <!-- extensions -->
        <xacro:PG_gazebo name="${name}" />
        <xacro:PG_transmission name="${name}" />

    </xacro:macro>

</robot>

There the 3 xacro corresponding to my urdf. I hope anyone could help me.
Thank you!
Robin C

Originally posted by Robin C on ROS Answers with karma: 1 on 2012-05-28
Post score: 0

Original comments
Comment by Robin C on 2012-05-29:
I'm working on the modular arm of Robotnik. All the parameters aren't fixed yet. I think the problem belongs to the format of my urdf. The Planning Description Wizard tutorial suggest that I should fully expand my .xacro to the .xml format but I really don't know how to do.

A:

You are correct that trying to pass in xacro is not working - the URDF parser will just ignore everything that's in xacro, which is why you are only getting your base link, as that's in urdf.  To convert from xacro to urdf run the following command:
rosrun xacro xacro.py my_robot.xacro > my_robot.urdf
Replacing my_robot, of course, and then run the wizard with my_robot.urdf .

Originally posted by egiljones with karma: 2031 on 2012-05-31
This answer was ACCEPTED on the original site
Post score: 3

