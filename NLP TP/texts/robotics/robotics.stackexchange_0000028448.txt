Q:

Kinect (in gazebo) not publishing topics

Hi,
Update:
I have also tried rosrun gazebo --verbose and I get a warning - [Wrn] [msgs.cc:1655] Conversion of sensor type[depth] not suppported. I believe this may be due to <sensor name="camera" type="depth"> in XML below.
Question:
I have been following this tutorial to simulate a Kinect in Gazebo and then publish image,pointcloud etc to ROS topics. However, rostopic list does not show the required topics in the output.
I have also looked at the following questions on this forum - this and this. The issue in the first one seems to be same as mine. The person suggested to use URDF files instead (which I will try but would still like to know why below approach is not working ).
Here is the relevant XML code for the model.sdf file in the kinect directory that I have modified according to the tutorial mentioned above -
  //some xml 

  <sensor name="camera" type="depth">
                    <alwaysOn>true</alwaysOn>
            <update_rate>20</update_rate>
            <camera>
              <horizontal_fov>1.047198</horizontal_fov>
              <image>
                <width>640</width>
                <height>480</height>
                <format>R8G8B8</format>
              </image>
              <clip>
                <near>0.05</near>
                <far>3</far>
              </clip>
            </camera>
                <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
              <baseline>0.2</baseline>
              <alwaysOn>true</alwaysOn>
              <!-- Keep this zero, update_rate in the parent <sensor> tag
                will control the frame rate. -->
              <updateRate>0.0</updateRate>
              <cameraName>camera_ir</cameraName>
              <imageTopicName>/camera/depth/image_raw</imageTopicName>
              <cameraInfoTopicName>/camera/depth/camera_info</cameraInfoTopicName>
              <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
              <depthImageInfoTopicName>/camera/depth/camera_info</depthImageInfoTopicName>
              <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
              <frameName>camera_link</frameName>
              <pointCloudCutoff>0.05</pointCloudCutoff>
              <distortionK1>0</distortionK1>
              <distortionK2>0</distortionK2>
              <distortionK3>0</distortionK3>
              <distortionT1>0</distortionT1>
              <distortionT2>0</distortionT2>
              <CxPrime>0</CxPrime>
              <Cx>0</Cx>
              <Cy>0</Cy>
              <focalLength>0</focalLength>
              <hackBaseline>0</hackBaseline>
            </plugin>
    </sensor>

   // some more xml

I would like to mention the following -

Note that in the XML code -  The plugin is defined as a sensor plugin (I am aware that model and sensor
plugins are different things in Gazebo and it can lead to an error if the right one is not used.)

I have been using the command - roslaunch gazebo_ros empty_world.launch to open the world.I then manually add the kinect model shown above.

I have also tried rosrun gazebo --verbose and I get a warning - [Wrn] [msgs.cc:1655] Conversion of sensor type[depth] not suppported.

Also, output of rostopic list after launching gazebo and adding the kinect ( Sorry unable to format this as code for some reason )  -
/clock
/gazebo/link_states
/gazebo/model_states
/gazebo/parameter_descriptions
/gazebo/parameter_updates
/gazebo/set_link_state
/gazebo/set_model_state
/rosout
/rosout_agg

I have checked rostopic echo /clock , which means the Gazebo simulation is running.
o I need to install that plugin libgazebo_ros_openni_kinect.so ? This seems more like an issue on the Gazebo side and hence I have posted here ( instead of ROS forum. )

Thanks a lot !

Originally posted by malhar on Gazebo Answers with karma: 19 on 2018-04-07
Post score: 0

A:

I found the solution by some trial and error.
Update:
What I did -

Go to folder ~/.gazebo/models
Make a copy of the  ~/.gazebo/models/kinect folder (in the same directory ,ie ~/.gazebo/models )  and rename it as kinect_ros or whatever you want.
As said in this tutorial, update the model.config and model.sdf file with the <name_from_step_2>.
Open Gazebo and try adding the <name_from_step_2> model from the "Insert" tab ( If you can find it in the list )
Assuming step 4 worked and you added the kinect into the Gazebo scene, try rostopic list (and the rest of the tutorial link mentioned above).
If step 5 didnt work, then copy paste (as directed in the tutorial above, so after the closing </camera> tag) the <plugin> ... code from tutorial .. </plugin> code into all the model*.sdf files ( model.sdf, model-1_2.sdf, model-1_3.sdf , model-1_4.sdf ).
Re-launch gazebo_ros and check rostopic or rviz for pointcloud.
If step 7 also didnt work, I can only think of one last thing ( not 100% sure if this makes a difference but try to change this in all the model* files -

model://<name_from_step_2>/meshes/kinect.dae
For some reason (probably due to the sdf version) I had to copy paste that plugin into all the model*.sdf files in the kinect folder. (or the duplicated one if you don't want to overwrite it). It works now like the tutorial describes.

Originally posted by malhar with karma: 19 on 2018-04-07
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by RedJohn on 2018-04-09:
I have exactly the same problem. Unfortunately, your solution doesn't work for me, I still see no camera topic with rostopic list. Even if I insert the Kinect-Model from gazebosim.org/models/ database (and not the one from the ~/.gazebo/models folder). I have also apt-get installed gazebo_ros_pkg, but I'm not quite sure how Gazebo/ROS finds & loads the libgazebo_ros_openni_kinect.so. Can you give me any additional information on how you did it (e.g. that you used a catkin ws etc.)? Thank you!
Comment by malhar on 2018-04-09:
Hi, Just check the answer, I just updated it. And no, I didn't use a catkin_ws. Almost identical procedure as mentioned in the tutorial.
Comment by RedJohn on 2018-04-12:
Thank you for your updated answer. Unfortunately, something still doesn't work, because no matter what I do, I can't see the camera topics with rostopic list. What Gazebo/ROS version do you use? I have ROS Kinetic with Gazebo 7.0.0 on a Ubuntu 16.04 (in a VM on a Win10 PC).
Comment by RedJohn on 2018-04-12:
Also, after inserting the Kinect, I get a new error/INFO log and my Gazebo chrashes:
Camera Plugin: The 'robotNamespace' param did not exit
gzserver: /build/ogre-1.9-mqY1wq/ogre-1.9-1.9.0+dfsg1/OgreMain/src/OgreRenderSystem.cpp:546: virtual void Ogre::RenderSystem::setDepthBufferFor(Ogre::RenderTarget*): Assertion `bAttached && "A new DepthBuffer for a RenderTarget was created, but after creation" "it says it's incompatible with that RT"' failed.
The Conversion-warning is also still there.
Comment by aadityacr7 on 2018-04-30:
Hey! I followed your method and it worked till one point. Like the point cloud was visible and all the topics were visible. However, when I place objects in front of it, I don't see anything in RViz. The Rviz window has this error which states ' No tf data.  Actual error: Fixed Frame [camera_link] does not exist'. Any ideas how to fix this?
Comment by RedJohn on 2018-05-01:
Hi, I get the same error in Rviz, but I can see my point cloud in Rviz, so I think you can ignore this error message. Even in the tutorial you can see that there's a warning. I find it strange that one has to enter camera_link as a fixed frame, even though the link doesn't exist... Anyway, did you add a PointCloud2 in Rviz and have you selected the right topic (usually /camera/depth/points)? Additionally, one of the links in my answer below might help you further.
Comment by NaruLatr on 2018-05-21:
Hi, the solution to make it work on rviz is so simple that it nearly stupid, all you have to do is to write manually in the fixed frame input the framename from the plugin ("camera_link" in this tutorial for exemple : http://gazebosim.org/tutorials?tut=ros_depth_camera&cat=connect_ros).
Comment by bartyy on 2018-06-01:
Hi, I followed the tutorial link in this thread but faced a very similar issue while importing kinect in gazebo. I can publish almost all of the topics except the frame-name. Nothing show up in RViz as there is no camera_link. Would anyone knows the solution to this problem? The gazebo and ROS are all up to date. Thanks!
Comment by ddliu on 2018-11-19:
upgrade the version or add the  to all the codes can solve the rostopic list problem. change the fixed frame name can help to solve the point clouds problem. Be careful!! it is fixed frame, not the fixed frame in the global status
Comment by Gaurav K on 2020-09-14:
With steps 1 to 5 it worked for me. Thanks a lot.

