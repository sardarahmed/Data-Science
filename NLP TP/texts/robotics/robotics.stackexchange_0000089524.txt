Q:

Unable to push_back float64 custom msg in std::vector

I have a custom message as follows:
sensor_msgs/PointCloud2 velodynepoints 
float64[3] velodynenormal

and a subscriber nodelet with the following callback function
void class_name::func_name(const pkg_name::msg_file_name::ConstPtr &data) 
{
for (int i = 0; i < 3; i++) {
velodyne_n.push_back(data->velodynenormal[i]);
}
}

where velodyne_n is std::vector< std_msgs::Float64 > velodyne_n;
However, I get the following error:
no matching function for call to ‘std::vector<std_msgs::Float64_<std::allocator<void> > >::push_back(const double&)’
 velodyne_n.push_back(data->velodynenormal[i]);
                                             ^

but if I define velodyne_n as std::vector<float> velodyne_n, I get no errors. Can someone help in pointing out where I might be going wrong? Thanks!

Originally posted by surabhi96 on ROS Answers with karma: 41 on 2018-11-06
Post score: 0

A:

The datatype std_msgs::Float64 is not the same as a c++ 64 bit float (double). It is a message object that contains a member called data which is a 64bit float type.
To add a std_msgs::Float64 to the velodyne_n vector you'll need to create a std_msgs::Float64 object set it's data member to one of the values from velodynenormal then push_back that object.

Originally posted by PeteBlackerThe3rd with karma: 9529 on 2018-11-06
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by surabhi96 on 2018-11-06:
Thank you! I thought float64 in the custom message was of the type std_msgs::Float64
Comment by PeteBlackerThe3rd on 2018-11-07:
I can see how that might be unclear. Glad you got this working

