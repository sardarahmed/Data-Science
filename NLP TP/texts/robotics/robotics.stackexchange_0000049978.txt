Q:

Husky not sending odometry data

Hi All,
I am trying to set up SLAM on a Husky A200, and am having some troubles. There is no tf link between /odom and /base_footprint. To fix this, I am using robot_pose_ekf to take the husky's odometry data and publish the transform to tf. This is not working however. After going through robot_pose_ekf's troubleshooting page I have found the the husky is not sending out the odometry data. I can see /encoder when I run rostopic list, but when I run rostopic hz /encoder the cursor just blinks until I cancel the command. I am running dead_reckoning.py to get the odom data, and have edited the robot_pose_efk.launch file to accept /encoder as the odometry topic. If anyone knows why the husky is not sending out the data I need it would be appreciated.
Thanks

Originally posted by Icehawk101 on ROS Answers with karma: 955 on 2013-04-02
Post score: 1

A:

I got it working. It was my own inexperience. I have only ever used the husky using the clearpath_base example.launch file. After rooting around a little I found out that there was in fact a base.launch in the husky_bringup folder. After modifying that a little so that I wouldn't have to specify the port I use every time, it ran well. Then I just had to tweak a few of the launch files to get all of the publishers and subscribers to line up properly, and it started to work.

Originally posted by Icehawk101 with karma: 955 on 2013-04-02
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Thibault-Salford on 2013-04-18:
Hi, I'm quite new to Ros and I have problems to remap everything correctly to make the odometry work, could you help me a little providing me in which file should I remap the "encoders" to "odom" and how to do it.
Thanks
Comment by Icehawk101 on 2013-04-18:
I used the robot_pose_ekf package to remap from encoder to odom. You will need to edit the launch file a little first. In the launch file change the output_frame from odom_combined to odom and at the bottom where it says to remap from odom, change the pr2_base_odometry/odom to encoder.
Comment by Thibault-Salford on 2013-04-19:
Mmmmm I think I need to know how to link all the frames, I only used a tf_publisher to link them, but what exactly did you put to link the map with odom and odom with base_link?
Thanks for the first answer btw
Comment by Icehawk101 on 2013-04-19:
I'm not sure what your application is, but for me map to odom is provided by gmapping. odom to base_link I got using robot_pose_ekf.

