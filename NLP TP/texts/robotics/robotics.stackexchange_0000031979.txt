Q:

SimpleActionState behaviour if action server crashes

I am using SMACH with SimpleActionState, and I would like to be able to tell if the action server crashes during the execution. For the moment, if the server crashes, the SimpleActionState waits for the result for infinite time.
I thought about using exec_timeout when constructing the SimpleActionState, but didn't succeeded because if the server crashed, it will never manage the preempt request sent after the exec timeout.
Is there an alternative to handle these issues with the action server ?

Originally posted by ju on ROS Answers with karma: 71 on 2011-06-01
Post score: 3

A:

So, depending on the configuration being used for the action server, there is a way to tell if it crashes, but its not built into any of our tools. The default setting for a server is to publish status about its goals on the action_namespace/status topic at a rate of 5Hz (though it should be noted that there is a parameter that will allow users to run without the heartbeat). So, the easiest way to get the behavior you want at the moment is probably to subscribe to the status topic in your client node and take appropriate action on a crash, when you don't receive status for some amount of time.
UPDATE: Kei's question in the comments:
There's a camp of people who want to be able to disable sending of status on a heartbeat because they're worried about the network overhead associated. If you really care about a node going down, the proper solution is probably to set up a bond between the two nodes.

Originally posted by eitan with karma: 2743 on 2011-06-02
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Kei Okada on 2011-08-10:
I believe this is VERY important feature, is there any reason that you did not support this as a default?

