Q:

[SOLVED] Does ROS assist in creating the Kinematic model for a 6 axis robot?

I am very new to trying to develop my own robot arm; but work with Industrial robot arms on a normal basis.
I am trying to determine how I can come up with a Kinematic model for the robot arm I develop. I need to instruct the robot to move in a linear motion relative to the end of the arm on a Cartesian coordinate system. I was curious if ROS would assists with this?
I am very new to trying to work on a project like this; I am really just trying to understand how I can achieve the motion I am looking for from my 6 axis robot arm.

Originally posted by DHCustomPak on ROS Answers with karma: 70 on 2014-02-06
Post score: 1

A:

You'll need a few components for this:

A driver for your robot. This would be used to convert a standard ROS message into actual movements of your robot. For a robot arm, this "standard" message is usually the FollowJointTrajectoryAction
A URDF file, which describes your robot's kinematics in an XML format. Typically, you would also want meshes if your robot for the URDF to be complete (meshes will be especially important for actual planning).
Planning software. In ROS, most arm-planning work is being done in the MoveIt framework. MoveIt provides a setup tool that converts a URDF into a semantic understanding of what needs to be collision checked and what frames/joint groups are used for planning. The setup assistant will also give you a quick IK solver using the KDL framework. Later on, you might want to look at using the ikfast framework for a faster IK solver. MoveIt is able to send planned trajectories to a FollowJointTrajectoryAction.

Finally, you'll then need to actually write a small program to set the cartesian space goals you want the robot to move through. There are several tutorials within MoveIt on how to send these goals, or you can even use the RVIZ MotionPlanning plugin to move the arm around visually at first within RVIZ.
Clearly, there is quite a bit of setup to bring a new platform up under ROS. Depending on what you are doing, it may pay off though. If you are just going to do the same motion over and over again, and you only plan to program it once, then all this work may not pay off. However, if you want to do online planning, integration of perception, etc, then the capabilities that ROS/MoveIt provides (IK/FK solvers, collision-free planning, visualization) are probably worth the effort.

Originally posted by fergs with karma: 13902 on 2014-02-06
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by DHCustomPak on 2014-02-07:
Thanks for the help! This is really helping move me in the right direction.
Comment by JuanTelo on 2018-02-05:
@DHCustomPak did you manage to do what you were trying to do?

