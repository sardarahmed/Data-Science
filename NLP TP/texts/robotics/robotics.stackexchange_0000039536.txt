Q:

How to use a message that I made?

I created a new message following the tutorial i found on http://www.ros.org/wiki/ROS/Tutorials/CreatingMsgAndSrv
But, how do i use it ?
I know how to use standard ros messages, like this:
// First i create the publisher
ros::Publisher fix_pub = n.advertise<sensor_msgs::NavSatFix>("fix", 1);

// Then I create the message.
sensor_msgs::NavSatFixPtr fix(new sensor_msgs::NavSatFix);

// Then, after I'm done editing, i publish the message
fix_pub.publish (fix);

But how do I do that, if I didn't make any class...
I tried to find the standard messages' classes, the sensor_msgs/NavSatFix.h for instance, but i couldn't find it, can u guys help me?

So, if I want to use the message I must create another package for it?
Can't I create the message inside of my package? Because when I tried as you said using my package, it didn't work :(

Originally posted by BetoCC011 on ROS Answers with karma: 121 on 2012-04-13
Post score: 9

Original comments
Comment by joq on 2012-04-13:
You can create a message inside the same package. It is generally better to define all your messages in a separate package. That greatly simplifies inter-package dependencies.

A:

First, I define my message type.
# MyCustomMsg.msg

Header header
float64 data

I then add my message's package to the manifest of my C++ node.
<depend package="my_custom_msg_package" />

Then, I import it into my C++ code.
#include <my_custom_msg_package/MyCustomMsg.h>

Set up a publisher:
my_msg_pub_ = n.advertise<my_custom_msg_package::MyCustomMsg>("topic", 1);

I then instantiate an instance of that message:
my_custom_msg_package::MyCustomMsg msg;

Finally, I fill it with data and publish it.
msg.header.stamp = ros::Time::now();
msg.header.frame_id = "/world";
msg.data = 0.0;

my_msg_pub_.publish(msg);

Originally posted by DimitriProsser with karma: 11163 on 2012-04-13
This answer was ACCEPTED on the original site
Post score: 19

Original comments
Comment by joq on 2012-04-13:
In the message package's CMakeLists.txt you need rosbuild_genmsg().
Comment by DimitriProsser on 2012-04-13:
Oh yes, I figured I'd miss something.
Comment by muin028 on 2012-09-18:
In the message package's CMakeLists.txt you need rosbuild_genmsg().     I did that,but still it is showing that there is an error in my CMakeLists.txt.
Comment by joq on 2012-09-18:
Please edit your original question, adding the errors you are seeing. You should be fairly close to solving this problem.
Comment by Mohsen Hk on 2013-05-31:
i have problem too... when i add "#include <msg/MyCustomMsg.h>" it send me "no such file or directory"

