Q:

Porting from Eigen 2 to Eigen 3

I'm trying to get the turtlebot_kinect_arm_calibration package converted to work with Eigen 3 (new in Fuerte). I've resolved the dependency issues but still get errors with rosmake:

src/calibrate_kinect_checkerboard.cpp:67:41:
error: conversion from
‘tf::Quaternion’ to non-scalar type
‘btQuaternion’ requested
src/calibrate_kinect_checkerboard.cpp:68:38:
error: conversion from ‘tf::Vector3’
to non-scalar type ‘btVector3’
requested
src/calibrate_kinect_checkerboard.cpp:
In member function ‘bool
CalibrateKinectCheckerboard::calibrate(std::string)’:
src/calibrate_kinect_checkerboard.cpp:317:5:
error:
‘estimateRigidTransformationSVD’ is
not a member of ‘pcl’not a member of ‘pcl’

I'd like to get the Eigen2 support modes enabled using the pre-processor #define EIGEN2_SUPPORT_STAGE10_FULL_EIGEN2_API but putting that at the top of my .cpp files is not working. Does that go somewhere in the CMake or manifest.xml files? Has anyone already gotten the Eigen->TF working with Eigen 3?
Thanks!

Originally posted by Dave Coleman on ROS Answers with karma: 1396 on 2012-05-08
Post score: 0

Original comments
Comment by tfoote on 2012-05-10:
Non of these errors appear to be Eigen related.  I also suggest that you file a ticket for this so the maintainer will be notified. https://kforge.ros.org/turtlebot/trac/newticket?component=turtlebot_arm&type=defect&&turtlebot_arm

A:

I was able to resolve the first two error messages with the following replacement:
On line 68 convert:
btQuaternion quat = trans.getRotation();
btVector3 origin = trans.getOrigin();                                     

To:
btQuaternion quat( trans.getRotation()[0], trans.getRotation()[1],                                                 
                   trans.getRotation()[2], trans.getRotation()[3] );                                                                                                                                                                                                       
btVector3 origin( trans.getOrigin()[0], trans.getOrigin()[1], trans.getOrigin()[2]);

But I still haven't resolved other issues, such that I have not been able to successfully compile the package yet.

Originally posted by Dave Coleman with karma: 1396 on 2012-05-08
This answer was ACCEPTED on the original site
Post score: 0

