Q:

robot_localization wrong output

I am trying to use an ekf_localization_node to fuse two sensors, odometry and pose, with the package robot_localization, in two dimensions. However, the output (published in the topic /odometry/filtered) seems to be wrong, since it is constantly moving and rotating even when the robot is still. Moreover, the odometry is always 0 without error, because I am using rqt_publisher to manually publish the topic /example/odom.
When I move the robot, the output follows that move, but when the robot doesn't move anymore, the output continues with that last movement. For example, if I twist the robot clockwise, the output is also twisted clockwise with the same velocity. However, when I stop twisting the robot, the output keeps twisting forever with the same velocity. The same happens with possition: if I move the robot forward, the output continues moving forever with the same velocity.
Can you help me with this?
I am new in ROS, so maybe I didn't understand some basic concepts.
You will find the launch file and the YAML file below, as well as some examples of the topics published. As I said, I am new in ROS, so I can't upload files yet. I'll copy-paste them. I can't upload an image of the output of the 'rosrun rqt_tf_tree rqt_tf_tree' command, but I can tell you that odom is linked to base_link, and the children of base_link are odometry and pozyx_frame.
This is the YAML file:
    frequency: 30
sensor_timeout: 0.1
two_d_mode: true
transform_time_offset: 0.0

transform_timeout: 0.0
print_diagnostics: true

debug: true
debug_out_file: /path/to/debug/file.txt
publish_tf: true
publish_acceleration: false

map_frame: map              # Defaults to "map" if unspecified
odom_frame: odom            # Defaults to "odom" if unspecified
base_link_frame: base_link  # Defaults to "base_link" if unspecified
world_frame: odom           # Defaults to the value of odom_frame if unspecified

odom0: example/odom
odom0_config: [true,  true,  false,
               false, false, false,
               true, true, false,
               false, false, true,
               true, true, false]
odom0_queue_size: 2

odom0_nodelay: false
odom0_differential: false

odom0_pose_rejection_threshold: 5
odom0_twist_rejection_threshold: 1

pose0: /pozyx_pose
pose0_config: [true,  true,  false,
               false, false, true,
               false, false, false,
               false, false, false,
               false, false, false]
pose0_differential: false
pose0_relative: true
pose0_queue_size: 5
pose0_nodelay: false

use_control: false
stamped_control: false
control_timeout: 0.2
control_config: [false, false, false, false, false, false]
acceleration_limits: [1.3, 0.0, 0.0, 0.0, 0.0, 3.4]
deceleration_limits: [1.3, 0.0, 0.0, 0.0, 0.0, 4.5]
acceleration_gains: [0.8, 0.0, 0.0, 0.0, 0.0, 0.9]
deceleration_gains: [1.0, 0.0, 0.0, 0.0, 0.0, 1.0]

process_noise_covariance: [0.5, 0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0.5, 0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0.06, 0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0.03, 0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0.03, 0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0.5, 0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0.025, 0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0.025, 0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0.04, 0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0.01, 0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0.01, 0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0.02, 0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0.01, 0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0.01, 0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0.015]

initial_estimate_covariance: [1e-9, 0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    1e-9, 0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    1e-9, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    1e-9, 0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    1e-9, 0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    1e-9, 0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    1e-9, 0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    1e-9, 0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    1e-9, 0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    1e-9,  0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     1e-9,  0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     1e-9,  0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     1e-9, 0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    1e-9, 0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    1e-9]

This is the Launch file:
<launch>
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_pozyx_node" clear_params="true">
    <rosparam command="load" file="$(find robot_localization)/params/pozyx_with_odometry.yaml" />
  </node>
  <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="0 0 0 0 0 0 1 base_link pozyx_frame 100" />
  <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster2" args="0 0 0 0 0 0 1 base_link odometry 100" />

This is an example of the /example/odom topic:
header: 
  seq: 3778
  stamp: 
    secs: 1490951758
    nsecs: 889832960
  frame_id: odometry
child_frame_id: ''
pose: 
  pose: 
    position: 
      x: 0.0
      y: 0.0
      z: 0.0
    orientation: 
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  covariance: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
twist: 
  twist: 
    linear: 
      x: 0.0
      y: 0.0
      z: 0.0
    angular: 
      x: 0.0
      y: 0.0
      z: 0.0
  covariance: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]

This is an example of the /pozyx/pose topic (in metres):
header: 
  seq: 710
  stamp: 
    secs: 1490952053
    nsecs: 438256025
  frame_id: pozyx_frame
pose: 
  pose: 
    position: 
      x: 2.793
      y: 3.594
      z: 0.273
    orientation: 
      x: 0.708984375
      y: -0.0828247070312
      z: -0.0585327148438
      w: 0.697937011719
  covariance: [0.333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.862, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.022, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.24]

UPDATE 1
Maybe it helps to know that the topic /diagnostics is echoing the following:
header: 
  seq: 162
  stamp: 
    secs: 1490956476
    nsecs: 738717851
  frame_id: ''
status: 
  - 
    level: 1
    name: ekf_pozyx_node: Filter diagnostic updater
    message: Potentially erroneous data or settings detected for a robot_localization state estimation node.
    hardware_id: none
    values: 
      - 
        key: X_configuration
        value: 2 absolute pose inputs detected for X. This may result in oscillations. Please ensure that your variances for each measured variable are set appropriately.
      - 
        key: Y_configuration
        value: 2 absolute pose inputs detected for Y. This may result in oscillations. Please ensure that your variances for each measured variable are set appropriately.
      - 
        key: odom0_pose_covariance
        value: The covariance at position (7), which corresponds to Y variance, was zero. This will be replaced with a small value to maintain filter stability, but should be corrected at the message origin node.
      - 
        key: pose0_covariance
        value: The covariance at position (35), which corresponds to YAW variance, was negative. This will be replaced with a small positive value to maintain filter stability, but should be corrected at the message origin node.
  - 
    level: 0
    name: ekf_pozyx_node: odometry/filtered topic status
    message: Desired frequency met
    hardware_id: none
    values: 
      - 
        key: Events in window
        value: 305
      - 
        key: Events since startup
        value: 4901
      - 
        key: Duration of window (s)
        value: 10.167694
      - 
        key: Actual frequency (Hz)
        value: 29.996967
      - 
        key: Minimum acceptable frequency (Hz)
        value: 25.200000
      - 
        key: Maximum acceptable frequency (Hz)
        value: 35.200000

Originally posted by Roman Portela on ROS Answers with karma: 1 on 2017-03-31
Post score: 0

A:

A bunch of things:

Turn off debug mode. It won't be able to write to that file anyway, but it should still be false.
For example/odom, you have the frame_id in your message set to odometry, yet your world_frame for the EKF is set to odom. You need to make the frame_id in example/odom odom, or provide an odometry->odom transform.
Moreover, for example/odom, you have no child_frame_id set, yet you are trying to fuse the velocity data from it.
Remove odom0_pose_rejection_threshold and  odom0_twist_rejection_threshold. Those are advanced parameters that should not be used until everything else is functioning as you expect (I rarely use them).
The diagnostics topic has some valuable information. You set X and Y to true in the EKF for both odom0 and pose0, and they clearly don't agree, so the output going to behave very strangely.
If you already have a valid source of pose data (pose0), why are you feeding the filter fake odometry messages? It seems to me that you should just get rid of odom0.

I would recommend reviewing the tf wiki and the r_l wiki as well.

Originally posted by Tom Moore with karma: 13689 on 2017-05-04
This answer was ACCEPTED on the original site
Post score: 0

