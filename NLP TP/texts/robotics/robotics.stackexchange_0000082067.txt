Q:

Problem integrating ros with opencv to work with rgb camera output in ros

I am trying to integrate the normal rgb camera output (OpenCV) with ros using cv_bridge and image_transport. When I compile(catkin_make) the code I receive the following error -
 /usr/bin/ld: cannot find -lopencv_calib3d/opt/ros/indigo/lib/libcv_bridge.so. 

Any help would be appreciated. The project is for my university assignment and is slightly urgent. Below is also the cmakelists.txt file that I am using .
cmake_minimum_required(VERSION 2.8.3)
project(image_pro)

find_package(catkin REQUIRED COMPONENTS
  actionlib_msgs
  cv_bridge
  geometry_msgs
  image_transport
  move_base_msgs
  nav_msgs
  roscpp
  rospy
  sensor_msgs
  std_msgs
  pluginlib
  cmake_modules
)

find_package(OpenCV REQUIRED)
find_package(OpenCV 2 REQUIRED)
find_package(Boost REQUIRED system filesystem date_time thread)
find_package(Eigen REQUIRED)

catkin_package(
#  INCLUDE_DIRS include
#  LIBRARIES image_pro
  CATKIN_DEPENDS actionlib_msgs cv_bridge geometry_msgs image_transport move_base_msgs nav_msgs roscpp rospy sensor_msgs std_msgs
  DEPENDS opencv eigen
)

include_directories(include)
include_directories(
  ${catkin_INCLUDE_DIRS}
  ${OpenCV_INCLUDE_DIRS}
)
include_directories(SYSTEM ${Boost_INCLUDE_DIR} ${EIGEN_INCLUDE_DIRS})
#include_directories(include)
## Declare a C++ library
# add_library(${PROJECT_NAME}
#   src/${PROJECT_NAME}/image_pro.cpp
# )

add_executable(get_image_node src/get_image.cpp)
#add_executable(image_pro src/obj_detect.cpp)
target_link_libraries(get_image_node ${OpenCV_LIBS}${catkin_LIBRARIES})

Originally posted by the_notorious_kid on ROS Answers with karma: 5 on 2017-07-30
Post score: 0

A:

You're missing a space:
${OpenCV_LIBS}${catkin_LIBRARIES}

->
${OpenCV_LIBS} ${catkin_LIBRARIES}

Originally posted by lucasw with karma: 8729 on 2017-07-30
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by the_notorious_kid on 2017-07-31:
Thanks Lucas it worked. It was a rookie mistake.

