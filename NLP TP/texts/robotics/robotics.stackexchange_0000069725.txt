Q:

hector quadrotor motor pwm

I am using hector quadrotor model inorder to simulate a neural network. The idea is simulate a neural network created in the paper http://flyingmachinearena.org/wp-content/publications/2010/lupashin2010-AdaptiveFlips.pdf. I know I will be able to spin it using /cmd_val angular velocity z.But I am not sure how to flip it. I wanted to make use of the /motor_pwm to do this. But I have been unable to  get it to work. I tried writing an array of four values liike [100 100 60 100].
Can anyone help me as to how motor_pwm can be used to move the quadrotor.

Originally posted by lonewolf on ROS Answers with karma: 43 on 2015-09-21
Post score: 2

A:

Hey mate, I was just messing around with it before and here is what I have got so far:
#include "hector_uav_msgs/MotorPWM.h"
#include <stdint.h>
#include <inttypes.h>
#include <vector>
std::vector<unsigned char> pwmsHigh (4, 255); // MAX POWER
std::vector<unsigned char> pwmsLow (4, 0); // MIN POWER
(in main)
ros::Publisher motor_commander_1 = n.advertise<hector_uav_msgs::MotorPWM>("uav1/motor_pwm", 100);   
while (ros::ok()) // Check for ctrl+c and ROS
{
  hector_uav_msgs::MotorPWM msg1;
  msg1.pwm = pwmsHigh;
  motor_commander_1.publish(msg1); // Publish msg
  sleep(2);
  hector_uav_msgs::MotorPWM msg1Stop;   
  motor_commander_1.publish(msg1Stop); // Publish msg
  sleep(2);
  ros::spinOnce();
  loop_rate.sleep();
}

As a disclaimer, I was getting an error for losing commands in the Gazebo window... but this will get your quad moving :)
I mainly used the hector_quad_rotor package description page and their github for this

Originally posted by phoenixinwater with karma: 26 on 2016-05-21
This answer was ACCEPTED on the original site
Post score: 1

