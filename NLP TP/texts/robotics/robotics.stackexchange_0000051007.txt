Q:

Dealing with errors in odometry when a robot moves up or down a slope

Hi all,
Is there any algorithm/method to compensate the errors in Odometry (for dead reckoning) that might creep in when a robot moves up or down a slope? I am using a turtlebot which uses a kinect.

Originally posted by Hemu on ROS Answers with karma: 156 on 2013-05-08
Post score: 0

Original comments
Comment by joq on 2013-05-09:
What kinds of errors are you seeing?
Comment by Hemu on 2013-05-09:
The change in x and y coordinates does not take the slope into consideration. The change in both x and y coordinates must be multiplied by cos(angle_of_inclination). How can I measure the angle of inclination of slope?
Comment by joq on 2013-05-09:
I don't have a turtlebot here. Have you looked at the IMU output?
Comment by Hemu on 2013-05-16:
After starting the roomba node, I tried "rostopic find sensor_msgs/Imu". But it did not return any result.
Comment by joq on 2013-05-16:
Some turtlebots may have a separate IMU, not part of the roomba. Did you start up everything?
Comment by Hemu on 2013-05-16:
I also launched the minimal.launch for roomba 500. But nothing was being published when I used the command "rostopic echo /imu/data". I think IMU is missing in Roomba 500 base.
Comment by joq on 2013-05-16:
Sounds like you need expert turtlebot assistance, which I cannot provide. Maybe adding turtlebot and roomba tags would help get that kind of attention.

A:

the package robot_localization might be what you looking for. It is used to fuse multiple sensors together but I think it would work with just one sensor. It has a 2d mode and 3d mode. If the slopes that your dealing with are large enough then you should use 3d mode and that should solve your issue.

Originally posted by shoemakerlevy9 with karma: 545 on 2016-10-06
This answer was ACCEPTED on the original site
Post score: 1

