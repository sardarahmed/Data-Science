Q:

How to publish a two-dimensional array msg with int8 type?

I now have a two-dimensional array of size nxn where n < 10 with int8 or int16 type array elements. I need to publish this array to a topic. I defined my own msg header, a simple int8 type msg such as the following:
int8 num

Can I do something like this:
Let's say A is a two-dimensional array A = [1 2; 1 3];
ros::Publisher pub = n.advertise<test1::int8>("Chatter", 1000);
pub.publish(A);

In the callback function of the subscriber:
void chatterCallback(const test1::num& msg)
{
    ROS_INFO(...);
}

Is there any problem with this approach?

Originally posted by Bholms on ROS Answers with karma: 83 on 2013-07-13
Post score: 4

A:

I am not sure whether the approach u have mentioned will work or not.
Since ROS currently supports declaration of only 1D array in custom message types you can do the following:
array1d.msg

int8[] a;

and then declare another message
array2d.msg

array1d[] b;

This will create vector inside a vector and can be used as 2d array.
Hope this helps...

Originally posted by ayush_dewan with karma: 1610 on 2013-07-13
This answer was ACCEPTED on the original site
Post score: 5

Original comments
Comment by Bholms on 2013-07-14:
what do you mean by declaring "array1d.msg"?
Comment by ayush_dewan on 2013-07-14:
Its just name of the message...
Comment by felix k on 2013-07-16:
Read these if you haven't yet:
http://www.ros.org/wiki/Messages
http://www.ros.org/wiki/msg
Comment by nimish on 2020-12-21:
Are you sure this idea of vector inside a vector works? I tried implementing this in my case for ROS action and I cannot read the message at the client. The result is an empty message.

