Q:

How to simulate a Stewart Platform with ROS?

How to simulate a Stewart Platform with  ROS?

Originally posted by zakizadeh on ROS Answers with karma: 217 on 2016-10-03
Post score: 0

A:

update
I've made a ros node https://github.com/lucasw/simple_sim_ros that is a light wrapper around the bullet physics simulator, and it can create a stewart platform:

It is lacking important features like closed loop actuator control, currently it can only take impulses rather than actuator extension commands, but I'll add that later.
Old answer
Also http://answers.ros.org/question/216101/stewart-platform-how-can-i-connect-multiple-joints-to-the-same-child-link-but-different-parent-links/ and http://answers.gazebosim.org/question/3696/how-to-simulate-a-stewart-platform-with-gazebo-and-ros/
https://en.wikipedia.org/wiki/Stewart_platform looks like the platform would involve a tf frame with six parents, but multiple parents aren't allowed in urdf.
Perhaps it is allowed in Gazebo with SDF?  In that case you would need to have gazebo-only code/scripts/launch files that launches the platform, then some bridging code that gets transform info from gazebo and publishes it into ros.  This could evolve involve a ros-gazebo plugin later, and within urdf the user would specify the general parameters of the platform.
You could do something with Gazebo very hacky and cpu intensive and possibly unstable simulation-wise involving a platform that isn't actually parented to the actuators but is physically constrained by mostly interlocking collision objects.
You could make or perhaps find some off the shelf stewart platform code that solves forward kinematics for the orientation of the platform and the actuators given how much the actuators are extended and run it in a ros node, and that would publish those transforms for the actuators and the platform. (And you already need inverse kinematics solved to make the system useful, though perhaps you were hoping the forward kinematics from a generic simulation would validate your special case inverse kinematics...)

Originally posted by lucasw with karma: 8729 on 2016-10-03
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by zakizadeh on 2016-10-15:
thanks a lot . but when i run this command: roslaunch bullet_server bullet_server.launch
i have this error : ERROR: cannot launch node of type [bullet_server/bullet_server]: can't locate node [bullet_server] in package [bullet_server]
Comment by lucasw on 2016-10-16:
git clone https://github.com/lucasw/simple_sim_ros.git into your catkin_ws/src and build it first.
Comment by zakizadeh on 2016-10-16:
thanks a lot .
but when i run  this command:
roslaunch bullet_server bullet_server.launch
i have empty space .
Comment by lucasw on 2016-10-17:
That's just the server, rosrun bullet_server stewart_platform.py in another terminal will create the stewart platform.
Comment by zakizadeh on 2016-10-17:
thanks a lot
Comment by zakizadeh on 2016-10-17:
how can i controlling this platform ?
Comment by lucasw on 2016-10-17:
You'll have to git pull to the latest, there are currently only Float32 velocity control topics for the six actuators, publish to /prismatic_0/target_lin_motor_vel and subscribe to /prismatic_0/linear_pos to get position feedback, you'd have to write your own position controller...
Comment by lucasw on 2016-10-17:
...but I'll probably have one working in a few days.  There is also a bug where the simulation self-deactivates I should have fixed soon.  (using the add_impulse interface ought to re-activate it though)
Comment by lucasw on 2016-10-20:
I've updated it so that the platform re-activates properly, and also each actuator has a setpoint command to set the desired position (you need the ros pid package installed, like ros-kinetic-pid).   Also roslaunch bullet_server stewart_platform.launch instead of rosrun stewart_platform.py
Comment by zakizadeh on 2016-11-16:
hi ! thanks a lot .
i saw this video :
youtube
thats amazing !  i want to show rqt plot like video . but i Dont know what to do . plese helpe me . can you
explain ?
Comment by lucasw on 2016-11-17:
After stewart_platform.launch is running run rqt_plot and add /prismatic_0/linear_pos/data,  /prismatic_1/linear_pos/data,  /prismatic_2/linear_pos/data and so on to the Topic text entry box and press the plus sign for each one.
Comment by daniel-s-ingram on 2017-12-22:
Here's a link that implements your original suggestion to do it with an SDF, lucasw. All it took was a plugin to expose the Gazebo joints to ROS.
https://github.com/daniel-s-ingram/stewart_ros

