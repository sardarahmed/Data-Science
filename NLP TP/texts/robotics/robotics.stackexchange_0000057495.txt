Q:

How to get rosjava generate classes instead of interfaces?

Hi,
I followed the rosjava tutorials for 'unofficial messages' for Hydro. It all works, but I get an interface .java file instead of a class. For example:
scip_api/msgs/Alarm.msg:
string alarm_name
string data_name

scip_api/build/generated-src/scip_api/Alarm.java:
package scip_api;

public interface Alarm extends org.ros.internal.message.Message {
  static final java.lang.String _TYPE = "scip_api/Alarm";
  static final java.lang.String _DEFINITION = "string alarm_name\nstring data_name";
  java.lang.String getAlarmName();
  void setAlarmName(java.lang.String value);
  java.lang.String getDataName();
  void setDataName(java.lang.String value);
}

While for the std_msgs types, the generated .java file is a class (at least for String.msg it is)
What did I do wrong ? I used the released ros-hydro-rosjava packages for Ubuntu 12.04

Originally posted by psoetens on ROS Answers with karma: 76 on 2014-02-25
Post score: 0

A:

The post above was confused by http://answers.ros.org/question/10276/rosjavapure-pubsub-tutorial/ which probably refers to an older version where this was possible.
The getting started guide of rosjava here: http://docs.rosjava.googlecode.com/hg/rosjava_core/html/getting_started.html#messages
explains how to instantiate messages using a factory. All messages are interfaces on purpose.

Originally posted by psoetens with karma: 76 on 2014-02-25
This answer was ACCEPTED on the original site
Post score: 0

