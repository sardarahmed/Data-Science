Q:

Is catkin_python_setup available when building with catkin_make_isolated?

I'm trying to build a ROS python package on an Intel Edison with Ubilinux. ROS was installed from source, more or less according to the following guide:
http://wiki.ros.org/ROSberryPi/Installing%20ROS%20Indigo%20on%20Raspberry%20Pi
(The actual installation procedure was:
https://github.com/UAVenture/ros-setups/blob/master/intel-edison/install_ros.sh)
To build the package I use the following command inside the catkin workspace:
sudo ./src/catkin/bin/catkin_make_isolated --install -DCMAKE_BUILD_TYPE=Release --install-space /opt/ros/indigo --pkg package_name

This worked nicely, until I added a setup.py to my package and the catkin_python_setup() routine in CMakeLists.txt, now I get this error:
CMake Error at CMakeLists.txt:21 (catkin_python_setup):
  Unknown CMake command "catkin_python_setup".

-- Configuring incomplete, errors occurred!
<== Failed to process package 'package_name': 
  Command '/opt/ros/indigo/env.sh cmake /home/px4/ros_catkin_ws/src/package_name -DCATKIN_DEVEL_PREFIX=/home/px4/ros_catkin_ws/devel_isolated/package_name -DCMAKE_INSTALL_PREFIX=/opt/ros/indigo -DCMAKE_BUILD_TYPE=Release -G Unix Makefiles' returned non-zero exit status 1

Reproduce this error by running:
==> cd /home/px4/ros_catkin_ws/build_isolated/package_name && /opt/ros/indigo/env.sh cmake /home/px4/ros_catkin_ws/src/package_name -DCATKIN_DEVEL_PREFIX=/home/px4/ros_catkin_ws/devel_isolated/package_name -DCMAKE_INSTALL_PREFIX=/opt/ros/indigo -DCMAKE_BUILD_TYPE=Release -G Unix Makefiles

On my ROS Ubuntu setup I can build the package successfully (with regular catkin_make though).
CMakeLists.txt:
cmake_minimum_required(VERSION 2.8.3)
project(package_name)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
#find_package(catkin REQUIRED COMPONENTS
#  roscpp
#  rospy
#  std_msgs
#)

## System dependencies are found with CMake's conventions
# find_package(Boost REQUIRED COMPONENTS system)

## Uncomment this if the package has a setup.py. This macro ensures
## modules and global scripts declared therein get installed
## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html
catkin_python_setup()

find_package(catkin REQUIRED COMPONENTS
#    dynamic_reconfigure
    message_generation
    std_msgs
    geometry_msgs
    mavros
)

################################################
## Declare ROS messages, services and actions ##
################################################

## To declare and build messages, services or actions from within this
## package, follow these steps:
## * Let MSG_DEP_SET be the set of packages whose message types you use in
##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).
## * In the file package.xml:
##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET
##   * If MSG_DEP_SET isn't empty the following dependencies might have been
##     pulled in transitively but can be declared for certainty nonetheless:
##     * add a build_depend tag for "message_generation"
##     * add a run_depend tag for "message_runtime"
## * In this file (CMakeLists.txt):
##   * add "message_generation" and every package in MSG_DEP_SET to
##     find_package(catkin REQUIRED COMPONENTS ...)
##   * add "message_runtime" and every package in MSG_DEP_SET to
##     catkin_package(CATKIN_DEPENDS ...)
##   * uncomment the add_*_files sections below as needed
##     and list every .msg/.srv/.action file to be processed
##   * uncomment the generate_messages entry below
##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)

## Generate messages in the 'msg' folder
add_message_files(
    FILES
    Message.msg
)

## Generate services in the 'srv' folder
add_service_files(
    FILES
    Service.srv
)

## Generate actions in the 'action' folder
# add_action_files(
#   FILES
#   Action1.action
#   Action2.action
# )

## Generate added messages and services with any dependencies listed here
generate_messages(
    DEPENDENCIES
    std_msgs
    geometry_msgs
    mavros
)

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if you package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
#catkin_package(
#  INCLUDE_DIRS include
#  LIBRARIES beginner_tutorials
#  CATKIN_DEPENDS roscpp rospy std_msgs
#  DEPENDS system_lib
#)

catkin_package(
    CATKIN_DEPENDS roscpp rospy mavros
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
# include_directories(include)
include_directories(
  ${catkin_INCLUDE_DIRS}
)

## Declare a cpp library
# add_library(beginner_tutorials
#   src/${PROJECT_NAME}/beginner_tutorials.cpp
# )

## Declare a cpp executable
# add_executable(beginner_tutorials_node src/beginner_tutorials_node.cpp)

## Add cmake target dependencies of the executable/library
## as an example, message headers may need to be generated before nodes
# add_dependencies(beginner_tutorials_node beginner_tutorials_generate_messages_cpp)

## Specify libraries to link a library or executable target against
# target_link_libraries(beginner_tutorials_node
#   ${catkin_LIBRARIES}
# )

#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
# install(PROGRAMS
#   scripts/my_python_script
#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark executables and/or libraries for installation
# install(TARGETS beginner_tutorials beginner_tutorials_node
#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark cpp header files for installation
# install(DIRECTORY include/${PROJECT_NAME}/
#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
# install(FILES
#   # myfile1
#   # myfile2
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
# )

#############
## Testing ##
#############

## See: http://wiki.ros.org/rostest/Writing

if(CATKIN_ENABLE_TESTING)
    find_package(rostest REQUIRED)

    ## Python integration tests
    foreach(T
            launch/sitl.launch
            )
        add_rostest(${T})
    endforeach()

    ## Python unit tests
    foreach(T
            src/package_name/test/demo.py
            )
        catkin_add_nosetests(${T})
    endforeach()
    
endif()

Any help is appreciated
Cheers
ada

Originally posted by Andreas Antener on ROS Answers with karma: 13 on 2015-04-02
Post score: 1

Original comments
Comment by Andreas Antener on 2015-04-02:
I added my CMakeLists.txt. Uh, I just see that I have find_package after catkin_python_setup. Is this relevant? If I had the board right now I would quickly change and try it ;), will do that ASAP.
However, since it works for me on Ubuntu when using catkin_make, is the deps handling different?
Comment by Dirk Thomas on 2015-04-02:
Yes, the order matters. When you use catkin_make all packages share the same CMake context and you rely on another package being processed before yours.
Comment by Andreas Antener on 2015-04-02:
Thanks, makes sense. Will update the answer as soon as I was able to try it.

A:

If CMake can't find the catkin function you might not have called find_package(catkin REQUIRED) before. Please post your CMakeLists.txt.

Originally posted by Dirk Thomas with karma: 16276 on 2015-04-02
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Andreas Antener on 2015-04-03:
You were right, I had the order wrong. When I put find_package before catkin_python_setup() it works as expected. Thanks!

