Q:

Need advice from experienced people

Greetings!
I am soon starting up my new hobby project: a SLAM-robot with no clear goal yet (part from navigation). All the parts have arrived but I need some advice regarding what stack to start with, as I do not want to assemble all software components from scratch. I will start of by presenting the list of hardware.

CPU-board: Hardkernel ODROID-U3
Controller board: Arduino plug-in board for ODROID-U3
Motors: Two pretty fat stepper motors
Stepper motor drivers: Two L298N based stepper motor driver boards
Sensor: Microsoft Kinect

The robot will be assembled on a frame built of sheet aluminium together with a 360ยบ turning nosewheel and airplane wheels for the stepper motors. The Kinect sensor will be mounted on the top of the aluframe.
Now there are several issues that I need to address and I hope that the ROS community can help me with some of them or at leaste provide som useful suggestions.

The ODROID officially supports releases of ubuntu 13.10 and up. As I understand the latest Ubuntu officially supported by ROS is 13.04. Obviously there is a gap here and I have the options of installing a non-supported OS on the ODROID, or compiling ROS from source - I am not very impressed by any of those two solutions. Another option is to run Android but I have a bad feeling about that since it seems very experimental.
I do not want to build my application from scratch as this is a waste of time imho. What I need to figure out is which pre-assembled stack to use in order to get as close as possible to my particular setup. I'd be happy if the only thing I'd actually need to implement in code is the stepper motor interface on the arduino.
What is the recommended workflow for developing the robot application? SSH in and have the build environment located on the ODROID? Cross compile on a PC?

Finally, I am interested in some cool applications for the robot. I.e. vacuum cleaner, spy etc.
Let's get this discussion started!
/Simon

Originally posted by aerkenemesis on ROS Answers with karma: 21 on 2014-03-09
Post score: 0

A:

You might need to build ROS packages from source anyways depending on your architecture. Another option can be to wait until the next release supports 13.10.

Basically you are right. You should only need to write a hardware driver for the robot itself. There is a kinect driver in ROS. What you will need in addition is a hardware description URDF of your robot so all algorithms know where sensors, etc. is actually mounted. Once this setup is complete there are navigation and SLAM algorithms that should work out of the box.

Originally posted by dornhege with karma: 31395 on 2014-03-10
This answer was ACCEPTED on the original site
Post score: 0

