Q:

bringing up ur5, controller spawner shutted down

I finally come around to try the new ur robot driver. When I tried to bring it up, it gave me:
transport error completing service call: unable to receive data from sender, check sender's logs for details

The command that I put in was:
$ roslaunch ur_robot_driver ur5_bringup.launch robot_ip:=192.168.0.103 kinematics_config:=${HOME}/my_robot_calibration.yaml

The response was:
auto-starting new master
process[master]: started with pid [2321]
ROS_MASTER_URI=http://localhost:11311

setting /run_id to 2f73b408-4c95-11ea-9b7d-a85e4557a437
process[rosout-1]: started with pid [2332]
started core service [/rosout]
process[robot_state_publisher-2]: started with pid [2336]
process[ur_hardware_interface-3]: started with pid [2340]
process[ros_control_controller_spawner-4]: started with pid [2341]
process[ros_control_stopped_spawner-5]: started with pid [2342]
process[controller_stopper-6]: started with pid [2343]
process[ur_hardware_interface/ur_robot_state_helper-7]: started with pid [2344]
[ INFO] [1581401422.643390258]: Waiting for controller manager service to come up on /controller_manager/switch_controller
[ INFO] [1581401422.645964371]: waitForService: Service [/controller_manager/switch_controller] has not been advertised, waiting...
[ INFO] [1581401422.648251308]: Initializing dashboard client
[ INFO] [1581401422.651484729]: Connected: Universal Robots Dashboard Server

[ INFO] [1581401422.660647089]: Initializing urdriver
[ INFO] [1581401422.661400171]: Checking if calibration data matches connected robot.
[ WARN] [1581401422.662035962]: No realtime capabilities found. Consider using a realtime system for better performance
INFO: cannot create a symlink to latest log directory: [Errno 17] File exists
[INFO] [1581401422.905321]: Controller Spawner: Waiting for service controller_manager/load_controller
[INFO] [1581401422.907248]: Controller Spawner: Waiting for service controller_manager/load_controller
[ INFO] [1581401423.015094660]: Calibration checked successfully.
[ WARN] [1581401423.719382706]: No realtime capabilities found. Consider using a realtime system for better performance
[ INFO] [1581401423.784345119]: Setting up RTDE communication with frequency 125.000000
[ WARN] [1581401424.812490023]: No realtime capabilities found. Consider using a realtime system for better performance
[ INFO] [1581401424.813013666]: Loaded ur_robot_driver hardware_interface
[ INFO] [1581401424.837119755]: waitForService: Service [/controller_manager/switch_controller] is now available.
[ INFO] [1581401424.837144171]: Service available.
[ INFO] [1581401424.837154919]: Waiting for controller list service to come up on /controller_manager/list_controllers
[ INFO] [1581401424.837629156]: Service available.
[INFO] [1581401425.027613]: Controller Spawner: Waiting for service controller_manager/switch_controller
[INFO] [1581401425.028505]: Controller Spawner: Waiting for service controller_manager/switch_controller
[INFO] [1581401425.033724]: Controller Spawner: Waiting for service controller_manager/unload_controller
[INFO] [1581401425.035053]: Controller Spawner: Waiting for service controller_manager/unload_controller
[INFO] [1581401425.039553]: Loading controller: pos_traj_controller
[INFO] [1581401425.041020]: Loading controller: joint_state_controller
[ INFO] [1581401425.095665610]: Robot's safety mode is now NORMAL
[ INFO] [1581401425.098915574]: Robot mode is now RUNNING
[INFO] [1581401425.128532]: Controller Spawner: Loaded controllers: pos_traj_controller
[INFO] [1581401425.136407]: Loading controller: scaled_pos_traj_controller
Traceback (most recent call last):
  File "/opt/ros/melodic/lib/controller_manager/spawner", line 207, in <module>
    if __name__ == '__main__': main()
  File "/opt/ros/melodic/lib/controller_manager/spawner", line 185, in main
    resp = load_controller(name)
  File "/opt/ros/melodic/lib/python2.7/dist-packages/rospy/impl/tcpros_service.py", line 439, in __call__
    return self.call(*args, **kwds)
  File "/opt/ros/melodic/lib/python2.7/dist-packages/rospy/impl/tcpros_service.py", line 529, in call
    raise ServiceException("transport error completing service call: %s"%(str(e)))
rospy.service.ServiceException: transport error completing service call: unable to receive data from sender, check sender's logs for details
[INFO] [1581401425.276692]: Shutting down spawner. Stopping and unloading controllers...
[INFO] [1581401425.277599]: Stopping all controllers...
[WARN] [1581401425.279904]: Controller Spawner error while taking down controllers: unable to connect to service: [Errno 111] Connection refused
================================================================================REQUIRED process [ur_hardware_interface-3] has died!
process has died [pid 2340, exit code -11, cmd /home/victor/robotdriver_ws/devel/lib/ur_robot_driver/ur_robot_driver_node __name:=ur_hardware_interface __log:=/home/victor/.ros/log/2f73b408-4c95-11ea-9b7d-a85e4557a437/ur_hardware_interface-3.log].
log file: /home/victor/.ros/log/2f73b408-4c95-11ea-9b7d-a85e4557a437/ur_hardware_interface-3*.log
Initiating shutdown!
================================================================================
[ur_hardware_interface/ur_robot_state_helper-7] killing on exit
[controller_stopper-6] killing on exit
[ros_control_stopped_spawner-5] killing on exit
[ros_control_controller_spawner-4] killing on exit
[ur_hardware_interface-3] killing on exit
[robot_state_publisher-2] killing on exit
[INFO] [1581401425.445743]: Shutting down spawner. Stopping and unloading controllers...
[INFO] [1581401425.446678]: Stopping all controllers...
[WARN] [1581401425.448659]: Controller Spawner error while taking down controllers: unable to connect to service: [Errno 111] Connection refused
[controller_stopper-6] escalating to SIGTERM
[rosout-1] killing on exit
[master] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
done

Originally posted by Victor Wu on ROS Answers with karma: 53 on 2020-02-11
Post score: 0

Original comments
Comment by nickw on 2020-02-11:
Please include the command/s you ran, and copy and paste more of the error message, as this should provide more information on what is causing this error to be generated
Comment by Wifi-cable on 2020-02-11:
There are some steps to check for trubleshooting.
-Is UrCaps running on the robot?
-is the speed set to 100%
-Did you choose the remote control program on the teachpannel?
-does your teachpannels software (poyscope) have a version that is OK with the driver?
-can you ping the robot at that IP address?
Comment by Victor Wu on 2020-02-11:
Thank you very much for your comment. I have done all that. Actually, when the ROS on the PC side crashed the UrCap on the robot side will not be able to establish a link with it though I tried to execute it on the Robot side. The Polyscope is of version 3.10 that is the reason I tried to use the new ur robot driver. It is necessary not for curiosity. I have ping the robot without any problem from the PC.
Comment by Victor Wu on 2020-02-11:
@gvdhoorn thank you very much for your help in editing it to a much more readable form.
Comment by gvdhoorn on 2020-02-11:
Next time, paste the console text into your question, select it, then press ctrl+k or click the Preformatted Text button (the one with 101010 on it).

A:

This could be what is reported in Ros_control ABI breakage in Melodic 2020-02 on ROS Discourse.
In particular ros-controls/ros_control#424 seems to report similar error messages (see this comment).
If you've built your workspace some time ago, I would recommend to rebuild it.
If using catkin_make, remove the build and devel folders (and the install folder if you have it), then rerun catkin_make. If you're using catkin_tools, run catkin clean -y. Then catkin b.
As a general comment (and not directed at you @Victor Wu ): whenever upstream packages get updated and you update your own machine, users must rebuild their workspaces. This is not something that I see many people do, but it is required (there are exceptions, but rebuilding is the safe default).

Edit: Apart from the error you show, we see this in the console log:

No realtime capabilities found. Consider using a realtime system for better performance

I'd recommend to follow the Setting up Ubuntu with a PREEMPT_RT kernel instructions to fix this.

Originally posted by gvdhoorn with karma: 86574 on 2020-02-11
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Victor Wu on 2020-02-11:
Oh, thank you very much for the help. I will try it immediately.
Comment by Victor Wu on 2020-02-11:
For the real-time kernel, I have tried it but without success. I will try it again later after I fixed this problem first. Thank you very much.
Comment by Victor Wu on 2020-02-11:
@gvdhoorn I recompiled (by catkin_make) the whole thing and it works beautifully. Thank you very much indeed. I will try the real-time kernel next.
Comment by Victor Wu on 2020-02-14:
@gvdhoorn I applied the patche for the real-time and it worked. However, unfortunately when I install CUDA to use my camera, CUDA does not work with the real-time kernel. How, I have even lost my NVIDIA screen driver! Can you help?
Comment by gvdhoorn on 2020-02-14:\

Can you help?

No, I'm afraid not.
This would be something out of scope for this forum. You may want to find support on a forum dealing with such topics.
Comment by JaFeKl on 2021-01-08:
I just ran into the exact same issues as described in the question above, I made shure that all ros-control related packages are the current version (018.3) and recompiled the newest version of the universal ROS Driver but still couldn't fix the issue. Any suggestions?

