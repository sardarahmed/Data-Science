Q:

Where is the source code for (e.g.) compute_cartesian_path?

I try to get my arm to perform cartesian paths with a simple 4DF robot.
I try to understand the python code to get it to work. I start from the moveit examples from "ROS By Example" volume 2, which uses python.
First you do:
right_arm = moveit_commander.MoveGroupCommander('arm')

Then at some point:
      (plan, fraction) = right_arm.compute_cartesian_path ( ....  )

If I look up this code in the API, I find in line 431 of move_group.py the definition with:
  (ser_path, fraction) = self._g.compute_cartesian_path([conversions.pose_to_list(p) for p in waypoints], eef_step, jump_threshold, avoid_collisions)

The _g is defined in the _init as:
self._g = _moveit_move_group_interface.MoveGroup(name, "robot_description")

We see:
 from moveit_ros_planning_interface import _moveit_move_group_interface

Now i'm lost.
I can find  a shared library in
/opt/ros/indigo/lib/python2.7/dist-packages/moveit_ros_planning_interface

But where is the (source) code or documentation?
It probably is generated from the C++ code?
I can find computeCartesianPath in the C++ api (http://docs.ros.org/jade/api/moveit_ros_planning_interface/html/classmoveit_1_1planning__interface_1_1MoveGroup.html#ad6b02d15000d5b17c89b15a0f744b47c).
But the function name is not the same as in python, so how are they connected?
I cannot find the function definition for any of the _g functions.
In which package can I find how the code for these functions is generated?
Please help.
Sietse

Originally posted by Sietse on ROS Answers with karma: 168 on 2015-12-08
Post score: 0

A:

This looks like the conecting code: https://github.com/ros-planning/moveit_ros/blob/bc153b0e8ee8c2e9a740b593874cbb95aa6fcd46/planning_interface/move_group_interface/src/wrap_python_move_group.cpp#L539
  bool (MoveGroupWrapper::*setPathConstraints_1)(const std::string&) = &MoveGroupWrapper::setPathConstraints;
 ...
  MoveGroupClass.def("compute_cartesian_path", &MoveGroupWrapper::computeCartesianPathPython);
 

which leads to https://github.com/ros-planning/moveit_ros/blob/bc153b0e8ee8c2e9a740b593874cbb95aa6fcd46/planning_interface/move_group_interface/src/wrap_python_move_group.cpp#L363

Originally posted by lucasw with karma: 8729 on 2015-12-08
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Sietse on 2015-12-09:
Thanks, thats what I needed to know!
I now see how a python function is "converted" to the C++ version.

