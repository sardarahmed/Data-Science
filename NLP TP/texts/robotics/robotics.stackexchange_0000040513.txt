Q:

rosdoc fuerte python ValueError

Hey all,
after upgrading to ubuntu precise and ros fuerte I have problems when running rosdoc.
I always get the error paste below.
Any idea what to do?
Tinne
fiep@Fiep /opt/ros/fuerte/stacks/documentation/rosdoc $ ./rosdoc geometric_semantics
/opt/ros/fuerte/stacks/documentation/rosdoc/src/rosdoc/rdcore.py:43: UserWarning: roslib.rospack is deprecated, please use rospkg
import roslib.rospack
initializing rosdoc context:
package filters: ['geometric_semantics']
path filters: []
+package[geometric_semantics]
+stack[geometric_relations_semantics]
Traceback (most recent call last):
File "/opt/ros/fuerte/stacks/documentation/rosdoc/src/rosdoc/init.py", line 134, in main
artifacts = generate_docs(ctx)
File "/opt/ros/fuerte/stacks/documentation/rosdoc/src/rosdoc/init.py", line 83, in generate_docs
import doxygenator
File "/opt/ros/fuerte/stacks/documentation/rosdoc/src/rosdoc/doxygenator.py", line 334, in 
header_template = load_tmpl(header_template_name())
File "/opt/ros/fuerte/stacks/documentation/rosdoc/src/rosdoc/doxygenator.py", line 199, in header_template_name
major, minor, patch = doxygen_version.split('.')
ValueError: too many values to unpack

Originally posted by Tinne De Laet on ROS Answers with karma: 198 on 2012-05-14
Post score: 0

Original comments
Comment by kwc on 2012-05-15:
Given the error message, can you post your Doxygen version number by running the command-line option?
Comment by Tinne De Laet on 2012-05-16:
doxygen --version: 1.7.6.1
Comment by Tinne De Laet on 2012-05-22:
python -- version: Python 2.7.3
Comment by Tinne De Laet on 2012-05-22:
Just to inform you that one of my colleagues, Steven, is able to run rosdoc for the same package on his computer.
He also has ros fuerte and python 2.7.3.
He however has doxygen 1.7.5 and compiled ros-fuerte-documentation from source.
Comment by Tinne De Laet on 2012-05-22:
Just to inform you that one of my colleagues, Steven, is able to run the documentation.

A:

I found out what is causing the problems.
Apparently rosdoc was never used before with a doxygen version containing a build number (i.e. major.minor.patch.build).
I adapted the source of rosdoc to cover the extra build number in the doxygen version.
I filed a bug in trac and also submitted the patch there (https://code.ros.org/trac/ros-pkg/ticket/5451).
Patch:
Index: doxygenator.py
--- doxygenator.py      (revision 16732)
+++ doxygenator.py      (working copy)
@@ -196,7 +196,7 @@
# doxygen not available
if doxygen_version is None:
return None

major, minor, patch = doxygen_version.split('.')

major, minor, patch, build = doxygen_version.split('.')> 1.7.3 doxygen changed the template syntax
if int(major) > 1 or int(minor) > 7 or int(patch) > 3:
return 'header-1.7.4.html'

Tinne

Originally posted by Tinne De Laet with karma: 198 on 2012-05-22
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Tinne De Laet on 2012-05-23:
This patch does not work if you have a doxygen version not containing the build number. Improved patch available here: https://code.ros.org/trac/ros/ticket/3969.
Comment by kwc on 2012-05-29:
Patch applied to source, thanks

