Q:

Translating coordinate frames? Or RGBDSLAM axis orientation?

The short version of my question is:  what's the easiest way to invert one axis of a point cloud (pointcloud2)?  I.E.  change every point from (x,y,z) to (x,y,-z).
My longer question is this:  do I have to, or am I doing something wrong?
I'm trying to use a stereo camera with  rgbdslam.  It looks to me like rgbdslam uses a different axis orientation than what stereo_image_proc is putting out.  The stero_image_proc wiki page has a diagram showing the point cloud reference frame as x-axis right, y-axis down, and z-axis forward.  It appears that rgbdslam is x-axis left.
I've got everything running, and my point cloud coming from stero_image_proc looks correct in rviz (they are in front of the camera, like they should be) .  But in rgbdslam, the points look like they're behind the camera.  In other words, they look like they're coming out of the screen at me rather than receding into the screen like they should.
Thanks,
-Jon

Originally posted by Jon Stephan on ROS Answers with karma: 837 on 2012-12-02
Post score: 1

Original comments
Comment by vdonkey on 2014-04-28:
Hello, Jon Stephan, I'm a beginner. I want to use stereo_image_proc(call it SIP) with rgbdslam too. I can see disparity from image_view receiving topics from SIP. what should be next? rgbdslam seems listening /camera/rgb/image_rect_color & /camera/depth_registered/image_rect, but SIP don't have them

A:

Wow, once I found an area where the cameras picked up more points, I see that it is actually working correctly.  My brain was playing tricks on me.  It's really hard get the right perspective - I wish rgbdslam had a grid reference plane like RVIZ.

Originally posted by Jon Stephan with karma: 837 on 2012-12-09
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Felix Endres on 2012-12-09:
Noted. Will be done in the next version.
Comment by Jon Stephan on 2012-12-09:
Cool!  Thanks!

