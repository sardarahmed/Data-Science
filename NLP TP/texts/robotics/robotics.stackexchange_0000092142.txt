Q:

Using IterativeSplineParameterization with computeCartesianPath

Hello,
I've been trying to use the recently merged in IterativeSplineParameterization  (https://github.com/ros-planning/moveit/pull/441) trajectory processer without having to install moveit from source but I haven't been able to find a config file that allows me to do so. Has anyone used this algorithm without installing from source ?

Originally posted by mjs on ROS Answers with karma: 13 on 2019-06-21
Post score: 0

A:

Edit:
Your comment completely changes your question (please include all relevant information in your first post in the future), so here is an answer to the new question.

I’m specifically looking to use the iterative spline parametrization for Cartesian planning. Would updating this config file change the algorithm used by both freespace and cartesian plans ?

No, it doesn't, as the default implementation of computeCartesianPath(..) hard-codes the use of the IterativeParabolicTimeParameterization right now (here).

I would change the object instantiated here https://github.com/ros-planning/moveit/blob/ee02b0b0886c515b721298e7365660c1e7413279/moveit_ros/move_group/src/default_capabilities/cartesian_path_service_capability.cpp#L159

yes, you would have to do that.
You could potentially avoid building all of MoveIt from source by extracting the move_group package from the source tree, adapting the adapter and then building that.
Even better: create a copy of the adapter, place it in its own package and just build that.
Best: make this configurable (using a parameter), test it and submit a PR against ros-planning/moveit and get it merged.

There should be no need to build MoveIt from source (I'm also not entirely sure what you'd be changing specifically in that case).
The time parameterisation is done in a MoveIt Planning Request Adapter.
There are three of those, corresponding to the three algorithms currently available:

AddTimeParameterization (which applies the Iterative Parabolic Time Parameterization)
AddIterativeSplineParameterization (the spline based approach: Iterative Spline Parameterization)
AddTimeOptimalParameterization (using the Time-optimal Trajectory Generation library by Tobias Kunz)

So changing the algorithm used is a matter of changing the configuration of the planning request adapters.
For MoveIt configurations generated by the MoveIt Setup Assistant, that can be done by editing the ompl_planning_pipeline.launch.xml file.
Specifically, change this line and replace AddTimeParameterization with AddIterativeSplineParameterization.
Refer to the Time Parameterization page in the MoveIt documentation for some more info on this.
And refer to the planning_request_adapters_plugin_description.xml file for a list of available time parameterisation planning request adapters.

Originally posted by gvdhoorn with karma: 86574 on 2019-06-21
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by mjs on 2019-06-21:
Thank you! I’m specifically looking to use the iterative spline parametrization for Cartesian planning. Would updating this config file change the algorithm used by both freespace and cartesian plans ?
As for building from source, I would change the object instantiated here https://github.com/ros-planning/moveit/blob/ee02b0b0886c515b721298e7365660c1e7413279/moveit_ros/move_group/src/default_capabilities/cartesian_path_service_capability.cpp#L159
Comment by gvdhoorn on 2019-06-22:\

I’m specifically looking to use the iterative spline parametrization for Cartesian planning.

Your original question did not mention this. Could you please add these sort of details to your question in the future?
Comment by mjs on 2019-06-22:
Yes sorry about that, I will make sure to do so in the future
Comment by Xinjue on 2023-02-21:
I think this answer should be included in the tutorial

