Q:

Can I pass in node options (e.g., IPC=true) when composing nodes using the CLI or launch files

This demo shows how IPC works: https://github.com/ros2/demos/tree/master/intra_process_demo
The nodes in this demo are all defined such that use_intra_process_communications is initialized to true when the node is constructed.
This demo shows how composition works: https://github.com/ros2/demos/tree/master/composition
The nodes in this demo are all defined such that somebody -- the node container? -- passes in node options when the nodes are instantiated. This appears to be a requirement for composition.
Is there a way to specify node options (e.g., use_intra_process_communications=true) using the ros2 CLI or using launch files? I'm not seeing anything in the Python launch code.
Edit: I'm skimming the rclcpp and rcl code, and I see that some arguments are parsed (params, log handling, etc.), but I don't see anything to turn IPC on/off. Is there a feature request / bug tracking this?
Edit 2: It appears that the answer is "no", and this is the issue: https://github.com/ros2/rclcpp/issues/492
Thanks.

Originally posted by clyde on ROS Answers with karma: 1247 on 2019-07-10
Post score: 1

A:

This is possible from a launch file using extra_arguments, e.g.:
def generate_launch_description():
    """Generate launch description with multiple components."""
    container = ComposableNodeContainer(
            node_name='my_container',
            node_namespace='',
            package='rclcpp_components',
            node_executable='component_container',
            composable_node_descriptions=[
                ComposableNode(
                    package='composition',
                    node_plugin='composition::Talker',
                    node_name='talker',
                    extra_arguments=[{'use_intra_process_comms': True}]),
                ComposableNode(
                    package='composition',
                    node_plugin='composition::Listener',
                    node_name='listener',
                    extra_arguments=[{'use_intra_process_comms': True}])
            ],
            output='screen',
    )

It's also possible to pass extra_arguments on the command line, see documentation at ros2 component load --help.
I believe that this was introduced in Eloquent.

Originally posted by clyde with karma: 1247 on 2019-12-17
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by shivaang12 on 2020-01-27:
Does this works? I wanted to do the same thing but cannot able to pass the parameters this way. Thanks in advance.
Edit: I am using foxy
Comment by FabianMene on 2020-01-30:
It does work in eloquent.
Comment by shivaang12 on 2020-01-30:
I think I have asked wrong question (sorry, I just realized). I am trying to pass params to the composable node. Do you know how it can be done? Thanks in advance.
Edit: I figured out from this https://github.com/ros2/rclcpp/issues/715

