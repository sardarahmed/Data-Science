Q:

my rasberry pi 3 got bloked in 77% in scaning dependencies?

so am having problem with my hector_SLAM foolder  from this https://github.com/NickL77/RPLidar_Hector_SLAM
and i end ep building the project after that  i got error of qt problem i did instal all of tools neded but i get my rpi 3 b+ module  blocked in 77 % scanning dependencies so how to fix it ??
this is the building code
Base path: /home/ubuntu/catkin_ws
Source space: /home/ubuntu/catkin_ws/src
Build space: /home/ubuntu/catkin_ws/build
Devel space: /home/ubuntu/catkin_ws/devel
Install space: /home/ubuntu/catkin_ws/install

Running command: "cmake /home/ubuntu/catkin_ws/src -DCATKIN_DEVEL_PREFIX=/home/ubuntu/catkin_ws/devel -DCMAKE_INSTALL_PREFIX=/home/ubuntu/catkin_ws/install -G Uni$

-- Using CATKIN_DEVEL_PREFIX: /home/ubuntu/catkin_ws/devel
-- Using CMAKE_PREFIX_PATH: /home/ubuntu/catkin_ws/devel;/opt/ros/kinetic
-- This workspace overlays: /home/ubuntu/catkin_ws/devel;/opt/ros/kinetic
-- Found PythonInterp: /usr/bin/python2 (found suitable version "2.7.12", minimum required is "2")
-- Using PYTHON_EXECUTABLE: /usr/bin/python2
-- Using Debian Python package layout
-- Using empy: /usr/bin/empy
-- Using CATKIN_ENABLE_TESTING: ON
-- Call enable_testing()
-- Using CATKIN_TEST_RESULTS_DIR: /home/ubuntu/catkin_ws/build/test_results
-- Found gtest sources under '/usr/src/gmock': gtests will be built
-- Found gmock sources under '/usr/src/gmock': gmock will be built
-- Found PythonInterp: /usr/bin/python2 (found version "2.7.12")
-- Using Python nosetests: /usr/bin/nosetests-2.7
-- catkin 0.7.20
-- BUILD_SHARED_LIBS is on
-- BUILD_SHARED_LIBS is on
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- ~~  traversing 5 packages in topological order:
-- ~~  - dnn_rotate
-- ~~  - docking
-- ~~  - fiducial_follow
-- ~~  - move_demo
-- ~~  - robot_me
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- +++ processing catkin package: 'dnn_rotate'
-- ==> add_subdirectory(demos/dnn_rotate)
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
-- dnn_rotate: 0 messages, 1 services
-- +++ processing catkin package: 'docking'
-- ==> add_subdirectory(demos/docking)
-- Configuring done
-- Generating done
-- Build files have been written to: /home/ubuntu/catkin_ws/build

Running command: "make -j1" in "/home/ubuntu/catkin_ws/build"

[  0%] Built target _dnn_rotate_generate_messages_check_deps_StringTrigger
[  0%] Built target std_msgs_generate_messages_lisp
[  7%] Built target dnn_rotate_generate_messages_lisp
[  7%] Built target std_msgs_generate_messages_nodejs
[ 14%] Built target dnn_rotate_generate_messages_nodejs
[ 14%] Built target std_msgs_generate_messages_py
[ 28%] Built target dnn_rotate_generate_messages_py
[ 28%] Built target std_msgs_generate_messages_cpp
[ 35%] Built target dnn_rotate_generate_messages_cpp
[ 35%] Built target std_msgs_generate_messages_eus
[ 50%] Built target dnn_rotate_generate_messages_eus
[ 50%] Built target dnn_rotate_generate_messages
[ 50%] Built target _docking_generate_messages_check_deps_Dock
[ 57%] Built target docking_generate_messages_lisp
[ 71%] Built target docking_generate_messages_py
[ 78%] Built target docking_generate_messages_cpp
[ 92%] Built target docking_generate_messages_eus
[100%] Built target docking_generate_messages_nodejs
[100%] Built target docking_generate_messages
this is before i did add the hector rp lidar slam file
after i add the file
ubuntu@ubiquityrobot:~/catkin_ws$ catkin_make
Base path: /home/ubuntu/catkin_ws
Source space: /home/ubuntu/catkin_ws/src
Build space: /home/ubuntu/catkin_ws/build
Devel space: /home/ubuntu/catkin_ws/devel
Install space: /home/ubuntu/catkin_ws/install

-- Using CATKIN_DEVEL_PREFIX: /home/ubuntu/catkin_ws/devel
-- Using CMAKE_PREFIX_PATH: /home/ubuntu/catkin_ws/devel;/opt/ros/kinetic
-- This workspace overlays: /home/ubuntu/catkin_ws/devel;/opt/ros/kinetic
-- Found PythonInterp: /usr/bin/python2 (found suitable version "2.7.12", minimum required is "2")
-- Using PYTHON_EXECUTABLE: /usr/bin/python2
-- Using Debian Python package layout
-- Using empy: /usr/bin/empy
-- Using CATKIN_ENABLE_TESTING: ON
-- Call enable_testing()
-- Using CATKIN_TEST_RESULTS_DIR: /home/ubuntu/catkin_ws/build/test_results
-- Found gtest sources under '/usr/src/gmock': gtests will be built
-- Found gmock sources under '/usr/src/gmock': gmock will be built
-- Found PythonInterp: /usr/bin/python2 (found version "2.7.12")
-- Using Python nosetests: /usr/bin/nosetests-2.7
-- catkin 0.7.20
-- BUILD_SHARED_LIBS is on
-- BUILD_SHARED_LIBS is on
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- ~~  traversing 19 packages in topological order:
-- ~~  - dnn_rotate
-- ~~  - docking
-- ~~  - fiducial_follow
-- ~~  - hector_slam (metapackage)
-- ~~  - hector_slam_launch
-- ~~  - move_demo
-- ~~  - hector_map_tools
-- ~~  - hector_nav_msgs
-- ~~  - hector_geotiff
-- ~~  - hector_geotiff_plugins
-- ~~  - hector_marker_drawing
-- ~~  - robot_me
-- ~~  - hector_compressed_map_transport
-- ~~  - rplidar_ros
-- ~~  - hector_imu_attitude_to_tf
-- ~~  - hector_imu_tools
-- ~~  - hector_map_server
-- ~~  - hector_trajectory_server
-- ~~  - hector_mapping
+++ processing catkin package: 'dnn_rotate'
-- ==> add_subdirectory(demos/dnn_rotate)
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
-- dnn_rotate: 0 messages, 1 services
-- +++ processing catkin package: 'docking'
-- ==> add_subdirectory(demos/docking)
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
-- docking: 0 messages, 1 services
-- +++ processing catkin package: 'fiducial_follow'
-- ==> add_subdirectory(demos/fiducial_follow)
-- +++ processing catkin metapackage: 'hector_slam'
-- ==> add_subdirectory(RPLidar_Hector_SLAM/hector_slam/hector_slam)
-- +++ processing catkin package: 'hector_slam_launch'
-- ==> add_subdirectory(RPLidar_Hector_SLAM/hector_slam/hector_slam_launch)
-- +++ processing catkin package: 'move_demo'
-- ==> add_subdirectory(demos/move_demo)
-- +++ processing catkin package: 'hector_map_tools'
-- ==> add_subdirectory(RPLidar_Hector_SLAM/hector_slam/hector_map_tools)
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
CMake Warning at /opt/ros/kinetic/share/catkin/cmake/catkin_package.cmake:166 (message):
catkin_package() DEPENDS on 'Eigen' but neither 'Eigen_INCLUDE_DIRS' nor
'Eigen_LIBRARIES' is defined.
Call Stack (most recent call first):
/opt/ros/kinetic/share/catkin/cmake/catkin_package.cmake:102 (_catkin_package)
RPLidar_Hector_SLAM/hector_slam/hector_map_tools/CMakeLists.txt:51 (catkin_package)
-- +++ processing catkin package: 'hector_nav_msgs'
-- ==> add_subdirectory(RPLidar_Hector_SLAM/hector_slam/hector_nav_msgs)
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
-- hector_nav_msgs: 0 messages, 5 services
-- +++ processing catkin package: 'hector_geotiff'
-- ==> add_subdirectory(RPLidar_Hector_SLAM/hector_slam/hector_geotiff)
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
-- +++ processing catkin package: 'hector_geotiff_plugins'
-- ==> add_subdirectory(RPLidar_Hector_SLAM/hector_slam/hector_geotiff_plugins)
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
-- +++ processing catkin package: 'hector_marker_drawing'
-- ==> add_subdirectory(RPLidar_Hector_SLAM/hector_slam/hector_marker_drawing)

+++ processing catkin package: 'hector_compressed_map_transport'
-- ==> add_subdirectory(RPLidar_Hector_SLAM/hector_slam/hector_compressed_map_transport)
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
-- +++ processing catkin package: 'rplidar_ros'
-- ==> add_subdirectory(RPLidar_Hector_SLAM/rplidar_ros)
-- +++ processing catkin package: 'hector_imu_attitude_to_tf'
-- ==> add_subdirectory(RPLidar_Hector_SLAM/hector_slam/hector_imu_attitude_to_tf)
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
-- +++ processing catkin package: 'hector_imu_tools'
-- ==> add_subdirectory(RPLidar_Hector_SLAM/hector_slam/hector_imu_tools)
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
-- +++ processing catkin package: 'hector_map_server'
-- ==> add_subdirectory(RPLidar_Hector_SLAM/hector_slam/hector_map_server)
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
-- +++ processing catkin package: 'hector_trajectory_server'
-- ==> add_subdirectory(RPLidar_Hector_SLAM/hector_slam/hector_trajectory_server)
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
-- +++ processing catkin package: 'hector_mapping'
-- ==> add_subdirectory(RPLidar_Hector_SLAM/hector_slam/hector_mapping)
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
-- Boost version: 1.58.0
-- Found the following Boost libraries:
--   thread
--   signals
--   chrono
--   system
--   date_time
--   atomic
-- hector_mapping: 2 messages, 0 services
-- Configuring done
-- Generating done
-- Build files have been written to: /home/ubuntu/catkin_ws/build

Running command: "make -j1" in "/home/ubuntu/catkin_ws/build"

[  0%] Built target _dnn_rotate_generate_messages_check_deps_StringTrigger
[  0%] Built target std_msgs_generate_messages_lisp
[  1%] Built target dnn_rotate_generate_messages_lisp
-- ==> add_subdirectory(RPLidar_Hector_SLAM/hector_slam/hector_mapping)
[ 75%] Built target tf2_msgs_generate_messages_lisp
[ 75%] Built target visualization_msgs_generate_messages_lisp
[ 75%] Built target visualization_msgs_generate_messages_eus
[ 75%] Built target visualization_msgs_generate_messages_nodejs
[ 75%] Built target visualization_msgs_generate_messages_cpp
[ 75%] Built target visualization_msgs_generate_messages_py
[ 75%] Built target sensor_msgs_generate_messages_lisp
[ 75%] Built target sensor_msgs_generate_messages_eus
[ 75%] Built target sensor_msgs_generate_messages_nodejs
[ 75%] Built target sensor_msgs_generate_messages_cpp
[ 75%] Built target sensor_msgs_generate_messages_py
[ 75%] Built target actionlib_generate_messages_lisp
[ 75%] Built target tf_generate_messages_cpp
[ 75%] Built target actionlib_generate_messages_eus
[ 75%] Built target actionlib_generate_messages_cpp
[ 75%] Built target tf2_msgs_generate_messages_cpp
[ 75%] Built target tf2_msgs_generate_messages_nodejs
[ 75%] Built target actionlib_generate_messages_py
[ 75%] Built target tf2_msgs_generate_messages_eus
[ 75%] Built target tf_generate_messages_eus
[ 75%] Built target tf_generate_messages_py
[ 75%] Built target actionlib_generate_messages_nodejs
[ 75%] Built target tf_generate_messages_nodejs
[ 75%] Built target tf_generate_messages_lisp
[ 75%] Built target tf2_msgs_generate_messages_py
[ 77%] Building CXX object RPLidar_Hector_SLAM/hector_slam/hector_map_server/CMakeFiles/hector_map_server.dir/src/hector_map_server.cpp.o

Originally posted by houhou on ROS Answers with karma: 1 on 2020-06-17
Post score: 0

A:

Hi @houhou
The Rasberry pi 3 is not a very powerful board and you may just lacking of memory to compile your whole catkin enviroment.
Even though the raspberry freezes, the compile targets will be already build (until it blocks of course) than means that you can just compile it twice after restarting it. Since the other last targets are already compiled the Raspberry will only compile the rest of your packages in the workspace not demanding a huge amount of memory for this last set of targets.
The other solution is more elegant and is about adding more memory to the board by generating a swap space, this will allow the compilation process to have more memory.
Hope that helps.
Cheers.

Originally posted by Weasfas with karma: 1695 on 2020-06-18
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by houhou on 2020-06-21:
thanks alot i will do the swap and am sure it will work

