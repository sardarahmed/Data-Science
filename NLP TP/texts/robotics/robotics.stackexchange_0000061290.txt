Q:

How to integrate tesseract-ocr library in a catkin project?

Hi, I have no idea of how to integrate the tesseract-ocr library to my project, i use qt creator to code and the library is correctly installed since Qtcreator autocompletes the lines where i use the library but this code fails to compile
#include "text_detector.h"
#include <ros/ros.h>
#include <image_transport/image_transport.h>
#include <cv_bridge/cv_bridge.h>
#include <sensor_msgs/image_encodings.h>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/imgproc/imgproc.hpp>
#include <tesseract/baseapi.h>

image_transport::Subscriber sub;
image_transport::Publisher imPub;
ros::Publisher textPub;
tesseract::TessBaseAPI tess;

void onImageReceived(const sensor_msgs::ImageConstPtr& msg){

}

int main (int argc, char* argv[]){
    ros::init(argc,argv,"text_detector");
    ros::NodeHandle nh;
    ROS_INFO_STREAM("Starting text detection");
    image_transport::ImageTransport it(nh);
    imPub = it.advertise("camera_hsv",1);
    tess.Init(NULL,"eng",tesseract::OEM_DEFAULT);
    sub = it.subscribe("camera_raw",1,&onImageReceived);
   // textPub=nh.advertise<>("text",1000);
    ros::spin();
}

with this compilation error

text_detector.cpp:-1: error: undefined reference to tesseract::TessBaseAPI::TessBaseAPI()' text_detector.cpp:-1: error: undefined reference to tesseract::TessBaseAPI::~TessBaseAPI()'

How can i add the library to the project in the cmakelists.txt?
Thanks!

Originally posted by sirasistant on ROS Answers with karma: 33 on 2014-07-29
Post score: 3

Original comments
Comment by Kishore Kumar on 2015-07-20:
I want to execute this node for my project but i am facing some errors, can you please post me the complete node (.cpp file) and CMakeLists.text.
Comment by TSC on 2015-08-28:
Hi @sirasistant! As @Kishore Kumar, I'm also interested in your findings. Are you able to share what you have right now? Thanks in advance!

A:

The project's API Samples page gives the proper command-line arguments for building and linking against the tesseract_ocr library: "g++ -o myprogram myprogram.cpp -llept -ltesseract"
In cmake, you can link against libraries using target_link_libraries(); cmake will automatically add the -l flag for you, so all you have to do is:
target_link_libraries(my_tesseract_node lept tesseract)

Originally posted by ahendrix with karma: 47576 on 2014-07-29
This answer was ACCEPTED on the original site
Post score: 5

Original comments
Comment by sirasistant on 2014-07-30:
That was it! thank you very much :D
Comment by mikelilin on 2015-11-19:
appreciate, saves me a lot of time.

