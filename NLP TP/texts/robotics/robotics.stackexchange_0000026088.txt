Q:

missing: liburdfdom_model.so

Installing from source, gazebo compiles and installs without errors but when I attempt to execute...:
$ gazebo
gazebo: error while loading shared libraries: liburdfdom_model.so: cannot open shared object file: No such file or directory
I'm sourcing the setup.sh file, and the environmental variables look fine.
searching for the file with find / -name 'liburdfdom_model.so' 2>/dev/null returns nothing at all.
It's almost as if it was removed from cmakelists but something is still attempting to link with it?

Originally posted by dereck on Gazebo Answers with karma: 86 on 2013-03-22
Post score: 0

A:

After building from source, before running Gazebo, you need to modify LD_LIBRARY_PATH to include /opt/ros/fuerte/lib, which is where the missing library is installed.  The easiest way to do that is to source the ROS setup file, which you did before building Gazebo:
. /opt/ros/fuerte/setup.bash

Alternatively, you could set it manually:
export LD_LIBRARY_PATH=/opt/ros/fuerte/lib:$LD_LIBRARY_PATH

You don't need to do this when using the binary packages because the deb-builder adds the above the export line to Gazebo's setup.sh because it knows that it configured Gazebo to use ROS libraries.
When you encounter these kinds of problems, a good way to check what's missing is:
ldd `which gazebo` | grep "not found"

If that commands returns nothing, then you're all set; otherwise, you still have some missing libraries to be resolved.

Originally posted by gerkey with karma: 1414 on 2013-03-22
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by dereck on 2013-03-22:
Why does Gazebo depend on ROS? I was under the impression that Gazebo could run without ROS installed. I'm also curious why this just started to happen today when it's been fine for weeks... Any ideas?
Comment by gerkey on 2013-03-22:
Gazebo has many optional dependencies, one of which is the ROS urdfdom library.  Gazebo can be built without it, but then it cannot load URDF models that are widespread in ROS systems, including drcsim.  An alternative way to avoid the problem you've reported here is to configure and build Gazebo from source without first sourcing the ROS setup file.  Then you'd end up with a Gazebo that would happily run without LD_LIBRARY_PATH modification.
Comment by dereck on 2013-03-22:
That's just what I was looking for! I must not have had my ROS sauce on my .bashrc while I was building it last week. :) Thank you!

