Q:

What is the use of multiple nodehandles

I didn't really get the concept of nodehandles from the ROS wiki and couldn't find any concise answer with google. I understood that a ROS node can have multiple nodehandles and they refer to the same node. In a node's main(), I first initialize the node using ros::Init() and then use a nodehandle for starting and shutting down the node. So what does the declaration of multiple nodehandles do in this case?

Originally posted by takahashi on ROS Answers with karma: 185 on 2015-09-28
Post score: 4

A:

Two reasons for having different NodeHandle instances in the same node are:
1. namespace scope: This is the most common usecase, and specifies the namespace prefix that applies to all graph resource names that hang from it. This is what @Boris refers to in his answer. For instance, the following two constructs are equivalent:
ros::NodeHandle("/foo").hasParam("bar");
ros::NodeHandle().hasParam("/foo/bar");

2. control callback spinning: This usecase is more advanced, or at least less common. It is possible to assign different callback queues to different NodeHandle instances, so you can for instance have a node in which some callbacks are processed at high-frequency (e.g. control commands), while others are processed at a slower rate.

Originally posted by Adolfo Rodriguez T with karma: 3907 on 2015-09-29
This answer was ACCEPTED on the original site
Post score: 8

