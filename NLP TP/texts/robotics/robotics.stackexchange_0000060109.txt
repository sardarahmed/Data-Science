Q:

collecting robot activity data on-line

I would like recommendations or suggestions for automatically collecting usage information on a set of indoor robots. The robots all run ROS Hydro on Ubuntu Precise and have fairly good but not perfect wireless internet connection. We have a server that can host the data and run its own ROS master, if that helps.
I would like to know:

when and how long each robot is actually running
how far it travels
cumulative hardware diagnostic information
bag files for some relatively low-bandwidth topics

I see no problem with launching some data collection nodes with low-level robot components, so the information gets collected automatically for almost everything.
Eventually, I expect to use ROCON with multimaster cooperation between the robots, but probably not for all tests and experiments.
Surely other ROS projects have similar needs.

What do you recommend?
What packages have you found useful?
Are existing multimaster solutions robust enough?

Originally posted by joq on ROS Answers with karma: 25443 on 2014-06-16
Post score: 5

A:

We can roughly do it, but it would be great to bulletproof this with a use case like you have. I should be able to allocate time to make this happen.
Wireless Connections - we can move in and out without too much problem (thanks Piyush). Would need to do more testing to 'guarantee' this works fine across access points, but that is something we will be doing here at Yujin shortly as we are extending our wifi infra. One issue might be in recognising when some delivery fails to be sent - is that a requirement?
Data Relaying - if we find problems with basic ros connections, there are a few things I'd like to implement via gateway relays. Instead of flipping the actual ros connections across, flip across a customised connection (different transport, throttling, compression, connection feedback, ...) that relays between the ends of a pub/sub pair or service. I've started experimenting with this and started also looking at similar needs from a couple of groups doing the darpa challenge (HK and WPI groups). Shouldn't be too hard to make this easily disappear under the hood of the usual gateway api but take advantage of the gateway hub to handle autodiscovery and setup the connections.
ROCON - If concert clients are expected to feed this information back, it would be basically an 'unscheduled' continuous feedback from clients to the concert, i.e. agnostic to the starting and stopping of rapps. We'd also like to continuously make available some things like robot urdf's as well, so that is a useful feature we could bump up the priority for.

Originally posted by Daniel Stonier with karma: 3170 on 2014-06-18
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by joq on 2014-06-23:
Thanks, Daniel. I will use your concert tools and let you know how it goes. We will surely learn something from doing it.

