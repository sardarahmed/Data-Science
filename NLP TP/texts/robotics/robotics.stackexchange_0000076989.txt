Q:

Add noise and miscalibration to amcl odometry

I am trying to add noise and miscalibration the odometry while using amcl to make the turtlebot move from point A to point B. I wrote a subscriber to the odom topic and a publisher called new_odom that changes the values of the original topic. My question is: how can I make amcl use my new topic for localization? I am not sure if I need to modify a launch file, remap a parameter, or change something after the turtlebot has started. More general, how can make any amcl to one of my topics instead of the default topic.
Thanks!

Originally posted by Miguel Velez on ROS Answers with karma: 5 on 2016-10-28
Post score: 0

Original comments
Comment by MIN LATT on 2017-09-15:
Hi,   how did you add noise and miscalibration the odometry in your robot? Could you please share the implementation with me?

A:

It is a bit trickier than just remapping odom topic to your new_odom topic, because amcl uses tf instead of odom. You will have to:

Disable transform from odom to base_link published by turtle bot (by remapping tf topic. Something like this would work: http://answers.ros.org/question/229722/how-to-stop-gazebo-publishing-tf/)
Create a node to publish transform from odom to base_link using your new odom data (follow this tutorial: http://wiki.ros.org/navigation/Tutorials/RobotSetup/Odom)

After you have done all these, you should check if tf tree is correct by following http://wiki.ros.org/tf#view_frames

Originally posted by DavidN with karma: 544 on 2016-10-30
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Miguel Velez on 2016-10-30:
Thanks! I will give it a try and let you know if this approach works.
Comment by Miguel Velez on 2016-11-09:
Thanks for the insights! I have been reading the links and for step 2, they create the /odom message from scratch, whereas I want to modify the incoming /odom and republish them. I think this might not be the complete approach for what I want
Comment by DavidN on 2016-11-09:
In the link in step 2, you just need to pay attention to the code from line 40 to 55 because that is how you can broadcast tf from known x, y, th values (which you obtain from your new odom msg). So you can put this code into a callback of a subscriber of odom topic, that should do the trick
Comment by Miguel Velez on 2016-11-12:
Thanks for the quick response. I'll give it a shot.
Comment by Miguel Velez on 2016-11-15:
This worked! The only difference is that I had to publish transform from odom to base_footprint, not base_link. I am not sure if that makes a difference. However, it worked and we got the behavior we wanted.

