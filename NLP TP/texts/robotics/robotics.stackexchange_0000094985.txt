Q:

Declaring a dependency on a system package that is not available on Windows

I've searched for this (seemingly simple) question and went looking through the Windows CI logs, but haven't found a clear answer.
What happens if you have a package that declares a dependency (e.g. <depend> or <exec_depend>) on a system package that is (by design) not available on Windows?
Of course, I'm assuming that the CMakeLists.txt is properly set up to detect Windows and "fail" (or reduce features). I'm just wondering what happens with rosdep for CI/packaging jobs, especially for core ROS 2 packages. Does it fail? Does it just ignore the package?

Originally posted by christophebedard on ROS Answers with karma: 641 on 2020-03-06
Post score: 0

A:

rosdep isn't available on Windows. Instead you need to manually install dependencies. So if you don't have a certain dependency available but the CMake logic works around this gracefully then the package will build just fine. There is no logic during colcon build which will test if dependencies declared in the manifest are present or not.
On the other hand if you would want to declare a dependency which would be possible to provide on Windows the current CI builds on ci.ros2.org would at first fail until we update the Dockerfile used on Windows to actually install that dependency.

Originally posted by Dirk Thomas with karma: 16276 on 2020-03-06
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by christophebedard on 2020-03-06:
Great, that makes sense. Thank you!

