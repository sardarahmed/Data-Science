Q:

Unit for the bounds of the IK call in trac_ik_python

I am using the get_ik function provided by trac_ik_python in the following way-
sol = ik_solver.get_ik(qinit,
                       x, y, z,
                       rx, ry, rz, rw,
                       bx, by, bz,
                       brx, bry, brz)

Regarding the above IK call, I have following two questions-

What is the meaning of bound here? Is it allowed error/ tolerance?
What is the unit for the bounds? I assume that for the position it is in meter, and for orientation, it is in degree.

PS: I am operating Baxter robot in ROS Indigo on Ubuntu 14.04 LTS 64 Bit PC.

Originally posted by ravijoshi on ROS Answers with karma: 1744 on 2018-06-06
Post score: 0

Original comments
Comment by gvdhoorn on 2018-06-06:\

I assume that for the position it is in meter, and for orientation, it is in degree.

Why? 'degree' is not an SI unit.

A:

Hello, I'm the author of  trac_ik_python. In the Python wrapper we are just exposing the C++ interface. As far as I know, there is no documentation on what exactly the boundaries are, but, commonsense (and a bit of testing when I made the wrapper) makes me think it's the error/tolerance as you name them. Also the units should be the  inherent units of the position/orientation.
So, in short, bx, by, bz should be in meters and brx, bry, brz should be radians (as it's the standard unit), and yes, the boundaries are the allowed errors.
Also brx should be boundary on rotation on X, so roll. In the same case bry, pitch and brz yaw.
.

Originally posted by awesomebytes with karma: 66 on 2018-06-07
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by ravijoshi on 2018-06-07:
Thank you very much! I got it.

