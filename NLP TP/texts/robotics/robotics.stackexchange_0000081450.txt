Q:

create rosmsg content from string

With python: I want to in a generic way dynamically create ros messages where the values comes from a string representation.
For example lets say I have a message definition:
float32 a
uint8 b

And I have the values of a and b in some string format, for example
a="1.23" b="17"

I need some conversion that knows that "a" is a float and "b" is an int.
Does ROS messages comes with any "fromString/fromXml/fromYaml" methods?
I know yaml can be used from the command line, e.g. with "rostopic pub".
Is any of this functionality available from a python script?

Originally posted by knxa on ROS Answers with karma: 811 on 2017-06-24
Post score: 1

A:

You know that 'rostopic pub' has this functionality, so your first step should be to check its code.
It is implemented in rostopic [Line 1707]. It's python so that there has to be a way to fill a message from such a string representation. The user input is stored in pub_args, so the next function to check is argv_publish, which leads to publish_message [L 1651], there, we find _fillMessageArgs [L. 1687], which then uses the final 'genpy.message.fill_message_args(msg, pub_args, keys=keys)' to fill the message. So the search continues to genpy.message and we finally find:
def fill_message_args(msg, msg_args, keys={}):
    """
    Populate message with specified args. Args are assumed to be a
    list of arguments from a command-line YAML parser. See
    http://www.ros.org/wiki/ROS/YAMLCommandLine for specification on
    how messages are filled. (...)

This should be the function you are looking for.

Originally posted by NEngelhard with karma: 3519 on 2017-06-24
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by knxa on 2017-06-25:
Thanks for pointing me in the right direction. It seems I don't need the fill_message_args itself. The msg_args in that function has already been converted to a dict with the proper types when called. But that conversion is done with the function yaml.load(...) which seems to be what I need. Thanks

