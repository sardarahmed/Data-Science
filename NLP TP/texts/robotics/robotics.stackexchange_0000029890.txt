Q:

Including a package dependency in your personnal packages

I am a quite new ROS user and created my ros package which take a dependency (in my case eigen)
I took my ages to find how to build this with thefollowing lines in my CMakelists.txt :
#add the eigen dependency
rosbuild_find_ros_package( eigen )
include_directories( ${eigen_PACKAGE_PATH}/include/src )
At the end it seems logical. I don't know if it is about my low knownledge about CMake, but I passed sometime searching in the documentation without any clue about this.
First question, is it documented somewhere ? If not I would like to update the documentation but I don't know where is the rigth place :
http://www.ros.org/wiki/rosbuild/CMakeLists/Examples : adding the use of another package for building, espacially the "include" directory (not so easy to find this page from scratch)
http://www.ros.org/wiki/rosbuild/CMakeLists#rosbuild_find_ros_package : adding details about what you have to do after
http://www.ros.org/wiki/eigen/Tutorials : adding the details in each packages tutorial "how to use me ?"
Then, is it a roadmap in ROS on how a package gives the information to being used ?
In my example is the include_directories( ${eigen_PACKAGE_PATH}/include/src ) package specific ? or is it a ROS habits ?
Isn't it the job of ros dependencies system to add the includes ? for example in the  section of the manifest.xml ?

Originally posted by Willy Lambert on ROS Answers with karma: 352 on 2011-02-26
Post score: 2

A:

Isn't it the job of ros dependencies system to add the includes ? for example in the  section of the manifest.xml ?

It most certainly is! However, the manifest.xml file is actually where dependencies are specified, not in the CMakeLists.txt file. rosbuild only pulls in the <export> section of manifest.xml files for packages that you list a dependency on (or dependencies of your dependencies).
Your package should automatically have the correct includes for Eigen if you edit your manifest.xml file and add a line like <depend package="eigen" />. This manifest.xml line would make the stuff you did in your CMakeLists to find and include Eigen unnecessary.
Try adding the dependency to your manifest.xml file and removing anything related to finding the Eigen includes from your CMakeLists and see if that fixes things.

Originally posted by Eric Perko with karma: 8406 on 2011-02-26
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Willy Lambert on 2011-02-26:
thanks for this.
Comment by Willy Lambert on 2011-02-26:
thanks for this. At first time it was what i did but with eigen3, as my code was writtent for eigen it failed because the folder Eigen has been renamed to Eigen3. Anyway it helped, it didn't know the include were automatically done

