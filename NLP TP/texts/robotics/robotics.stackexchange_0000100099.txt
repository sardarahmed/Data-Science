Q:

What is the difference between "group.execute" and "group.move"?

I LOVE ROS
Hi, I have two options to move my robot with MoveIt:
Option 1
moveit::planning_interface::MoveGroupInterface::Plan plan;
kPyGlobals.move_group_end->setJointValueTarget( goals );
kPyGlobals.move_group_end->plan( plan );
kPyGlobals.move_group_end->execute( plan );

Option 2
kPyGlobals.move_group_end->setJointValueTarget( goals );
if ( syn == Synctype::SYNC )
    kPyGlobals.move_group_end->move();
else if ( syn == Synctype::ASYNC )
    kPyGlobals.move_group_end->asyncMove();

Normally I use option 1 because I want to use the created plan for later.
But what is the difference between these two options?

Originally posted by omeranar1 on ROS Answers with karma: 31 on 2021-09-15
Post score: 0

Original comments
Comment by fvd on 2021-09-15:
I am glad that you love ROS. What is your question?
Comment by omeranar1 on 2021-09-15:
what is the difference between these two options

A:

As you noticed, using plan and execute rather than only move, you can inspect, store and change the planning result. For example, you could:

plan a motion ahead of time and execute it later
store a series of motions that end at the start position and execute them repeatedly without replanning
retime your resulting trajectory(ies)

With plan, you can also use setStartState to plan motions that do not begin at the current state of the robot. This is not possible with move.

Originally posted by fvd with karma: 2180 on 2021-09-15
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by omeranar1 on 2021-09-15:
thank you so much

