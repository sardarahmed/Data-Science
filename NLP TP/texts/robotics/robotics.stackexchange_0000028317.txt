Q:

How to use >C++11 with a ignition or gazebo project

If I am compiling against ign-*, or gazebo, I get -std=c++11 added to my CMAKE_CXX_FLAGS. Now, I understand that ign-* and gazebo require C++11, but I want to use C++14 or C++17.
For example, target_link_library(target ${IGNITION-TRANSPORT-LIBRARIES) will add -std=c++11 to the very end of my compile flags rendering any attempts like set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++1z useless.

Originally posted by Peter Mitrano on Gazebo Answers with karma: 768 on 2017-10-07
Post score: 1

A:

What about if you use set(CMAKE_CXX_STANDARD 14) at the top of your CMakeLists,txt?

Originally posted by Carlos Ag√ºero with karma: 626 on 2017-10-09
This answer was ACCEPTED on the original site
Post score: 1

