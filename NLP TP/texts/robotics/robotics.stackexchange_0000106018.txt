Q:

Is it possible write a Nav2 task server (planner, controller, etc) in another programming language?

I know C++ is the de-facto language for robotics. But Rust is also a decent language choice for this domain. Is it possible write an action/task server (planner, controller, etc) in another programming language and use it in Nav2? I would prefer the memory safety and robustness of Rust.
It seems the action server for ROS2 can be written in any language

https://navigation.ros.org/tutorials/docs/adding_a_nav2_task_server.html

But the plugins for pluginlib need to be in C++?

https://navigation.ros.org/plugin_tutorials/docs/writing_new_bt_plugin.html#writing-new-nbt-plugin

A:

Sure. You can use other language's action clients today like Python and C. If you have a Rust rcl API, you should be able to interact with Action, Service, or Topic APIs in any language. I can't speak to the Rust rcl ROS 2 client library myself, but there is a community effort to provide such a thing, but you should be aware its likely incomplete and not officially supported by the Foundation.
You can write code in Rust should you have sufficient resources in the client library (or wrap your own, I suppose) and interact with Nav2 without a problem I imagine. The only exceptions are going to be composition nodes and plugins, whos mechanisms are C++-only.
Plugins however do need to be C++ or wrapped at least from the pluginlib's perspective as C++. I've seen some people wrap python plugin implementations around a C++ wrapper to make that work, though not something I have a great amount of experience with behind glancing through the code just to see how they did it.

