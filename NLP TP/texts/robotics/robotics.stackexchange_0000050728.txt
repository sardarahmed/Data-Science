Q:

rosdep gives wrong home-brew packages on OSX

I get some strange package dependencies from rosdep on OSX. I don't think the suggested ros/groovy/geometry_experimental or ros/groovy/rqt_common_plugins are valid homebrew packages. Is this a bug?
[kevin@tardis ros_catkin_ws]$ rosdep install --from-paths src --ignore-src --rosdistro groovy -y -s
WARNING: Metapackage "common_msgs" must buildtool_depend on catkin.
WARNING: Metapackage "diagnostics" must buildtool_depend on catkin.
WARNING: Metapackage "driver_common" must buildtool_depend on catkin.
WARNING: Metapackage "geometry" must buildtool_depend on catkin.
WARNING: Metapackage "geometry_experimental" must buildtool_depend on catkin.
WARNING: Metapackage "image_common" must buildtool_depend on catkin.
WARNING: Metapackage "image_pipeline" must buildtool_depend on catkin.
WARNING: Metapackage "image_transport_plugins" must buildtool_depend on catkin.
WARNING: Metapackage "kdl" must buildtool_depend on catkin.
WARNING: Metapackage "nodelet_core" must buildtool_depend on catkin.
WARNING: Metapackage "orocos_kinematics_dynamics" must buildtool_depend on catkin.
WARNING: Metapackage "vision_opencv" must buildtool_depend on catkin.
#[homebrew] Installation commands:
  brew install pyside
  brew install ros/groovy/moveit_ros
  brew install pyqwt
  brew install ros/groovy/geometry_experimental
  brew install pyqt
  brew install tango-icon-theme
  brew install ros/groovy/rqt_common_plugins

Originally posted by Kevin on ROS Answers with karma: 2962 on 2013-04-28
Post score: 1

A:

This is not a bug, you have something which depends on packages which are not in your local workspace, i.e. in the src folder.
For example, brew install ros/groovy/moveit_ros is in there because one of the packages in your workspace depends on moveit_ros but moveit_ros is not also in your workspace.
Since you need moveit_ros and it's not in the workspace, then rosdep will try to get it from your package manager, in this case Homebrew. Since we don't have autogenerated formulae for Homebrew yet that won't work. So your choices are to ignore this and hand pick out the other dependencies you need from Homebrew which actually exist OR you can add these missing packages to your local workspace.

Originally posted by William with karma: 17335 on 2013-04-29
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Kevin on 2013-04-29:
OK ... good to know. I looked at the rosdep documentation, but I didn't find anything that described this behavior. Maybe it should be documented somewhere, unless I missed it.
Comment by William on 2013-04-29:
There should probably be some documentation in the wiki somewhere, but this was sort of thrown together for Groovy, and no one has had cycles to improve it or document it. Though rosdep --help covers the functionality of the options.

