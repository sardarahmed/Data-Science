Q:

An error with class methods subscribers

I try to subscribe a callback function which is a class method, but if I try to do catkin_make I have the following errors:
Base path: /home/kaftan/catkin_ws
Source space: /home/kaftan/catkin_ws/src
Build space: /home/kaftan/catkin_ws/build
Devel space: /home/kaftan/catkin_ws/devel
Install space: /home/kaftan/catkin_ws/install
####
#### Running command: "make cmake_check_build_system" in "/home/kaftan/catkin_ws/build"
####
####
#### Running command: "make -j4 -l4" in "/home/kaftan/catkin_ws/build"
####
Scanning dependencies of target rop_client
[  0%] [  0%] Built target std_msgs_generate_messages_cpp
Built target kobuki_msgs_generate_messages_py
[ 10%] [ 10%] [ 20%] Built target kobuki_msgs_generate_messages_cpp
Building CXX object rop_client/CMakeFiles/rop_client.dir/src/main.cpp.o
Building CXX object rop_client/CMakeFiles/rop_client.dir/src/rop_client.cpp.o
[ 20%] Built target std_msgs_generate_messages_py
[ 20%] Built target std_msgs_generate_messages_lisp
[ 20%] Built target kobuki_msgs_generate_messages_lisp
[ 40%] Built target rop_client_generate_messages_cpp
[ 70%] [ 90%] Built target rop_client_generate_messages_py
Built target rop_client_generate_messages_lisp
[ 90%] Built target rop_client_generate_messages
/home/kaftan/catkin_ws/src/rop_client/src/rop_client.cpp: В функции-члене «void ROP::RopClient::Subscribes()»:
/home/kaftan/catkin_ws/src/rop_client/src/rop_client.cpp:53:74: ошибка: ISO C++ не поддерживает взятие адреса от неквалифицированного элемента-функцииили элемента в скобках для формирования указателя на элемент-функцию.Используйте синтаксис «&ROP::RopClient::RopCallback» [-fpermissive]
/home/kaftan/catkin_ws/src/rop_client/src/rop_client.cpp:53:86: ошибка: нет подходящей функции для вызова «ros::NodeHandle::subscribe(const char [11], int, void (ROP::RopClient::*)(rop_client::RopEvent_<std::allocator<void> >::ConstPtr&))»
/home/kaftan/catkin_ws/src/rop_client/src/rop_client.cpp:53:86: замечание: candidates are:
/opt/ros/groovy/include/ros/node_handle.h:379:14: замечание: template<class M, class T> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(M), T*, const ros::TransportHints&)
/opt/ros/groovy/include/ros/node_handle.h:390:14: замечание: template<class M, class T> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(M)const, T*, const ros::TransportHints&)
/opt/ros/groovy/include/ros/node_handle.h:438:14: замечание: template<class M, class T> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(const boost::shared_ptr<const MReq>&), T*, const ros::TransportHints&)
/opt/ros/groovy/include/ros/node_handle.h:448:14: замечание: template<class M, class T> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(const boost::shared_ptr<const MReq>&)const, T*, const ros::TransportHints&)
/opt/ros/groovy/include/ros/node_handle.h:498:14: замечание: template<class M, class T> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(M), const boost::shared_ptr<U>&, const ros::TransportHints&)
/opt/ros/groovy/include/ros/node_handle.h:509:14: замечание: template<class M, class T> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(M)const, const boost::shared_ptr<U>&, const ros::TransportHints&)
/opt/ros/groovy/include/ros/node_handle.h:559:14: замечание: template<class M, class T> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(const boost::shared_ptr<const MReq>&), const boost::shared_ptr<U>&, const ros::TransportHints&)
/opt/ros/groovy/include/ros/node_handle.h:570:14: замечание: template<class M, class T> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(const boost::shared_ptr<const MReq>&)const, const boost::shared_ptr<U>&, const ros::TransportHints&)
/opt/ros/groovy/include/ros/node_handle.h:618:14: замечание: template<class M> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (*)(M), const ros::TransportHints&)
/opt/ros/groovy/include/ros/node_handle.h:663:14: замечание: template<class M> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (*)(const boost::shared_ptr<const M>&), const ros::TransportHints&)
/opt/ros/groovy/include/ros/node_handle.h:706:14: замечание: template<class M> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, const boost::function<void(const boost::shared_ptr<const M>&)>&, const VoidConstPtr&, const ros::TransportHints&)
/opt/ros/groovy/include/ros/node_handle.h:752:14: замечание: template<class M, class C> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, const boost::function<void(C)>&, const VoidConstPtr&, const ros::TransportHints&)
/opt/ros/groovy/include/ros/node_handle.h:785:14: замечание: ros::Subscriber ros::NodeHandle::subscribe(ros::SubscribeOptions&)
/opt/ros/groovy/include/ros/node_handle.h:785:14: замечание:   candidate expects 1 argument, 3 provided
/home/kaftan/catkin_ws/src/rop_client/src/rop_client.cpp: At global scope:
/home/kaftan/catkin_ws/src/rop_client/src/rop_client.cpp:88:6: ошибка: прототип для «void ROP::RopClient::RopCallback(const ConstPtr&)» не имеет соответствия в классе «ROP::RopClient»
/home/kaftan/catkin_ws/src/rop_client/src/rop_client.h:43:10: ошибка: претендент: void ROP::RopClient::RopCallback(rop_client::RopEvent_<std::allocator<void> >::ConstPtr&)
make[2]: *** [rop_client/CMakeFiles/rop_client.dir/src/rop_client.cpp.o] Ошибка 1
make[1]: *** [rop_client/CMakeFiles/rop_client.dir/all] Ошибка 2
make: *** [all] Ошибка 2
Invoking "make" failed

Callback function in rop_client.h:
namespace ROP {
class RopClient {
    
public:
      void RopCallback( const rop_client::RopEvent::ConstPtr& msg);
private:
      void Subscribes();
      std::vector<ros::Subscriber> subscribes_;
      ros::NodeHandle* node_listener_;
      ros::NodeHandle* node_handle_;
      ros::Publisher chatter_pub_;

};
}

Callback function in the rop_client.cpp:
void ROP::RopClient::Subscribes() {
   ros::Subscriber sub = node_listener_->subscribe( "rop_client", 1000, &RopCallback);
   subscribes_.push_back( sub);
}

void ROP::RopClient::RopCallback( const rop_client::RopEvent::ConstPtr& msg) {
    ROS_INFO( "Rop event received");
     std::ostringstream ss;
     ss << msg->name << " " << msg->value << " " << msg->comment;
     ROS_INFO( "Rop event sended correctly: %s \n", ss.str());
}

I followed  tutorial step-by-step, but after moves callback from global space into class method. If I move callback into cpp file in global space, it works correctly. I read the answers to the same question, and add '&' in front of callback function name in the subscriber function. But it doesn't change anything. I don't want to use functions in global space :( What's wrong in my code?

Originally posted by pelment on ROS Answers with karma: 47 on 2013-11-24
Post score: 0

A:

Hi,
Methods need an object they can be called with, so you have to add the object pointer when calling subscribe(). Also you need to specify the scope of RopCallback.
=>
node_listener_->subscribe( "rop_client", 1000, &RopClient::RopCallback, this);

See also The Publisher/Subscriber overview
Regards

jgdo -

BTW: didn't know there exists a russian gcc ;)

Originally posted by jgdo with karma: 56 on 2013-11-25
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by pelment on 2013-11-25:
Thank you very much, it works!

