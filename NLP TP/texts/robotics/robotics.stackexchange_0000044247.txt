Q:

How to work with ROS in new hardware platform?

Hi~ all.
I am a little familiar with ROS and bundle packages but
I have no idea with "How to port or install ROS into new robot"
Our lab has Darwin-Op robot and trying to use in ROS framework.
I checked myself in ROS wiki that PR2, Nao and several other platforms are supported but Darwin-Op is not mentioned.
And I cannot find any guide for this (How to port ROS into other robots) in ROS.org.
Do you have any idea or information with this problem?
Thank you for reading.

Originally posted by nzer0 on ROS Answers with karma: 33 on 2012-09-18
Post score: 3

Original comments
Comment by Loy on 2012-09-19:
However you do it, if such a guide does not exist, it would be very useful to document your process in some sort of wiki so a guide can be created.
Comment by nzer0 on 2012-09-23:
I got an email from a researcher and got this good implementation for Darwin (I've not yet tried though): http://wiki.iri.upc.edu/index.php/Darwin_installation

A:

The first steps would obviously be to google/search the wiki if someone has done this already. At least some parts are probably already done, for example laser or camera drivers. It looks like you already did that, so you'll need to port the robot on your own. Unfortunately, I am not aware of a generic "porting robots to ROS" guide. Here are (some) of the steps that you'll need to do for that, assuming that you not only want to use ROS for communication, but also want to utilize other packages like, e.g. navigation.

Setup a URDF description for your robot. You should have understood tf and read the following REPS:

REP 103
REP 105

Port your drivers to ROS, here it is very advisable to look for common ROS messages, that obvisouly depend on the hardware. Some examples:

geometry_msgs/Twist for controlling base movements
sensor_msgs/JointState for publishing joint states (angles) of articulated robots
sensor_msgs/LaserScan for lasers

Setup launch files that bring up your robot

This should leave you with a robot that runs, can be teleoperated, and where you can visualize everything in rviz.
More things to look into are diagnostics, navigation, arm navigation.

Originally posted by dornhege with karma: 31395 on 2012-09-18
This answer was ACCEPTED on the original site
Post score: 5

Original comments
Comment by felix k on 2012-09-20:
That would be a good start for a guide in the wiki which should be made, as there have been similar questions. E.g. http://answers.ros.org/question/11833/i-have-a-mobile-robot-that-isnt-currently-supported-by-ros-how-should-i-structure-the-driver-nodes-to-expose-my-robots-integrated-sensors-and/
Comment by nzer0 on 2012-09-23:
Thanks a lot for kind instructions

