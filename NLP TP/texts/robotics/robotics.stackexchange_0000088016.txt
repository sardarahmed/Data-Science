Q:

camera_info_manager error: type argument given to delete

I downloaded the image_common package from https://github.com/ros-perception/image_common and tried to build. The problem is, it fails with
Errors     << camera_info_manager:make /home/.../catkin/Catkin_test/logs/camera_info_manager/build.make.002.log                            
In file included from /usr/src/gtest/src/gtest-all.cc:42:0:
/usr/src/gtest/src/gtest.cc: In destructor ‘virtual testing::Test::~Test()’:
/usr/src/gtest/src/gtest.cc:1897:10: error: type ‘const class testing::internal::scoped_ptr<testing::internal::GTestFlagSaver>’ argument given to ‘delete’, expected pointer
   delete gtest_flag_saver_;
          ^
/usr/src/gtest/src/gtest.cc: At global scope:
/usr/src/gtest/src/gtest.cc:2177:1: error: prototype for ‘testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)’ does not match any in class ‘testing::TestInfo’
 TestInfo::TestInfo(const std::string& a_test_case_name,
 ^

Unfortunately I can't interpret the error, since I don't have experience with google tests. Can anyone help?
I am using Ubuntu 16.04 and ROS kinetic

Originally posted by mherrmann on ROS Answers with karma: 9 on 2018-07-20
Post score: 0

A:

Can you please first clarify why you can't install the Kinetic binaries (ie: sudo apt install ros-kinetic-image-common)?

Originally posted by gvdhoorn with karma: 86574 on 2018-07-20
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by mherrmann on 2018-07-20:
Good question, obviously I didn't knew that it was available, I did only check here: http://wiki.ros.org/image_common and started downloading it. Therefore the question is of course obsolete.
Is there a list which of the packages are available in the packages and which not?
Comment by gvdhoorn on 2018-07-20:
Checking the wiki page like you did, there is a green released badge at the top of the page. That would be one indication something is installable using apt.
Another would be to check the status pages for your release.
Comment by gvdhoorn on 2018-07-20:
In general: installing pkgs using the released binaries is always prefered, so try that first.
Only in a few special cases would a build from sources be attempted:

no release available
you want to develop the pkg itself
you need a build of a specific version

