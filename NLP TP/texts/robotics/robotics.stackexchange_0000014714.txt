Q:

Robot Calibration using DH parameters

I'm new in robotics. My problem is the next one: I have a 6DOF robot manipulator and because the implementation was for real-time application my calculation time had to be really fast so that I used Wrist Center position(Geometrical solution). After using some calibration machine(I don't know much about this machine) I got the real DH parameters of the robot and of course are not the same. 
I can't use the real DH parameters in my IK cause is no longer valid for the new DH parameters and If I implement a numerical solution I don't know really how much time it will take. So, my questions are :

Do you know any IK method for this case with no more than 0.5ms for each IK calculation?
Is there any information about how can compensate the position without change the IK but knowing the real DH information?
Do you know any other solution to this problem?

Finally, I was reading kinematics calibration. I think I got the idea but in the end is the same problem, you got new DH parameters and How to use those new DH parameters or maybe I understood wrong this information, basically is using this equation:

Thanks for help!!!

A:

The 0.5 ms limit might be a bit harsh. Usually 1 ms should be enough for solving the IK numerically on reasonable hardware (industrial PC, maybe RasPi as a worst case).
Numerical solutions always depend on the initial guess the calculations are starting from. Calibration is meant to compensate for the small misalignments in the joints. It can be concluded that the "distance" from the point in joint space obtained by the analytical (ideal) inverse kinematics and the numerical inverse kinematics (for the real DH values) is small. This can be exploited and the ideal analytical IK can supply the initial guess for the real numerical IK. Since the distance is small the numerical IK will converge in 3-5 iterations to a solution that is below the acceptable precision threshold.
Industrial robot controllers (e.g. ABB, Kuka) have a cycle time of 2 - 16 ms. A significant amount of the cycle time is spent on calculating different calibration and compensation functions (e.g. joint misalignment compensation, static load deflection compensation, gear backlash compensation, thermal dilatation compensation, etc.)

