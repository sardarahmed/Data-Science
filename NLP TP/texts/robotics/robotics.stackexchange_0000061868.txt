Q:

qt moc header in different packages

In a typical project is set in CMakeLists.txt
catkin_package(
  INCLUDE_DIRS include
  LIBRARIES ${PROJECT_NAME}
)

if i create a lib and have headers in the include folders that depending packages require....
Now I have an rqt package, where I want to use a custom widget I create in this package in several sub packages. Is there any way to do that? Because now I cannot just add the include folder to INCLUDE_DIRS because the headers lying there might need to be moc'ed... I cannot directly compile against them...

Originally posted by Wolf on ROS Answers with karma: 7555 on 2014-08-15
Post score: 0

A:

From what I've seen, the existing C++ libraries in ROS that expose QT widgets don't do anything special to expose the MOC'd files that are generated from headers.
Between reading the qt_gui_cpp CMakeLists.txt and some MOC documentation it looks like MOC creates C++ implementation files only (My interpretation of the documentation is that MOC does not generate header files). These generated C++ files are then compiled into a library within the source project. Downstream projects then include the original headers and link against the compiled library.
In your case, you'd want to make sure that the ${PROJECT_NAME} library contains both your source and the MOC-generated files.

Originally posted by ahendrix with karma: 47576 on 2014-08-15
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Wolf on 2014-08-18:
Thank you very much, exposing widgets works as you suggested.... Addition: Some pkgs expose ${CMAKE_CURRENT_BINARY_DIR} in catkin_package INCLUDE_DIRS; This might be necessary, however, I could not test if necessary because both of my packages add it to include_directories anyway...

