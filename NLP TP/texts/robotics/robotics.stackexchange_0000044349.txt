Q:

Running two quads with hector_quadrotor_gazebo

Hello -- I'm trying to run two quads in simulation using hector_quadrotor_gazebo. I have been able to modify things such that each quad is in a seperate namespace and start at different locations. However, the /calibrate service does not get assigned to a different namespace. I end up with the following behavior:

I launch a world with a single quad, I'm able to control it with my gamepad through hector_quadrotor_teleop

I launch the second quad in the seperate namespace, and the first quad then starts up towards the sky with about 3 m/s of linear/z velocity. I get an error message in my original roslaunch terminal window:
[ERROR] [1348353951.598192355, 41.102000000]: Tried to advertise a service that is
already advertised in this node [/calibrate]

Neither quad is controllable via teleop/cmd_vel anymore.
I'm not sure if this /calibrate issue is the problem. I can't figure out which bit of code is setting up the /calibrate service. I did rosservice info on it:
sameer@ubuntu:~/rosinstall-test/here$ rosservice info /calibrate
Node: /gazebo
URI: rosrpc://ubuntu:38106
Type: std_srvs/Empty
Args: 

Anyone have an idea or a direction I can go to figure out what is happening? Thanks!

Originally posted by sameer on ROS Answers with karma: 118 on 2012-09-22
Post score: 0

A:

So it looks like the serviceName is set before topicName is set, so while perhaps the intent was for serviceName to be set to imu/calibrate (putting it in the right namespace) it is ending up as just /calibrate. I'll switch the order of these two and we'll see what happens. Thanks.
  if (!_sdf->HasElement("serviceName"))
    serviceName = topicName + "/calibrate";
  else
    serviceName = _sdf->GetElement("serviceName")->GetValueString();

  if (!_sdf->HasElement("topicName"))
    topicName = "imu";
  else
    topicName = _sdf->GetElement("topicName")->GetValueString();

UPDATE:
It also turned out that the sensor code in hector_gazebo_plugins was getting confused because both robots had the same link name for their base link.. So the sensor plugins were both pointing at the same robot rather than different robots for different sensors. Johannes applied a patch this week which should fix it, so the plugin gets the link for the model that its attached to.

Originally posted by sameer with karma: 118 on 2012-09-23
This answer was ACCEPTED on the original site
Post score: 0

