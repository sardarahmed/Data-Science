Q:

Functional difference? pkill vs. rosnode kill

I'm just curious if there's a preferred way to kill a node or if it's all the same underneath.

Originally posted by AndyZe on ROS Answers with karma: 2331 on 2017-10-28
Post score: 0

A:

pkill is an OS utility that uses OS infrastructure to forcibly terminate the process that is your node. The node gets notified that this is going to happen via various signals, which it can use to perform pre-shutdown operations. See also pkill(1).
rosnode kill will use the XML-RPC server in each node to send it (something akin to) a service request (shutdown(..), see ROS/Slave_API) that will set some client-lib internal variable(s) that eventually cause it exit any while(ros::ok()) { .. } or ros::spin() loops. The node may then perform any cleanup actions it has defined.

I'm just curious if there's a preferred way to kill a node or if it's all the same underneath.

No, it's not the same, and I would say it is probably nicer to use rosnode kill, as the signals that pkill uses may not make it to the process hosting your node, but even if they do, they may not give your node (and the middleware infrastructure running in the same process) enough time to gracefully shut down.

Originally posted by gvdhoorn with karma: 86574 on 2017-10-29
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by gvdhoorn on 2017-10-29:
Note also that there is no authentication or other form of security on shutdown(..), so it provides a nice way to take down an entire ROS application as a 'bad actor'.

