Q:

What does ROS distro "freeze" require?

What does ROS distro freeze mean? Is there anything required for developers and users?
Since I thought it's general idea in (opensource) development, I Googled but with no success. Only links that show exhaustive answer is sufficient.
I found in a conversation among ros_controlers that someone says API should be locked down. That makes sense but I just want a complete answer to this question.

Update) Thanks to @fergs and @joq now I'm more understood the importance of stabilizing API per freeze. I forgot to mention that one of my primary concerns was if there's also practice/rule about new release of package after freeze (my guess is that we can release new pkgs anytime as long as api stays stable, knowing adding new classes and functions are allowed in ABI Compatibility Req).

Originally posted by 130s on ROS Answers with karma: 10937 on 2013-07-08
Post score: 2

Original comments
Comment by joq on 2013-07-12:
New packages should be OK, since presumably nothing else depends on them yet.

A:

In practice, a "freeze" means that core ROS components may not make any more API changes for that release.
There may still be bug fixes, but they should not disrupt the higher-level packages that depend on them.
Update: "Freeze" is mainly a system integration concept, commonly used by Linux distros, and not usually required at the level of a single open source package.
ROS releases many packages, and must provide a scaled-down version of the system integration requirements of a full Linux distro. In former releases we had concepts of "first-freeze" (for low-level interfaces) and "final-freeze" (for everything in the release).
Once an API is frozen, it should not change until the following distro. Sometimes exceptions are made, occasionally for good reasons, but usually because some developer did not understand the burdens of system integration.

Originally posted by joq with karma: 25443 on 2013-07-08
This answer was ACCEPTED on the original site
Post score: 4

