Q:

How to fix the EKF pose when the robot is definitely not moving?

I have a robot with

cameras providing absolute poses and
wheel encoders providing odometry (i.e. x, y and yaw velocities).

A robot_localization_ekf node fuses both measurements and yields good results.
However, I'm struggling with the following situation: The robot is standing still (the wheel encoders yield very certain zero velocities) and the cameras don't yield any poses (there are no visual markers in the current field of view). How can we prevent the EKF from predicting a filtered odometry with huge uncertainties, when we know the robot is not moving? I thought about

pausing the entire EKF node or
dynamically decreasing the process noise

until I either receive camera poses or non-zero velocities. But, I guess, both is impossible with the current version of robot_localization.
Sure, since there is no absolute information for a period of time, the EKF pose uncertainty grows unboundedly. But there should be a possibility to circumvent this behavior in certain situations. Although the absolute pose is unknown at the moment, it doesn't change for sure and it's uncertainty doesn't change as well.
Do you have any ideas how to handle this case?
(By the way, I know of other applications, e.g. with advanced driver assistance systems, where they adjust the process noise depending on the situation: driving straight, turning at an intersection, preventing a collision, ...)

Originally posted by Falko on ROS Answers with karma: 268 on 2016-02-29
Post score: 5

A:

You're correct, there is no way to handle this situation currently. The process noise covariance matrix is currently assumed to be static, but there are clearly situations where this isn't ideal. This should really be handled by monitoring the velocity  and freezing the error growth when the robot stops moving. There are forks that already do this, and I will look into merging those changes upstream. Feel free to file a ticket on the r_l GitHub page.

Originally posted by Tom Moore with karma: 13689 on 2016-03-01
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Falko on 2016-03-01:
Thanks Tom, that would be great! :)
Comment by Falko on 2016-03-01:
Just for cross-referring the github ticket: https://github.com/cra-ros-pkg/robot_localization/issues/260

