Q:

Connection ROS to Universal Robot

Hi everyone,
I have got an Universal robot and a sensor mounted/connected to the robot.
The robot is connected with a network cable to my PC. All I want is to have the current coordinates and the Sensor Data shown in ROS.
I have spend hours on hours on this issue... Can someone help me?

Edit: sorry for the unspecific question.
Thanks for the link, yes I have seen it before.
Back to my question/ questions:

Is it possible to have a "tf monitor" like in this video -> (https://www.youtube.com/watch?v=Ra-nXIfPWdg) minute 6:40) for the current status of the roboter? When yes, how ?
When I follow the link wiki/universal_robot there is the GitHub link: https://github.com/ros-industrial/universal_robot. When I am setting a workspace, which of the folders (on GitHub) should I put in source folder? I have put the following folders inside:

universal_robot
ur_bringup
ur_driver
ur_msgs

after that I used catkin_make. I' ve tried it several time for testing reasons and i also tried catkin_make install after that (do I need catkin_make install?).
So the question is, what should I do for the next step to run the following:

To bring up the real robot, run:
roslaunch ur_bringup ur5_bringup.launch robot_ip:=IP_OF_THE_ROBOT [reverse_port:=REVERSE_PORT]

And what does this sentence mean:

Don't forget to source the correct setup shell files and use a new terminal for each command!

What I have to do?
Cause when I am running roslaunch... the following information appears:
Unable to register with master node http://...: Master my not be running yet. Will keep trying.

Thank you for your help and bringing ROS (community) further.

Originally posted by toriori on ROS Answers with karma: 1 on 2017-02-08
Post score: 0

A:

You don't tell us what you've already tried, so: have you seen wiki/universal_robot?
As to the sensor: you don't tell us what (kind of) sensor you have, so there I cannot help you.

Edit: this is probably not what you want to hear, but I have to ask: have you looked at any of the tutorials, read a book or experimented a bit with ROS before you set out to work with your UR5? I ask because your questions seem to suggest that you might be struggling with the basic setup of a ROS workspace, downloading, understanding and compiling packages and then using them.
If you have already looked at them, please ignore, but I'll just include a link to the basic ROS tutorials and to (one example of) a book: A Gentle Introduction to ROS (there are many more, but this one is available for free). If this is your first experience with ROS, please spend some time studying these resources, as they will let you avoid lots and lots of frustration and "spend[ing] hours on hours on" issues like the current one.
Now as to your questions:

1 . Is it possible to have a "tf monitor" like in this video (minute 6:40) for the current status of the roboter? When yes, how ?

tf_monitor is a tool in the tf package, which is a basic part of all ROS installations, so you should have it already. For visualisation of TF frames, use the TF Display in RViz.

2 . When I follow the link wiki/universal_robot [..] which of the folders (on GitHub) should I put in source folder?

First: determine whether you really need to build the packages from source or if you could just use the binary packages that have already been prepared for you. Are you going to work on the source code of the UR drivers? Or do you just want to interface with your robot? Are you runing ROS Kinetic?

If you are using ROS Indigo and just want to use the software (ie: not develop it), please just run: sudo apt-get install ros-indigo-universal-robot. That should install all the necessary parts.

If you are on ROS Kinetic or want to work on the source code of the packages, you'll have to build them from source.

I'll wait for you to tell us which it is before going into much more detail. In any case I expect all of this will become clear once/if you read up on ROS packages and workspace management. See (fi): Creating a workspace for catkin, the other Catkin tutorials and the book I mentioned earlier (and if you want some more background info, see A Gentle Introduction to Catkin).

after that I used catkin_make. I' ve tried it several time for testing reasons and i also tried catkin_make install after that (do I need catkin_make install?)

Again, I'll wait for you to let us know what you really need. For a (very short) intro into how to build packages (hosted on Github) from source in a catkin workspace, see the accepted answer to #q252478.

So the question is, what should I do for the next step to run the following:

roslaunch ur_bringup ur5_bringup.launch robot_ip:=IP_OF_THE_ROBOT [reverse_port:=REVERSE_PORT]

In summary:

source the correct setup.bash (either from your workspace, or the main one under /opt/ros/..)
find out the IP address of your robot controller, and
then roslaunch ur_bringup ur5_bringup.launch robot_ip:=$IP_OF_YOUR_CONTROLLER (where you replace $IP_OF_YOUR_CONTROLLER with the actual IP that you found in step 2

Originally posted by gvdhoorn with karma: 86574 on 2017-02-08
This answer was ACCEPTED on the original site
Post score: 0

