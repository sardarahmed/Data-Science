Q:

Confusion with ROS_PACKAGE_PATH

Hi everyone, I know this is a basic question but I require some guidance. I am new to linux and ROS so I understand this is a basic question.
I have currently installed ROS fuerte and the folder is in the /opt/ros/fuerte on my file system.
I was following the tutorial here: link:[text](http:// www.ros.org/wiki/ROS/Tutorials/InstallingandConfiguringROSEnvironment)
but realised that I have not configured the ROS_ROOT or ROS_PACKAGE_PATH so I entered the commands provided. However, how do I check if I am successful with these commands? The command for the ROS_PACKAGE_PATH is: export ROS_PACKAGE_PATH=/home/user/ros/ros-pkg:/another/path
so I created a folder called rospackagepath so the line above becomes:
ROS_PACKAGE_PATH=/home/user/ros/ros-pkg:/rospackagepath
However the file is empty. Also, I do not have a user folder so should I have something like?
ROS_PACKAGE_PATH=/home/ros-pkg:/rospackagepath ?
Thanks for your help!

Originally posted by JP on ROS Answers with karma: 95 on 2013-08-01
Post score: 1

A:

ROS_ROOT and ROS_PACKAGE_PATH are environment variables, not files. They tell the operating system where to look for all the ROS stuff on your computer.  Have a look here for more info.  You want ROS_PACKAGE_PATH to include all the directories where your ros code is.
In linux, the echo command prints things out.  To print out the values of system variables, you'd use the $ symbol before the variable. So echo $ROS_PACKAGE_PATH will show you what ROS_PACKAGE_PATH currently is.  Type man echo for more info about echo.
In linux, / is the root of the filesystem. You probably don't want to put stuff there. Have a look at the FHS wikipedia page for more info about what normally goes in each directory in linux.
When they say 'user', they mean whatever your user name is. /home/<your user name here> is considered your home directory. Type whoami to figure out what your user name is, and type cd ~ to go to your home directory.
EDIT
Yes, you'll have to change /another/path.  In fact, any folder that has ros packages that you want to be able to access needs to be on the ROS_PACKAGE_PATH. What folders there are depends on you and your needs.
For example, the default packages are in /opt/ros/fuerte/share/ros, /opt/ros/fuerte/stacks and /opt/ros/fuerte/share. Then the standard ROS_PACKAGE_PATH would be
/opt/ros/fuerte/stacks:/opt/ros/fuerte/share:/opt/ros/fuerte/share/ros
However, lets also say you made two directories in your home folder for holding ros workspaces: dirA and dirB. Then you'd want to add them to the ROS_PACKAGE_PATH, like so:
/home/jay/dirA:/home/jay/dirB:/opt/ros/fuerte/stacks:/opt/ros/fuerte/share:/opt/ros/fuerte/share/ros
In that case, dirA would be searched before dirB. To give preference to dirB packages, you'd use
/home/jay/dirB:/home/jay/dirA:/opt/ros/fuerte/stacks:/opt/ros/fuerte/share:/opt/ros/fuerte/share/ros
EDIT 2:

So for one workspace I do: export
ROS_PACKAGE_PATH=/home/user/ros/ros-pkg//opt/ros/fuerte/stacks:/opt/ros/fuerte/share:/opt/ros/fuerte/share/ros
?

almost. Don't forget the colon between paths. It should be
export ROS_PACKAGE_PATH=/home/jay/ros/ros-pkg:/opt/ros/fuerte/stacks:/opt/ros/fuerte/share:/opt/ros/fuerte/share/ros

And that assumes there is a folder called ros/ros-pkg in your home directory where all your code is.

My intentions are to use the ARDrone
so I assume I have to change the above
eventually? Would you use two
workspaces to work on two different
robots?

That's up to you.  Have a look at rosws if you're going to use multiple workspaces, though. Also note that the new build system, catkin, doesn't use ROS_PACKAGE_PATH.
EDIT 3:

Okay I am starting to piece it all together from the tutorial also. The
tutorial makes a 'fuerte_workspace' folder with setup.* folders and a
sandbox folder.

Actually, setup.bash (and the like) are scripts, not folders. These files just call the terminal programs to set up environment variables that tell the system where to find files and folders with ros stuff in them. You can see what commands they run by typing cat setup.bash. But yes, that's what the tutorial does.

Should /ros/ros-pkg have only setup.* or should I copy my
fuerte folder from /opt ?

Again, in the linux world, / is root, and you probably don't want to put anything there.  ~/ros/ros-pkg (your home directory) is probably what you meant.
Anyway, don't copy everything in your fuerte folder to ~/ros. The scripts in ~/ros source the ones in /opt/ros/ already. The way it's set up, you can use what are called overlays to change workspaces. It's much more flexible that way.

Could anyone clarify what the row/ros-pkg should be?

You're thinking too hard. : )  ros/ros-pkg is just another generalization, kind of like user.  When they say ros, they mean your workspace or whatever folder you're putting your packages in. There could be a bunch of them and they could have different names. fuerte_workspace (as is the case in the tutorial), ros_tutorials, ros_sandbox, my_ros_packages, or just plain ros (as is the case in the environment variables wiki page). It doesn't matter what they're called or where they are or how many of them there are. They just all have to be on the ROS_PACKAGE_PATH.
ros-pkg is another generalization.  Substitute whatever the name of your package is for that. In it is the src folder with all the source files, the cfg folder with config files, include with all the includes, the CMakeLists.txt, and all the other stuff that goes in packages.

Originally posted by thebyohazard with karma: 3562 on 2013-08-01
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by JP on 2013-08-01:
Thank you for your kind reply. I have replaced my user name with user as you explained very clearly to me and my ROS_PACKAGE_PATH variable now points to /home/jay/ros/ros-pkg:/another/path.
I assume /another/path should be replaced also but I do not know what that is referring to.
Comment by JP on 2013-08-01:
So for one workspace I do: export ROS_PACKAGE_PATH=/home/user/ros/ros-pkg//opt/ros/fuerte/stacks:/opt/ros/fuerte/share:/opt/ros/fuerte/share/ros   ?
My intentions are to use the ARDrone so I assume I have to change the above eventually? Would you use two workspaces to work on two different robots?
Comment by JP on 2013-08-01:
Okay I am starting to piece it all together from the tutorial also. The tutorial makes a 'fuerte_workspace' folder with setup.* folders and a sandbox folder. Should /ros/ros-pkg have only setup.* or should I copy my fuerte folder from /opt ? Thanks so much for the help
Comment by JP on 2013-08-05:
Could anyone clarify what the row/ros-pkg should be? Thank you!
Comment by JP on 2013-08-06:
Thank you for all your comments!!
Comment by JP on 2013-08-06:
Just to check one more thing (I know Im being paranoid but want to check). When I echo my ROS_PACKAGE_PATH, my result is:/home/jay/fuerte_workspace/sandbox:/opt/ros/fuerte/stacks:/opt/ros/fuerte/share:/opt/ros/fuerte/share/ros
...
Comment by JP on 2013-08-06:
... The tutorial has: /home/your_user_name/fuerte_workspace/sandbox:/opt/ros/fuerte/share:/opt/ros/fuerte/stacks
Does the order between ':' matter and why do I have the additional /opt/ros/fuerte/stacks ? Thanks!
Comment by thebyohazard on 2013-08-06:
Re-read the very first link for the answer to your first question. As to your second question: /opt/ros/fuerte/share/ros is a subdirectory of /opt/ros/fuerte/share.  So your path is more specific than the tutorial's as to which directories to look in.
Comment by JP on 2013-08-06:
I see, so in my case stacks gets searched before share. However the order doesn't matter because they still get searched regardless. Thank you :)

