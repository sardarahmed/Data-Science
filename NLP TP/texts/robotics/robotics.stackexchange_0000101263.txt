Q:

rosconsole command line utility not honoring ROSCONSOLE_FORMAT

I have set up my shells to have a custom ROSCONSOLE_FORMAT
export ROSCONSOLE_FORMAT='${time:%T.%f}[${severity}] ${node}/${logger}: ${message}'

When I run or launch nodes, they have the desired format:
22:45:20.180207[ INFO] /test_node/ros.test: Test node message

However, if I use the rosconsole command line utility,
rosconsole echo -l info

I get the default format that does not have the time in it:
[ INFO  ] [/test_node]: Test node message

How do I make the output of the rosconsole command line utility show in the desired format?
I know I can pass option -v to show verbose messages, but I don't want all of that. Honestly, I am having trouble finding documentation for the command line utility. Everything I search for brings me to the library and it's not on the wiki's utility page.

Originally posted by thebyohazard on ROS Answers with karma: 3562 on 2022-02-21
Post score: 1

A:

How do I make the output of the rosconsole command line utility show in the desired format?

Looking at the source, I don't believe you can.
That script uses a rospy.Subscriber to subscribe to the /rosout topic topic (here), and uses a relatively simple callback to print incoming messages in a fixed format (here):

def _print(self, msg):

    print('[ {} ] [\033[1m{}\033[21m]: {}'.format(
        self._level_string_map[msg.level], msg.name, msg.msg))

    if self._verbose:

        stamp_sec = msg.header.stamp.to_sec()
        stamp_tz = datetime.fromtimestamp(stamp_sec, tzlocal())

        print('          [{} ({:.6f})] [{}]: {}:{}'.format(

            stamp_tz, stamp_sec, msg.function, msg.file, msg.line))

You would have to change the script to get it to print in any other way.
If you do, and there isn't already a PR open, it would be nice to add this feature to the script and submit it for inclusion in rospy.

Originally posted by gvdhoorn with karma: 86574 on 2022-02-21
This answer was ACCEPTED on the original site
Post score: 0

