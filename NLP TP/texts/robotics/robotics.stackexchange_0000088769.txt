Q:

Why is my robot wheel not colliding with the floor in Gazebo?

Hey guys,
I have a differential drive robot in Gazebo where the drive wheels aren't colliding with the floor for some reason:

I have a "collision" tag in the link, but it doesn't seem to be working. I'm using gazebo 9 with ros kinetic.
Below is my xacro:
<?xml version="1.0"?>
<robot name="ssr" xmlns:xacro="http://www.ros.org/wiki/xacro">
<material name="orange">
    <color rgba="1.0 0.5 0.2 1" />
</material>
<material name="black">
    <color rgba="0.2 0.2 0.2 1" />
</material>
<material name="body_color">
    <color rgba="0.3 0.8 0.4 1" />
</material>

<link name="base_link" />
<link name="base_footprint">
    <origin xyz="0 0 0" />
</link>

<joint name="base_footprint_joint" type="fixed">
    <parent link="base_link" />
    <child link="base_footprint" />
    <origin rpy="0 0 0" xyz="0 0 0" />
</joint>

<xacro:property name="body_width" value="0.5" />
<xacro:property name="body_length" value="0.7" />
<xacro:property name="body_height" value="0.15" />
<xacro:property name="floor_gap" value="0.15" />
<xacro:property name="body_mass" value="10" />
<xacro:property name="laser_dist_x" value="0.25" />
<xacro:property name="laser_dist_z" value="0.2" />
<xacro:property name="caster_radius" value="0.04" />
<xacro:property name="caster_mass" value="0.5" />
<xacro:property name="drive_wheel_length" value="0.05" />
<xacro:property name="drive_wheel_radius" value="0.15" />
<xacro:property name="drive_wheel_mass" value="2" />
<xacro:property name="drive_wheel_separation" value="0.4" />

<xacro:macro name="ssr_caster_link" params="prefix offset_x offset_y">
    <link name="${prefix}_caster_link">
    <visual>
        <origin xyz="0 0 0" />
        <geometry>
        <sphere radius="${caster_radius}" />
        </geometry>
        <material name="black" />
    </visual>
    <collision>
        <origin xyz="0 0 0" />
        <geometry>
        <sphere radius="${caster_radius}" />
        </geometry>
    </collision>
    <inertial>
        <mass value="${caster_mass}" />
        <origin xyz="0 0 0" />
        <inertia ixx="${2 / 3 * caster_mass * caster_radius * caster_radius}"
                ixy="0"
                ixz="0"
                iyy="${2 / 3 * caster_mass * caster_radius * caster_radius}"
                iyz="0"
                izz="${2 / 3 * caster_mass * caster_radius * caster_radius}" />
    </inertial>
    <surface>
        <friction>
        <ode>
            <mu>0</mu>
            <mu2>0</mu2>
            <slip1>1</slip1>
            <slip2>1</slip2>
            <maxVel>0.01</maxVel>
            <minDepth>0.001</minDepth>
        </ode>
        </friction>
    </surface>
    </link>

    <gazebo reference="${prefix}_caster_link">
            <mu>0</mu>
            <mu2>0</mu2>
            <slip1>1</slip1>
            <slip2>1</slip2>
            <maxVel>0.001</maxVel>
            <minDepth>0.001</minDepth>
    </gazebo>

    <joint name="${prefix}_caster_joint" type="fixed">
    <parent link="base_link" />
    <child link="${prefix}_caster_link" />
    <origin rpy="0 0 0" xyz="${offset_x} ${offset_y} ${caster_radius + 0.03}" />
    </joint>
</xacro:macro>

<xacro:macro name="ssr_drive_wheel" params="prefix offset_y">
    <link name="${prefix}_drive_wheel_link">
    <visual>
        <origin xyz="0 0 0" />
        <geometry>
        <cylinder length="${drive_wheel_length}" radius="${drive_wheel_radius}" />
        </geometry>
        <material name="black" />
    </visual>
    <collision>
        <origin xyz="0 0 0" />
        <geometry>
        <cylinder length="${drive_wheel_length}" radius="${drive_wheel_radius}" />
        </geometry>
    </collision>
    <inertial>
        <mass value="${drive_wheel_mass}" />
        <origin xyz="0 0 0" />
        <inertia ixx="${1 / 12 * drive_wheel_mass * (3 * drive_wheel_radius * drive_wheel_radius + drive_wheel_length * drive_wheel_length)}"
                ixy="0"
                ixz="0"
                iyy="${1 / 12 * drive_wheel_mass * (3 * drive_wheel_radius * drive_wheel_radius + drive_wheel_length * drive_wheel_length)}"
                iyz="0"
                izz="${1 / 2 * drive_wheel_mass * drive_wheel_radius * drive_wheel_radius}" />
    </inertial>
    </link>

    <joint name="${prefix}_drive_wheel_joint" type="continuous">
    <parent link="base_link" />
    <child link="${prefix}_drive_wheel_link" />
    <origin rpy="1.5707 0 0" xyz="0 ${offset_y} ${drive_wheel_radius}" />
    <axis rpy="0 0 0" xyz="0 0 -1" />
    <limit effort="50" velocity="100" />
    <joint_properties damping="0.0" friction="0.0" /> <!-- TODO: do these params need changing? -->
    </joint>

    <gazebo reference="${prefix}_drive_wheel_link">
    <mu1 value="100.0" />
    <mu2 value="100.0" />
    <kp value="10000.0" />
    <kd value="1.0" />
    <!-- <fdir1 value="1 0 0" /> -->
    <material>Gazebo/Grey</material>
    <!-- <minDepth>0.001</minDepth> -->
    </gazebo>

    <transmission name="${prefix}_drive_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="${prefix}_drive_wheel_joint" />
    <actuator name="${prefix}_drive_wheel_joint_motor">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    </transmission>
</xacro:macro>

<xacro:macro name="ssr_laser_link" params="prefix topic_name offset_x angle">
    <link name="${prefix}_laser_link">
    <visual>
        <origin xyz="0 0 0" />
        <geometry>
        <cylinder length="0.05" radius="0.03" />
        </geometry>
        <material name="orange" />
    </visual>
    </link>

    <joint name="${prefix}_laser_link_joint" type="fixed">
    <parent link="base_link" />
    <child link="${prefix}_laser_link" />
    <origin rpy="0 0 ${angle}" xyz="${offset_x} 0 ${laser_dist_z}" />
    </joint>

    <gazebo reference="${prefix}_laser_link">
    <material>Gazebo/Blue</material>
    <sensor name="${prefix}_hokuyo_sensor" type="ray">
        <pose>0.025 0 0.1 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>40</update_rate>
        <ray>
        <scan>
            <horizontal>
            <samples>1080</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619449019</min_angle>
            <max_angle>2.35619449019</max_angle>
            </horizontal>
        </scan>
        <range>
            <min>0.3</min>
            <max>30.0</max>
            <resolution>0.001</resolution>
        </range>
        </ray>
        <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>${topic_name}</topicName>
        <frameName>${prefix}_laser_link</frameName>
        </plugin>
    </sensor>
    </gazebo>
</xacro:macro>

<link name="body_link">
    <visual>
    <origin xyz="0 0 -${body_height / 2}" />
    <geometry>
        <!-- <box size="${body_length} ${body_width} ${body_height}" /> -->
        <mesh filename="package://ssr/urdf/robot_top.dae" />
    </geometry>
    <!-- <material name="body_color" /> -->
    </visual>
    <collision>
    <origin xyz="0 0 0" />
    <geometry>
        <box size="${body_length} ${body_width} ${body_height}" />
    </geometry>
    </collision>

    <inertial>
    <origin xyz="0 0 0" rpy="0 0 0" />
    <mass value="10" />
    <inertia ixx="${1 / 12 * body_mass * (body_width * body_width + body_height * body_height)}"
            ixy="0"
            ixz="0"
            iyy="${1 / 12 * body_mass * (body_length * body_length + body_height * body_height)}"
            iyz="0"
            izz="${1 / 12 * body_mass * (body_width * body_width + body_length * body_length)}" />
    </inertial>
</link>

<joint name="body_link_joint" type="fixed">
    <parent link="base_link" />
    <child link="body_link" />
    <origin rpy="0 0 0" xyz="0 0 ${(floor_gap + body_height) / 2}" />
</joint>

<xacro:ssr_laser_link prefix="front" topic_name="/front_echo" offset_x="${laser_dist_x}" angle="0" />
<xacro:ssr_laser_link prefix="back" topic_name="/back_echo" offset_x="-${laser_dist_x}" angle="3.14159" />

<xacro:ssr_caster_link prefix="right_front" offset_x="0.28" offset_y="-0.2" />
<xacro:ssr_caster_link prefix="left_front" offset_x="0.28" offset_y="0.2" />
<!-- <xacro:ssr_caster_link prefix="right_back" offset_x="-0.28" offset_y="-0.2" /> -->
<!-- <xacro:ssr_caster_link prefix="left_back" offset_x="-0.28" offset_y="0.2" /> -->

<xacro:ssr_drive_wheel prefix="left" offset_y="-${drive_wheel_separation / 2}" />
<xacro:ssr_drive_wheel prefix="right" offset_y="${drive_wheel_separation / 2}" />

<gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <publishWheelTF>true</publishWheelTF>
    <publishTf>1</publishTf>
    <publishWheelJointState>true</publishWheelJointState>
    <alwaysOn>true</alwaysOn>
    <updateRate>100.0</updateRate>
    <leftJoint>left_drive_wheel_joint</leftJoint>
    <rightJoint>right_drive_wheel_joint</rightJoint>
    <wheelSeparation>${drive_wheel_separation}</wheelSeparation>
    <wheelDiameter>${drive_wheel_radius}</wheelDiameter>
    <broadcastTF>1</broadcastTF>
    <torque>10</torque>
    <wheelTorque>10</wheelTorque>
    <wheelAcceleration>100.0</wheelAcceleration>
    <commandTopic>cmd_vel</commandTopic>
    <odometryFrame>odom</odometryFrame>
    <odometryTopic>odom</odometryTopic>
    <robotBaseFrame>base_link</robotBaseFrame>
    </plugin>
</gazebo>
</robot>

Any help would be highly appreciated!
Thanks!

Originally posted by femtogram on ROS Answers with karma: 16 on 2018-08-29
Post score: 0

A:

I got rid of
<gazebo reference="${prefix}_drive_wheel_link">
<mu1 value="100.0" />
<mu2 value="100.0" />
<kp value="10000.0" />
<kd value="1.0" />
<!-- <fdir1 value="1 0 0" /> -->
<material>Gazebo/Grey</material>
<!-- <minDepth>0.001</minDepth> -->
</gazebo>

and it worked!

Originally posted by femtogram with karma: 16 on 2018-08-29
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by stevemacenski on 2018-08-29:
If you found the answer, please mark your question as answered

