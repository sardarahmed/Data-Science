Q:

robot_state_publisher posting wrong tf tree (missing connections)

Dear ROS community,
I have the following problem:
I'm trying to simulate a robotic leg using ROS kinetic and Gazebo.
In order to get information about the current frame of each link I'm using the robot_state_publisher. He's a subscriber of the /joint_states topic and also receives information from the parameter robot_description which is loaded as an parameter using the xacro file, which describes the leg construction with all it's links and joints. He then publishes to the topic /tf
When I use the rqt_tf_tree to check the tf_tree I have 3 unconnected tree structures as a result, two Joints are missing.
I first thought the xacro files would be incompleted, but I checked the  robot_description by using  $ rosparam get /robot_description
E.g.
<joint name="joint_B1" type=" continuous">
  <origin rpy="0 0.512690467 0" xyz="-0.05 -0.005 0"/>
  <parent link="upper_leg"/>
  <child link="connector_2"/>
  <axis xyz="0 1 0"/>
  <dynamics friction="0"/>
  <limit effort="10" velocity="10"/>
</joint>

is one of the missing connections.
Do you guys have any suggestion where my problem could be?

Originally posted by JaFeKl on ROS Answers with karma: 26 on 2018-03-17
Post score: 0

A:

The missing connections were caused by missing transmission elements in the xacro file. I thought only transmission elments for the actuated joints are necessary, but it seems like this isn't the case. In order to get a right tf_tree, every non-fixed joints need to get a transmission element.

Originally posted by JaFeKl with karma: 26 on 2018-03-18
This answer was ACCEPTED on the original site
Post score: 0

