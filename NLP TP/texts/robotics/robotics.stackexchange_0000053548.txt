Q:

Illogical TF Chain

I'm running Gazebo (Simulated PR2 in Groovy), with /fake_localization, /robot_pose_ekf and /robot_state_publisher.
Something seems to be off with my /tf tree.
$ rosrun tf tf_monitor /map /base_laser_link
Waiting for transform chain to become available between /map and /base_laser_link
RESULTS: for /map to /base_laser_link
Chain is: /bl_caster_rotation_link -> /base_link -> /bl_caster_rotation_link -> /base_footprint -> /br_caster_rotation_link -> /base_link -> /br_caster_rotation_link -> /fl_caster_rotation_link -> /base_link -> /fl_caster_rotation_link -> /fr_caster_rotation_link -> /base_link -> /fr_caster_rotation_link -> /torso_lift_link -> /base_link -> /head_pan_link -> /torso_lift_link -> /base_link -> /base_link -> /odom_combined -> /base_link -> /head_tilt_link -> /torso_lift_link -> /torso_lift_link -> /laser_tilt_mount_link -> /torso_lift_link -> /map -> NO_PARENT
Net delay     avg = 0.00779586: max = 0.066

Frames:
Frame: /base_footprint published by /robot_pose_ekf Average Delay: 0.0243333 Max Delay: 0.035
Frame: /base_link published by /robot_state_publisher Average Delay: -0.48425 Max Delay: 0
Frame: /base_link published by /robot_state_publisher Average Delay: -0.48425 Max Delay: 0
Frame: /base_link published by /robot_state_publisher Average Delay: -0.48425 Max Delay: 0
Frame: /base_link published by /robot_state_publisher Average Delay: -0.48425 Max Delay: 0
Frame: /base_link published by /robot_state_publisher Average Delay: -0.48425 Max Delay: 0
Frame: /base_link published by /robot_state_publisher Average Delay: -0.48425 Max Delay: 0
Frame: /base_link published by /robot_state_publisher Average Delay: -0.48425 Max Delay: 0
Frame: /base_link published by /robot_state_publisher Average Delay: -0.48425 Max Delay: 0
Frame: /bl_caster_rotation_link published by /robot_state_publisher Average Delay: 0.038 Max Delay: 0.064
Frame: /bl_caster_rotation_link published by /robot_state_publisher Average Delay: 0.038 Max Delay: 0.064
Frame: /br_caster_rotation_link published by /robot_state_publisher Average Delay: 0.038 Max Delay: 0.064
Frame: /br_caster_rotation_link published by /robot_state_publisher Average Delay: 0.038 Max Delay: 0.064
Frame: /fl_caster_rotation_link published by /robot_state_publisher Average Delay: 0.038 Max Delay: 0.064
Frame: /fl_caster_rotation_link published by /robot_state_publisher Average Delay: 0.038 Max Delay: 0.064
Frame: /fr_caster_rotation_link published by /robot_state_publisher Average Delay: 0.038 Max Delay: 0.064
Frame: /fr_caster_rotation_link published by /robot_state_publisher Average Delay: 0.038 Max Delay: 0.064
Frame: /head_pan_link published by /robot_state_publisher Average Delay: 0.038 Max Delay: 0.064
Frame: /head_tilt_link published by /robot_state_publisher Average Delay: 0.038 Max Delay: 0.064
Frame: /laser_tilt_mount_link published by /robot_state_publisher Average Delay: 0.038 Max Delay: 0.064
Frame: /odom_combined published by /fake_localization Average Delay: -0.0568421 Max Delay: 0
Frame: /torso_lift_link published by /robot_state_publisher Average Delay: 0.038 Max Delay: 0.064
Frame: /torso_lift_link published by /robot_state_publisher Average Delay: 0.038 Max Delay: 0.064
Frame: /torso_lift_link published by /robot_state_publisher Average Delay: 0.038 Max Delay: 0.064
Frame: /torso_lift_link published by /robot_state_publisher Average Delay: 0.038 Max Delay: 0.064
Frame: /torso_lift_link published by /robot_state_publisher Average Delay: 0.038 Max Delay: 0.064

All Broadcasters:
Node: /fake_localization 111.111 Hz, Average Delay: -0.0568421 Max Delay: 0
Node: /robot_pose_ekf 35.7143 Hz, Average Delay: 0.0243333 Max Delay: 0.035
Node: /robot_state_publisher 107.843 Hz, Average Delay: -0.246864 Max Delay: 0.064

Why would TF do such a horrible thing?

Originally posted by David Lu on ROS Answers with karma: 10932 on 2013-08-15
Post score: 0

Original comments
Comment by tfoote on 2013-11-14:
@David Lu please don't use # in tags.

A:

It's a bug in the chainAsVector output only(which is used by monitor.  It's ticketed here: https://github.com/ros/geometry_experimental/issues/22
There was a placeholder algorithm which was put in when the change in data storage was made, but the placeholder was never removed.  It's currently iterating all frames and printing their parents.

Originally posted by tfoote with karma: 58457 on 2013-08-15
This answer was ACCEPTED on the original site
Post score: 1

