Q:

How to implement stop, pause and play capability in ROS MoveIt!

Hello
I am working on a robotic arm, in which we are planning implement play, pause and stop functionalities along with ROS MoveIt!.
For example, we can plan a trajectory in Rviz and when we execute the trajectory, there should be a provision to stop, pause and play the executing trajectory.
Anyone have ideas to implement this concept for ROS MoveIt!? It will be great if you can suggest an idea without modifying the MoveIt! and trajectory controller code.
Regards

Originally posted by Lentin Joseph on ROS Answers with karma: 66 on 2018-10-22
Post score: 1

Original comments
Comment by PeteBlackerThe3rd on 2018-10-22:
You will have to modify the trajectory controller code, I can't see a way around that. If you added pause and play services you could use the RQT GUI to send those commands to the controller while the trajectory was being followed. Are you planning to do this on a real robot or simulation?
Comment by Lentin Joseph on 2018-10-22:
Hi
Thanks for the reply.  I am planning to use this in simulation and real robot too.
Regards

A:

Hello
Instead of modifying the controller code, I have implemented a simple logic in order to perform the play, pause logic in MoveIt!.
I have implemented a set of functions to do it.
The executefunction(), pause() and play(), control_bit = false
In play(): Set the control_bit = false
In pause(): Set the control_bit=true, and movegroup.stop() to stop the current trajectory
In executefunction():
The logic is, when we activate the play and pause using a ROS service, it will set a control flag and change the direction of the execution. If the control bit false, it will call the movegroup.execute() function, if we call the pause function, the movegrup.stop() will be called, and set the control_flag as true. If the control_flag is true, it will clear all the targets using movegroup.clearPoseTargets(). then it will switch to infinite while and check the value of control bit to be false. If it false, it will execute the last joint values again, and call the executefunction() to execute the same.
Regards

Originally posted by Lentin Joseph with karma: 66 on 2018-10-25
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Sgorba77 on 2019-05-24:
Hi!
I'm trying to implement the same behaviour for a robot arm using moveit.
I managed to make the robot stop, using the funcion move_group.stop(), and then to replan and execute to reach the goal position. The issue is that the robot has to replan, each time it stops, from its current position to the goal state. This works pretty well, but I'd like the robot to follow the same trajectory it had planned before the stop, from the point where it stopped.
Does your solution guarantee this behaviour?
Comment by machinekoder on 2019-08-02:
If you use the plan function, you can, in theory, drop all already reached waypoints from the planned trajectory and continue the move.
Comment by Dhara on 2022-08-24:
Hi @Sgorba77, I would like to know how did you implement the replanning of last goal?

