Q:

How to build using Colcon inside a Dockerfile

I'm trying to use docker to build and run a ROS2 node, however in order for Colcon to build the node as an instruction in the Dockerfile, it must first have ROS2 sourced. It seems though that you cannot source a script in a dockerfile instruction, so is there a way to build a Colcon workspace as part of a dockerfile?
Essentially what I'm trying to do assuming a colcon workspace has been copied to the image is:
RUN /bin/bash -c "source /opt/ros/eloquent/setup.sh" && colcon build

Originally posted by jandaa on ROS Answers with karma: 33 on 2021-03-14
Post score: 1

Original comments
Comment by jeremya on 2021-03-16:
I suggest you add the "Update" as an answer and accept it instead of updating the question.

A:

Instead of using the source in bash, you can use the dot operator instead, as it's supported in dash (the default shell in ubuntu based images)
https://wiki.ubuntu.com/DashAsBinSh
For example:
RUN . /opt/ros/$ROS_DISTRO/setup.sh && \
    colcon build

https://github.com/ros-planning/navigation2/blob/3bf1f7a93d740c54b4c7ef7fc6dd914175bf46be/Dockerfile#L64-L65
You can also change the default shell in the Dockerfile:
https://docs.docker.com/engine/reference/builder/#shell
but I'd suggest keeping it simple with the dot operator as above.

Originally posted by ruffsl with karma: 1094 on 2021-03-17
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by jandaa on 2021-03-17:
Thanks that works as well!

