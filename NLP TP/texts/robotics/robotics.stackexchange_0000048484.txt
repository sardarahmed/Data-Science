Q:

Rosjava setting classpath with gradle

Hi,
Along my journey to learning ROSJava I have bumped into what appears to be a pretty elementary question, so I hope somewhere can answer it quickly.  It looks as if the manifest.xml file is essentially useless since Spring of '12 when ROSJava was rolled over to using gradle to build.  What leads me to believe this? I tossed a random syntax error into the file to see if it would throw a fit, but it compiled just fine.  So, is my understanding correct; manifest.xml is no longer used when building?  If this is true, how do I set the class path to reference other dependencies.
Before, you could use
  /dir/example.jar . 
I am looking for a pretty in-depth explanation.  I want to understand it, not just use it.  Is there a link that I am missing?  I have read the tutorials over multiple times.
Thanks,
James

Originally posted by jforkey on ROS Answers with karma: 82 on 2013-02-19
Post score: 0

A:

You are correct. The manifest.xml file (nor package.xml or stack.xml) is not required to use rosjava. The most in depth explanation you'll find will be in the Gradle documentation.
http://www.gradle.org/docs/current/userguide/tutorial_java_projects.html
http://www.gradle.org/docs/current/userguide/java_plugin.html

Originally posted by damonkohler with karma: 3838 on 2013-02-19
This answer was ACCEPTED on the original site
Post score: 0

