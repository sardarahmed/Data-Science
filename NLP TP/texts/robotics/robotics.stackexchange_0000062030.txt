Q:

Publisher-related design problem

Let say I have some values set of Box attributes in a launch file as below:
<id="width" value="1"/>
<id="length" value="3"/>
<id="height" value="3"/>

<id="width2" value="3"/>
<id="length2" value="3"/>
<id="height2" value="4"/>

<id="width3" value="2"/>
<id="length3" value="3"/>
<id="height3" value="3"/> 

These value I will read in a method and publish those. But the problem here how the publisher should look like as  I don't want to limit the number of box only to 3, it could be set up to n, where n is a real number. Those all value will later be subscribed by another node that will construct a class like below:
Box
{ 
    ...
    ...
    double width;
    double length;
    double height;
    ...
    ...
}

How do I achieve this? Thanks in advance.

Originally posted by alfa_80 on ROS Answers with karma: 1053 on 2014-08-21
Post score: 0

Original comments
Comment by ahendrix on 2014-08-21:
The ROS parameter server supports arrays and maps. You should probably be using those.

A:

I agree with @ahendrix you should probably use the parameter server. You can create a yaml file like this:
my_node:
  boxes:
    box1:
      width: 1
      height: 1
      length: 2
    box2:
      width: 4
   ...

You can then include this in your launch file:
<launch>
  <arg name="box_file" default="$(find my_package)/config/boxes.yaml" />
  <rosparam command="load" file="$(arg box_file)"/>
  
  <node pkg="my_package" type="box_node" name="box_node"/>
</launch> 

Afterwards in your box node you can query the parameter namespace boxes and get a dictionary of all the defined boxes (python) or an xmlrpc struct (C++) which you can then parse for the information you want. See this answer on how to use the xmlrpc struct. The usage of python dictionaries should be straight forward.
If you use the parameter server there is also no need to publish these box values you can just query the server in all the nodes you might need the boxes in.

Originally posted by Chrissi with karma: 1642 on 2014-08-22
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by alfa_80 on 2014-08-22:
In my case, I need to publish those box values. In the box node, is there a way to do that as the number of boxes are unknown before hand?
Comment by Chrissi on 2014-08-22:
In the yaml file you can define as many boxes as you like. When you querry the boxes parameter namspace you get a python dictonary or C++ xmlrpc struct of all the boxes inside. You can just iterate over all the boxes without knowing how many there are in advance. Please have a look at this question which is exactly what you want to do but with filters.

