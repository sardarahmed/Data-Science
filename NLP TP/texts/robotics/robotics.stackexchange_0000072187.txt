Q:

Setting up static_transform_publisher arguments

Hello,
I am running hector_slam with the logged data which is not in .bag format. I wrote a node to fetch the data required by the "scan" topic and to publish the "scan" data at a rate of 10Hz(by looping at a rate of 10Hz) with the frame id "laser" with the help of this tutorial. As I don't have any tf data, I am using static_tf_publisher to publish the static transform from "laser" frame to "base_link" as suggested here.
I am using low range, low scan rate sensor(URG-04LX_UG01 with 4m range and scan rate of 10Hz). My question is at which rate should I publish the static transform so that I don't miss any frame(s). Do I have to publish the tf at a higher rate than the publish rate of "scan" to account for the possible timing overhead  due to the data reading from the logfile? Am I good to go with the below static transform settings ? (The laser scanner is placed with an offset of 0.07 facing backwards).
<node pkg="tf" type="static_transform_publisher" name="base_to_laser_broadcaster" args="-0.07 0 0 3.14159 0 0 base_link laser 100" />  
Thanks in advance

Originally posted by kiranb222 on ROS Answers with karma: 15 on 2016-02-19
Post score: 1

A:

My question is at which rate should I publish the static transform so that I don't miss any frame(s).

Can you tell us why you believe there is a correlation between the frequency at which you publish a (static) TF frame and your laser scans? TF will interpolate if necessary, so it should be fine.

Originally posted by gvdhoorn with karma: 86574 on 2016-02-20
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by kiranb222 on 2016-02-22:
I am beginner in ROS and was not aware of the tf interpolation. This answered my question. Thank you.
Comment by gvdhoorn on 2016-02-22:
Seeing as this is a static transform it won't matter that much, but in general 'often enough' wrt the rest of your TF tree is a good rule of thumb. There will probably be situations in which a lower or higher frequency can be desirable, but for static transforms it doesn't matter too much I'd think.

