Q:

NAV2 cancel bt_action_node

In NAV2, I defined my own on_cancelled for my bt_action_node.
Nevertheless, I realized it`s never called if halt (the method that cancels the action) is called.
The halt will set the tree to IDLE, but then the next tick will send a new goal, instead of processing the previously cancelled goal.
How to make sure the on_cancelled is called in that case? Am I missing something here? Do I need to overrides the halt method as well to avoid the IDLE state before calling the on_cancelled?
Thanks

A:

Cancelling in action terms is when an external entity cancels the goal. This is a callback function that the cancelled state can be processed by the BT node in case it wants to populate / change the BT::NodeStatus. This is not called to cancel an action, but called once an action is already cancelled by an external agent (e.g. autonomy system or elsewhere in the BT using a cancel node) to potentially modify the BT status to send on the node's exit.
Halt is not cancel. While halt will cancel a goal when a BT is ending, that cancel is not an external cancel but an internal cancel to put the BT back into a neutral state - so there's no need for you to worry about messing with the BT::NodeStatus because the status is already set to idle by the halt process -- so there's no need to trigger this function.

