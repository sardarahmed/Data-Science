Q:

Debugging ROS package with Qtcreator?

Hi, all
I want to integrate ROS with Qtcreator. When I use Qtcreator to debugging the existing ROS package, I met this problem:
Lowest section in /usr/lib/libicudata.so.42 is .note.gnu.build-id at 000000f4
Anyone knows how to solve this problem? And is there anyone that using ROS with Qtcreator successfully?
Thanks
Tony

Originally posted by tony on ROS Answers with karma: 76 on 2012-05-27
Post score: 6

A:

QtCreator is a good choice for ROS related development as it natively "understands" CMake projects. For easy debugging, the relevant node can be compiled as "Debug" or "RelWithDebInfo" and then started normally via a launch file. One can then attach the QtCreator debugger to the running node via "Debug"->"Start Debugging"->"Attach to running external Application...". This works very well for me and has the advantage that one does not have to setup parameters/remappings etc. for the node in a separate step.
/edit: It is required to follow the instructions in the answer here if one gets a "ptrace operation not allowed" error.
Edit:  To make debug build add set(CMAKE_BUILD_TYPE Debug) to  CMakeLists.txt

Originally posted by Stefan Kohlbrecher with karma: 24361 on 2012-05-27
This answer was ACCEPTED on the original site
Post score: 11

Original comments
Comment by Miguel Prada on 2012-09-20:
Hi Stefan, I tried to do just as you say, but I'm having problems with ptrace not being allowed. Also, doesn't this mean you cannot set breakpoints from QtCreator? If I try to debug the relevant node from QtCreator itself it seems to get stuck in "Setting breakpoints...", though...
Comment by Miguel Prada on 2012-09-21:
I've been digging a bit deeper and it seems that I can start the debugging from the QtCreator interface, set breakpoints and so on, and everything goes fine until I reach a ros::spin() call. Any idea why this might be?
Comment by f_r__ on 2013-06-10:
How would this work with Groovy/Catkin now that RelWithDebInfo does not seem to make any difference? Thanks in advance.
Comment by bvbdort on 2014-09-11:
Hi, i am not able to debug breakpoints, after attaching, its showing assembly code. I did debug build with set( DCMAKE_BUILD_TYPE Debug) in cmakelists.txt.
Comment by Stefan Kohlbrecher on 2014-09-15:
If you set from CMakeLists.txt, you have to omit the D in front of CMAKE_BUILD_TYPE. Only when setting the definition from command line (e.g. "catkin_make -DCMAKE_BUILD_TYPE=Debug") you have to add it.
Comment by bvbdort on 2014-09-15:
@Stefan Kohlbrecher thanks it worked
Comment by jespestana on 2015-05-15:
@Stefan Kohlbrecher thanks it worked! As a side note, I had to run qtcreator with "sudo" for the debugging from Qtcreator to work; otherwise it works perfectly.
Comment by anonymous23097 on 2015-07-08:
@jespestana Instead of running qtcreator as sudo, you should allow ptrace of non-child-processes for gdb
sudo apt-get install libcap2-bin 
sudo setcap cap_sys_ptrace=eip /usr/bin/gdb

or enable ptrace globally echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope (not recommended)
Comment by rbaleksandar on 2015-10-15:
Any experience with gdbserver on this one? I'm asking this because the node has to run on a remote system where  I cannot use Qt Creator. The node also depends on the hardware there so I can't run in locally. The only solution omho is using gdbserver. However it doesn't seem to work properly.
Comment by jespestana on 2015-10-15:
You can ros-launch a node and make it start with gdbserver. The node is not started until you connect to it using Qt. To do so, try adding the launch-prefix "xterm -e gdbserver localhost:10000", and connect to it with Qt (both things from the local machine). More info here: http://bit.ly/1OEaVce

