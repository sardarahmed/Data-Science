Q:

Turtlebot + Frontier Exploration: Turning in Place at the Start

I have curious issues using the frontier_exploration package on my Turtlebot and would appreciate anyone helping me understand better what is going on under the hood.
Firstly, this is a simulated run on Gazebo of my robot setup.
After I ask the robot to go forth and explore, it begins by turning in place. This invariably happens no matter what starting exploration point I pick. I also get the following error messages, which probably point at the problem:
[ WARN] [1466389076.511953487, 657.183000000]: Please select an initial point for exploration inside the polygon
[ INFO] [1466389079.366449392, 658.110000000]: Sending goal
[ INFO] [1466389079.574537491, 658.152000000]: Region boundary set
[ INFO] [1466389086.897870100, 660.082000000]: Got new plan
[ERROR] [1466389086.898554785, 660.082000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389087.596126130, 660.278000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389088.219151245, 660.484000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389088.984638998, 660.678000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389089.730673868, 660.880000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ INFO] [1466389090.284299471, 661.110000000]: Got new plan
[ERROR] [1466389090.284972952, 661.110000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389090.755919337, 661.278000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389091.294571326, 661.478000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389091.920927691, 661.678000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389092.427586470, 661.878000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ INFO] [1466389092.912826709, 662.078000000]: Got new plan
[ERROR] [1466389092.913268554, 662.078000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389093.670462783, 662.280000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389094.369503898, 662.478000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389095.643821480, 662.678000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ INFO] [1466389096.474418339, 662.878000000]: Got new plan
[ERROR] [1466389096.474903849, 662.878000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389097.468142710, 663.078000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389098.693172111, 663.278000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389099.417643831, 663.478000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389100.220558345, 663.678000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389100.953090959, 663.878000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ INFO] [1466389101.617699327, 664.083000000]: Got new plan
[ERROR] [1466389101.618116982, 664.083000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389102.286638000, 664.278000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389103.214008032, 664.478000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ERROR] [1466389104.448767752, 664.679000000]: None of the 0 first of 0 (0) points of the global plan were in the local costmap and free
[ INFO] [1466389105.521163815, 664.878000000]: Got new plan
[ INFO] [1466389113.576508452, 666.078000000]: Got new plan
[ INFO] [1466389119.446550737, 667.281000000]: Got new plan
[ INFO] [1466389121.907575527, 667.878000000]: Goal reached

Beyond this point, everything chugs along quite smoothly. Notice at the start there are no debug messages indicating recovery behavior - it just turns for some other reason.
Source code reveals that the error messages are printed out in base_local_planner/src/map_grid.cpp. When I run regular navigation tutorials, using the same dwa local planner, I do not get the error messages.
Here are my setup files, cobbled together from various sources:
exploration.launch:
<?xml version="1.0"?>
<launch>

  <node pkg="frontier_exploration" type="explore_client" name="explore_client" output="screen"/>
  <node pkg="frontier_exploration" type="explore_server" name="explore_server" output="screen">

    <param name="frequency" value="1.0"/>

    <!-- Should be less than sensor range -->
    <param name="goal_aliasing" value="2.0"/>

    <rosparam file="$(find turtlebot_navigation)/param/costmap_common_params.yaml" command="load" ns="explore_costmap" />
    <rosparam file="$(find turtlebot_navigation)/param/costmap_exploration.yaml" command="load" ns="explore_costmap" />

  </node>

</launch>

costmap_common_params.yaml:
max_obstacle_height: 0.60
footprint: [[0.2, 0.2], [0.2, -0.2], [-0.2, -0.2], [-0.2, 0.2]]
update_frequency: 1.0
publish_frequency: 0.5
resolution: 0.05
transform_tolerance: 0.5
robot_base_frame: base_footprint
inflation_radius: 0.4

obstacle_range: 3.5
raytrace_range: 3.5

obstacle_layer:
  observation_sources: laser bump
  laser: {data_type: LaserScan, clearing: true, marking: true, topic: scan, inf_is_valid: true}
  bump: {data_type: PointCloud2, topic: mobile_base/sensors/bumper_pointcloud, marking: true, clearing: false, min_obstacle_height: 0.0, max_obstacle_height: 0.15}

inflation_layer:
  enabled:              true

static_layer:
  enabled:              true
  map_topic: map
  subscribe_to_updates: true

costmap_exploration.yaml:
track_unknown_space: true
global_frame: map
static_map: true
rolling_window: false

plugins:
- {name: static_layer,            type: "costmap_2d::StaticLayer"}
- {name: explore_boundary,    type: "frontier_exploration::BoundedExploreLayer"}
- {name: obstacle_layer,     type: "costmap_2d::ObstacleLayer"}
- {name: inflation_layer,           type: "costmap_2d::InflationLayer"}

explore_boundary:
  resize_to_boundary: false
  frontier_travel_point: middle
  explore_clear_space: false

move_base.launch.xml:
<launch>
  <include file="$(find turtlebot_navigation)/launch/includes/velocity_smoother.launch.xml"/>
  <include file="$(find turtlebot_navigation)/launch/includes/safety_controller.launch.xml"/>

  <arg name="odom_frame_id"   default="odom"/>
  <arg name="base_frame_id"   default="base_footprint"/>
  <arg name="global_frame_id" default="map"/>
  <arg name="odom_topic" default="odom" />
  <arg name="laser_topic" default="scan" />

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find turtlebot_navigation)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find turtlebot_navigation)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find turtlebot_navigation)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_navigation)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_navigation)/param/dwa_local_planner_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_navigation)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_navigation)/param/global_planner_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_navigation)/param/navfn_global_planner_params.yaml" command="load" />

    <remap from="cmd_vel" to="navigation_velocity_smoother/raw_cmd_vel"/>
    <remap from="odom" to="$(arg odom_topic)"/>
    <remap from="scan" to="$(arg laser_topic)"/>
  </node>
</launch>

local_costmap_params.yaml:
local_costmap:
  global_frame: odom
  static_map: false
  rolling_window: true
  width: 4.0
  height: 4.0
  plugins:
   - {name: obstacle_layer,      type: "costmap_2d::ObstacleLayer"}
   - {name: inflation_layer,     type: "costmap_2d::InflationLayer"}

global_costmap_params.yaml:
global_costmap:
  global_frame: map
  rolling_window: false
  track_unknown_space: true
  static_map: true
  plugins:
  - {name: static_layer,            type: "costmap_2d::StaticLayer"}
  - {name: obstacle_layer,          type: "costmap_2d::ObstacleLayer"}
  - {name: inflation_layer,         type: "costmap_2d::InflationLayer"}

move_base_params.yaml:
shutdown_costmaps: false
controller_frequency: 5.0
controller_patience: 3.0
recovery_behaviour_enabled: true
planner_frequency: 1.0
planner_patience: 5.0
oscillation_timeout: 10.0
oscillation_distance: 0.2
base_local_planner: "dwa_local_planner/DWAPlannerROS"
base_global_planner: "navfn/NavfnROS"

dwa_local_planner_params.yaml:
DWAPlannerROS:

  max_vel_x: 0.5  # 0.55
  min_vel_x: 0.0

  max_vel_y: 0.0
  min_vel_y: 0.0

  max_trans_vel: 0.5
  min_trans_vel: 0.1
  trans_stopped_vel: 0.1

  max_rot_vel: 5.0
  min_rot_vel: 0.4
  rot_stopped_vel: 0.4

  acc_lim_x: 1.0
  acc_lim_theta: 2.0
  acc_lim_y: 0.0

# Goal Tolerance Parameters
  yaw_goal_tolerance: 0.3
  xy_goal_tolerance: 0.15

# Forward Simulation Parameters
  sim_time: 1.0
  sim_granularity: 0.025
  vx_samples: 6
  vy_samples: 1
  vtheta_samples: 20

# Trajectory Scoring Parameters
  path_distance_bias: 64.0
  goal_distance_bias: 24.0
  occdist_scale: 1.0
  forward_point_distance: 0.325
  stop_time_buffer: 0.2
  scaling_speed: 0.25
  max_scaling_factor: 0.2
  meter_scoring: true

# Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05  # 0.05

  publish_traj_pc : true
  publish_cost_grid_pc: true
  global_frame_id: odom

navfn_global_planner_params.yaml:
NavfnROS:
  visualize_potential: false
  allow_unknown: true
  planner_window_x: 0.0
  planner_window_y: 0.0
  default_tolerance: 0.1

global_planner_params.yaml:
GlobalPlanner:
  old_navfn_behavior: false
  use_quadratic: true
  use_dijkstra: false
  use_grid_path: false
  allow_unknown: true
  planner_window_x: 0.0
  planner_window_y: 0.0
  default_tolerance: 0.25

  publish_scale: 100
  planner_costmap_publish_frequency: 0.0

  lethal_cost: 253
  neutral_cost: 50
  cost_factor: 3.0
  publish_potential: true

The simulated robot in the video can stay localized with the turns at the start because I have artificially widened its vision, thereby vastly improving localization ability. My real-world setup consists of a Asus Xtion Pro with a narrower view. In simulations with this actual FOV, turning in place at the start causes the robot to get lost very quickly and the whole scenario to fail.
I would appreciate any pointers on how I should about investigating this, and where to start looking. Thanks!

Originally posted by eugene_ang on ROS Answers with karma: 11 on 2016-06-20
Post score: 1

A:

Try turn off the robot model (show footprint instead) and turn on the frontiers (point cloud) in rviz. 
And observe how the explore algorithm discover and choose the frontiers. 
There are three parameter about how to choose frontier as a goal to navigation. (closet, middle, centroid).

the error message is about the base_local_planner can not find the target cells,
try to git clone the navigation code and check how to adjust the planner parameters.

Hope this can help. :)

Originally posted by Jam with karma: 77 on 2016-08-10
This answer was ACCEPTED on the original site
Post score: 2

