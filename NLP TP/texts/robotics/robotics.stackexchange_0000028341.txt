Q:

how to get the states of other objects in model plugin

I am learning how to write a model plugin to control an object and interact with other objects in Gazebo. In the model plugin tutorial, I see we can get update from "void OnUpdate(const common::UpdateInfo & /_info/)". However, the updateInfo does not seem to contain the poses and motion characteristics of other objects. Could anyone point me to any sample code to do that?
Also, how do I know if my object has a collision with other objects? Are there any events to listen to?
btw: I'm using the direct Gazebo plugins, not the ROS interface yet.
Thank you!

Originally posted by gazebo_learner on Gazebo Answers with karma: 13 on 2017-11-11
Post score: 1

A:

It sounds like a world plugin would be more fit for the job. With that, you can access all models in the world.
To detect collisions, a contact sensor should be useful.

Originally posted by chapulina with karma: 7504 on 2017-11-12
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by gazebo_learner on 2017-11-13:
Thank you for the answer. I will grab the model states in the world plugin and also add a contact sensor to each object.
That said, I'm surprised that there was not an existing way for each object to get the states of the world (static surface and other objects) easily. I thought this was the basic input to the motion planning and control components. Or are most people using ROS to subscribe/publish messages anyways?
Comment by chapulina on 2017-11-13:
There are many ways for models to find information about the world, you can even do it from a model plugin, just get the world pointer with model->GetWorld() and you can do anything you can with a world plugin. It's just not recommended because this will be repeated for each model that has the plugin, while if you put the logic in a world plugin it only gets loaded once.
Comment by gazebo_learner on 2017-11-13:
I see. I'll use model->GetWorld() to get other model states. I agree with your point - we apply the logic at right places only. Thank you so much!

