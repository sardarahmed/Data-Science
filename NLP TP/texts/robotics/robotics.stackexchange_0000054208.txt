Q:

How to use ApproximateTime in python

Hi all,
I'm trying to synchronize (approximately since the stamps of the topics are different) 4 topics.
I have looked at the ApproximateTime example here: http://answers.ros.org/question/60903/timesynchronizer-callback-problem/
But how to do it in python? I have looked at the Python API (http://docs.ros.org/api/message_filters/html/python/) for message filters, but it says nothing about approximatetime.
Thanks in advance.

Originally posted by whiterose on ROS Answers with karma: 148 on 2013-09-19
Post score: 5

Original comments
Comment by Ananthakrishnan on 2015-10-18:
Here 10 is the size of queue and 1 is the time in sec to consider for aprox:
one = message_filters.Subscriber('robot0/sonar_0', Range)
two = message_filters.Subscriber('robot0/sonar_1', Range)
ts = message_filters.ApproximateTimeSynchronizer([one, two],10,1)
ts.registerCallback(callback)

A:

ApproximateTime was added for python in indigo, and is documented in the indigo version of the api docs.

Originally posted by Dan Lazewatsky with karma: 9115 on 2015-04-05
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by Mehdi. on 2018-12-03:
It seems that this kind of subscriber cannot be unregistered, can you confirm?
Comment by ljburtz on 2021-05-28:
you can unsubscribe by iterating over each message_filter's subscription
Assuming you subscribed like this:
self.subs = [message_filters.Subscriber(topic, mtype) for topic, mtype in zip(self.topics, self.types)]
self.ts = message_filters.ApproximateTimeSynchronizer(
            self.subs,
            5,  # queue size
            0.2,
            allow_headerless=False
)  
self.ts.registerCallback(self.cb_logger)

You can unsubscribe like this:
for sub in self.subs:
            sub.sub.unregister()

