Q:

undefined reference to `ros::Publisher::isLatched() const

Is the method not implemented or am I missing something in the linking?
(rosccp)
ros fuerte on ubuntu 12.04
cmake_minimum_required(VERSION 2.4.6)
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
#set(ROS_BUILD_TYPE RelWithDebInfo)

rosbuild_init()

#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

#uncomment if you have defined messages
rosbuild_genmsg()
#uncomment if you have defined services
rosbuild_gensrv()

#common commands for building c++ executables and libraries
#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)
#target_link_libraries(${PROJECT_NAME} another_library)
#rosbuild_add_boost_directories()
#rosbuild_link_boost(${PROJECT_NAME} thread)
#rosbuild_add_executable(example examples/example.cpp)
#target_link_libraries(example ${PROJECT_NAME})
rosbuild_add_executable(talker src/talker.cpp)
rosbuild_add_executable(listener src/listener.cpp)
rosbuild_add_executable(add_two_ints_server src/add_two_ints_server.cpp)
rosbuild_add_executable(add_two_ints_client src/add_two_ints_client.cpp)

manifest
<package>
  <description brief="beginner_tutorials">

     beginner_tutorials

  </description>
  <author>fabio</author>
  <license>BSD</license>
  <review status="unreviewed" notes=""/>
  <url>http://ros.org/wiki/beginner_tutorials</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>

</package>

Originally posted by fabiodl on ROS Answers with karma: 43 on 2012-08-27
Post score: 2

Original comments
Comment by Eric Perko on 2012-08-27:
Could you include the version of ROS you are using, your Ubuntu version, your manifest.xml file and your CMakeLists.txt ?
Comment by Lorenz on 2012-08-27:
Please also copy-paste the complete error output.

A:

It appears that this may actually be a bug, as I was able to reproduce it on my Fuerte/12.04 install as well.
It seems that while it is documented in the API, and there is a declaration in the header file, but it does not seem that the method is actually implemented anywhere.  This explains why you would see a linker error.
I filed a ticket on code.ros.org so that this can get resolved.

Originally posted by mjcarroll with karma: 6414 on 2012-08-28
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by WilliamWoodall on 2012-08-28:
New location of the ticket and patch: https://github.com/ros/ros_comm/pull/1

