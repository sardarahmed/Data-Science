Q:

Better software design in accessing data

I would like to know a better software design utilizing ROS and object-oriented paradigm. I have written 2 nodes (say, node A and node B) in which each node comprises one class. In the node A, I have a dataset that is stored in a 2D array. In the node B, I want to access a yaw angle data (not all elements in the 2D array) from the node A. How should I realize this in a better way?
I can think of implementing it in 2 ways, either:

I should write some lines of code that publishes yaw angle data in the node A, by which, later, I subscribe it in the node B, OR
I should declare and define a getter(accessor) member function in the node A that returns the yaw angle data, in which later, in the node B, I will instantiate an object and access the data via the getter.

These are only my thoughts and I do not know which one is better over another or perhaps there is an elegant way of doing it.

Originally posted by alfa_80 on ROS Answers with karma: 1053 on 2011-12-26
Post score: 0

A:

As you describe it 1. and 2. are two different things.

uses ROS to (continuously) transfer information between nodes.
uses a getter, which means that B will need to have an instance of A from somewhere (i.e. they can't be in different nodes). The ROS equivalent of this will be to use a service call that B can use to get specific information from A.

Which one you need depends on the use case.
If it is a lot of data and you only need part of the data in specific situations a service seems good.

Originally posted by dornhege with karma: 31395 on 2011-12-26
This answer was ACCEPTED on the original site
Post score: 1

