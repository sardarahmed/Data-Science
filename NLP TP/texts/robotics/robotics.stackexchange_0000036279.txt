Q:

How can I tell a rosjava node where to look for .so files?

I have a Java ROS node that depends on a 3rd party .so file that I've packaged up as a separate package.
Typically the cpp-exports in the manifest tell other C/C++ projects how to link to those libraries. But in the case of Java while providing paths to jar files is clear, how to point to an .so is less clear.
So far I've:

I tried blindly using the jar path method but to the .so dir which failed.
I tried using LD_LIBRARY_PATH which seemed to help it figure out where to look, but seemed to break other things, and seems ill advised anyway.

TLDR: Is there a clean way to provide, to rosjava nodes, a path to .so file dependencies via the manifest exports?

Originally posted by Asomerville on ROS Answers with karma: 2743 on 2011-12-06
Post score: 3

A:

This isn't currently supported by the rosjava build system. You can try System.load("/absolute/path/to/lib")

Originally posted by damonkohler with karma: 3838 on 2011-12-07
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Asomerville on 2011-12-07:
Unfortunately in my case the .so being loaded is by another 3rd party lib, so changing the load call is not an option for me.

