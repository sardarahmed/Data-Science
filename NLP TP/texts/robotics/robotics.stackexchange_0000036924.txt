Q:

Installation of tabletop_object detector package along with perception_pcl_unstable

Hi,
I have perception_pcl_unstable package in use. Now i downloaded the package tabletop_object_detector from http://www.ros.org/wiki/tabletop_object_detector. I am getting this dependency error on Eigen as below. I know that CMakeLists.txt has to be updated to fetch the /usr/include/eigen3 as the Eigen directories. But unable to solve this issue.
/ros_workspace/perception_pcl_unstable/pcl/include/pcl-1.4/pcl/pcl_base.h:44:27: fatal error: Eigen/StdVector: No such file or directory

I have check the cmake in pcl and it says that the Eigen is found at (/usr/include/eigen3) which looks fine. Can somebody tell me what i am missing here.
Thanks,
Karthik

Was able to solve the above issue with the addition of following lines in the CMakeLists.txt
find_package(Eigen REQUIRED)
include_directories(${PCL_INCLUDE_DIRS})
include_directories(${EIGEN_INCLUDE_DIRS})
add_definitions(-DEIGEN_USE_NEW_STDVECTOR
               -DEIGEN_YES_I_KNOW_SPARSE_MODULE_IS_NOT_STABLE_YET)

But ended up getting the below error
  [ 85%] Building CXX object CMakeFiles/segment_object_in_hand.dir/src/segment_object_in_hand.o
  Linking CXX executable ../bin/segment_object_in_hand
  

    /usr/bin/ld: warning: libtinyxml.so.2.5.3, needed by /opt/ros/electric/stacks/nodelet_core/nodelet/lib/libnodeletlib.so, may conflict with libtinyxml.so.2.6.2
      CMakeFiles/segment_object_in_hand.dir/src/segment_object_in_hand.o: In function `tabletop_object_detector::ObjectInHandSegmenter::segmentObject(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, sensor_msgs::PointCloud2_<std::allocator<void> >&)':
      /workspace/karthik/RRC/ros_workspace/wg-ros-pkg/tabletop_object_detector/src/segment_object_in_hand.cpp:224: undefined reference to `pcl::EuclideanClusterExtraction<pcl::PointXYZ>::extract(std::vector<pcl::PointIndices_<std::allocator<void> >, std::allocator<pcl::PointIndices_<std::allocator<void> > > >&)'
      collect2: ld returned 1 exit status

Then i added few more link libraries in the CMakeLists.txt and got the below error.
{-------------------------------------------------------------------------------
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::PointXYZ>::reconstruct(pcl::PointCloud<pcl::PointXYZ>&, std::vector<pcl::Vertices, std::allocator<pcl::Vertices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ExtractPolygonalPrismData<pcl::PointXYZRGBNormal>::segment(pcl::PointIndices&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::PointWithRange>::performReconstruction(pcl::PolygonMesh&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::SACSegmentation<pcl::InterestPoint>::segment(pcl::PointIndices&, pcl::ModelCoefficients&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::PointXYZ>::performReconstruction(std::vector<pcl::Vertices, std::allocator<pcl::Vertices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::EuclideanClusterExtraction<pcl::PointWithViewpoint>::extract(std::vector<pcl::PointIndices, std::allocator<pcl::PointIndices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::PointXYZRGB>::performReconstruction(std::vector<pcl::Vertices, std::allocator<pcl::Vertices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::SACSegmentation<pcl::PointNormal>::segment(pcl::PointIndices&, pcl::ModelCoefficients&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::PointXYZRGBNormal>::reconstruct(pcl::PointCloud<pcl::PointXYZRGBNormal>&, std::vector<pcl::Vertices, std::allocator<pcl::Vertices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::EuclideanClusterExtraction<pcl::PointXYZHSV>::extract(std::vector<pcl::PointIndices, std::allocator<pcl::PointIndices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::PointXYZL>::performReconstruction(std::vector<pcl::Vertices, std::allocator<pcl::Vertices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::EuclideanClusterExtraction<pcl::InterestPoint>::extract(std::vector<pcl::PointIndices, std::allocator<pcl::PointIndices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::SACSegmentation<pcl::PointXYZL>::segment(pcl::PointIndices&, pcl::ModelCoefficients&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::PointXYZRGB>::performReconstruction(pcl::PolygonMesh&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::PointXYZI>::reconstruct(pcl::PointCloud<pcl::PointXYZI>&, std::vector<pcl::Vertices, std::allocator<pcl::Vertices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::PointXYZRGBA>::performReconstruction(std::vector<pcl::Vertices, std::allocator<pcl::Vertices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::SACSegmentation<pcl::PointXYZRGBL>::segment(pcl::PointIndices&, pcl::ModelCoefficients&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ExtractPolygonalPrismData<pcl::PointXYZL>::segment(pcl::PointIndices&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ExtractPolygonalPrismData<pcl::PointWithRange>::segment(pcl::PointIndices&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::PointWithViewpoint>::performReconstruction(pcl::PolygonMesh&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::PointWithViewpoint>::reconstruct(pcl::PointCloud<pcl::PointWithViewpoint>&, std::vector<pcl::Vertices, std::allocator<pcl::Vertices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::PointXYZINormal>::performReconstruction(pcl::PolygonMesh&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::SACSegmentation<pcl::PointWithRange>::segment(pcl::PointIndices&, pcl::ModelCoefficients&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::PointWithRange>::performReconstruction(std::vector<pcl::Vertices, std::allocator<pcl::Vertices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::EuclideanClusterExtraction<pcl::PointNormal>::extract(std::vector<pcl::PointIndices, std::allocator<pcl::PointIndices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::PointNormal>::performReconstruction(std::vector<pcl::Vertices, std::allocator<pcl::Vertices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::SACSegmentation<pcl::PointXYZHSV>::segment(pcl::PointIndices&, pcl::ModelCoefficients&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::InterestPoint>::performReconstruction(pcl::PolygonMesh&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::PointXYZRGBA>::reconstruct(pcl::PointCloud<pcl::PointXYZRGBA>&, std::vector<pcl::Vertices, std::allocator<pcl::Vertices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::PointXYZL>::reconstruct(pcl::PointCloud<pcl::PointXYZL>&, std::vector<pcl::Vertices, std::allocator<pcl::Vertices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::SACSegmentation<pcl::PointXYZ>::segment(pcl::PointIndices&, pcl::ModelCoefficients&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ExtractPolygonalPrismData<pcl::PointXYZINormal>::segment(pcl::PointIndices&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::ConvexHull<pcl::PointXYZHSV>::reconstruct(pcl::PointCloud<pcl::PointXYZHSV>&, std::vector<pcl::Vertices, std::allocator<pcl::Vertices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::EuclideanClusterExtraction<pcl::PointXYZRGB>::extract(std::vector<pcl::PointIndices, std::allocator<pcl::PointIndices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::EuclideanClusterExtraction<pcl::PointXYZL>::extract(std::vector<pcl::PointIndices, std::allocator<pcl::PointIndices> >&)'
  /usr/local/lib/libpcl_apps.so: undefined reference to `pcl::SACSegmentation<pcl::PointXYZRGB>::segment(pcl::PointIndices&, pcl::ModelCoefficients&)'
  collect2: ld returned 1 exit status
  make[2]: *** [bin/segment_object_in_hand] Error 1
  make[1]: *** [CMakeFiles/segment_object_in_hand.dir/all] Error 2

I am linking the CMakeLists.txt also here (https://docs.google.com/document/d/1lybRE7SDHqk-zKpu7lgBJi05Qf2zBsZ6oPA9HUO1YEM/edit) for the reference which is the last edited to get the above error.
I think there is a mistake in the CMakeLists.txt only. Any help here is appreciated.
Thanks,
Karthik

Originally posted by karthik on ROS Answers with karma: 2831 on 2012-01-09
Post score: 0

A:

Hi,
Few changes to be done in the following files to make it work
a)CMakeLists.txt should have the following lines in this place just above the rosbuild_genmsg().
#Eigen required    
find_package(Eigen REQUIRED)
include_directories(${EIGEN_INCLUDE_DIRS})

This solves the above Eigen/StdVector issue.
b)segment_object_in_hand.cpp should have the following changes done to be done search for
typedef pcl::KdTree<Point>::Ptr KdTreePtr;

and change it to search namespace as the unstable version supports it
typedef pcl::search::KdTree<Point>::Ptr KdTreePtr;

Hence change the below line to
clusters_tree_ = boost::make_shared<pcl::KdTreeFLANN<Point> >();

to
clusters_tree_ = boost::make_shared<pcl::search::KdTree<Point> >();

c)Finally do similar changes to the tabletop_segmentation.cpp
change
typedef pcl::KdTree<Point>::Ptr KdTreePtr;

to
typedef pcl::search::KdTree<Point>::Ptr KdTreePtr;

and change
normals_tree_ = boost::make_shared<pcl::KdTreeFLANN<Point> >();
clusters_tree_ = boost::make_shared<pcl::KdTreeFLANN<Point> >();

to
normals_tree_ = boost::make_shared<pcl::search::KdTree<Point> >();
clusters_tree_ = boost::make_shared<pcl::search::KdTree<Point> >();

Now compile the whole package and hopefully it should get compiled without any error. :)
Hope this helps!
Thanks,
Karthik

Originally posted by karthik with karma: 2831 on 2012-01-11
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by karthik on 2012-01-11:
Editing the CMakeLists.txt as mentioned here should be done to the original file that comes with the package not with the one that is in the question of this thread.

