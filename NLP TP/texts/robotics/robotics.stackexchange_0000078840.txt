Q:

catkin_make is not building my bitbucket based ros packages

Background
I have an existing project that I want to migrate to a different computer. I started building a project on my Raspberry Pi and then put the project up on github. The current name of the project/package is zlab_drone. Here is the hierarchy of my project
                                         /home 
                                            |
                                        /catkin_ws
                                            |
     ----------------------------------------------------------------------------------
     |                                      |                                         |
  /devel                                  /src                                     /build
     |                                      |                                         |
    ...                        -----------------------------                         ...
                               |             |             |
                  CMakeLists.txt     /ardrone_autonomy     /zlab_drone

Main Issue
Now my problem is the fact that whenever I clone my /zlab folder into my /src folder on a different computer and run catkin_make in my /catkin_ws folder, it does not build the /zlab_drone package that I have cloned.  However, if I build the whole thing from ground up, using catkin_create_package, catkin_make recognizes the package /zlab_drone. In fact, to get ardrone_autonomy, I just git cloned it into my /src folder. Not sure why this isn't working for /zlab_drone.
Solutions that I have tried out
Looking at the CMakeLists.txt present in ardrone_autonomy, I noticed that they had this little section:
# Build [pathced] ardronelib from an external project
include(ExternalProject)
ExternalProject_Add(ardronelib
    GIT_REPOSITORY git://github.com/AutonomyLab/ardronelib.git
    GIT_TAG 2f987029c55531e4c0119c3600f9c57f935851ed
    PREFIX ${CATKIN_DEVEL_PREFIX}
    CONFIGURE_COMMAND echo "No configure"
    BUILD_COMMAND make
    INSTALL_COMMAND make install INSTALL_PREFIX=${CATKIN_DEVEL_PREFIX}/lib/ardrone
    BUILD_IN_SOURCE 1
)

I modified this for the current project that I am looking at:
include(ExternalProject)
ExternalProject_Add(zlab_drone
    GIT_REPOSITORY https://bitbucket.org/sharan_duggirala/zlab_drone
    PREFIX ${CATKIN_DEVEL_PREFIX}
    CONFIGURE_COMMAND echo "No configure"
    BUILD_COMMAND make
    INSTALL_COMMAND make install INSTALL_PREFIX=${CATKIN_DEVEL_PREFIX}/lib/zlab_drone
    BUILD_IN_SOURCE 1
)

Now the problem I face is that whenever I get the prompt for Username for 'https://bitbucket.org' catkin_make continues with Building ARDroneTool/Lib. I am going to try this out with github and check if a similar problem persists. However, I would like to discover a way to use bitbucket, as it allows private projects and such.

Originally posted by sharan100 on ROS Answers with karma: 83 on 2017-02-08
Post score: 0

Original comments
Comment by ahendrix on 2017-02-08:
Does your zlab project contain a package.xml and a CMakeLists.txt ? If it doesn't have a package.xml, or it isn't checked into git, catkin_make won't recognize it as a package and won't build it.

A:

I found your project on github: https://github.com/sd12832/zlab_drone and it seems like there are no build commands in your CMakeLists.txt . It looks like your project isn't building because there are no build commands.
The ardrone package is using the ExternalProjectAdd command to download and build a second, separate repository that is not a ROS package (note that the git URL that they're pulling from isn't the same as the URL for their ROS package). Since all of your code is in one package, you don't need to do this.

Originally posted by ahendrix with karma: 47576 on 2017-02-08
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by sharan100 on 2017-02-09:
Yup, that was exactly why nothing was being built. Not sure why github missed out on those commands.

