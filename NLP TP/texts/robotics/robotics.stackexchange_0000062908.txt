Q:

How to open custom wiki page subdomain (e.g. moveit.ros.org) and its experience

First, please don't get me wrong, I don't mean I want to open a custom domain.
MoveIt! project uses moveit.ros.org for their wiki contents (that are stored on github according to @Dave Coleman) instead of wiki.ros.org.
Question-1. How is it possible to open a custom sub domain (again I have no interest in doing that. This question has just lingered in mind for a long time)?
Question-2. It looks like running the own server to generate the own html format from .rst files. Maybe I like to ask the maintainers @Sachin Chitta @hersh @acorn about its experience, especially the downside, since ROS wiki as I'll mention below has a lot of advantages.

Background of this question: While I like ROS wiki with lots of useful macros that are specific to ROS world. I'm also a fan of aethetics aspect of ROS wiki. And using ROS wiki for all documentation gives a sense that all information regarding ROS is centralized under ros.org, which is a huge plus for both beginners and advanced users IMO. On the other hand, we have a kind of strong motivation to keep all resources including document files in our repositories for the maintainability and portability (I assume that's the same with the decision MoveIt! team?). Currently I can't think of any easy way to synchronize raw text documents on ROS wiki to the external sites.

Originally posted by 130s on ROS Answers with karma: 10937 on 2014-09-27
Post score: 1

A:

I totally agree with the urge to keep document files in the same repository as the code.
The only downside I have seen to running your own documentation website is that you have to run a website.  That said, if all you're doing is hosting a bunch of auto-generated pages, there will be a bunch of up-front work to set it up and then sporadic bursts of work when things break, or it gets hacked or whatever.
I'm pretty sure that doing a subdomain is just a matter of 1) running a webserver on a computer with a static IP address and 2) getting the (super-)domain owner to add your webserver's address into their server configuration as a subdomain.

Originally posted by hersh with karma: 1351 on 2014-09-29
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by gvdhoorn on 2014-09-29:
Couldn't we come up with a way to integrate those auto-generated pages into the ROS wiki? That way storing documentation sources in versioning systems becomes possible for everyone.
Comment by hersh on 2014-09-29:
It already IS integrated, to some extent.  Look at http://docs.ros.org/indigo/api/rviz_plugin_tutorials/html/display_plugin_tutorial.html for instance.  Sure it's a separate page, but the ROS wiki has a link to it (here: http://wiki.ros.org/rviz/Tutorials/Plugins%3A%20New%20Display%20Type )
Comment by gvdhoorn on 2014-09-30:
I know the 'doc' links, but I was thinking more along the lines of actually integrating the output of the generation process into the wiki pages themselves (instead of linking to them). It's probably not a good idea to generate moinmoin code directly, but embedding something would be nice.
Comment by hersh on 2014-09-30:
I'm sure it's possible to auto-generate wiki content and post it with a script.  You could even read and archive it with a script.  However anyone wanting to do such a thing should really talk to the OSRF folks first - last I knew ros.org was really overloaded.
Comment by Dave Coleman on 2014-09-30:
Indeed it seems like ROS packages could benefit from using the auto-generated API docs more often, and better integrating them into ros.org kind of like how ompl does: http://ompl.kavrakilab.org/tutorials.html
Comment by William on 2014-09-30:
Yeah, we have considered some sort of embedding of generated documentation into the wiki pages using a wiki macro. There are some difficulties related to this approach in terms of the output from generated docs. I think something like GitHub's rendered README.{md,rst,etc...} files would be nice.
Comment by William on 2014-09-30:
Another approach is what's referred to as an "un-wiki", which is like the ros2 design website: http://design.ros2.org/ Where every page is generated from documents in a git repo and each page has an edit button which takes you to something like prose.io and changes go through pull requests.
Comment by William on 2014-09-30:
This "un-wiki" is basically provided by readthedocs.org, which I have taken to using for hosting of docs lately: http://catkin-tools.readthedocs.org/en/latest/ (every page there has an edit on github button) Other options we have looked into: gitbook (https://www.gitbook.io/)
Comment by Dave Coleman on 2014-09-30:
+1 to these ideas.
Comment by 130s on 2014-10-01:
+1 for those ideas. I'm just afraid that once maintainers per each package started using different domain, information would get distributed...Right now ROS is so great where I can confidently Google only within site:ros.org KEYWORD to find the info I want.

