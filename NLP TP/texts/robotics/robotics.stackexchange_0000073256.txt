Q:

Rqt command line interface - killing plugins and switching perspectives

Hi everyone! :)
I am struggling with the (probably considered) advanced features of rqt namely using the command line interface in order to control a running rqt instance using IPC (inter-process communication). This question consists of two parts:

Killing plugins started as separate processes
Switching perspectives

System: Ubuntu 14.04, ROS Indigo (I think it was updated 2-3 months ago)

Killing plugins started as serparate processes
The question here is to find a workaround of the problem described in this section of the post.
Looking at the --help of rqt I got the following (do feel free to correct me if I'm wrong):

-m (long: --multi-process)  - starts each rqt plugin as a separate process which means that I can get the PID of every pluging in order to manipulate it somehow using UNIX signals. Tested and working as described.
--command-pid RQT_PID - used in a combination with other --command-* terminal parameters to control the running rqt instance (oldest one by default which is not something that I need to consider since my use case involves running just a single instance of rqt).  Tested and working as described.

--command-pid RQT_PID --command-start-plugin RQT_PLUGIN_NAME - given the PID of the running rqt I can pass the name of a rqt plugin I want to start.  Tested and working as described.
Example: rqt --command-pid 10816 --command-start-plugin rqt_rviz/RViz adds rviz the my  running rqt

So far so good. The problem is when I want to stop a plugin everything turns into...well...you know what. I was unable to find a rqt-friendly way of doing that (there is for example no such command as --command-stop-plugin RQT_PLUGIN_NAME) hence the only way that I have found so far is to send a SIGTERM to the PID of the respective plugin.
I have tried using SIGINT but it doesn't seem to work at all and also even when I use SIGTERM the plugin still seems to be running (second image). I wrote seems since the processes is actually no longer there however the plugin (without its content!) remains and also under Running in the menu I can still see Close RQT_PLUGIN_NAME (see third image). Clicking on it doesn't do anything and the entry in the menu doesn't disappear. To be honest I find it very unlikely that anything but kill is to be used to close externally such plugins because of the absence of a --command-stop-plugin ... and the fact that the --command-start-plugin ... takes just the rqt plugin's name which begs the question "What will happen if I want to start and then stop N instances of the same plugin next to each other?"
Before SIGTERM to RViz plugin

After SIGTERM to RViz plugin (the plugin is still partially there)

After SIGTERM to RViz plugin (the plugin is still registered as a running plugin)

Things get even weirder when I reopen rqt (without --clean-config enable of course) - the "corrupted" plugin is loaded and (of course) it appears as one would expect from a pluging that wasn't closed during the previous rqt session.
I might be doing something wrong but this seems like a bug to me. So far I have tested it with 3 plugins - rviz, shell and rqt_graph. Depending on the plugin the aftermath of a SIGTERM is different though the `behaviour I've described above is always present:

rqt_graph (full name used when calling command: rqt_graph.ros_graph.RosGraph ) - I get random strange positioning of the contents of that plugin especially when I have no other plugins currently shown in the perspective - sometimes it takes up the whole perspective (expected behaviour) but sometimes it takes just 1/4 or so of it (placed horizontally) leaving the rest completely blank.
rviz (full name used when calling command: rqt_rviz/RViz) - no additional strange things happening beside the "default" abnormal behaviour
shell (full name used when calling command: rqt_shell.shell.Shell) - the xterm gets detached (hence it keeps on living). Here this is obviously due to the fact that the rqt_shell is actually just a view of an externally running xterm.

In addition to all that whenever a plugin is started as a separate process there is actually no way of retrieving the PID of that plugin so one has to monitor the currently running tasks on the system and detect if a new entry has appeared and after that parse the command that represents the process (the example above shows me /usr/bin/python -u /opt/ros/indigo/bin/rqt --qt-binding=pyqt --embed-plugin=rqt_rviz/RViz ...) in order to detect if that new process is actually the one that represents the plugin (lucky enough one can use --list-plugins to get all the available plugins). This is a more of a missing feature but still...

Switching perspectives
This is more of a lack of knowledge and need for an explanation how to handle perspectives properly but also yet another weird behaviour using the rqt terminal interface.
Using rqt --command-pid RQT_PID --command-switch-perspective RQT_PERSPECTIVE_NAME it is possible to change the perspective of a rqt instance. To my knowledge a perspective is just a "snapshot" of the currently opened rqt plugins along with their own settings (I had to dig quite deep to see where the whole save_settings(...) and load_settings(...) due to the project I'm currently working on and I'm still not sure what is going on behind the scenes). So when a perspective is loaded I expect to see the plugins that it contains with previously defined layout. To my surprise I got quite the strange results especially after switching between two perspectives multiple time using the command above:
First opening of a perspective containing three plugins

Switching multiple time between perspectives
Note: Every time a switched to a perspective I waited for it to actually appear in rqt

The perspectives I have are as follows:

Default perspective is the default for rqt which in my case is an empty one
diagnostics contains the Robot Monitor
messages contains three plugins - Topic Monitor (on the left, vertical from top to bottom), Message Publisher (on the right, top half) and Message Type Browser (on the right, bottom half)

In another terminal session (where rqt is running) I got the following errors whenever one of the perspectives was loaded:

This code block was moved to the following github gist:
https://gist.github.com/answers-se-migration-openrobotics/3025e63e8824e03b5ef3c7cfa0c569ec

I might be wrong here but this doesn't seem like a normal behaviour to me.

Originally posted by rbaleksandar on ROS Answers with karma: 299 on 2016-04-07
Post score: 0

A:

I am not surprised that simply killing the processes doesn't work well. rqt doesn't know that the subprocess has been killed. The solution here would be to implement a --command-stop-plugin option. Since you can already perform this task through the UI it shouldn't be too difficult to expose it as in the CLI.
The problem you have with switching the perspective from the command line sounds like this ticket: https://github.com/ros-visualization/rqt/issues/108

Originally posted by Dirk Thomas with karma: 16276 on 2017-01-23
This answer was ACCEPTED on the original site
Post score: 0

