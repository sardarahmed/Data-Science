Q:

Sourcing from multiple workspaces

I am just running through the ROS tutorials for Indigo (running on Ubuntu 14.04). In my .bashrc file, I have added the line source ~/catkin_ws/devel/setup.bash, to source the setup file. If I then run echo $ROS_PACKAGE_PATH, it gives me /home/karnivaurus/catkin_ws/src:/opt/ros/indigo/share:/opt/ros/indigo/stacks.
However, I also have downloaded another package, located in ~/ROS/src. I now want to source the setup file for this new package, so that ROS knows to search there if I reference this package. Therefore, I add another line to .bashrc, source ~/ROS/devel/setup.bash.
The problem is that if I now run echo $ROS_PACKAGE_PATH again, it gives me /home/karnivaurus/ROS/src:/opt/ros/indigo/share:/opt/ros/indigo/stacks. So, it seems that the second of the two lines in .bashrc overrides the first, and the package created in the tutorial can no longer be found by ROS.
So the only solution I have come up with is to have all my packages in the same workspace. But this means that I cannot run the tutorial whilst also playing around with some other packages I've downloaded. Is it normal to just have one workspace which contains all packages you have built / downloaded (i.e. other than the ones that come with ROS by default)? Or is there another solution to this?
I have inspected the setup.bash files for both these workspace, and they are identical:
#!/usr/bin/env bash
# generated from catkin/cmake/templates/setup.bash.in

CATKIN_SHELL=bash

# source setup.sh from same directory as this file
_CATKIN_SETUP_DIR=$(builtin cd "`dirname "${BASH_SOURCE[0]}"`" > /dev/null && pwd)
. "$_CATKIN_SETUP_DIR/setup.sh"

Originally posted by Karnivaurus on ROS Answers with karma: 133 on 2015-03-26
Post score: 8

Original comments
Comment by William on 2015-03-26:
@jarvisschultz's answer is correct, but you can also pass the --extend argument to the setup.bash file and it will only add to the environment rather than set the environment. This can be dangerous though, and I highly recommend you do proper workspace chaining.

A:

When you first run catkin_make in the root of a workspace, the devel directory gets created and the setup.bash file inside of that dir is designed to "overlay" the workspace on top of all other workspaces that have already been sourced. It is quite common to have many "active" workspaces at a single time. In your case, I'd do the following:

In a new terminal run source ~/catkin_ws/devel/setup.bash
cd into ~/ROS/ and run rm -r devel/ to remove the devel directory
run catkin_make from the ~/ROS/ directory (this will re-create devel/)
Then source ~/ROS/devel/setup.bash

Your environment should now have the ~/ROS/ workspace overlayed on the ~/catkin_ws/ workspace. Read more here: http://wiki.ros.org/catkin/Tutorials/workspace_overlaying

Originally posted by jarvisschultz with karma: 9031 on 2015-03-26
This answer was ACCEPTED on the original site
Post score: 9

Original comments
Comment by raarenst on 2015-10-19:
I also need to remove the build folder. Under step 2: rm -r build
Comment by Behsad Ghanei on 2016-05-25:
But isn't that dangerous?  For example if two different workspaces have similar packages. How does ROS know from which workspace  it should run a launchfile?
Comment by joq on 2016-05-25:
You need to be careful to source devel/setup.bash for the correct workspace.
Comment by Alex_Nitsch on 2017-02-21:
Will  this work if I have one workspace that I built with catkin_make and the other one (the ~/ROS/ one) with catkin build?
Comment by Danfoa on 2019-01-08:
It seems not to, I did it with a source installation of moveit, and it does not work.
Comment by JackB on 2020-10-01:
I attempted to use this method with "build" and "make" to no avail. When I did both with "build" it worked like a charm.

