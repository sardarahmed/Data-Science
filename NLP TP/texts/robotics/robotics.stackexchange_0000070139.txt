Q:

What is the purpose of the architecture_independent tag?

I've read the description in REP 140, but I'm still not clear about the meaning of architecture_independent My interpretation was that the package contains no files that require a particular CPU architecture. An example of a non-architecture-independent package would be one that contains C++ source code that accesses data in a manner that requires a little-endian CPU architecture. Since none of my C++ code is that architecture-specific, I've been specifying architecture_independent in my package.xml files. After reading some discussions about architecture_independent, though, I now suspect that it means "This package generates no architecture-specific object files at build time." I'd be grateful if someone can provide clarification.

Originally posted by Jim Rothrock on ROS Answers with karma: 792 on 2015-10-29
Post score: 3

A:

The tag refers to the built packages. This is used for optimization at packaging time.
Any package with c++ cannot be marked as architecture independent.
I opened a PR with more specifics for the description: https://github.com/ros-infrastructure/rep/pull/108

Originally posted by tfoote with karma: 58457 on 2015-10-29
This answer was ACCEPTED on the original site
Post score: 2

