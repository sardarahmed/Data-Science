Q:

[Solved]: 5 DOF and MoveIt IK

Hello
Anybody worked with 5 DOF arm with MoveIt!? I have tested with IK-Fast plugin,  TRACK-IK, and KDL. The translation movement looks good, but the orientation is having issues most of the time. It is not changing in most of the situation, especially when we move the robot to some distance and try to change the orientation.
At the beginning of Rviz session, we can able to change the orientation, but at the time, translation is locked. Anybody is having similar issues?
I am working using Kinetic, Ubuntu 16.04 LTS

Originally posted by Lentin Joseph on ROS Answers with karma: 66 on 2018-10-05
Post score: 0

Original comments
Comment by jarvisschultz on 2018-10-05:
Are you sure this isn't just an issue with the limited kinematics for a 5-DOF arm? Unlike a 6-DOF arm, for a given 3-DOF position, you cannot reach any arbitrary orientation with a 5-DOF mechanism (unsurprisingly, at most you can only specify 5 parameters for the EE).
Comment by Lentin Joseph on 2018-10-05:
Thanks for the reply.
It's not with the limitation of kinematics. The problem is, 5 parameters of the EE is not available always. For eg. If we change one orientation a little and move to the y-direction, it will not move.
Comment by PeteBlackerThe3rd on 2018-10-08:
Have you tried using the MoveIt RVIZ plugin to select random valid poses and planning trajectories to them, this will test if the planner is having difficulty reaching things it should. I'll second @jarvisschultz it sounds an awful lot like you're setting a goal pose that the robot cannot reach
Comment by Lentin Joseph on 2018-10-08:
Yea, I have tried that. If we use random valid pose, it will select the valid pose and will execute it. It's in a different orientation and different places. What we need is the orientation in a specific area. It seems like a robot cannot reach that pose. We found a hack for it. Will post it.

A:

This is how we solved. We have set the robot TCP as a revolute joint and made it as 6 DOF. The  6-DOF configuration is works pretty good compared to 5 DOF. Almost all solvers are giving good result on the configuration, without having any problems.

Originally posted by Lentin Joseph with karma: 66 on 2018-10-08
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Delb on 2018-10-08:
Can you mark your answer as correct please ?
Comment by Lentin Joseph on 2018-10-08:
I think 10 votes are required to mark this as correct.
Comment by Delb on 2018-10-08:
Right, someone will do that for you then.
Comment by jarvisschultz on 2018-10-08:
I marked as correct. Also note, that I think both my initial comment and that from @PeteBlackerThe3rd are quite relevant. It sounds like you are adding an artificial, nonexistent DOF to allow you to fully specify a 6-DOF EE pose. There isn't anything inherently wrong with this approach, but...
Comment by jarvisschultz on 2018-10-08:
... it does seem like you really were facing the issue of an over-constrained IK problem. Perhaps, a more correct way to fix this would be to use an IK solver that let's you treat the orientation as a constraint and then solves the 3-DoF position as a best-effort optimization.
Comment by jarvisschultz on 2018-10-08:
This best-effort position, exact orientation IK solution could then allow joint-space motion planning with MoveIt!. I'm not 100% familiar with all of the ins-and-outs of KDL or TracIK, but I would think that they have APIs that allow behaviors similar to what I've described.
Comment by jarvisschultz on 2018-10-08:
Whether those behaviors are accessible through a YAML file in MoveIt! is a different story.
Comment by Lentin Joseph on 2018-10-09:
Thanks, @jarvisschultz  for your support. Appreciated

