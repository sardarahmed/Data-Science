Q:

How much horsepower is needed to run the kinect stack

I have the kinect installed but RVIZ is really slow, a frame every few seconds I'm assuming it is my graphics card that is causing it.I have a Dell Inspiron 9400 and it has an ATI Mobility Radeon X1400. Any idea if this is good enough? Is there any way to spec a computer/video card combo or a way to test a computer? My pc is a dual core 1.8Mhz with 2 gigs of ram. That is close to the specs for the netbook that comes with the turtlebot. Could it be something else in my system causing the slowness. The CPU's are running at 98% when the kinect is running.
Thanks

Originally posted by ringo42 on ROS Answers with karma: 55 on 2011-07-03
Post score: 0

A:

There are two (semi-independent) issues here: rviz and the kinect proper.
Fire up the openni drivers (without rviz), do rostopic hz /camera/rgb/points; this will tell you how quickly your machine can actually turn kinect data into point clouds. If that number is smaller than you need (and the CPU is spiked), the answer is that your computer isn't fast enough.
How quickly rviz can visualize those clouds is a different question, and is more about your graphics card. There is substantial CPU overhead in the serialize -> transmit -> deserialize step to get the data into rviz (note that a kinect point cloud, at frame rate, is about 300 MB/sec), which could also be a problem if just getting the data is already maxing your CPU.
If the problem is just GPU (rostopic hz gives you satisfactory speeds, and you have leftover CPU), you could apply a VoxelGrid Filter to intelligently downsample your pointcloud; that might help rviz keep up.
Roughly circa the release of eturtle, two things will happen. First the new openni drivers (currently partway available as openni_camera_unstable) will have a "record player" mode, allowing you to store the raw depth and RGB images, and produce point clouds later, via bag playback (meaning you can slow everything down without losing data). You can already roll your own version of this, to some degree; I use something similar on my netbook-based robot. Second, the drivers will become nodelets, meaning you can do away with the serialize-transmit-deserialize overhead in your nodes (although not with rviz).

Originally posted by Mac with karma: 4119 on 2011-07-03
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by tfoote on 2011-07-03:
The TurtleBot works at full frame rate, and takes advantage of Nodelets to avoid serializing and deserializing data.  It's also only using the b&w point cloud.  For doing minimal work, one atom core is about the minimum.  In general you need to be very careful about any extra copies of the data.
Comment by Mac on 2011-07-03:
By not doing at full framerate, I assume.
Comment by ringo42 on 2011-07-03:
rostopic hz /camera/rgb/points says 8 or 9 and cpus are at 80-90% so I guess that means my cpus don't have the power to handle it. So how does the netbook with turtlebot do it?

