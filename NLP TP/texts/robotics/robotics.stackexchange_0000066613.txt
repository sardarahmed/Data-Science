Q:

NaN values in pointcloudXYZ

I converted sensor_msgs::PointCloud2 from kinect to pointcloudXYZ. But some of the values are nan
I found 1 post about this issue but it doesnt clearly explain it (http://answers.ros.org/question/11750/problems-of-nan-positions-when-converting-pointcloud2-to-pclpointcloud-pointxyzrgb/)
Please anyone explain if my code is wrong or its just that kinect sometimes not reliable

Originally posted by dmngu9 on ROS Answers with karma: 150 on 2015-03-25
Post score: 0

A:

It is not a question of reliability; it's a major difference between 2D/3D sensors:
2D sensors
You always get information from the sensors for each pixel of the image (as long as they are no dead pixels); if no light hits the sensor the image will be plain black; meaning the 3 channels R,G,B (from the bayer filter) will be 0; that is the information.
3D sensors
3D sensors are different in many ways; while most of all rely on 2D sensors (one or multiple of them); the depth of a point might not always be possible to be computed.
Imagine a stereo camera, the stereo-correspondence between the pixel of the left image and the right pixel might sometimes fail because of occlusions, algorithm weaknesses, bad lightning etc... When the stereo-correspondence fails; the Z coordinate of the point cannot be calculated; thus it is filled with NaN. The X and Y coordinates should never be NaN because these are the coordinates of the point related to the pixel matrix.
Conclusion
It is perfectly normal to have "holes" in the Kinect (or any other 3D sensor) cloud; it's very unlikely you'll get a point cloud with 0 NaN values.

Originally posted by VictorLamoine with karma: 1505 on 2015-03-26
This answer was ACCEPTED on the original site
Post score: 2

