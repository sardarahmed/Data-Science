Q:

Connecting my Custom Robot to ROS

Hi All,
I wanted to get and idea of your thoughts on the best way to "connect"/use ROS with my own robot. I've long since written code/custom navigation for my robot which is fitted with the usual suspects (X&Y coordinates/Gyro/Sonar and IR range finders).
I'd like to have a play around with ROS but I'm not sure the best place to start?
My robot sends it a telemetry stream and accepts motion commands (et al). Do I some how interface with this stream on the PC - via the Server I'd built. Therefore I donâ€™t actually need to worry about writing new code for the MPU. Or something else?
I'd really appreciate some guidance. Also would the SLAM stack work OOTB with Sonar data?
Many Thanks in Advance (Probably more questions to follow)
Mark

Originally posted by MarkyMark2012 on ROS Answers with karma: 1834 on 2012-04-17
Post score: 1

Original comments
Comment by MarkyMark2012 on 2012-04-17:
Okay still looking around - I found ros_comm. The initial entry point into the host PC for my robot is a serial port, but is then looked after by a server (TCP/IP)...is there something similar I can connect to this with? Then read in the data and slice it up into the various sensor parts?
Comment by MarkyMark2012 on 2012-04-17:
rosbridge I'm guessing - then what would be the best place to break up the data and untimatly create a sonar based map? (Sorry partly answering - I think - my own questions as I go here??) Yes/No/Barking up the totally wrong tree?
Comment by MarkyMark2012 on 2012-04-17:
from there rip up the sensor data and publish thus: http://www.ros.org/wiki/navigation/Tutorials/RobotSetup/Sensors?  http://www.ros.org/wiki/navigation/Tutorials/RobotSetup
Comment by Mac on 2012-04-23:
Can you give some more details of the code you have now? For example, if it currently pushes bits over a network socket to some listener, is it pushing all of the data (controls, sensors, etc.) or are there several different streams?
Comment by MarkyMark2012 on 2012-04-23:
Yep - I have a server app which is basically not much more than a RS232 Port to Socket converter (I realize I could use rosserial here but I want to keep the svr my homebrew navigation apps use it). XML telemetry stream - sensors/position/control cmds etc back and fourth from the host PC to the bot
Comment by MarkyMark2012 on 2012-04-23:
More info here - http://www.toeminator.com/Toeminator/HostControlSystem/HostControlSystem.htm (A bit out of date now...)

A:

As I understand your system (from the commentary above), what you want to do is write a ROS node that acts as a bridge.
Code already running on your robot transmits XML; you write a ROS node that listens on a socket for these data, and then transforms them into ROS messages, and republishes them. Similarly, that node listens on ROS topics for commands (for example, Twist messages on /cmd_vel), translates them into your robot's XML format, and transmits them to the robot.
Your sonar data are probably best published as a sensor_msgs/LaserScan message (note that doing SLAM with sonar data is...tricky; it's worth a try, though). The canonical ROS way of sending robot instructions is a geometry_msgs/Twist message published to /cmd_vel; those two, plus some tf frames, should be enough to get you started.

Originally posted by Mac with karma: 4119 on 2012-04-24
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by MarkyMark2012 on 2012-04-24:
Great thanks Mac!
Comment by Mac on 2012-04-25:
Accept the answer? (Karma!)
Comment by MarkyMark2012 on 2012-04-25:
Oopps - I've made it so :)
Comment by vvyogi on 2017-03-26:
Is 'joy' an example of a bridge node?

