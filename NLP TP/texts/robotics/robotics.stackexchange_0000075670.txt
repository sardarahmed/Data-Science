Q:

actionlib sendgoal arguments

Hi everybody!
I'm following the ROS-I tutorial (http://aeswiki.datasys.swri.edu/rositraining/indigo/Exercises/demo/part4.3), and I get stuck when I have to send a goal to the server using the sendGoal method. Reading the sendGoal reference (http://docs.ros.org/hydro/api/actionlib/html/classactionlib_1_1SimpleActionClient.html#ae6a2e6904495e7c20c59e96af0d86801) I should provide the goal and three  callback functions.
Do I have to manually define those callback functions?
However in line 32, I tried to insert  those callback funcs as indicated in the reference but Eclipse says "Method 'sendGoal' could not be resolved".
What should I do?
Thank you!
  #include <collision_avoidance_pick_and_place/pick_and_place.h>

/*    SET GRIPPER
  Goal:
      - Turn the vacuum gripper on or off.
  Hints:
      - Use the grasp action client to send an grasp request to the grasp server.
      - Confirm that the gripper was successfully opened or closed and exit on error
*/
void collision_avoidance_pick_and_place::PickAndPlace::set_gripper(bool do_grasp)
{
//  ROS_ERROR_STREAM("set_gripper is not implemented yet.  Aborting."); exit(1);

  // task variables
  object_manipulation_msgs::GraspHandPostureExecutionGoal grasp_goal;
  bool success;

  // set the corresponding gripper action in the "grasp_goal" object.
  if (do_grasp)
    grasp_goal.goal = object_manipulation_msgs::GraspHandPostureExecutionGoal::GRASP;
  else
    grasp_goal.goal = object_manipulation_msgs::GraspHandPostureExecutionGoal::RELEASE;

  /* Fill Code:
   * Goal:
   * - Send the grasp goal to the server.
   * Hints:
   * - Use the "sendGoal" method of the grasp client "grasp_action_client_ptr"
   * to make a call to the server.
   */
  /* ========  ENTER CODE HERE ======== */
  grasp_action_client_ptr.sendGoal(grasp_goal.goal, SimpleDoneCallback, SimpleActiveCallback, SimpleFeedbackCallback) ;

  /* Fill Code:
   * Goal:
   * - Confirm that client service call succeeded.
   * Hints:
   * - Use the "waitForResult" method of the client to wait for completion.
   * - Give "waitForResult" a timeout value of 4 seconds
   * - Timeouts in ros can be created using "ros::Duration(4.0f)".
   * - Save returned boolean from waitForResult() in the "success" variable.
   */
  /* ========  ENTER CODE HERE ======== */

  if(success)
  {
    if (do_grasp)
      ROS_INFO_STREAM("Gripper closed");
    else
      ROS_INFO_STREAM("Gripper opened");
  }
  else
  {
    ROS_ERROR_STREAM("Gripper failure");
    exit(1);
  }
}

Originally posted by nico_lauda on ROS Answers with karma: 16 on 2016-08-06
Post score: 0

Original comments
Comment by ahendrix on 2016-08-07:
You have a thing named grasp_action_client_ptr, which is probably a pointer, but you're trying to use the dot operator on it. Perhaps you want the deference -> instead?
Comment by nico_lauda on 2016-08-07:
Thank you for your comment!.
I changed the operator like you said, and now sendGoal is recognized, but I get "Invalid arguments" error. It seems that it doesn't recognize the callback functions.
I don't care of the callback fcns, but if I don't put them in the sendGoal I get the error as well.
Comment by ahendrix on 2016-08-07:
The API docs you link to show defaults for the callbacks, so I don't think you need to provide those arguments. It looks like you're following a tutorial that is mostly pre-filled code, so I'd recommend that you read the examples again.

A:

I write this answer in order to help someone else in the future that will find similar difficulties.
I have found here the same code already solved.
On line 38 just write grasp_action_client_ptr.sendGoal(grasp_goal); and It works.

Originally posted by nico_lauda with karma: 16 on 2016-08-08
This answer was ACCEPTED on the original site
Post score: 0

