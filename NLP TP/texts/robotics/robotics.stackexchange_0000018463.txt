Q:

Navigation - GPS + IMU; how to make it more accurate?

Currently, I am trying to navigate a small robot car to point A from my current position. The car has a GPS sensor and a BNO055 IMU(Gyro + Mag + Acc). I know the GPS co-ordinates of point A. Using the GPS co-ordinates of my car, I can calculate the bearing angle and the distance. From the fusion mode in the BNO055, I get the tilt compensated heading again(It gives me heading, roll & pitch). Based on the heading angle and the bearing angle, my car makes its turns. However, here is what I want to build on this:

The GPS readings sometimes are a bit far from my actual position. How to get rid of these outliers? I've read of the use of EKF. But they seem to be all mathematical formulas and it's tough to keep up with them!
For when the GPS signal is lost, I've read about Dead Reckoning methods being used. I'm not sure how to implement those. Can someone shed some light on that?
Can I calculate the speed with just the GPS and an IMU?
Any help is appreciated, thanks!

A:

You should use a Kalman Filter. Here are two nice tutorials that explain how Kalman Filter algorithm works and the working principle of IMU/GPS sensors. 
short: https://www.navlab.net/Publications/Introduction_to_Inertial_Navigation.pdf
extended: https://www.navlab.net/Publications/Introduction_to_Inertial_Navigation_and_Kalman_Filtering.pdf
vectors, coordinate systems: https://www.navlab.net/nvector/
In summary, the Kalman Filter works in two steps:
1) prediction: 
   - uses IMU measurements
   - propagates the belief (mean, covariance) based on the motion model
2) update step
   - uses GPS measurements
   - fuses the predicted belief and measurements to get a better estimate
The Kalman Filter algorithm implementation is very straightforward. There are hundreds of papers about how to code the filtering algorithm. The challenging parts are

modeling the sensors (error characteristics)
for IMU, you need to come up with drift, bias, random noise terms 
for GPS, you need to come up with confidence intervals for global coordinate measurements (https://www.mathworks.com/help/fusion/gs/model-imu-gps-and-insgps.html)
understanding when the estimates are not consistent
modeling the motion of your vehicle (motion model)
modeling the relation between measurements and the state of the system (measurement model)

