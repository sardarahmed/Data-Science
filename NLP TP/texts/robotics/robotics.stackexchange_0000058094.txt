Q:

PCL Kinfu in ROS Hydro

Is there a way to use Kinfu from PCL in ROS Hydro? The only package that I can find is pcl17. However, this seems to be for Fuerte.
Can I safely install PCL 1.7 from the PCL website along ROS Hydro or will there be conflicts between the PCL libs included in ROS and the original libraries?

Originally posted by atp on ROS Answers with karma: 529 on 2014-03-20
Post score: 2

A:

Step by Step (tested with Ubuntu 12.04 and ROS Hydro; ros, ros version of pcl and cuda are installed!):
source /opt/ros/hydro/setup.sh
mkdir pcl_workspace && cd pcl_workspace && catkin_make_isolated
mkdir -p src/pcl/ && cd src/pcl
wget https://raw.githubusercontent.com/ros-perception/perception_pcl/groovy-unstable-devel/pcl/CMakeLists.txt
wget https://raw.githubusercontent.com/ros-perception/perception_pcl/groovy-unstable-devel/pcl/package.xml
sed -i '/GIT_TAG/d' CMakeLists.txt
cd ../..
catkin_make_isolated

You can use our KinFuLS ros Wrapper (e.g. with kinect):
cd src && svn checkout http://fsstud.is.uni-due.de/svn/ros/is/kinfu && cd .. && catkin_make_isolated
source devel_isolated/setup.sh
roslaunch kinfu kinfu.launch

Originally posted by MichaelKorn with karma: 1480 on 2014-03-25
This answer was ACCEPTED on the original site
Post score: 5

Original comments
Comment by atp on 2014-03-26:
Great! Does that work on Hydro?
Comment by MichaelKorn on 2014-03-26:
yes, tested with Hydro
Comment by Lili Meng on 2014-10-27:
Hi, If I run $catkin_make_isolated
it displays:
Could not find source space: /home/meng/pcl_workspace/src
Comment by Lili Meng on 2014-10-27:
It seems that it works! But how could the KinFu be visualized? Using Rviz???
Comment by MichaelKorn on 2014-11-06:
yes, you can use rviz. Subscribe to /camera/kinfuLS/depth
Comment by Cansen on 2014-11-13:
Hi Michael,
I was trying to compile the PCL in the way that you suggested. However, I got the following errors that I don't know how to fix, could you help me?
make[5]: *** [octree/CMakeFiles/pcl_octree.dir/src/octree_inst.cpp.o] Error 1
Comment by MichaelKorn on 2014-11-13:
Cansen, I need more information, please copy the error message
Comment by Cansen on 2014-11-14:
Hi Michael, I just found out the bug. To solve the problem, I need to change the cmake file: pcl-trunk → cmake → pcl_find_sse.cmake. replace "-march=native" with "-march=corei7". This solution can be found in pcl mailing list.
Thanks a lot!
Cansen
Comment by RokusO on 2014-12-01:
Should this
cd src && http://fsstud.is.uni-due.de/svn/ros/is/kinfu && cd .. && catkin_make_isolated

not be the following?
cd src && svn co http://fsstud.is.uni-due.de/svn/ros/is/kinfu && cd .. && catkin_make_isolated

Everything else works perfectly by the way.
Comment by MichaelKorn on 2014-12-01:
@RokusO: thx
@Cansen: I would not call it a bug. Your compiler is just too old for your CPU
Comment by cvcook on 2015-09-15:
When performing catkin_make_isolated on the pcl_trunk, I encountered:
make[5]: *** [io/CMakeFiles/pcl_io.dir/src/openni2_grabber.cpp.o] Error 1
make[4]: *** [io/CMakeFiles/pcl_io.dir/all] Error 2

Does anyone happen to know what might have gone wrong? Thx!
Comment by cvcook on 2015-09-16:
I believe the error message to the make errors above was
/home/user/catkin_ws_boost/src/pcl/pcl_trunk/src/io/include/pcl/io/openni2/openni2_device.h:207:37: error: ‘class openni::Device’ has no member named ‘getDepthColorSyncEnabled’

Comment by MichaelKorn on 2015-09-16:
I can remember there were several problems compiling PCL with openni2. Maybe this problem is not ROS related. Can you compile PCL without ROS?
Comment by cvcook on 2015-09-20:
Yes, it seems that this is related to a openni2 problem that PCL might have. I'm not able to compile PCL without ROS, because of the same make error. Do you happen to remember the approach that you did to solve the openni2 problem? Thx again!
Comment by MichaelKorn on 2015-09-22:
Sorry, I don't remember anything more about this problem. With my current system getDepthColorSyncEnabled is resolved in /usr/include/openni2/OpenNI.h installed with libopenni2-dev from the ROS repository (Ubuntu 14.04). You should check which OpenNI.h you are using.
Comment by Dox on 2018-03-27:
Hi! Does anyone know will this work with ROS Kinetic?
Comment by MichaelKorn on 2018-03-28:
I do not think so, the code is 4 years old. I have newer code for ROS indigo, but it is a mess (it includes experimental code for map generation). I suppose you would need some experience to migrate it to Kinetic.
Comment by Dox on 2018-03-29:
Ok. Which is currently the best way to use KinFu in ROS? I would like to test it on robot for 3D mapping and navigation.
Comment by Dox on 2018-04-09:
@MichaelKorn
Hi Michael could you please check this out and provide some guidelines. It would be much appreciated!

