Q:

ROS package EKF fusion for imu and lidar

I have a 3d lidar and an imu both of which give a pose estimate. I need to get a EKF fused pose output combined from both of them.

I couldn't find a ros package which does that. There is ETHZ's ethzasl_sensor_fusion which does it for camera and imu but not for a lidar. Hope someone can direct me to that if there is one. Or can tell me how to do it using some template available.

Also came across robot_localisation (which i guess assumes odometry data comes from wheel encoders). I was wondering if i perform scan matching from lidar data to get an odometry estimate and feed it to this package along with imu data. I guess EKF requires which sensor are we using for computing the kalman gain and other matrices. So theory doesn't support this. But was wondering if this is still practically feasible given that lidar odometry can be assumed to be coming from wheel encoders.

Originally posted by Harsh2308 on ROS Answers with karma: 80 on 2018-04-01
Post score: 1

A:

If your 3d scan matching is giving you a pose estimate you can feed that directly into robot_localization (in this section of the documentation they go over what kind of data r_l can accept - it sounds like you'd be feeding PoseWithCovarianceStamped messages).

Originally posted by stevejp with karma: 929 on 2018-04-02
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Harsh2308 on 2018-04-02:
yes but the thing is pose estimate from lidar and pose estimate from a camera and a pose estimate from wheel encoders is not the same thing.
Correct me if I am wrong here. Because EKF/UKF fusion step requires underlying model i.e. the sensor from which you are computing the pose estimate from.
Comment by Akash Purandare on 2018-04-03:
If you are giving Pose Estimates from various sensors located at different locations, you need to publish the transforms from the sensors to your base_link frame to make it work in the robot_localization package. Otherwise, you cannot do any localization. Transforms are very important for them.

