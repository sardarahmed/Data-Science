Q:

launch file parameters that have curly braces

I am using ROS Melodic.
How can I set a parameter in a launch file that resembles a yaml syntax like this:
scan: {sensor_frame: base_scan, data_type: LaserScan, topic: scan, marking: true, clearing: true}

I know that generally, when there are parameters like:
SOMETHING:
  key: value
  foo: bar

it's sufficient to do <param name="SOMETHING/key" value="value" />, but I don't think it's the same for the curly braces, or is it?

Originally posted by davidem on ROS Answers with karma: 83 on 2019-11-26
Post score: 0

A:

You can use something like this,
<node pkg="my_pkg" name="my_node" type="my_node">
  <rosparam>
    key: value
    foo: bar
  </rosparam>
</node>

EDIT:
You can also make a yaml file and load it in your launch file like
<rosparam file="$(find my_pkg)/config/my_params.yaml" />

Originally posted by Choco93 with karma: 685 on 2019-11-27
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by davidem on 2019-11-27:
does this work with curly braces too? being
  <rosparam>
    key: {a: $(arg foo)/value, b: $(arg foo)/value}
    foo: bar
  </rosparam>

EDIT: no, I'm sorry but it doesn't. The error says it clearly: RLException: error loading <rosparam> tag: Error within YAML block: mapping values are not allowed here
Comment by gvdhoorn on 2019-11-27:
Everything in a rosparam tag is pure yaml. So dictionaries (what you call "curly braces") are fully supported. See the documentation.

Edit: o, you want to replace parts based on roslaunch args? You'll have to enable substitution for that (ie: set subst_value to True).
Again: refer to the documentation.
Comment by Choco93 on 2019-11-27:
Never tried it but probably key/a: should work too. And if you want to use a dictionary, I have used it and it works. key: {'a': $(arg foo)/value, 'b': $arg(foo)/value} should work I guess.

