Q:

Why AMCL requires to subscribe to /initialpose topic?

AMCL is supposed to solve global localization problem, which means that the robot doesnt know its initial pose. I found this answer in this forum, but I did not understand it. Does it mean that I am providing it initial pose if its subscribing to it?
initialpose (geometry_msgs/PoseWithCovarianceStamped)
Mean and covariance with which to (re-)initialize the particle filter.

EDIT Alright, so apparently it is a violation of global localization problem. Thank you, Martin.
How does one avoid giving initial pose? I need to solve a global localization problem but this is cheating now if I say I use AMCL and provide everything robot needs.

Originally posted by murdock on ROS Answers with karma: 75 on 2016-04-17
Post score: 3

Original comments
Comment by ahendrix on 2016-04-17:
AMCL does not solve the kidnapped robot problem.

A:

Edit: You don't have to publish an initial pose, you can simply call the global_localization service.

Original answer:
Yes, you have to publish the initial pose once (without that, the robot could be literally anywhere, like 1,000,000 km away from the map origin). Even if you don't have a very good idea where the robot is, it's usually somewhere on the map you provided to amcl (otherwise amcl is useless anyway). The "initial pose" is actually an initial gaussian distribution, and you can set a very high covariance in the initial pose message to make the particles spread to a wide area of the map, which of course makes AMCL's job much harder. In that sense, "global localization problem" translates to "somewhere on the map".
The answer by @dornhege that you linked to means that

you shouldn't publish the initial pose all the time (otherwise it would reset AMCL all the time), but only once, in the beginning
...except when the robot becomes delocalized (i.e. none of the amcl particles is near where the robot actually is).

Perhaps it would be nice if instead of requiring an initial gaussian distribution, AMCL would randomly spread particles all over the free areas of the map, but the ROS implementation doesn't do that.
One more thing: instead of publishing a message to the initialpose topic, you can also set some parameters to achieve the same effect. The initialpose topic is there so that you can reset the pose while amcl is running (for example using RViz).

Originally posted by Martin Günther with karma: 11816 on 2016-04-18
This answer was ACCEPTED on the original site
Post score: 5

Original comments
Comment by murdock on 2016-04-18:
Thank you a lot!
Comment by Icehawk101 on 2016-04-18:
You don't have to publish anything to the initialpose topic. If you leave it empty it defaults to the origin of the map (0.0.0,0,0,0)
Comment by Martin Günther on 2016-04-19:
That is correct, but the default covariance is very small (meaning amcl is pretty certain the robot is at the map origin). So unless your robot is within 1 m of the map origin, facing in x direction (+/- 30°), you do need to set the initial pose.
Comment by murdock on 2016-04-19:
Martin, could you explain your above answer (not comment) in other words? Does it mean that I give robot a pose that is not fully correct? For example, http://tinyurl.com/gtg69hw, does it mean that I give initial pose that is 99.7% sure that it is the correct one?
Comment by murdock on 2016-04-19:
Or does it mean that I give robot something like this http://tinyurl.com/gwk8g3e ? It still seems to me that im violating the global localization definition by giving it initial pose.
Comment by Martin Günther on 2016-04-19:
Have a look at this tutorial. It includes a video that shows (among other things) the particle cloud by AMCL, perhaps that makes things clearer.
Comment by Martin Günther on 2016-04-19:
What you set in the initialpose topic is a PoseWithCovariance. The pose part defines the center of the particle cloud, and the covariance part controls how wide the particles are spread. And yes, you are right, strictly speaking this does violate the global localization definition.
Comment by Martin Günther on 2016-04-19:
Actually, I was wrong. I just re-checked, and all you need to do is call the global_localization service: "Initiate global localization, wherein all particles are dispersed randomly through the free space in the map."
Comment by Martin Günther on 2016-04-19:
From http://wiki.ros.org/amcl#Services
Comment by murdock on 2016-04-19:
Please correct me if Im wrong, but its this the way Id call this service by running
$rosservice call /global_localization?
Seems way too simple. ROS taught me nothings that simple.
Comment by aarontan on 2018-07-27:
when I call this service, the robot seems like it is being randomly localized within the map. Is there a more accurate method?
Comment by Dayo on 2021-02-23:
Hey Aaron, you might be well past this problem now but thanks to Martin, in my case, running rosservice call /global_localization "{}" helps then spinning the robot around helps the amcl particles converge and the view of the robot gradually adjusts to the exact location on the map.

