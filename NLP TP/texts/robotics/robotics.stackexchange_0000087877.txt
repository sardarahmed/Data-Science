Q:

Running nodes on the turtlebot3 pi

Hello! I am running ROS on Ubuntu 16.02 for my turtlebot3. I am encountering extensive network issues trying to run the explore-lite package because my wi-fi is too congested and dropping packets. The result is that the transforms are often out of sync which causes the bot's position to jump around on RViz, which in turn causes the bot to think it has come in contact with a "fatal" collision, or it will think that it is in another position and will continuously collide with objects. That brings me to my question - is it possible to run the nodes on the turtlebot3's raspberry pi itself, therefore eliminating the network from the equation? Thank you for any guidance you can provide!
I'm running all these commands on the remote pc:
roscore
turtlebot3_bringup turtlebot3_robot.launch (on the turtlebot)
turtlebot3_slam turtlebot3_slam.launch slam_methods:gmapping
turtlebot3_navigation move_base.launch
explore_lite explore_costmap.launch
I can provide the rqt_graph if needed, but I was wondering more about ways to avoid the network issue itself by lessening the use or eliminating the use of a remote pc altogether,  having ros recognize that the nodes are running on one machine and that there is no need to use the wireless network.

Originally posted by AmateurHour on ROS Answers with karma: 95 on 2018-07-11
Post score: 0

A:

Yes you can directly build and run your catkin_workspace on the raspberry.
Just connect to your rasp in ssh, put your src/ folder in a catkin workspace on your raspberry, run catkin_make (but be aware that you can have compilation issues since the performances of the raspberry are much lower than a computer, you can look into cross compilation but it's quite undocumented, I'm currently struggling with this) and then you can run your nodes/use your launch files.
Then to use Rviz you will have to run the rviz node on your remote PC (you will have to split one of your launch files) I think even with your network issues if the ssh connexion isn't dropped rviz could make it. You just have to set $ROS_MASTER_URI to the ip address of the rasp for both your remote PC and the rasp (using export ROS_MASTER_URI=http://192.168.x.xx:11311/ ) to have everything working.
I think I don't forgot anything.

Originally posted by Delb with karma: 3907 on 2018-07-11
This answer was ACCEPTED on the original site
Post score: 1

