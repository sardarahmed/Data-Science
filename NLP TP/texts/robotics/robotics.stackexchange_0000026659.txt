Q:

What is the ConstWorldStatisticsPtr datatype?

I was going through the tutorial on Topics and the souce code gazebo / examples / stand_alone / listener / listener.cc (https://bitbucket.org/osrf/gazebo/src/8b0c2de0886a61a862036f7e7fe1d4b7b8b4651c/examples/stand_alone/listener/listener.cc?at=gazebo_1.9).
I got a question on the callback function.

/////////////////////////////////////////////////
// Function is called everytime a
message is received. void
cb(ConstWorldStatisticsPtr &_msg) {
// Dump the message contents to
stdout.   std::cout <<
_msg->DebugString(); }

I can see that ConstWorldStatisticsPtr deals with worldstatistics messages. But where can I find documents about this datatype? And if I want to process SonarStamped, what Const Ptr should be used?

Originally posted by F-word on Gazebo Answers with karma: 11 on 2013-08-12
Post score: 0

Original comments
Comment by F-word on 2013-08-14:
I think I've figured this out. Thank everybody for viewing. I will close this question.

A:

It's a protobuf message:
http://gazebosim.org/msgs/1.9.1/world__stats_8proto.html

Originally posted by nkoenig with karma: 7676 on 2013-09-15
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Paul on 2013-10-21:
I cannot understand how to use this, say print out only sim_time?
Comment by tommy on 2018-09-26:
Create receiving node (in main e.g.):
transport::NodePtr inNode = transport::NodePtr(new gazebo::transport::Node());
inNode->Init();
transport::SubscriberPtr worldSub = inNode->Subscribe("/gazebo/default/world_stats", receiveWorld);
Set up the receiving function:
void receiveWorld(ConstWorldStatisticsPtr &msg) {
auto timeMsg = msg->sim_time(); // get time
common::Time time = timeMsg.nsec(); // get nanoseconds
double tm = time.Double() / 100000000.0; // convert to seconds in double
}
Comment by tommy on 2018-09-26:
Turns out it remembers only the nanoseconds and doesn't count on. I'd therefore recommend a world plugin with your own topic publishing the time. This seems useless.

