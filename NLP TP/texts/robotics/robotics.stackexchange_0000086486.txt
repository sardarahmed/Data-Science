Q:

Travis-CI for ros2cli

I am looking for creating a Travis-CI pipeline for ros2cli repo.
Here is my plan so far:

Do a docker based pipeline, start from https://github.com/osrf/docker_images/blob/master/ros2/ardent/ubuntu/xenial/ardent-core/Dockerfile

Install required modules for development from ROS2 Linux Development Setup

Create workspace with

wget https://raw.githubusercontent.com/ros2/ros2/master/ros2.repos &&
vcs-import src < ros2.repos

Run ament build_pkg for every package in ros2cli

Run ament test_pkg for every package in ros2cli

What do you think, is it going to work?

Originally posted by NickM on ROS Answers with karma: 1 on 2018-04-10
Post score: 0

Original comments
Comment by Dirk Thomas on 2018-04-10:
This looks like a duplicate of your question here: https://github.com/ros2/ros2cli/issues/60#issuecomment-379966309
My answer why I think it shouldn't be done with Travis still stand.
Comment by NickM on 2018-04-10:
I raised this question here because I did not want to pollute the main thread on PR with a separate topic.  I don't fully understand the reasoning behind why.
So ament build_pkg foo does not build dependencies for foo?

A:

What do you think, is it going to work?

Yes, it would work. You should use ament build though and don't have to invoke build_pkg for all packages in the right order.
Though the actual question is: does it make sense to set this up manually through Travis?
I would say no to this - for multiple reasons:

Since you have to build all recursive dependencies from source the build time will grow significantly the higher you get in the stack. And very soon you will reach the maximum runtime of a Travis job.

Therefore instead of build all recursive dependencies you want to install all dependencies from source and only build the sources of the specific repository being tested.

In ROS 1 that exact functionality / logic is being provided by the ros_buildfarm. You can either utilize the jobs provided by the buildfarm hosted by OSRF or use the command line interface of the repo to run the exact same build in e.g. a Travis job. So no need to develop and maintain the same (or even only a subset) of that feature.

The buildfarm for ROS 2 currently doesn't offer these jobs (devel, PR, prerelease) but that will change till the next release scheduled in June.

Originally posted by Dirk Thomas with karma: 16276 on 2018-04-10
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by NickM on 2018-04-10:
I see, thanks for the explanation.  The benefit of Travis is that is integrated with GitHub and is free for public projects.  Working in a forked repo I see the result of running all the tools right away.  This is way better than running tools locally and hoping that local environment is a good one.
Comment by NickM on 2018-04-10:
I want that by the time PR is submitted, the quality of the PR is very clear for the submitter and the maintainer without any additional steps on their side.  There is definitely no value in duplicating work.

