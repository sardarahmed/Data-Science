Q:

Is is better to write my own customized controoller than to write a controller pluggin under ROS Navigation Stack framework?

Recently, I have been studying and trying to improve motion planning algorithms on non-holonomic wheeled robotics which sometimes would relate to controller feedback information. My question is then, if I were to implement my own controller (the one that output /cmd_vel), is it better to write my own controller apart from the move_base package than writing a controller pluggin within the framework of ROS Navigation stack?
i.e.

standalone node of controller

vs

controller plugin reltated to ros_control

I am evaluating this question in terms of development time (I have barely one month to get the job done), ease of understanding as well as maintenance, and most importantly, the efficiency and flexibility of running with the previous method as standalone and the latter one as part of a more complex system. Thank you !

Originally posted by Megacephalo on ROS Answers with karma: 106 on 2016-01-12
Post score: 0

A:

What about a third option: writing the Controller as a standalone node, and then wrap this in a plugin. So you can use it with move_base or without.
However, I'd vote for writing a move base plugin, as there are many functionalities already implemented that you would have to write yourself instead (global planning, recovery, interaction of planners, ...)

Originally posted by mgruhler with karma: 12390 on 2016-01-26
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Megacephalo on 2016-01-28:
I totally agree with you, mig. Now I have been using local planner plugin without any difficulty and I myself am developing my own global planner plugin to be implemented in conjunction with move_base. Thanks !

