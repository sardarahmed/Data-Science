Q:

Compiling tf or tf2 with -std=gnu++0x

Hello,
I am trying to rosmake a package (modular_cloud_matcher) which forces -std=gnu++0x compiler option. This results in the following error:
/opt/ros/electric/stacks/geometry/tf/include/tf/tf.h:91:44: error: ‘constexpr’ needed for in-class initialization of static data member ‘DEFAULT_CACHE_TIME’ of non-integral type

and a similar one in tf2.
A possible solution is to change in tf.h from
static const double DEFAULT_CACHE_TIME = 10.0;

to
static constexpr double DEFAULT_CACHE_TIME = 10.0;

I suppose, however, this is not the right way to solve the issue, because next update will remove my modification. I am rather new to the ROS community, so I would like to know what should be done in such cases.

Originally posted by sergey_alexandrov on ROS Answers with karma: 260 on 2011-11-19
Post score: 0

A:

When you find a compiler problem like this, please open a defect ticket for the appropriate ROS component (in this case geometry). Mention the exact system version and compiler (i.e. gcc --version) you use.
In this case, constexpr is a new feature of the recent C++11 standard, which is not  supported for any current ROS distribution. As REP-0003 states:

"Use of C++[0|1]x or tr1 features are only allowed if support for that feature is checked at compile time, and equivalent functionality exists without requiring C++[0|1]x code. A wholesale jump to C++[0|1]x will not happen until all commonly used OS platforms fully support it."

So, while you should submit your patch with the defect ticket, the full solution will need to be somewhat different, to support all the other ROS platforms.

Originally posted by joq with karma: 25443 on 2011-11-20
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by sergey_alexandrov on 2011-11-20:
Thanks for the suggestion. I opened a ticket at ros-pkg trac.
Clearly, 'constexpr' is not an acceptable solution as it won't compile with C++03.

