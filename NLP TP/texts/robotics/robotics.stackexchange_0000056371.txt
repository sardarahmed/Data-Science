Q:

Tutorial 1.16 "ImportError: No module named beginner_tutorials.srv" with Catkin system build

Hi,
I started ROS tutorials, using catkin system as a workspace builder. I didn't had any issue until this tutorial examining service and client nodes.
After creating having written my service and client nodes in the previous tutorial, I tried to run them :

$ rosrun beginner_tutorials add_two_ints_server.py

and i get this error :

"Traceback (most recent call last):
File
"~/catkin_ws/src/beginner_tutorials/scripts/add_two_ints_server.py",
line 4, in 
from beginner_tutorials.srv import *
ImportError: No module named beginner_tutorials.srv"

I searched how to resolve this problem, but i didn't find an answer for catkin system build (for rosbuild, it seems like uncomment #rosbuild_genmsg() and #rosbuild_gensrv() lines on the CMakeLists.txt is enough).
However, there is no comments like that in my CMakeLists.txt (due to the fact I used catkin and not rosbuild).
I even tried to rebuild my workspace by erasing devel and build files in my catkin workspace, and rebuild it, but it didn't work.
I could use some help on this if you know how to do it. Thank you !

Originally posted by Polo on ROS Answers with karma: 1 on 2014-01-04
Post score: 6

A:

As pointed out in tutorial CreatingMsgAndSrv for message/service generation with catkin you need to:

Add to package.xml:
<build_depend>message_generation</build_depend>
<run_depend>message_runtime</run_depend>

Add message_generation in CMakeLists.txt as REQUIRED catkin component (like any package, e. g. roscpp):
find_package( catkin REQUIRED COMPONENTS roscpp message_generation )

uncomment add_message_files in CMakelists.txt and add your msg files with messages to be generated:
add_message_files( FILES my_message.msg )

uncomment add_service_files in CMakelists.txt and add your srv files with services to be generated:
add_service_files( FILES beginner_tutorials.srv )

uncomment generate_messages in CMakeLists.txt with packages containing msgs depending on: 

generate_messages( DEPENDENCIES std_msgs  )

in CMakeLists.txt add ${PROJECT_NAME}_generate_messages_cpp as dependency of your target that required the message to be generated before being compiled (in C++, I am not sure if is also necessary for python)

add_executable( foo_exec src/foo.cpp)
target_link_libraries( foo_exec ${catkin_LIBRARIES} )
add_dependencies( foo_exec ${PROJECT_NAME}_generate_messages_cpp )

Originally posted by Wolf with karma: 7555 on 2014-01-10
This answer was ACCEPTED on the original site
Post score: 6

Original comments
Comment by TFinleyosu on 2014-03-19:
Isn't the service called AddTwoInts.srv and not beginner_tutorials.srv ?
http://wiki.ros.org/ROS/Tutorials/CreatingMsgAndSrv
Comment by Wolf on 2014-03-19:
Yes, this is want mentioned tutorial says. Here a little abstracted necessary steps for message generation of any message with catkin
Comment by TFinleyosu on 2014-03-25:
My issue was caused by jumping ahead in the tutorials. I had done the tutorials a while back and this time I did not take the time to go back through them all to build the CMakeList properly. Wolf, can you check your  *add_message_files( FILES beginner_tutorials.srv ) I think it's add_service_files
Comment by Wolf on 2014-03-25:
Oops, yes right, I changed. Thank you =)
Comment by ros_geller on 2015-08-25:
I just got this same problem using rosbuild, and i had to change from beginner_tutorials.srv import * in the client.py to "from rospy_tutorials.srv import *. Am i sure this is correct? Not really, but everything else i tried failed.
Comment by Wolf on 2015-09-03:
DEpends on how your package is named, if it's name is rospy_tutorials you are correct
Comment by Bant on 2016-08-02:
Hi I know its old but I would also add:
catkin_package( CATKIN_DEPENDS roscpp rospy std_msgs message_runtime )

It feels like it only works for me if I uncomment the line in the catkin_package section and add message runtime to it.
Comment by IsakEngstr√∂m on 2020-08-27:
Note: For package.xml files in XML Format 2, run_depend should instead be exec_depend, as pointed out Here.

