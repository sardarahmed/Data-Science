Q:

Suggest good example of multi-threading with ROS?

Can some someone point me to a good example of multi-threading using ROS?
I would like to move calculations outside the main ROS callbackQueue, and then publish a topic after the calculations are done.
Searching wiki and answers.ros 53055, I see suggestions to do this, and to use boost::thread, but it's not clear how best to tie the results back to publishing an advertised topic.
Should I create a separate node handle, and advertise from within the worker thread?
Or, is publish/node handle thread safe so that I can call publish from within worker thread using a node handle and topic initialized/advertised in the main thread?

Originally posted by dcconner on ROS Answers with karma: 476 on 2013-02-25
Post score: 10

Original comments
Comment by Mani on 2015-12-15:
Since this question is becoming very popular, I suggest that you modify it with a minimal example scenario. It does not need to be robot related, but it should showcase your use case well. Then people can discuss that in detail and provide solutions which hopefully will turn into design patterns.

A:

This question is a bit old, and since I didn't get a response we worked out our own plan in the interim.
Since the question has recently got some traction, I'll briefly describe what we did.
We used boost::thread to create our worker threads.
ros was set up in the main thread, and publishers/subscribers were created per the normal tutorials.
Data coming in via subscriptions would have the const ptr stored in a lock protected copy.  The worker thread would then grab a copy of the latest const pointer at the appropriate cycle.  Data processing and calculations would occur in the worker thread.
The worker thread would then use the publisher to send ROS data.  Minimal processing between lock/unlock, and only publishing from one thread seemed to work well.
Using the worker thread maintained the responsiveness to handling ros messages that were coming in at 1kHz.  Our control loop ran around 250-300 hz.

Originally posted by dcconner with karma: 476 on 2016-02-12
This answer was ACCEPTED on the original site
Post score: 6

Original comments
Comment by uwleahcim on 2016-04-19:
Do you have an example code with these optimizations? Currently I used a class to track data and keep my callbacks as fast as possible with heavy calculations done in the main loop.
Comment by dcconner on 2016-07-06:
Unfortunately, our main controller contained proprietary data and we could not open source it.

