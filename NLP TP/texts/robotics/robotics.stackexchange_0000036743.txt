Q:

Run tabletop_collision_map_processing node

Hi, does someone know how to run the tabletop_collision_map_processing_node from the tabletop_collision_map_processing package? I try to use the tabletop package to create collision maps and to detect objects for my own made robot, which uses a Kinect camera. The robot needs to detect objects and has to grab the object when it's near.
This is what I've tried so far:
roslaunch image_processing database.launch
roslaunch tabletop_object_detector tabletop_complete.launch
rosrun tabletop_collision_map_processing tabletop_collision_map_processing_node

When I do this, I get the following error:
[INFO] [1325000064.590086400]: waitForService: Service [/collision_map_self_occ_node/reset] has not been advertised, waiting...

However, I don't know which node advertises this service.. Do I have to advertise this myself?
image_processing is my own package, I imported the database from svn and the launch file looks like this:
<launch>
    <!-- load database connection parameters -->
    <rosparam command="load"
        file="$(find image_processing)/config/household.yaml"/> 
    <!-- start the database wrapper node -->
    <node pkg="household_objects_database" name="objects_database_node" 
    type="objects_database_node" respawn="true" output="screen"/>
</launch>

The yaml file looks like this:
household_objects_database:
  database_host: localhost
  database_port: 5432 
  database_user: willow
  database_pass: willow
  database_name: household_objects

Thanks in advance!

Originally posted by Hououin Kyouma on ROS Answers with karma: 205 on 2011-12-27
Post score: 0

A:

I know you're not using a PR2, but it may be helpful to look at what we launch in our PR2 manipulation pipeline:
pr2_tabletop_manipulation.launch in package pr2_tabletop_manipulation_launch
which includes
pr2_manipulation_prerequisites.launch and pr2_manipulation.launch from pr2_object_manipulation_launch
the first of which includes
laser+stereo-perception.launch (also in pr2_object_manipulation_launch)
which runs collider_node in package collider, which generates and dynamically maintains the octomap, which is what we use in Electric instead of the old static collision maps.  (The launch file you were looking for that is not there, is not there for a reason.)
All of the above launch files contain stuff that you probably want to use for your robot.

Originally posted by hsiao with karma: 741 on 2012-01-04
This answer was ACCEPTED on the original site
Post score: 1

