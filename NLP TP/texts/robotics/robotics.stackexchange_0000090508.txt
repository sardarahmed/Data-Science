Q:

bloom - same version number, different tag

I am trying to re-release  robot_navigation. I have already bloomed the latest version (0.2.5) for lunar off of the master branch of the repo.
Melodic however uses the tf2 branch of the repo. I did catkin_prepare_release -t tf2 which created the tf20.2.5 (not my best choice of prefix, I'll admit). I also edited the release tag when doing bloom-release to be tf2:{version}.
However, when it attempts to push the tags to the release repository it fails.
==> Pushing tags to release repository for 'robot_navigation'
==> git push --tags
Total 0 (delta 0), reused 0 (delta 0)
To git@github.com:locusrobotics/robot_navigation-release.git
 * [new tag]         debian/ros-melodic-costmap-queue_0.2.5-0_bionic -> debian/ros-melodic-costmap-queue_0.2.5-0_bionic
(...snip...)
 * [new tag]         rpm/ros-melodic-robot-navigation-0.2.5-0_28 -> rpm/ros-melodic-robot-navigation-0.2.5-0_28
 ! [rejected]        upstream/0.2.5 -> upstream/0.2.5 (already exists)
error: failed to push some refs to 'git@github.com:locusrobotics/robot_navigation-release.git'
hint: Updates were rejected because the tag already exists in the remote.

This is presumably because I already pushed the tags with lunar.
What setting do I change to get it to use a different tag here?
(Previously, I used two separate version numbers for the two branches....lunar with 0.2.2 and melodic was 0.2.3...and 0.2.4)

Release repository
bloom-release = 0.7.2

Originally posted by David Lu on ROS Answers with karma: 10932 on 2019-02-13
Post score: 0

A:

Hmm. It looks like bloom's release tags don't use the full tag template when creating additional release tags. I believe that change would require a patch to implement and I haven't even begun to consider the side effects of such a change.
I think the two options for expedient resolution would be to use a different version number for the melodic track, which makes sense to me if the sources are divergent; or to use a different release repository so that the tags don't collide.

Originally posted by nuclearsandwich with karma: 906 on 2019-02-14
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by David Lu on 2019-02-14:
That works for me. Just wanted to make sure I wasn't missing an obvious option.
Comment by William on 2019-02-14:
Just came here to say, if the content of the source is different, then the version number must be different or the package name needs to change. Anything else leads to chaos in my opinion.
Comment by David Lu on 2019-02-14:
So what makes the most sense? I have two versions of this package that I plan to keep updating. I could keep leapfrogging odds/evens....
Comment by nuclearsandwich on 2019-02-15:
Most of the ROS 2 packages that are ported up have given themselves a bunch of version headroom. geometry2 comes to mind, the ros1 release is on 0.6.5 and is at 0.10.1 for ROS 2. If they'll both be supported, perhaps create a new package?

