Q:

ROS2_control general procedure

Hi there,
So I have a KUKA IIWA LBR7 which I want to control via the https://github.com/KCL-BMEIS/lbr_fri_ros2_stack/tree/foxy.
But I am pretty confused by ros2_control framework overall. Although I had a look at the demos I am not sure how to proceed or understand the general procedure:
So I need to launch the controller_manager but how do I connect it to the hardware interfaces??
In ros(1)_control I was able to define it during the construction of he controller_manager via reference
Cheers Max

Originally posted by MaxDio on ROS Answers with karma: 5 on 2022-05-23
Post score: 0

Original comments
Comment by gvdhoorn on 2022-05-24:
Should you not ask the KCL-BMEIS/lbr_fri_ros2_stack developers/maintainers for guidance?
The chances someone here has experience with the exact package you link are rather low.

A:

In ros2_control, the hardware interfaces are done through a hardware abstraction layer in the form of a plugin which is loaded dynamically by the resource manager at runtime. This hardware abstraction layer is defined in a separate cpp file, which is then linked to the urdf with the ros2_control xacro tag. In the standard setup, when your launch file is executed, the urdf location is passed to the ros2_control node, which loads the plugin and sets up the hardware interface.
Relevant tutorial links:
Resource Manager , Hardware Description in URDF , Building Interface Class
Demo links: Sample hardware abstraction , with associated ros2_control.urdf file (this is just tacked on at the end of the full urdf here by importing with xacro), and then associated high level launch file.

Originally posted by saltus with karma: 131 on 2022-05-26
This answer was ACCEPTED on the original site
Post score: 1

