Q:

how is angular velocity calculated from odometry?

Hi,
I have a hall effect sensor on one of my robot wheels (4 wheels in total). I use it to calculate the linear velocity for geometry_msgs/Twist message. How does one calculate angular velocity from just odometry? Are hall sensors even good enough, seeing as everyone else use wheel encoders?

Originally posted by Hypomania on ROS Answers with karma: 120 on 2018-07-25
Post score: 0

A:

You probably have differential kinematics? Am I right? Angular velocity would than be calculated from a speed difference between left and right wheels and distance between them. An example for this you can find in neo_driver package. See function execForwKin. For theory make some Internet search on differential kinematics. There are plenty of presentations from university courses.
EDIT:
After clarifying the kinematics which is skid-steering one should look at diff_drive_controller which also enables skid-stearing. For start see this file.

Originally posted by destogl with karma: 877 on 2018-07-25
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Hypomania on 2018-07-25:
Sadly no, I have a small RC car where the wheels rotate at more or less the same speed, no differential. Is odometry achievable with such vehicle?
Comment by gvdhoorn on 2018-07-25:
@Hypomania: so your platform uses Ackermann kinematics?
Comment by Hypomania on 2018-07-25:
I had to look it up, I think that's what it is. Imagine a cheap RC car without any differentials, would you call that Ackermann kinematics?
Comment by gvdhoorn on 2018-07-25:
If you have 4 wheels of which two are fixed and two are used for "car-like steering", then yes, it would be considered Ackermann.
Comment by destogl on 2018-07-25:
The ackermann kinematics is also well known and there is plenty of stuff in Internet. Unfortunately I do not know any ROS driver for it where you can directly look it up
Comment by gvdhoorn on 2018-07-25:
@Hypomania: you can probably take a look at easymov/ackermann_controller (and the related packages). That could probably save you quite some time and effort. See also wiki/Ackermann Group.
Comment by Hypomania on 2018-07-25:
@gvdhoorn, okay, I did more research, my RC car is a 4 wheel drive car with a center transfer box and center steer. There is no Ackermann geometry on it, my colleague said it "relies on torque bias and backlash from the drive system" to improve steering efficiency. It can do a perfect circle.
Comment by gvdhoorn on 2018-07-25:
Ah, that sounds more like skid-steering then.
Comment by Hypomania on 2018-07-25:
@gvdhoorn, so it safe to assume that the front wheels are turning at different speeds aka having a differential effect? Basically, what's the most suitable driver package for such vehicle?
Comment by gvdhoorn on 2018-07-25:
I don't know whether that is safe to assume. I'm not an expert.
There are some pkgs that support skid steering (as it's quite common: many clearpath robots use it fi). See wiki/diff_drive_controller - Skid steer for one.
Comment by destogl on 2018-07-25:
I also edited my answer accordingly.
Comment by gvdhoorn on 2018-07-25:
@destogl: not sure skidsteerbot.cpp is the best place to start here. It's top-level and requires some digging to get to the interesting bits.
Comment by Hypomania on 2018-07-25:
@gvdhoorn, @destogl, thank you for your advices, I will start looking into the packages you have suggested!
Comment by destogl on 2018-07-25:
@Hypomania when you find better example please tell us so I can update my answer for other people.
Comment by Hypomania on 2018-07-25:
@destogl, will do my friend
Comment by Hypomania on 2018-07-25:
@gvdhoorn, last question, how many two wheel encoders do I need in my scenario?
Comment by gvdhoorn on 2018-07-25:
I don't understand your question.
Comment by Hypomania on 2018-07-26:
@gvdhoorn, sorry, I was meant to ask how many wheel encoders would I need (in my situation), two or one?
Comment by destogl on 2018-07-26:
For each wheel one. Maybe you can come with only 2, one on each side. It depends on the mechanical quality of your robot
Comment by Hypomania on 2018-07-26:
@destogl, wouldn't the back left wheel spin at the same speed as front left wheel (same thing for the right side)?
Comment by destogl on 2018-07-26:
That is what i meant about 2 encoders. But if mechanics is crappy strange things can happen :) (just my experience working with crappy mechanics)
Comment by Hypomania on 2018-07-27:
@destogl, thank you for your help, really appreciate it!

