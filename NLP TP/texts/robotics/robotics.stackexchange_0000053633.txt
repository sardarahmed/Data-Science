Q:

Path to resource files in C++ node

Hello fellow developers,
I have trouble determining the path to a folder containing resource files in a self written C++ catkin package. I am using the following macro in CMakeLists.txt to export the resource files (a couple of .xml files btw.):
install(DIRECTORY resources
        DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
)

This creates the following "resources"  folder:
home/ros/catkin_ws/install/share/opencv_ros_node/resources/

I need to access the resource files in my source code here:
string cascade_path = "/home/ros/catkin_ws/src/opencv_ros_node/src/resources/haarcascade.xml";
haar_cascade.load( cascade_path );

Obviously, I do not want to use a hardcoded absolute path. But how can I determine the correct relative path to the resource folder during run time? (Ideally, this should also work if 'catkin_make install' has not been run explicitly)
Any help is appreciated.
Cheers,
Heiko

Originally posted by Huibuh on ROS Answers with karma: 399 on 2013-08-20
Post score: 7

Original comments
Comment by dornhege on 2013-08-20:
I guess you'd be OK if it's in PKG/resources as installed and not PKG/src/resources (or anywhere generically reachable). The src/ directory might not exist for installations.

A:

Use the ros::package API:
ros::package::getPath('PKG_NAME') should give you the package path, where you can append your relative resource path to get a full path.
(under the assumption that this hasn't changed for catkin)

Originally posted by dornhege with karma: 31395 on 2013-08-20
This answer was ACCEPTED on the original site
Post score: 9

Original comments
Comment by Huibuh on 2013-08-20:
Awesome, thanks for your quick help! The only thing is that I now have to hard code 'PKG_NAME'. Is there a command to determine the name of the package this command is executed in?
Comment by dornhege on 2013-08-20:
I guess now it depends on what you want to do: If it's the package the source is in (or always the same), hardcoding would be OK. If that's not the case you can read it from a parameter or similar. Resources are usually given as package://MY_PKG/foo. If you need an open file: pkg: resource_retriever
Comment by Dirk Thomas on 2013-08-20:
The proposes API is still valid with catkin. It resolves the path of the package.xml file which is under INSTALL_PREFIX/share/PKGNAME. You should make sure that the relative path from there is the same as in the source checkout of your package. That ensures that it is found in both devel- and install space. For your example with the resources folder that is the case.
Comment by Huibuh on 2013-08-20:
Thanks guys, I got it working :-)
Comment by VictorLamoine on 2017-02-07:
Is there a way to retrieve the name of the package in which a node is contained? eg: ros::package::getPath(ros::this_package::getName())?
Comment by antoineniotna on 2019-05-07:
Thanks for the help!
Comment by Jägermeister on 2019-05-28:
I keep getting ‘ros::package’ has not been declared errors all the way.
Comment by VictorLamoine on 2019-05-28:
#include <ros/package.h>

