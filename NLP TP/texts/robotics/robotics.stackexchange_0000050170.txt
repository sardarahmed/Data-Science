Q:

Could not resolve rosdep key 'rospkg'

Similar to this thread but the solution there (replace rosdep files) does not change the result.
$ bloom-release --ros-distro groovy rqt_common_plugins groovy
: (cut)
#### Successfully generated 'quantal' debian for package 'rqt_bag_plugins' at version '0.2.15-0'
####

Placing debian template files into 'debian/groovy/rqt_logger_level' branch.

####
#### Generating 'oneiric' debian for package 'rqt_logger_level' at version '0.2.15-0'
####
Generating debian for oneiric...
Could not resolve rosdep key 'rospkg'
Resolve problem with rosdep and then continue to try again.
Continue [Y/n]? Y
Running 'rosdep update'...
Could not resolve rosdep key 'rospkg'
Resolve problem with rosdep and then continue to try again.
Continue [Y/n]? n
Traceback (most recent call last):
  File "/usr/bin/git-bloom-generate", line 9, in <module>
    load_entry_point('bloom==0.3.3', 'console_scripts', 'git-bloom-generate')()
  File "/usr/lib/pymodules/python2.7/bloom/commands/git/generate.py", line 247, in main
    run_generator(generator, args)
  File "/usr/lib/pymodules/python2.7/bloom/commands/git/generate.py", line 162, in run_generator
    gen.post_rebase, destination)
  File "/usr/lib/pymodules/python2.7/bloom/commands/git/generate.py", line 101, in try_execute
    retcode = func(*args, **kwargs)
  File "/usr/lib/pymodules/python2.7/bloom/generators/debian/generator.py", line 231, in post_rebase
    self.generate_debian(data, stamp, distro)
  File "/usr/lib/pymodules/python2.7/bloom/generators/debian/generator.py", line 371, in generate_debian
    self.resolved_dependencies = self.resolve_dependencies(self.depends + self.build_depends, debian_distro)
  File "/usr/lib/pymodules/python2.7/bloom/generators/debian/generator.py", line 491, in resolve_dependencies
    resolved_depends[rosdep_key] = resolve_rosdep_key(rosdep_key, rosdep_view)
  File "/usr/lib/pymodules/python2.7/bloom/generators/debian/generator.py", line 485, in resolve_rosdep_key
    return resolve_rosdep_key(rosdep_key, new_view)
  File "/usr/lib/pymodules/python2.7/bloom/generators/debian/generator.py", line 485, in resolve_rosdep_key
    return resolve_rosdep_key(rosdep_key, new_view)
  File "/usr/lib/pymodules/python2.7/bloom/generators/debian/generator.py", line 487, in resolve_rosdep_key
    .format(rosdep_key))
  File "/usr/lib/pymodules/python2.7/bloom/generators/common.py", line 120, in exit
    raise GeneratorError(retcode)
GeneratorError: Error running generator

<== Error running command 'git-bloom-generate -y rosdebian --prefix release/groovy groovy -i 0'
Release failed, exiting.

The version of source used is available here.
What is wrong? Also, is there anything I should do when re-running bloom-release (since it failed this time. Looks like nothing is pushed yet to the release repository)? Thank you!
python-bloom 0.3.3-1, python-rospkg 1.0.20-1 on Ubuntu Quantal.

Originally posted by 130s on ROS Answers with karma: 10937 on 2013-04-08
Post score: 0

Original comments
Comment by William on 2013-04-09:
What does rosdep resolve rospkg output?
Comment by 130s on 2013-04-09:
ERROR: no rosdep rule for 'rospkg'

A:

The rosdep key for rospkg is python-rospkg not rospkg.
Your package must use python-rospkg not rospkg when declaring a dependency.
% rosdep --rosdistro groovy resolve python-rospkg
#pip
rospkg

Originally posted by William with karma: 17335 on 2013-04-09
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by 130s on 2013-04-09:
Thanks! Turned out one of the pkgs in the metapkg has rospkg as run_depend (suspicious commit). Hard to tell...
Comment by 130s on 2013-04-09:
So is there a way to detect this rosdep error to happen in the end of releasing action? I think the best practice is to rosdep resolve for all dependencies in package.xm?

