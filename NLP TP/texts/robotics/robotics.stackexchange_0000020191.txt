Q:

How to deal with a joint suddenly having to make a large change in angle during linear interpolation?

After having set up the inverse kinematics for each intermediate point on a line that the tcp is supposed to travel, I encountered a problem that stops the tcp when it is supposed to travel along the line. While all other joints do not have to make big changes  in the joint angles between the intermediate points, a joint has to rotate from -1 rad to 1 rad between two intermediate points, which is a very big rotation compared to the other joints. I understand that all joints have to make a different amount of angle change between two intermediate points, but the joint that has to do the large angle change cannot rotate as fast to compensate for this.
Should the other joints wait until the rotation of the joint is finished and then continue with the interpolation? This seems to be the only reasonable solution for me. However, this would mean a short interruption of the movement of the tcp on the line.
Therefore, I am confused by tasks that require the tcp to move at a constant speed on a line

A:

It sounds as if the path the robot is traversing comes close to a singularity.  This could be a wrist or an arm singularity.  For these situations, you only have two options with this type of robot:  either slow the path speed (possibly by setting your interpolation points closer together), or move the path within the robot’s workspace to avoid the singular configuration.  
If you don’t do these, the tcp will deviate from the path (if you don’t wait for the large joint motion to complete), or it will dwell along the path (if you do wait for the large joint motion to complete).  This is what makes singularities so challenging for tasks which require a certain path speed, such as seam welding or grinding.  

