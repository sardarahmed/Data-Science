Q:

Implementing costmap_2d layer with pre-Hydro costmap

The project I'm working on uses a costmap that was created before the new costmap_2d implementation. I'm working in Indigo now, but the costmap hasn't been upgraded at all since the ROS version switch. I'd like to implement a new layer, so I'm just trying to get the tutorial Grid Layer set up. I worked through the 'Creating a New Layer' tutorial, but I'm not really sure what else I'll have to add in order to implement this new layer. I know the new code compiled during the catkin_make, but I'm not sure where to add the new layer. Will I need something in the C++ code that creates the original costmap object? Any yaml or xml changes that need to be made? Thanks!

Originally posted by mattc_vec on ROS Answers with karma: 50 on 2015-07-06
Post score: 0

A:

Well, the layers need to be added in your configuration file.
See the tutorial here on how to do this.

Originally posted by mgruhler with karma: 12390 on 2015-07-06
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by mattc_vec on 2015-07-08:
Yeah, I completed that tutorial. I've managed create the new layer by specifying a plugins array in a .yaml file I load in the roslaunch file. This plugins array overwrites the existing one, and erases the static, inflation, and obstacle layers.
Comment by mattc_vec on 2015-07-08:
Is there any way to add the new layer to the existing plugins array? If I specify these layers in the yaml as well, they use the default cost_scaling_factor and inflation radius, which I don't want.
Comment by David Lu on 2015-07-08:
There is no way to just add to the existing plugins. However, if you start the costmap without using the new yaml file, it will set up your parameter space with the new style parameters, listing the existing layers and moving the parameters for cost_scaling_factor, etc. Copy that to your launch file

