Q:

How to understand robot_radius in costmap parameters and inflation_radius in inflation_layer?

When I just set inflation_radius to 0.5 in inflation_layer, the generated costmap looks like this in rviz:

When I add the global parameter robot_radius to 0.2 in the costmap, the generated costmap looks like this in rviz:

It seems that the area originally belonging to inflation_radius is narrowed.
Moreover, during the navigation process, I found that the robot could not enter the area of inflation_radius.
What I want to ask is:

Is it possible to set inflation_radius to the radius of the robot without setting the value of robot_radius while ensuring safe navigation (without hitting obstacles and boundaries)?

Why does costmap have both global parameter robot_radius and inflation_layer plugin parameter inflation_radius? Is this redundant, or are there any other considerations for this setting?

Originally posted by willzoe on ROS Answers with karma: 29 on 2020-04-23
Post score: 2

A:

Check out the documentation here. There is the area around obstacles that will result in collision, which are dictated by the robot's radius. There is the area near obstacles where safe but not preferable navigation can take place, which is dictated by the inflation radius.
Setting them equal will likely result in navigation very close to the obstacles.

Originally posted by David Lu with karma: 10932 on 2020-04-23
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by parzival on 2020-04-23:
So the robot can enter area in inflation radius, unlike what @willzoe is saying?
Comment by willzoe on 2020-04-23:
I may not have made it clear. When I set the parameter robot_radius to 0.2 and the parameter inflation_radius to 0.5, the inflation area around obstacles is divided into two parts: one part is the part close to the obstacle, its width is specified by robot_radius, and the robot cannot enter this part; the other part is near the free space (its color varies with the distance from the obstacle), and is accessible to the robot.
Comment by David Lu on 2020-04-23:
@parzival Yes, if I understand what you're saying.

