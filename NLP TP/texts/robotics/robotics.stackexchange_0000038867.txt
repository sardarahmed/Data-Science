Q:

Dependencies and rosmake in Fuerte and following distributions

I wonder how future ROS distributions will manage dependencies, in particular of packages that don't contain source code but only launch files and how users are supposed to build all dependencies then. 
As far as I can see, just calling rosmake would not work anymore if some stacks are catkinized and haven't been released as Debian packages yet. 
One of the nice (and I guess most important) features of ROS was always that it makes it really easy to share source code because one could just check out some code, rosmake a package that maybe just contains a launch file and roslaunch the launch file. Lot's of code out there hasn't been released yet and is only available as source, the same holds for internal ROS repositories. How will this work in future ROS releases when more stacks are converted to catkin? Is there any documentation that I missed on where ROS is going after the future?

Originally posted by Lorenz on ROS Answers with karma: 22731 on 2012-03-21
Post score: 2

A:

I think this is more a Groovy discussion than Fuerte.
In Fuerte, the goal was to get catkin builds working reliably for the core ROS stacks. An immediate benefit is the ability to build PCL and other external libraries without ROS wrappers for things like messages. Other stacks should continue using rosmake.
In Groovy, the catkin build will probably be rolled out for general use. I agree that the issues you raise must be addressed. Everyone is welcome to participate in the build design discussions.
Groovy UPDATE (2012-09-01): a revised catkin is available for general use.
Be aware that catkin packages may not depend on rosbuild packages. So, you cannot convert a package to the new build system until all its dependencies have been converted.

Originally posted by joq with karma: 25443 on 2012-03-21
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Lorenz on 2012-03-21:
Just to clarify: does that mean that I should wait with porting all my stacks to catkin until there is a solution if I want to have a rosmake like behavior?
Comment by joq on 2012-03-21:
That's what I plan to do. Others may differ.
Comment by joq on 2012-06-19:
There is now a Groovy planning group for this, http://ros.org/wiki/groovy/Planning/Buildsystem

