Q:

Reseting time or world messes with joint_state_controller

After time or world reset, joint_state_controller stops publishing /joint_states for a while and then it catches. This window can take quite a long time. I suppose, it is caused by publishing frequency mechanism, which cannot recover from time reset and just waits to get to the time of reset (source code here).
Is this a standard behaviour? Can it be avoided otherwise then rewriting the controller itself?

Originally posted by m.bahno on Gazebo Answers with karma: 13 on 2021-06-02
Post score: 0

A:

The ros controllers were not developed for Gazebo. So, for a real robot, this code is valid.
If this behavior is a problem for you, then you have two options:

write a world plugin that initializes time upon reset, such that it's strictly increasing

write a model plugin that reloads the controllers upon reset. You can use the controller manager services for that
class Plugin : public ModelPlugin {
virtual void Reset() override {
ctrl_mngr_srv.call(...);
}
};

Otherwise, GazeboRosControlPlugin should address this directly.

Originally posted by nlamprian with karma: 833 on 2021-06-03
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by m.bahno on 2021-06-04:
Thanks for the answer! Looking at the code, I believe that JointStateController will not be corrected by GazeboRosControlPlugin on time restart, since it holds its own last update time value. This was also my experience from experiments. Another thing was, that also other controllers misbehaved after time resetting (even with GazeboRosControlPlugin). However, on world reset they worked just fine.

