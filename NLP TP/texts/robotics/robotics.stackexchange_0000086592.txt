Q:

How can I add makefile funcionality to my CMakeLists.txt

Hello, I have got two pieces of software. One part is a simulation-software (CarMaker 6.0.4) written in C and I make it with a makefile, whereas I make the other part of the software (ROS kinetic) with a CMakeLists.txt file. I want to take a part of CarMaker-Code and include it in a ROS-node, so I can publish data on this ROS node which I get from the simulation. 
The whole thing is running on Linux Ubuntu 16.04 on a Macbook pro. 
gcc version: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0
My ROS Node looks like this: 

This code block was moved to the following github gist:
https://gist.github.com/answers-se-migration-openrobotics/68adfcbbcbdf4382743b7aa140404370

My CMakeLists.txt looks like this: 
cmake_minimum_required(VERSION 2.8.3)
project(BachelorThesisTest)

## Compile as C++11, supported in ROS Kinetic and newer
# add_compile_options(-std=c++11)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  roscpp
  rospy
  std_msgs
  message_generation
)

## System dependencies are found with CMake's conventions
#find_package(boost REQUIRED COMPONENTS system)

## Uncomment this if the package has a setup.py. This macro ensures
## modules and global scripts declared therein get installed
## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html
# catkin_python_setup()

################################################
## Declare ROS messages, services and actions ##
################################################

## To declare and build messages, services or actions from within this
## package, follow these steps:
## * Let MSG_DEP_SET be the set of packages whose message types you use in
##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).
## * In the file package.xml:
##   * add a build_depend tag for "message_generation"
##   * add a build_depend and a run_depend tag for each pa

ckage in MSG_DEP_SET
##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in
##     but can be declared for certainty nonetheless:
##     * add a run_depend tag for "message_runtime"
## * In this file (CMakeLists.txt):
##   * add "message_generation" and every package in MSG_DEP_SET to
##     find_package(catkin REQUIRED COMPONENTS ...)
##   * add "message_runtime" and every package in MSG_DEP_SET to
##     catkin_package(CATKIN_DEPENDS ...)
##   * uncomment the add_*_files sections below as needed
##     and list every .msg/.srv/.action file to be processed
##   * uncomment the generate_messages entry below
##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)

## Generate messages in the 'msg' folder
 add_message_files(DIRECTORY msg
   FILES
   Num.msg
   
 )

## Generate services in the 'srv' folder
 add_service_files(DIRECTORY srv
   FILES
   AddTwoInts.srv
   
 )

## Generate actions in the 'action' folder
# add_action_files(
#   FILES
#   Action1.action
#   Action2.action
# )

## Generate added messages and services with any dependencies listed here

 generate_messages(
   DEPENDENCIES
   std_msgs
 )

################################################
## Declare ROS dynamic reconfigure parameters ##
################################################

## To declare and build dynamic reconfigure parameters within this
## package, follow these steps:
## * In the file package.xml:
##   * add a build_depend and a run_depend tag for "dynamic_reconfigure"
## * In this file (CMakeLists.txt):
##   * add "dynamic_reconfigure" to
##     find_package(catkin REQUIRED COMPONENTS ...)
##   * uncomment the "generate_dynamic_reconfigure_options" section below
##     and list every .cfg file to be processed

## Generate dynamic reconfigure parameters in the 'cfg' folder
# generate_dynamic_reconfigure_options(
#   cfg/DynReconf1.cfg
#   cfg/DynReconf2.cfg
# )

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if your package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
#  INCLUDE_DIRS include
#  LIBRARIES BachelorThesisTest
#  CATKIN_DEPENDS roscpp rospy std_msgs
#  DEPENDS system_lib
)

###########
## Build ##

###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
include_directories(
# include
  ${catkin_INCLUDE_DIRS}
  ${/home/roboracemac3/catkin_ws/src/BachelorThesisTest/src/APO}
)

## Declare a C++ library
# add_library(${PROJECT_NAME}
#   src/${PROJECT_NAME}/BachelorThesisTest.cpp
# )

## Add cmake target dependencies of the library
## as an example, code may need to be generated before libraries
## either from message generation or dynamic reconfigure
# add_dependencies(${PROJECT_NAME} ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})

## Declare a C++ executable
## With catkin_make all packages are built within a single CMake context
## The recommended prefix ensures that target names across packages don't collide
# add_executable(${PROJECT_NAME}_node src/BachelorThesisTest_node.cpp)

## Rename C++ executable without prefix
## The above recommended prefix causes long target names, the following renames the
## target back to the shorter version for ease of user use
## e.g. "rosrun someones_pkg node" instead of "rosrun someones_pkg someones_pkg_node"
# set_target_properties(${PROJECT_NAME}_node PROPERTIES OUTPUT_NAME node PREFIX "")

## Add cmake target dependencies of the executable
## same as for the library above
# add_dependencies(${PROJECT_NAME}_node ${${PROJECT_NAME}_EXPORTED_TARGETS} 

${catkin_EXPORTED_TARGETS})

## Specify libraries to link a library or executable target against
# target_link_libraries(${PROJECT_NAME}_node
#   ${catkin_LIBRARIES}
# )

#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
# install(PROGRAMS
#   scripts/my_python_script
#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark executables and/or libraries for installation
# install(TARGETS ${PROJECT_NAME} ${PROJECT_NAME}_node
#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark cpp header files for installation
# install(DIRECTORY include/${PROJECT_NAME}/

#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
# install(FILES
#   # myfile1
#   # myfile2
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
# )

#############
## Testing ##
#############

## Add gtest based cpp test target and link libraries
# catkin_add_gtest(${PROJECT_NAME}-test test/test_BachelorThesisTest.cpp)
# if(TARGET ${PROJECT_NAME}-test)
#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
# endif()

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)

 add_executable(talker src/talker.cpp)
    target_link_libraries(talker ${catkin_LIBRARIES})
    add_dependencies(talker BachelorThesisTest_generate_messages_cpp)
    
    add_executable(listener src/listener.cpp)
    target_link_libraries(listener ${catkin_LIBRARIES})
    add_dependencies(listener BachelorThesisTest_generate_messages_cpp)
    
    
    
    ## Build service client and server

# %Tag(SRVCLIENT)%
add_executable(add_two_ints_server src/add_two_ints_server.cpp)
target_link_libraries(add_two_ints_server ${catkin_LIBRARIES})
add_dependencies(add_two_ints_server BachelorThesisTest_gencpp)

add_executable(add_two_ints_client src/add_two_ints_client.cpp)
target_link_libraries(add_two_ints_client ${catkin_LIBRARIES})
add_dependencies(add_two_ints_client BachelorThesisTest_gencpp)

My makefile for the simulation software code looks like this: 

#******************************************************************************
#**  CarMaker - Version 6.0.4
#**  Vehicle Dynamic Simulation Toolkit
#**
#**  Copyright (C)   IPG Automotive GmbH
#**                  Bannwaldallee 60             Phone  +49.721.98520.0
#**                  76185 Karlsruhe              Fax    +49.721.98520.99
#**                  Germany                      WWW    www.ipg-automotive.com
#******************************************************************************

# For a 64-bit application include MakeDefs64 instead.
include /opt/ipg/hil/linux-6.0.4/include/MakeDefs

#OPT_CFLAGS =   -g
OPT_CFLAGS =    -Os -DNDEBUG

LIBS =      $(CARMAKER_LIB_DIR)/libapo-client-$(ARCH).a

OBJS =      ApoClntDemo.o ApoClnt.o GuiCmd.o DVAWrite.o DVARead.o

ApoClntDemo.$(ARCH)$(EXE_EXT):  $(OBJS)
    $(CC) $(LDFLAGS) -o $@ $(OBJS) $(LIBS) $(LD_LIBS_OS)

clean:
    rm -f *~ *.o a.out a.exe core core.* ApoClntDemo.$(ARCH)$(EXE_EXT)

ApoClntDemo.o:  ApoClnt.h DVA.h
ApoClnt.o:  ApoClnt.h
GuiCmd.o:   GuiCmd.h ApoClnt.h
DVARead.o:  DVA.h ApoClnt.h
DVAWrite.o: DVA.h

# %EndTag(SRVCLIENT)%

 
When I make my catkin workspace I get the following error: 

   roboracemac3@roboracemac3:~/catkin_ws$ catkin_make
    Base path: /home/roboracemac3/catkin_ws
    Source space: /home/roboracemac3/catkin_ws/src
    Build space: /home/roboracemac3/catkin_ws/build
    Devel space: /home/roboracemac3/catkin_ws/devel
    Install space: /home/roboracemac3/catkin_ws/install
    WARNING: Catkin package name "BachelorThesisTest" does not follow the naming conventions. It should start with a lower case letter and only contain lower case letters, digits, and underscores.
    ####
    #### Running command: "make cmake_check_build_system" in "/home/roboracemac3/catkin_ws/build"
    ####
    ####
    #### Running command: "make -j2 -l2" in "/home/roboracemac3/catkin_ws/build"
    ####
    [  0%] Built target _BachelorThesisTest_generate_messages_check_deps_AddTwoInts
    [  0%] Built target _BachelorThesisTest_generate_messages_check_deps_Num
    [  0%] Built target std_msgs_generate_messages_cpp
    [  0%] Built target std_msgs_generate_messages_eus
    [  0%] Built target std_msgs_generate_messages_py
    [  0%] Built target std_msgs_generate_messages_nodejs
    [  0%] Built target std_msgs_generate_messages_lisp
[  8%] Built target BachelorThesisTest_generate_messages_cpp
[ 21%] Built target BachelorThesisTest_generate_messages_eus
[ 39%] Built target BachelorThesisTest_generate_messages_py
[ 47%] Built target BachelorThesisTest_generate_messages_nodejs
[ 56%] Built target BachelorThesisTest_generate_messages_lisp
[ 56%] Built target BachelorThesisTest_gencpp
[ 60%] Linking C executable /home/roboracemac3/catkin_ws/devel/lib/BachelorThesisTest/ApoClnt
[ 65%] Linking CXX executable /home/roboracemac3/catkin_ws/devel/lib/BachelorThesisTest/talker
/usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu/crt1.o: In function `_start':
(.text+0x20): undefined reference to `main'
CMakeFiles/ApoClnt.dir/src/APO/ApoClnt.c.o: In function `query_for_apps':
ApoClnt.c:(.text+0x15b): undefined reference to `ApocQueryServers'
ApoClnt.c:(.text+0x167): undefined reference to `ApocWaitIO'
ApoClnt.c:(.text+0x171): undefined reference to `ApocPoll'
ApoClnt.c:(.text+0x176): undefined reference to `ApocQueryDone'
CMakeFiles/ApoClnt.dir/src/APO/ApoClnt.c.o: In function `find_app':
ApoClnt.c:(.text+0x1b6): undefined reference to `ApocGetServer'
ApoClnt.c:(.text+0x248): undefined reference to `ApocGetServerCount'
CMakeFiles/ApoClnt.dir/src/APO/ApoClnt.c.o: In function `connect_to_app':
ApoClnt.c:(.text+0x277): undefined reference to `ApocOpenServer'
ApoClnt.c:(.text+0x28e): undefined reference to `ApocConnect'
ApoClnt.c:(.text+0x2a1): undefined reference to `ApocWaitIO'
ApoClnt.c:(.text+0x2ab): undefined reference to `ApocPoll'
ApoClnt.c:(.text+0x2bc): undefined reference to `ApocGetStatus'
ApoClnt.c:(.text+0x2d6): undefined reference to `ApocGetStatus'
ApoClnt.c:(.text+0x2e9): undefined reference to `ApocCloseServer'
CMakeFiles/ApoClnt.dir/src/APO/ApoClnt.c.o: In function `subscribe':
ApoClnt.c:(.text+0xc1e): undefined reference to `ApocSubscribe'
ApoClnt.c:(.text+0xc39): undefined reference to `ApoGetTime_ms'
ApoClnt.c:(.text+0xc52): undefined reference to `ApoClnt_PollAndSleep'
ApoClnt.c:(.text+0xc63): undefined reference to `ApoGetTime_ms'

CMakeFiles/ApoClnt.dir/src/APO/ApoClnt.c.o: In function `ApoClnt_Subscribe':
ApoClnt.c:(.text+0xccf): undefined reference to `ApocGetStatus'
CMakeFiles/ApoClnt.dir/src/APO/ApoClnt.c.o: In function `ApoClnt_Unsubscribe':
ApoClnt.c:(.text+0xe64): undefined reference to `ApocGetStatus'
ApoClnt.c:(.text+0xe96): undefined reference to `ApocSubscribe'
collect2: error: ld returned 1 exit status
BachelorThesisTest/CMakeFiles/ApoClnt.dir/build.make:113: recipe for target '/home/roboracemac3/catkin_ws/devel/lib/BachelorThesisTest/ApoClnt' failed
make[2]: *** [/home/roboracemac3/catkin_ws/devel/lib/BachelorThesisTest/ApoClnt] Error 1
CMakeFiles/Makefile2:439: recipe for target 'BachelorThesisTest/CMakeFiles/ApoClnt.dir/all' failed
make[1]: *** [BachelorThesisTest/CMakeFiles/ApoClnt.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
CMakeFiles/talker.dir/src/talker.cpp.o: In function `connection_ok()':
talker.cpp:(.text+0xcf): undefined reference to `ApocGetStatus'
CMakeFiles/talker.dir/src/talker.cpp.o: In function `ApoClnt_PollAndSleep':
talker.cpp:(.text+0x103): undefined reference to `ApocWaitIO'
talker.cpp:(.text+0x116): undefined reference to `ApocPoll'
talker.cpp:(.text+0x137): undefined reference to `ApocGetData'
talker.cpp:(.text+0x15c): undefined reference to `ApoClnt_UpdateQuantVars'
talker.cpp:(.text+0x17a): undefined reference to `ApocDictChanged'
talker.cpp:(.text+0x192): undefined reference to `ApoClnt_Resubscribe'
talker.cpp:(.text+0x1b6): undefined reference to `ApocGetAppMsg'
talker.cpp:(.text+0x1dd): undefined reference to `GuiCmd_HandleMsgs'
talker.cpp:(.text+0x203): undefined reference to `DVA_HandleMsgs'
CMakeFiles/talker.dir/src/talker.cpp.o: In function `pause(int)':
talker.cpp:(.text+0x236): undefined reference to `ApoGetTime_ms'
talker.cpp:(.text+0x249): undefined reference to `ApoGetTime_ms'
CMakeFiles/talker.dir/src/talker.cpp.o: In function `setup_client()':
talker.cpp:(.text+0x274): undefined reference to `ApocInit'
talker.cpp:(.text+0x2ae): undefined reference to `ApoClnt_Connect'
talker.cpp:(.text+0x2df): undefined reference to `GuiCmd_IsReady'
CMakeFiles/talker.dir/src/talker.cpp.o: In function `teardown_client()':
talker.cpp:(.text+0x30d): undefined reference to `ApocCloseServer'
CMakeFiles/talker.dir/src/talker.cpp.o: In function `show_result()':
talker.cpp:(.text+0x33a): undefined reference to `GuiCmd_GetResult'
CMakeFiles/talker.dir/src/talker.cpp.o: In function `demo_DVARead()':
talker.cpp:(.text+0xb73): undefined reference to `GuiCmd_Eval'
talker.cpp:(.text+0xb87): undefined reference to `GuiCmd_Eval'
talker.cpp:(.text+0xb9b): undefined reference to `GuiCmd_Eval'
talker.cpp:(.text+0xbbe): undefined reference to `DVA_Read'
talker.cpp:(.text+0xbd0): undefined reference to `DVA_GetResult'
talker.cpp:(.text+0xce7): undefined reference to `GuiCmd_Eval'
talker.cpp:(.text+0xcfb): undefined reference to `GuiCmd_Eval'
collect2: error: ld returned 1 exit status
BachelorThesisTest/CMakeFiles/talker.dir/build.make:113: recipe for target '/home/roboracemac3/catkin_ws/devel/lib/BachelorThesisTest/talker' failed
make[2]: *** [/home/roboracemac3/catkin_ws/devel/lib/BachelorThesisTest/talker] Error 1
CMakeFiles/Makefile2:476: recipe for target 'BachelorThesisTest/CMakeFiles/talker.dir/all' failed
make[1]: *** [BachelorThesisTest/CMakeFiles/talker.dir/all] Error 2
Makefile:138: recipe for target 'all' failed
make: *** [all] Error 2
Invoking "make -j2 -l2" failed

I`m really new to programming, so I would be really happy if somebody could help me fix this problem. Thank you very much!
Originally posted by felix_a on ROS Answers with karma: 11 on 2018-04-16
Post score: 0

A:

I have a feeling this is a bit of an xy-problem.
If you're actually asking how to link a C library and a C++ program together, see #q227146 for some comments.
Perhaps also #q200205.

Originally posted by gvdhoorn with karma: 86574 on 2018-04-16
This answer was ACCEPTED on the original site
Post score: 1

