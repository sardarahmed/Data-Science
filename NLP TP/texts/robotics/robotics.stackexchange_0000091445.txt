Q:

Replacement for rospy.time.now() in ROS2?

In ROS1 if I wanted to publish an Odometry msg I would use rospy.Time.now() to get the current time and publish the odom msg using that time. However, I haven't been able to find anything similar in ROS2? Does anyone know what functionality I can use to get the time for a msg I am publishing in ROS2?
now = rospy.Time.now()
odom = Odometry()
odom.header.frame_id = self._odom_frame
odom.header.stamp = now

Originally posted by OwnageManFromLOL on ROS Answers with karma: 149 on 2019-04-21
Post score: 9

A:

There's no longer a global instance of the communication library that you can rely on in rclpy.
You need to get a clock instance from your node instance.
my_node.get_clock().now()

More info on the design can be found here: https://design.ros2.org/articles/clock_and_time.html

Originally posted by tfoote with karma: 58457 on 2019-04-21
This answer was ACCEPTED on the original site
Post score: 17

Original comments
Comment by OwnageManFromLOL on 2019-04-22:
Hey tfoote thanks for your help :)
Comment by flynneva on 2020-06-09:
dont forget to add .to_msg() at the end.
another helpful answer
Comment by mschickler on 2020-08-26:
The .to_msg() is critical!
Comment by Wissem on 2023-03-12:
hello, is it the same for c++ ?
Comment by tfoote on 2023-03-12:
Yes, there's an equivalent API in rclcpp

