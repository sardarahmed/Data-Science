Q:

Keep track of the shortest distance to collision using python

Hi,
I'm currently using the moveit_commander through python to command moveit, and everything works great. However, I want to calculate the shortest distance to collision along the planned trajectory. I found FCL might be able to do that, but materials I found are mainly C++ codes, and it seems there's no released python wrapper for the planning scene. I've also searched through moveit_commander namespace reference ( http://docs.ros.org/jade/api/moveit_commander/html/namespacemoveit__commander.html ), yet still can't find anything relevant.
Is there anything in python or unreleased python wrapper I can use to achieve what I want to do?
Thanks

Originally posted by d0v0b on ROS Answers with karma: 11 on 2017-09-01
Post score: 1

A:

Quite a lot of MoveIt is not exposed as python interfaces.
I am not aware of a python wrapper for the planning scene.
So if you want to use it as you propose, you will either have to
write it in C++ or write a python wrapper for the PlanningScene class.
The latter is definitely no small endeavor.
In C++ you will need to have a maintained (i.e. updating) planning scene.
If you just create a PlanningScene object yourself, this will always be empty
and not reflect the current world state.
You could create a PlanningSceneMonitor to achieve this, although it
would be much faster if you created a MoveGroupCapability for it.
An alternative would be to check the generated trajectory beforehand.

Originally posted by v4hn with karma: 2950 on 2017-09-02
This answer was ACCEPTED on the original site
Post score: 0

