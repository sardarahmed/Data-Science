Q:

How to use services?

According to this tutorial [http://wiki.ros.org/ROS/Tutorials/WritingServiceClient(c++)], I thought we could use a service like :
    client = n.serviceClient<std_srvs::Empty>("/reset_positions");
    ros::service::waitForService("/reset_positions");
    std_srvs::Empty reset_srv;
    client.call(reset_srv);

But execution is blocked on the waitForService instruction and return :

[ INFO] [1495007235.234008766]: waitForService: Service [/reset_positions] has not been advertised, waiting...

Is there something I missed to run this service ?

Originally posted by Milow on ROS Answers with karma: 1 on 2017-05-17
Post score: 0

A:

It looks like you have only a client, but no node that is actually providing the service. What is the outout of 'rosservice list' before running your client?

Originally posted by NEngelhard with karma: 3519 on 2017-05-17
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Milow on 2017-05-17:
There is only this two lines :
/rosout/get_loggers 
/rosout/set_logger_level
How can I launch the node to provide the service ?
Comment by NEngelhard on 2017-05-17:
Just do the tutorial you linked...
Comment by Milow on 2017-05-17:
I did it, I created a ServiceServer  who is running a personnal service. I can call this service (only displaying a "hello world" when called). But I don't see how to use the reset_positions service to reset the position of my turtlebot.
Comment by Milow on 2017-05-18:
So to reword, I know how to create my own service, but it's not what I want to do. I would like to run an existing service called "reset_positions". I can create a service called the same name and advertised it from a node and run that, that's the tutorial, but it would be useless to me. Any idea ?
Comment by shantanu543 on 2017-06-21:
Can anyone tell me how client.call function uses TCP protocol ?

