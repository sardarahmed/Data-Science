Q:

How do you upgrade pcl to the current release?

How can I update/upgrade the pcl library used by ROS?  I downloaded the latest source code for PCL from pointclouds.org, added some functionality, and now I want to use this new code in my ROS nodes. However, I cannot determine how to overwrite the ROS pcl package.
Things I've tried:

Replacing the files/libraries I changed in the pcl package. Doesn't work because other stuff was updated in addition to the stuff I changed.

Removing the dependency on the ROS pcl package and use CMakeLists.txt to link to the system pcl library. Doesn't work because pcl and ROS try to declare some of the same classes.

Someone must know how to do this because pcl is so popular in ROS. It would be nice to have some documentation on it.
Thanks, Kyle.

Originally posted by Kyle Strabala on ROS Answers with karma: 186 on 2011-10-23
Post score: 5

A:

You have encountered the basic problem of integration.  Like every other library used in ROS we have picked a version of PCL to integrate around. Usually this is not the newest version of any library, and even if it started as the newest version, as soon as there's a new feature release it will no longer be the newest version. Most users of ROS and PCL together use the integrated version for we work hard to keep the API stable and not break their code.
If you would like to change what version you are using, as you stated you have three options, either replace it with the other version, patch the feature back against the old version or install the new version side by side with the old one.
If you want specific features from newer versions you need to choose whether the feature you want is worth upgrading your installation to a non standard version and possibly breaking other code in your repository.  Another option is to backport the specific features you want to change into a patch for your existing library. And lastly you can try to install the library side by side as you suggested, however this too is hard due to namespace collisions.  If you want to do this you cannot link against both versions of the library.  (Removing the pcl dependency is not enough, you cannot depend on any package which depends on PCL either.)
As @joq mentioned we're working on making it so that PCL and ROS integrate in a more standard way in future versions, however that will not solve the fundamental problem.

Originally posted by tfoote with karma: 58457 on 2011-10-24
This answer was ACCEPTED on the original site
Post score: 6

