Q:

How to determine which direction is the forward direction of the car in ROS？

after writing the description file for the car myself. urdf.xacro, the car looks normal in both Gazebo and rviz. But when I use Teleop_ Twist_ When the keyboard controls the movement of the car, it is found that the direction of the car's forward and backward is reversed. What is the problem?
<material name="White">
    <color rgba="0.7 0.7 0.7 1"/>
</material>

<xacro:property name="ns" value="robot1"/>
<link name="base_footprint"/>
<!-- <link name="imu_link"/> -->

<!-- common link-->
<xacro:macro name="common_link" params="name material path *origin">
<!-- 
    *origin是块参数，前面的都是字符串参数。使用*的话默认将调用这个comman_link的部件中第一个模块(比如front_right_wheel中的inertial)
    然后通过<xacro:insert_block name="origin"/>将该模块导入
 -->
    <link name="${name}">
        <visual>
            <geometry>
                <mesh filename="package://yahboomcar_description/meshes/${path}/${name}.STL"/>
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <material name="${material}"/>
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://yahboomcar_description/meshes/${path}/${name}.STL"/>
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </collision>
        <xacro:insert_block name="origin"/>
    </link>
</xacro:macro>

<!-- continuous joint-->
<xacro:macro name="continuous_joint" params="name parent child xyz rpy axis">
    <joint name="${name}" type="continuous">
        <parent link="${parent}"/>
        <child link="${child}"/>
        <origin xyz="${xyz}" rpy="${rpy}"/>
        <axis xyz="${axis}"/>
        <limit lower="${-pi}" upper="${pi}" effort="100" velocity="1"/>
    </joint>
</xacro:macro>
<!-- fixed joint-->
<xacro:macro name="fixed_joint" params="name parent child xyz rpy">
    <joint name="${name}" type="fixed">
        <parent link="${parent}"/>
        <child link="${child}"/>
        <origin xyz="${xyz}" rpy="${rpy}"/>
    </joint>
</xacro:macro>

<xacro:common_link name="base_link" material="Green" path="mecanum">
    <inertial>
        <origin xyz="0.00498197982182523 5.70233829969297E-05 -0.0121008098068578" rpy="0 0 ${pi}"/>
        <mass value="0.486218814966626"/>
        <inertia
                ixx="0.00196277727666921"
                ixy="2.50447049446755E-07"
                ixz="0.000140534767811098"
                iyy="0.00457256033711368"
                iyz="2.68618064993882E-07"
                izz="0.00493927269870476"/>
        </inertial>
</xacro:common_link>
<xacro:fixed_joint name="base_joint" parent="base_footprint" child="base_link" xyz="0.0 0.0 0.0815" rpy="0 0 0"/>
<!-- <fixed_joint name="base_imu" parent="base_link" child="imu_link" xyz="-0.06 0.01 0.01" rpy="0 3.1415 1.5707"/> -->
<gazebo reference="base_link">
    <material value="Gazebo/Green"/>
</gazebo>

<xacro:common_link name="front_right_wheel" material="White" path="mecanum">
    <inertial>
        <origin xyz="1.9051E-06 -2.3183E-07 -0.00064079" rpy="0 0 0"/>
        <mass value="0.051532"/>
        <inertia ixx="1.4595E-05" ixy="-4.3975E-10" ixz="4.415E-10"
                 iyy="1.4594E-05" iyz="-1.7476E-09" izz="2.4264E-05"/>
    </inertial>
</xacro:common_link>
<xacro:continuous_joint name="front_right_joint" parent="base_link" child="front_right_wheel"
                  xyz="0.08 -0.0845 -0.0389" rpy="-${pi/2} 0 ${pi}" axis="0 0 1"/>
<gazebo reference="front_right_wheel">
    <material value="Gazebo/Grey"/>
</gazebo>

<xacro:common_link name="front_left_wheel" material="White" path="mecanum">
    <inertial>
        <origin xyz="2.3728E-06 -9.4228E-07 0.00064068" rpy="0 0 0"/>
        <mass value="0.051532"/>
        <inertia ixx="1.4597E-05" ixy="-4.7945E-10" ixz="-2.4786E-10"
                 iyy="1.4598E-05" iyz="1.7972E-09" izz="2.4267E-05"/>
    </inertial>
</xacro:common_link>
<xacro:continuous_joint name="front_left_joint" parent="base_link" child="front_left_wheel"
                  xyz="0.08 0.084492 -0.0389" rpy="${pi/2} 0 0" axis="0 0 1"/>
<gazebo reference="front_left_wheel">
    <material value="Gazebo/Grey"/>
</gazebo>

<xacro:common_link name="back_right_wheel" material="White" path="mecanum">
    <inertial>
        <origin xyz="-1.75924169923403E-06 1.28388821071107E-06 -0.000590549296238266" rpy="0 0 0"/>
        <mass value="0.051532"/>
        <inertia ixx="1.45974152250002E-05" ixy="1.94850559178397E-10" ixz="-1.61846387282284E-09"
                 iyy="1.4596501955693E-05" iyz="-6.27904057423818E-10" izz="2.42663091380451E-05"/>
    </inertial>
</xacro:common_link>
<xacro:continuous_joint name="back_right_joint" parent="base_link" child="back_right_wheel"
                  xyz="-0.08 -0.0845 -0.03946" rpy="-${pi/2} 0 ${pi}" axis="0 0 1"/>
<gazebo reference="back_right_wheel">
    <material value="Gazebo/Grey"/>
</gazebo>

<xacro:common_link name="back_left_wheel" material="White" path="mecanum">
    <inertial>
        <origin xyz="-4.01213085227115E-07 2.04910264598596E-06 0.000590775697051377" rpy="0 0 0"/>
        <mass value="0.051532"/>
        <inertia ixx="1.45942986129926E-05" ixy="-3.19787215398093E-10" ixz="1.74943062058915E-09"
                 iyy="1.45948727598913E-05" iyz="1.61769812110049E-10" izz="2.4263683888153E-05"/>
    </inertial>
</xacro:common_link>
<xacro:continuous_joint name="back_left_joint" parent="base_link" child="back_left_wheel"
                  xyz="-0.08 0.084492 -0.03954" rpy="${pi/2} 0 0" axis="0 0 1"/>
<gazebo reference="back_left_wheel">
    <material value="Gazebo/Grey"/>
</gazebo>

<!-- wheel controller -->
<xacro:macro name="pioneer3dx_joints_state_publisher">
    <gazebo>
        <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
        <robotNamespace></robotNamespace>
        <jointName>front_left_joint, back_left_joint, front_right_joint, back_right_joint</jointName>
        <updateRate>50.0</updateRate>
        <alwaysOn>true</alwaysOn>
        </plugin>
    </gazebo>
</xacro:macro>

<xacro:macro name="pioneer3dx_diff_drive">
    <gazebo>
        <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
            <rosDebugLevel>Debug</rosDebugLevel>
            <publishWheelTF>false</publishWheelTF>
            <robotNamespace>/</robotNamespace>
            <publishTf>1</publishTf>
            <publishWheelJointState>true</publishWheelJointState>
            <updateRate>50</updateRate>
            <leftFrontJoint>front_left_joint</leftFrontJoint>
            <leftRearJoint>back_left_joint</leftRearJoint>
            <rightFrontJoint>front_right_joint</rightFrontJoint>
            <rightRearJoint>back_right_joint</rightRearJoint>
            <wheelSeparation>0.16</wheelSeparation>
            <wheelDiameter>0.065</wheelDiameter>
            <broadcastTF>1</broadcastTF>
            <torque>50</torque>
            <commandTopic>cmd_vel</commandTopic>
            <odometryFrame>odom</odometryFrame> 
            <odometryTopic>odom</odometryTopic> 
            <odometrySource>world</odometrySource>
            <robotBaseFrame>base_footprint</robotBaseFrame>
            <alwaysOn>true</alwaysOn>
            <wheelAcceleration>1.8</wheelAcceleration>
        </plugin>
    </gazebo>
</xacro:macro>

<!-- Motor plugin -->
<xacro:pioneer3dx_diff_drive /> 
<!-- Joints plugin -->
<xacro:pioneer3dx_joints_state_publisher />

 <!-- Laser -->
<xacro:include filename="$(find yahboomcar_description)/xacro/rplidarA1M8.xacro"/>
<xacro:laser name="laser_link" parent="base_link" xyz="0.0435 5.25826986680105E-05 0.11" 
rpy="0 0 0" meshes="package://yahboomcar_description/meshes/laser"/>
<gazebo reference="laser_link">
    <material value="Gazebo/Grey"/>
</gazebo> 

<!-- Velodyne -->
<!-- <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>
<xacro:VLP-16 parent="base_link" name="velodyne" topic="/velodyne_points" hz="10" samples="360" gpu="false" min_angle="-1.57" max_angle="1.57" min_range="0.1">
    <origin xyz="0.125 0 0.25" rpy="0 0 0" />
</xacro:VLP-16> -->

<!-- camera -->
<!-- <xacro:common_link name="camera_link" material="White" path="sensor">
    <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0"/>
        <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    </inertial>
</xacro:common_link>
<xacro:fixed_joint name="camera_joint" parent="base_link" child="camera_link" xyz="0.057105 1.7948E-05 0.03755" rpy="0 0 0"/>
<gazebo reference="camera_link">
    <material value="Gazebo/Grey"/>
</gazebo> -->

A:

You should model your robot such that the front of the robot would align with the +X direction of the frame displayed.You can take a look at REP-105 for more inspiration about what conventions you should follow.

This is a basic example of how you should orient your robot. If for some reason you have to orient it separately, you have to account for that offset everywhere else.

