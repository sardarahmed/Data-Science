Q:

Send data thanks to PDO protocol

I am working on controlling a canopen device thanks to canopen_master.
I got inspired by the canopen_chain_node but it seems that this node only use SDO protocol.
PDO management seems to be implemented in the canopen_master but I wonder how to publish a PDO frame thanks to canopen_master (maybe directly change the data in the OD?).
Is there something that i missed?
Did someone have an example of a ros_canopen SDO publisher?
thanks!

Originally posted by GuillaumeB on ROS Answers with karma: 312 on 2016-04-12
Post score: 0

A:

If you want to use PDOs instead of SDOs, just configure the mapping in the EDS/DCF. ros_canopen will switch to PDO transfer automatically.

Originally posted by Mathias Lüdtke with karma: 1596 on 2016-04-12
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by GuillaumeB on 2016-04-12:
thank you for your answer. I have already configure the PDO mapping in my EDS and I gave the OD based on this file to my canopen::node. But when I use canopen::ObjectStorage::Entry::set() (or cached) it use SDO (I checked it with candump)
Comment by Mathias Lüdtke on 2016-04-12:
Do you use the release or the source overlay(recommended!)?
Please double check your settings. If you still cannot resolve the problem, please open a github issue and provide your settings and the candump.
Comment by GuillaumeB on 2016-04-12:
I am using the branch indigo-devel from the ros-industrial/ros_canopen repo.
Comment by GuillaumeB on 2016-04-14:
I double checked my settings and the problem was my eds file. The parsed value "Number of entries" was not set. Thank you for your help!
Comment by af.villamil231 on 2019-05-03:
Hello, how do you configure the mapping inside the EDS file? Once configured, to send a PDO you still have to use the srv_set_object (or srv_get_object) services or you use the socketcan_bridge package to send PDO frames? thanks!
EDIT: the answer to my second question is here but still, How can i do to configure the mapping inside the EDS? it sounds like I have to modify the dictionary directly but, there is a way to do it with the API? like using canopen_master package functions? Thanks
Comment by Mathias Lüdtke on 2019-05-03:
please don't post new, unrelated questions as a comment in a 3 years old question, which was already resolved.

