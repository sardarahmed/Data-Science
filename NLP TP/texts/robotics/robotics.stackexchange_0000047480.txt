Q:

All types of dependencies in ROS Fuerte

This question is not about a concrete problem, but should help explaining the different types of dependencies in ROS Fuerte. (I'm not sure if this is the ideal place for such a reference, but I am making this question public and let's see where it takes us.)
As far as I understand, there are two main types of dependencies: ROS depencies and system dependencies. The first type comprises ROS packages that are: 1) already installed on your system, 2) available from ROS, and 3) available from other sources (e.g. project partners, university labs). I believe that there are also 4) ROS stack dependencies (to be confirmed). Finally, system dependencies are typically libraries, such as Boost and Qt.
Below, I would like to explain how to deal with each type of dependency. Ideally, the process should be automatable so that anyone wishing to use a package with dependencies can do it with the smallest number of steps and the least amount of ROS knowledge possible.

Originally posted by Benoit Larochelle on ROS Answers with karma: 867 on 2013-01-20
Post score: 1

A:

ROS dependency, already installed

Simply add <depend package="OtherPackage"> in your manifest.xml file

ROS dependency, available from ROS

[to be confirmed and improved]
If the package has a released binary package for your system, you can do something like sudo apt-get install ros-fuerte-other-package and you are now in case #1 above. However, this solution is not nice because it is not automated.

Step 1) Create a yaml file so that ROS can find the source and download it
Step 2) Add <depend package="OtherPackage"> in your manifest.xml file
The user of your package must first do rosdep install MyPackage and then rosmake MyPackage

ROS Q&A that may help further:
http://answers.ros.org/question/9201/how-do-i-install-a-missing-ros-package/
http://answers.ros.org/question/9197/for-new-package-downloading/
http://answers.ros.org/question/9740/automatic-installation-of-dependencies/
http://answers.ros.org/question/9880/satisfying-package-dependencies/
http://answers.ros.org/question/10830/which-deb-package-contains-ros-package-x/
http://answers.ros.org/question/12466/download-a-package-with-rosmake/
http://answers.ros.org/question/34984/using-rosdep-to-install-wg-maintained-stacks/
http://answers.ros.org/question/39571/rosmake-error-no-such-option-rosdep-install/
http://answers.ros.org/question/48301/rosdep-install-sr_control_gui/
http://answers.ros.org/question/50197/bloom-creating-debs-rosdep-cant-resolve-key/
http://answers.ros.org/question/52273/rosdep-and-ros-dependencies/
http://answers.ros.org/question/52547/cannot-locate-rosdep-definition-for-geographicinfo/

ROS dependency, available from other sources

[to be confirmed and improved]

Step 1) Create a yaml file so that ROS can find the source and download it
Step 2) Add <depend package="OtherPackage"> in your manifest.xml file
The user of your package must first do rosdep install MyPackage and then rosmake MyPackage

ROS Q&A that may help further:
http://answers.ros.org/question/36845/cannot-locate-rosdep-definition-for-qt4/
http://answers.ros.org/question/40337/rosdep-doesnt-read-rosdepyaml/
http://answers.ros.org/question/50660/custom-rosdep-rules/

ROS dependency, stack

Simply add <depend stack="OtherStack"> in your stack.xml file

System dependency

Add <rosdep name="OtherLibrary"> in your manifest.xml file
ROS Q&A that may help further:
http://answers.ros.org/question/9430/how-to-use-external-libraries-in-ros-code/
http://answers.ros.org/question/11879/best-practice-for-rosdep-ubuntu-packages-and-others/
http://answers.ros.org/question/34199/what-is-the-correct-way-to-add-external-library/

In addition, you can look at this documentation:
rosintall: http://www.ros.org/wiki/rosinstall
rosdep: http://ros.org/wiki/rosdep, http://ros.org/doc/api/rosdep2/html/rosdep_yaml_format.html, http://ros.org/reps/rep-0125.html
ROS overlays: http://ros.org/wiki/fuerte/Installation/Overlays

Originally posted by Benoit Larochelle with karma: 867 on 2013-01-20
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by KruseT on 2013-01-21:
It may be more accurate to rephrase your question as "Dependencies with rosbuild", which spans fuerte and earlier ros releases.

