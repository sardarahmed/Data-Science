Q:

Actuator dynamics with gazebo+ros2: Best practices for simulation?

Hi,
I'm looking for some best practices to implement actuator dynamics in a ros2-control/gazebo simulation environment.
In my case I have hydraulic actuators and want to implement a black-box velocity-controlled actuator with force-compliant behavior. The interface to the physics engine in gazebo has to be the effort-interface to simulate multi-body contacts.
At the stage of implementation on real hardware, this velocity controller is then implemented on an embedded platform and not part of the ROS software anymore. Therefore, I'd like to make the velocity-command interface available for higher control tasks, and make the underlying velocity-controller with the actuator dynamics contained to be then able to switch to the hardware with its proper hardware_interface.
I've found two articles for ROS1 with different approaches:

Gazebo Plugin
https://www.frontiersin.org/articles/10.3389/frobt.2021.713083/full?&field=&journalName=Frontiers_in_Robotics_and_AI&id=713083
ros2-control controller
https://www.researchgate.net/publication/307876255_A_Compliant_Actuation_Dynamics_Gazebo-ROS_Plugin_for_Effective_Simulation_of_Soft_Robotics_Systems_Application_to_CENTAURO_Robot

Are there other approaches with ROS2? Which one would you prefer thinking of my application?
I guess that an extension to the GazeboSystem from gazebo_ros2_control is the most promising approach.

Originally posted by christophfroehlich on Gazebo Answers with karma: 11 on 2022-02-21
Post score: 0

A:

If anyone wants to implement something similar:
Finally, I've written a new gazebo_ros2_control::GazeboSystem. There I implemented my actuator dynamics, which is configurable via the urdf file and its  <ros2_control> tags.

Originally posted by christophfroehlich with karma: 11 on 2022-03-15
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by kakcalu13 on 2022-03-16:
Nice!!! Way to go!

