Q:

Multi-Rate Sensor Fusion using EKF

Context: I have an IMU(a/g/m) + Wheel Odometry measurement data that I'm trying to fuse in order to localize a 2D (ackermann drive) robot.
The state vector X = [x y yaw].
I'm using the odometry data to propagate the state through time (no control input).
The update step includes the measurement vector Z = [x_odo y_odo yaw_imu].
I have two questions:
1.Does it make sense to use the odometry data(v_linear, omega) in both the prediction as well as update steps?
2.How do I account for the frequency difference between the odometry data(10Hz) and the imu data(40Hz)? Do I run the filter at the lower frequency, do I dynamically change the matrix sizes or is there any other way?
Thanks!

A:

Part 1.  Use one or the other. Often odometery is used instead of kinematics or dynamics for prediction, at least in my work.
Part 2.
This is handled by the construction of the measurement equation jacobian. 
Every time a measurement comes in, construct a Jacobian for the whole state. You'll notice that some of the state elements are independent of the current measurement (vel sensor cannot measure position, e.g.). So, no need to resize the matrix, just run the ekf with some zeros in the jacobian.
Specifically, for every incoming measurement

Predict state from last update to the current 
Construct jacobian for current measurement type / equation 
Update state

