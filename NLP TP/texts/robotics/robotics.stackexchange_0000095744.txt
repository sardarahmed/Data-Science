Q:

Integrating RMF and Navigation Stack

In the RMF Demos, the magni robot is using a “SlotCar gazebo plugin” which receives the path request from rmf-core and converts it into robot motion (through setting joint velocities).  This path request (list of waypoints) is generated from the fleet adapter without considering a cost map.
The global path planner of the navigation stack, however,  considers a cost map and gives a safe path to a single goal destination. I'm not sure how to integrate these two path planners. Is there a suggested method to integrate these two (as we feel it is a common challenge that many companies might face) ?

Originally posted by webvenky on ROS Answers with karma: 117 on 2020-05-05
Post score: 2

Original comments
Comment by stevemacenski on 2020-05-06:
Great question - I'd also like to know a little on this. On the planner side, from what I'm aware, it is routing through an annotated graph, so you shouldn't need a freespace planner. I think you'd just need a controller to follow the path and avoid obstacles. In practice it would be wise to still use a planner with soft constraints on the route for large obstacles a controller isn't well suited to handle, but good enough for a first order demo (especially in simulation).
We on the navigation side in ROS2 are looking at annotation methods and formats so this may be something to consider if we can get support to do some integrations.
Comment by webvenky on 2020-05-06:
@stevemacenski Thanks for your quick response. It's a good idea. I also understand your point about a planner with soft constraints on the route for large obstacles. We'll think about it. Suggestions/packages in that direction, if any, are welcome.

A:

Hi  @webvenky and @stevemacenski,
To augment @aaronchongth 's response, I've added a section to the rmf_demos FAQ page which may be helpful in answering how you can integrate robots running navstacks (in simulation & real world) with RMF.
TLDR;

RMF generates plans for robots while avoiding other brands of robots also operating in the same space.
The output of these plans will need to be fed into the robot's navstack or via an API provided by the vendor to get the robot to travel through the waypoints in the plan (The navstack may generate intermediate waypoints to avoid sensor-detected obstacles). The slotcar plugin is only for simulation efficiency.
Robots running navstacks can be integrated with RMF in simulation and real world. Packages such as nav2_waypoint_follower compliment this objective.

Originally posted by Yadunund with karma: 51 on 2020-05-07
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by stevemacenski on 2020-05-07:
I think all that probably belongs in a readme. I have to say from first glance, its not easy to see how this stuff can be practically applied out of simulation or if its even complete.
Comment by webvenky on 2020-05-11:
Thank you for your response. We understand the idea behind traffic simulator. We will try to use the slot car plugin as a base code to integrate RMF and the robot navstack.

