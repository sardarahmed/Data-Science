Q:

Is there a way to enable c++11 support for catkin packages?

I tried to use auto and lambda functions, but it isn't working by default.
And I wasn't able to find how to set compiler option -std=c++11.
Is there a way to do it?

Originally posted by INait on ROS Answers with karma: 220 on 2014-04-12
Post score: 19

Original comments
Comment by Thomas on 2014-04-14:
This is a very bad idea to use C++11 in ROS linked modules. There is no guarantee that C++03 and C++11 will stay ABI-compatible! It may break at anytime without prior notice because it only works ""by chance"" currently! http://stackoverflow.com/questions/12637699/c03-library-with-c11-source-code
Comment by jespestana on 2014-09-25:
I have had problems with C++11 and ROS in the past. If you have a robot with Ubuntu 12.04 preinstalled you are going to have a bad time using C++11, because the boost version in 12.04 is not compatible with C++11. I recommend using C++03 which is the standard: http://www.ros.org/reps/rep-0003.html

A:

You should just be able to set the -std=c++11 flag in CMakeLists.txt of the package:
set(CMAKE_CXX_FLAGS "-std=c++0x ${CMAKE_CXX_FLAGS}")

If you want to enable it only when possible, I use this to do so:
# check c++11 / c++0x
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_CXX_FLAGS "-std=c++11")
elseif(COMPILER_SUPPORTS_CXX0X)
    set(CMAKE_CXX_FLAGS "-std=c++0x")
else()
    message(FATAL_ERROR "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
endif()

If you don't want to stop when 11 or 0x is not detected, simply comment out those lines.

Originally posted by Hansg91 with karma: 1909 on 2014-04-12
This answer was ACCEPTED on the original site
Post score: 26

Original comments
Comment by mikepurvis on 2014-04-12:
This is cool for local/experimental development, but do note that the catkin CMake style guide forbids altering CMAKE_CXX_FLAGS, cf. http://docs.ros.org/hydro/api/catkin/html/user_guide/standards.html .
Comment by mikepurvis on 2014-04-12:
The target platform for Hydro and Indigo is C++03, as noted here: http://www.ros.org/reps/rep-0003.html .
Comment by INait on 2014-04-12:
Great, thanks!
Comment by vik748 on 2017-07-10:
Is there a way to add this flag for an individual file and not the entire project?

