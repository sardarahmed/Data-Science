Q:

roscpp relative vs global parameter (tutorial)

Hello,
I thought I understood the concept of global and relative. But apparently while doing the tutorial
ros::NodeHandle nh;
std::string global_name, relative_name, default_param;
if (nh.getParam("/global_name", global_name))
{
  ...
}
  
 if (nh.getParam("relative_name", relative_name))
{
 ... 
}

I expect that if my global name is /bla and my param is /bla/param1. I could simply use the second if loop with getParam("param1",relative_name), But this doesn't work.
here is the solution which requires you to instantiate a private node handle.
My question now is what does the tutorial mean then by relative name ? and relative to what ? because it doesn't work relative to my node name.

Originally posted by ROSfc on ROS Answers with karma: 54 on 2016-09-01
Post score: 0

A:

I don't know what tutorial you are referring to, but relative names are relative to ROS namespaces, i.e., if the node has been pushed into a namespace /bla. For parameters that are in the namespace of a node, using a private node handle is the right way to go.

Originally posted by dornhege with karma: 31395 on 2016-09-05
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by ROSfc on 2016-09-05:
I still didn't understand sorry. Could you explain it with example names maybe. It would be a big big help
Here is the link to the tutorial 
Comment by ROSfc on 2016-09-05:
I have also tried to look at this link on resolving names but they all look the same. In this example /wg/node3/foo/bar where wg is the namespace could you explain what is relative name ?
Comment by dornhege on 2016-09-05:
If your node is named foo and pushed in a namespace bar, the parameter '/baz' (global) should resolve to '/baz'. The parameter 'baz' (relative) should resolve to '/bar/baz' and the lookup for 'baz' in a private nh should give '/bar/foo/baz'.

