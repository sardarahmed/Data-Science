Q:

How do I toggle on/off my camera view in RViz through a parameter or message?

I have a camera set up in RViz using a gazebo simulation based on the urdf tutorials, which leaves the camera always on. I want to be able to press a key to toggle the camera on/off. I'm willing to accept hacks like zooming in to one black pixel or lowering the quality of the image until it's completely blurred. I'm also willing to change the camera to a second camera that's staring at a blank wall, so that a white or black pane shows up.
I've explored changing the zoom parameter of the camera from 1 to 1000, but it didn't do anything to affect the RViz Camera view (which remained at 1). I also tried using rosparam to change other parameters like image quality, but nothing actually changed in the image. I'm not sure how to change the topic the camera is subscribed to, for example to a static black image.
Do you have any suggestions?

Originally posted by lahaela on ROS Answers with karma: 13 on 2015-07-20
Post score: 1

A:

Original Question:
I'm working on this same issue and tried the solution you posted William.  It seems like what I did should work, but when I republish the image data from the camera to a different topic (/displayed_image), the RVIZ camera view does not show the image, just a black screen.   RVIZ doesn't even give out a warning, it shows that it is receiving the images.  When I echo the topic data from /displayed_image, it seems like I get the same data as the actual camera topic.  Any idea's as to why RVIZ is not correctly displaying my image?
Answer:
Thanks to the suggestion of William and Dornhege, I figured out a workaround.  The issue was actually something with rviz (not sure what), but when I use rosrun image_view image_view <image_topic> it correctly shows either the camera view image or the blank screen image depending on my mux settings.  For future reference for anyone trying to do something similar:

Run your gazebo model with the camera
Run your blank screen publisher (code for mine is below)
Setup the mux: rosrun topic_tools mux topic_to_publish_to camera_topic blank_screen_topic mux:=image_mux
To switch between the selected images use: rosrun topic_tools mux_select image_mux image_topic_to_display
You can also do this through service calls, I haven't yet, but see http://wiki.ros.org/topic_tools/mux for details.

"Preformatted text" won't allow me to select the whole code... it just takes bits and pieces if I try to do the whole thing. However, here is the important bit (this node is not terribly difficult anyway).
def blanker():

rospy.init_node('blank_screen')
pub=rospy.Publisher('blank_screen', Image, queue_size=10)
rate = rospy.Rate(1)

while not rospy.is_shutdown():
    img = Image()
    img.data = [0 for _ in range(800*3600)] # data
    img.height = 800
    img.width =1200
    img.step = 3600
    img.is_bigendian = 0
    img.encoding = "rgb8"
    img.header = Header()
    img.header.frame_id = "camera_link"
    img.header.stamp = rospy.Time.now()
    pub.publish(img)
    rate.sleep()

Originally posted by Ethan Robinson with karma: 16 on 2015-07-22
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by William on 2015-07-22:
@Ethan Robinson This looks like a new question, please use a comment or ask a new question and link to it in a comment here.
Comment by William on 2015-07-22:
Why doesn't your image_publish_callback function just do pub.publish(data)?
Comment by William on 2015-07-22:
Also, I would go with @dornhege's suggestion and use mux (http://wiki.ros.org/topic_tools/mux) and a python script which sends service calls to that. It will operate much more efficiently since it does not deserialize the images it is multiplexing.
Comment by Ethan Robinson on 2015-07-22:
William, I'm on the same project with the OP which is why I added it here, but I can reask this as a new question if you think it would be better for the forum.  I'll follow you and dornheges advice on using mux.  Didn't understand its workings before which is why I did it manually.
Comment by Ethan Robinson on 2015-07-22:
I figured out the mux and correctly republished the camera's sensor_msgs/Image data onto a new topic I called /displayed_image, but I'm still getting the black screen problem like I was getting in my above post.  Everything appears to be working (no error/warning messages) but no image is shown.
Comment by William on 2015-07-22:
If you're on the same project, then I'd recommend rolling this answer into an edit of his question when ever he gets a chance. You can leave it as an answer until then. Or if you eventually get this script working you can update this "question posted as an answer" and make it an actual answer.
Comment by William on 2015-07-22:
You can try to look at the image on /displayed_image using image_view to see if it is rviz, but I doubt it: rosrun image_view image_view image:=displayed_image
Comment by Ethan Robinson on 2015-07-23:
It actually ended up being rviz!  Thanks for the image_view command.  I had to fix a typo in my blank_screen publisher (different program than shown above) but using mux_select now works correctly to display the image I select.  I'll update my answer with the fix.
Comment by William on 2015-07-23:
Well, rviz should work, the question is why it didn't. I wouldn't be able to tell you without more information.

