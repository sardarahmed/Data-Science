Q:

ROS Service global name not defined

I am trying to make my node a ROS service which gets triggered when it receives boolean value of true, thus I have added the following to its constructor:
self.imgproc_srv = rospy.Service("/perception/request_detection", RequestDetection, self.detection_processor_srv)

here is the callback:
def detection_processor_srv(self, req): 
         print("It works!")
   return 

And of course, I have the file RequestDetection.srv as:
bool detection_requested # our trigger to initiate the visual detection

and I imported this in my script as:
from common.srv import *

which is where I plan to keep the services.
Needless to say, I did catkin_make as well, after all this.
Yet I receive:
NameError: global name 'RequestDetection' is not defined
What am I doing wrong?

Originally posted by Jägermeister on ROS Answers with karma: 81 on 2019-01-18
Post score: 0

A:

It looks like you haven't defined your service properly, I would have expected you to get an error when you try and catkin_make this.
If you look at the tutorial on messages and services, you can see that a service needs to define both the request and response parts separated by there hyphens --- like the example shown there:
int64 a
int64 b
---
int64 sum

As also described in the tutorial above you need to setup your CMakeLists.txt file to make sure that this service is built too.
Hope this helps.

Originally posted by PeteBlackerThe3rd with karma: 9529 on 2019-01-18
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Jägermeister on 2019-01-18:
If I only want to call this service and not expect anything in return, the parts above --- are not required, right? I noticed since I won't expect anything, it should now work as it is like in my code?
EDIT: It was the CMakeLists.txt ,now it works.
Comment by PeteBlackerThe3rd on 2019-01-18:
I see. Glad you got this working.

