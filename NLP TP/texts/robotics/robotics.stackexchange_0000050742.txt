Q:

Hokuyo laser turn up down gmapping issue

Dear all
I have one question.
I placed a hokuyo laser up down, e.g. I rotated 180 degrees, the head is down and the base is up.
I have an issue, the gmapping map and the laser readings are now rotated. It means that the robot sees me from the left side instead from the right and vice versa.
How can I fix that problem.
Regards

Originally posted by acp on ROS Answers with karma: 556 on 2013-04-29
Post score: 0

A:

Try using the current gmapping version from github. We just build a patch some days ago to make gmapping work under such conditions. I dont think, that this version is already getting distributed through binary updates.
How did you tell the robot, that the laser is upside down? By setting an apropriate transform? Is the visualization of the laser scan in rviz correct? If so, the new version should work. Otherwise it will be helpful, if you could post a bag file containing odom, tf and the laserscans.

Originally posted by Ben_S with karma: 2510 on 2013-04-29
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by acp on 2013-04-29:
Hi, well I have tried your patched slam_gmapping with an apropiate transform   and the navigation stack works  quite nice. Thank you very much :)
Comment by Ben_S on 2013-04-30:
Glad that it works now. :) Please accept the answer then, to mark this question solved. Btw.: Do you really have no offset at all from your base_link to your laserscanner?
Comment by acp on 2013-04-30:
well, yea it might be an offset that i need to find out. The base_link must be in the CM, right? where shall accept the answer?
Comment by Ben_S on 2013-04-30:
Its common practice to have the base link in the center of the robot (center of rotation for differential drive type robots). To accept an answer you have to click the little checkmark on the left directly beneath the up and down arrows for voting.
Comment by acp on 2013-04-30:
OK, I thought that the base_link was at the CM, and the odom frame must be also at the centre of rotation of the robot, right? because based on the dead reckoning algorithm, right?.  I mean, at initial position, and when the robot moves, we have a odom translation.

