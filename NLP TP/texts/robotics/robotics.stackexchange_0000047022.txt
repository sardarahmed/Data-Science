Q:

rqt then choosing rviz plugin -> core dump

Start rqt and choose rviv plugin (in groovy):
tompe@heyer:~$ rqt
python: /build/buildd/ogre-1.7.4/OgreMain/include/OgreSingleton.h:80: Ogre::Singleton<T>::Singleton() [with T = Ogre::LogManager]: Assertion `!ms_Singleton' failed.
Aborted (core dumped)

Am I doing something wrong or is really this so buggy that it does not even start?

Originally posted by TommyP on ROS Answers with karma: 1339 on 2013-01-08
Post score: 1

Original comments
Comment by joq on 2013-01-08:
What Linux distro and release are you running?
Comment by TommyP on 2013-01-08:
I tested in Ubuntu 12.04 (i686). The same problem at home with 12.04 (x86_64).
Comment by TommyP on 2013-02-07:
Seems to work now for me with the latest version of the groovy Ubuntu packages.

A:

I can confirm this on 12.04 (x64)/Groovy.  I found a related issue on github already: https://github.com/ros-visualization/rviz/issues/553.  There are a few similar issues in the rqt tracker that have been closed, so perhaps it hasn't been pushed out to the public yet?
EDIT
I believe that this fixes it https://github.com/ros-visualization/rviz/pull/560 (it does on my system).
It's a one-line edit, so it should be pretty easy to patch rviz and build from source on your own system.
EDIT 2
Fixed in latest debs.

Originally posted by mjcarroll with karma: 6414 on 2013-01-08
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by TommyP on 2013-01-09:
It still does not work after today's groovy package updates.
Comment by clark on 2013-01-09:
I have exactly the same issue, under Ubuntu 12.04, groovy (under virtual box).
Comment by dornhege on 2013-01-10:
Re your fix: Should there be a new in the getSingletonPtr line? (I haven't checked or tested anything! Just looks odd to me)
Comment by mjcarroll on 2013-01-10:
I believe that getSingletonPtr returns a pointer to the already-created instance, and is not allocating a new instance.
Comment by mjcarroll on 2013-01-10:
The OGRE docs indicate that if you bring up an OgreRoot before you bring up a LogManager, it will instantiate one for you, thus causing the singleton assert error when you try to re-instantiate.  The LogManager constructor should only be called before OgreRoot, which is not what is happening.
Comment by dornhege on 2013-01-10:
I was only referring to the diff in the pull request. It does something like new getSingletonPtr() instead of just getsSingletonPtr(), but I really haven't checked or tested anything in that regard. Just looked wrong to me.
Comment by mjcarroll on 2013-01-10:
Ah, sorry about that.  Yes, that pull request is incorrect, and the problem is also a little bit deeper.  It appears as though Dave has already come up with a fix that will be released shortly.

