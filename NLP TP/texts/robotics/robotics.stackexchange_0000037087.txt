Q:

How to send parameters in the method onStart with ROSJava

In every example in the ROSJava tutorial, the method: onStart has a unique parameter: (final Node node) and my question is how to send additional parameters in this method.
When I execute any node, I type in the shell:
rosrun rosjava_bootstrap run.py nxt_lejos_ros org.lejos.ros.nodes.loader.NXTLoader __name:=NXTLoader

or I use a .launch file with the following structure:
<launch>
    <node pkg="rosjava_bootstrap" 
    type="run.py" 
    args="nxt_lejos_ros org.lejos.ros.nodes.loader.NXTLoader" 
    name="NXTLoader" 
    output="screen" />     
</launch>

But my idea, is to send to the node another parameter, for example a YAML file.
How to define in a .launch code an aditional parameter and how to modify the signature of the onStart method?
Many thanks in advance.

Originally posted by Juan Antonio Breña Moral on ROS Answers with karma: 274 on 2012-01-15
Post score: 2

A:

Hello!
I work with NXT and LeJos too.
I send parameters to node using the parameter server.
I wrote file robot.yaml
parameter_namespace: nxt_robot
nxt_robot:
  list: [motorA,sonarIn4]
  setttings:
    motorA:
      type: motor
      name: radar_motor
      port: 1.0
      frame_id: radar_motor_link
      desired_frequency: 50.0
    sonarIn4:
      type: ultrasonic
      frame_id: ultrasonic_link
      name: ultrasonic_sensor
      port: 4.0
      desired_frequency: 50.0

and load it in launch-file
<launch>
  <rosparam command="load" file="$(find nxt_rosjava)/robot.yaml" />
  <node pkg="rosjava_bootstrap" 
    type="run.py" 
    args="nxt_rosjava org.ros.nxt_rosjava.Listener" 
    name="nxt_rosjava" 
    output="screen" />  
</launch>

In class Listener I load parameters.
  ParameterTree param = node.newParameterTree();
  GraphName paramNamespace = new GraphName(param.getString("parameter_namespace"));
  NameResolver resolver = node.getResolver().newChild(paramNamespace);
  Map setttings_map = param.getMap(resolver.resolve("setttings"));
  Object[] list = param.getList(resolver.resolve("list")).toArray();
  lst_devices = new ArrayList<Device>();
  for (int i = 0; i < list.length; i++) { 
      String type = (String) ((Map) setttings_map.get(list[i])).get("type");
      String name_dev = (String) ((Map) setttings_map.get(list[i])).get("name");
      String frame_id = (String) ((Map) setttings_map.get(list[i])).get("frame_id");
      double tmp_port = (Double) ((Map) setttings_map.get(list[i])).get("port");
      int port = (int) tmp_port;
      double desired_frequency = (Double) ((Map) setttings_map.get(list[i])).get("desired_frequency");
      log.info("Device: " + list[i] + " type: " + type + " frequency: "+desired_frequency);
      if (type.contains("ultrasonic")){
          UltraSonicSensorNXT dev = new UltraSonicSensorNXT(port, desired_frequency, node, name_dev, frame_id);
          lst_devices.add(dev);  
      }
      if (type.contains("motor")){
          MotorNXT dev = new MotorNXT(port, (int)desired_frequency, node, name_dev);
          lst_devices.add(dev);  
      }
      if (type.contains("touch")){
          TouchSensorNXT dev = new TouchSensorNXT(port, (int)desired_frequency, node, name_dev, frame_id);
          lst_devices.add(dev);  
      }
  }

My current code

Originally posted by Alexandr Buyval with karma: 641 on 2012-02-09
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Juan Antonio Breña Moral on 2012-02-12:
Hi Alexander, many thanks for your idea. I will test this week to add in the new stack that we are doing in LeJOS project. http://lejos.svn.sourceforge.net/viewvc/lejos/trunk/ros/ I was surfing in your googlecode project and what is the idea about nxt_steering_control? Cheers
Comment by Alexandr Buyval on 2012-02-12:
I am going to use nxt_steering_control for connect top-level ROS nodes and rosjava node which control Lego NXT. For example, script nxt_steering_control.py listen pilot\drive (http://www.ros.org/wiki/art_pilot) and send command to topic "joint_command" rosjava node.
Comment by Alexandr Buyval on 2012-02-12:
All scripts in stack  nxt_steering_control  are specific for my robot Lego NXT car-like. Project is not finished yet. This is photo my robot http://www.freeimagehosting.net/1s1ih
Comment by Juan Antonio Breña Moral on 2012-02-26:
Hi, today I tested your idea, but I have a problem with this line:    GraphName paramNamespace = new GraphName(param.getString("parameter_namespace"));
NameResolver resolver = node.getResolver().newChild(paramNamespace);
Comment by Juan Antonio Breña Moral on 2012-02-26:
Hi, today I tested your idea, but I have a problem with this line:
Comment by Juan Antonio Breña Moral on 2012-02-26:
Hi, today I tested your idea, but I have a problem with this line:        GraphName paramNamespace = new GraphName(param.getString("parameter_namespace"));
NameResolver resolver = node.getResolver().newChild(paramNamespace);
Comment by Juan Antonio Breña Moral on 2012-02-26:
Hi, today I tested your idea, but I have a problem with this line:
Comment by Juan Antonio Breña Moral on 2012-02-26:
HI, I tested your idea, but I have a problem with this line:  NameResolver resolver = node.getResolver().newChild(paramNamespace); the method newChild doesn't exist. Any alternative?
Comment by Alexandr Buyval on 2012-02-26:
Hi! I haven't got this error. There is method "newChild" in file "rosjava_core/rosjava/src/main/java/org/ros/namespace/NameResolver.java". May be I or you used old version rosjava?

