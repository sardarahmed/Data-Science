Q:

Is it possible to use navigation stack for local navigation only?

Hello
Im a currently involved in making a skid steered robot - which has the aim to drive through multiple rows of corn (there will be no obstacles blocking any rows at any time).
The robot is using a Hokuyo Urg laser scanner for obstacle identification.
I have been looking through the navigation stack package and it seems like this package offers a lot more than I really need. I think I can cut my needs down to the following:

Get sensor data
Process sensor data in order to identify obstacles
Calculate optimal direction and speed based on identified obstacles
Calculate wheel velocities in order to obtain 3)
Calculate and send PWM signal to motors in order to optain 4)

Is it possible to "limit" navigation stack to do this, or will I be better of with a different approach?

Originally posted by Oevli on ROS Answers with karma: 30 on 2015-11-22
Post score: 0

A:

If you have the map of the environment already you can use amcl only for localization.
If you do not have map, you can use gmapping for SLAM.
Either way, navigation stack provides you 2), 3) and half of 4) in your question. You should make your sensor readings ready in your system (possibly via /scan topic), this is not a responsibility of navigation stack. Then, it will process sensor data and identify obstacles, planner will generate optimal paths regarding obstacles and finally move_base will output necessary vehicle velocities (longitudinal, lateral and yaw velocities). After this point you should calculate wheel velocities according to your vehicle model and generate PWM signals with your hardware. This part is not covered by nav stack.
Therefore to my opinion, you do not need to limit nav stack. Instead you should supply missing parts and configure nav stack correctly for your purpose.
You may need to go over nav tutorials for implementation.

Originally posted by Akif with karma: 3561 on 2015-11-23
This answer was ACCEPTED on the original site
Post score: 0

