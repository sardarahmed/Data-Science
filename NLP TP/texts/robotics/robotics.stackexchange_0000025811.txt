Q:

sanida hand grasp controllers

Is the SimpleGrasp controller used on the DRC Tutorials page supposed to an API for grasping that will be used in the VRC, or is it just a demonstration on how we might write our own controller to send JointCommands to the hands?  It is unclear whether I need to write my own, or (supposing this is sufficient for VRC tasks) whether I can rely on this service being run during the VRC.
If this is just an example, then it would be very helpful to explicitly state this in the tutorials so as to not cause confusion.  We are still in recovery mode after the dropping of the FollowJointTracjectoryAction controller, and I don't want to have to do the same if/when the grasp controller goes away.
Thanks.

Originally posted by pbeeson on Gazebo Answers with karma: 86 on 2013-02-07
Post score: 0

Original comments
Comment by DRC_Justin on 2013-02-07:
I would like to know what the pre-determined grasp shapes are.  I can't find this in the API, and have no idea how to find this out with an 'info' or 'echo' command.

A:

The simple_grasp controllers were purely intended for demonstration, just to show the hands moving in the simulator. Presumably the grasp controllers would need to be much more sophisticated to accomplish the range of tasks of the VRC. Importantly, real grasp controllers would likely need to use more features of osrf_msgs::JointCommands messages (e.g., torque limits).
The source for the simple_grasp controller is here. It's pretty short. It just does a minimal eigengrasp implementation of a few canonical grasps: cylindrical, spherical, and prismatic.
I have updated the wiki to clarify that this is only a strawman implementation for tutorial purposes.

Originally posted by mquigley with karma: 46 on 2013-02-07
This answer was ACCEPTED on the original site
Post score: 3

