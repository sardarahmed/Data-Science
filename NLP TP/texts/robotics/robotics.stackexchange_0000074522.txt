Q:

industrial_extrinsic_cal. Instructions for camera-robot calibration

Hello all;
I need to calibrate the robot base of a UR10, with an Asus Xtion camera monitoring the workspace in a fixed position.
I have found the industrial_extrinsic_cal package for ROS industrial that seems very suitable for this purpose. I have downloaded and compiled the package from here  https://github.com/ros-industrial/industrial_calibration.git without problems.
however, among the tutorials provided, the one for my setup, Extrinsic Calibration of Camera(s) to a Static Target (Deprecated), it is deprecated, and refers to launchs and procedures which are not yet present in the current package.
Does anyone know how to follow an step by step procedure, to be able to calibrate a robot with respect to an external Xtion camera?
Any help will be highly appreciated,
Best,
Alberto

Originally posted by altella on ROS Answers with karma: 149 on 2016-06-14
Post score: 0

A:

I can help get you going in calibrating your UR10 and Asus camera. Please confirm or clarify the following.

The camera is fixed in the workcell overlooking the robot
The calibration target is also fixed in the workcell and not held by the robot but is fully visible to the camera.

If this is true, then the calibration need only compute the transform between the camera and the target. The most basic code for doing this is the target_locator package. This node continuously computes the transform between a calibrated camera and a target. It is pretty straight forward to understand especially compared to the more generic calibration node in industrial_extrinsic_cal. In either case, please use a "modified circle target" for best results. This type of target removes the ambiguity in orientation of typical grid targets.
If on the other hand you fix the target to the robot but don't know the exact transform from the tool-point to the target's origin (usually the case), then you will need to use the industrial_extrinsic_cal node. This requires significantly more effort to set up. Your urdf will need two sets of mutable transforms. Your launch files have to include a combined joint state publisher, a mutable joint state publisher and a joint state publisher to combine the robot and mutable joints into a single joint_state topic. For this to work, your robot state publisher needs to publish a topic other than /joint_states. You may send further inquiries to clewis@swri.org and I'll be happy to get you up and running.

Originally posted by Drclewis with karma: 61 on 2016-06-14
This answer was ACCEPTED on the original site
Post score: 0

