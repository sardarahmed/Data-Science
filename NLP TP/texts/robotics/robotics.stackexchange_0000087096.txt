Q:

MoveIt moveit::core::RobotModel::RobotModel

Hey there,
I can not create a RobotModelConstPtr. I need this to create a RobotState (http://docs.ros.org/jade/api/moveit_core/html/classmoveit_1_1core_1_1RobotState.html#ac5944765b49ee074030c01010af36c07).
A part of my Code:
// Construct a kinematic model
const RobotModelConstPtr kinematic_model; //need it later for RobotState
robot_model::RobotModel kinematic_model = (RDFLoader.getURDF(), RDFLoader.getSRDF());
The error is " 'RobotModelConstPtr' does not name a type".
This is a link to my hole code (https://www.dropbox.com/s/rko84pkkiigug9j/inv_node_end.cpp?dl=0).
It would be perfect if someone can help me out.
Thanks
The whole code:
 #include <ros/ros.h>
 #include <fstream>
 #include <sstream>
 #include <urdf/model.h>

// MoveIt!
 #include <moveit/robot_model/robot_model.h>
 #include <moveit/robot_state/robot_state.h>
 #include <moveit/rdf_loader/rdf_loader.h>

int main(int argc, char **argv)
{
  ros::init(argc, argv, "inv_node");
 
  ros::AsyncSpinner spinner(1);

  spinner.start();

  ros::NodeHandle nh;

// Convert urdf file in a string

  std::ifstream u("youbot_arm.urdf");

  std::stringstream su;

  su << u.rdbuf();

// upload the urdf to the parameter server

  nh.setParam("robot_description", su.str());

// Convert srdf file in a string

  std::ifstream s("youbot.srdf");

  std::stringstream ss;

  ss << s.rdbuf();

// upload the srdf to the parameter server

  nh.setParam("robot_description_semantic", ss.str());

// Initialize the robot model

  rdf_loader::RDFLoader RDFLoader(su.str(), ss.str()); 

// Construct a kinematic model

  const RobotModelConstPtr kinematic_model; //need it later for RobotState

  robot_model::RobotModel kinematic_model = (RDFLoader.getURDF(), RDFLoader.getSRDF());

  ROS_INFO("Model frame: %s", kinematic_model->getModelFrame().c_str());

// RobotStat that maintains the configuration

  robot_state::RobotStatePtr kinematic_state(new robot_state::RobotState(RobotModel);

  kinemati_state->setToDefaultValues();

// choose JointGroup

  const robot_state::JointModelGroup* joint_model_group = RobotModel.getJointModelGroup("arm_1");

// Forward Kinematics

  kinematic_state->setToRandomPositions(joint_model_group);

  const Eigen::Affine3d &end_effector_state = kinematic_state->getGlobalLinkTransform("arm_link_0");

/* Print end-effector pose. Remember that this is in the model frame */

  ROS_INFO_STREAM("Translation: " << end_effector_state.translation());

  ROS_INFO_STREAM("Rotation: " << end_effector_state.rotation());

  ros::shutdown();

  return 0;
}

Originally posted by JonasG on ROS Answers with karma: 1 on 2018-05-23
Post score: 0

Original comments
Comment by jayess on 2018-05-23:
Can you please update your question with a copy and paste of your code? That way the question is self-contained.
Comment by JonasG on 2018-05-23:
I have updated my question. I hope the formatation is good enough.

A:

It looks like RobotModelConstPrt is declared in http://docs.ros.org/jade/api/moveit_core/html/robot__model_8h_source.html by MOVEIT_CLASS_FORWARD(RobotModel); .
This is in the moveit::core namespace, so the fully qualified type name would be moveit::core::RobotModelConstPtr
Instead of:
const RobotModelConstPtr kinematic_model; //need it later for RobotState

Try:
const moveit::core::RobotModelConstPtr kinematic_model; //need it later for RobotState

Originally posted by ahendrix with karma: 47576 on 2018-05-23
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by JonasG on 2018-06-06:
@ahendrix Do you have experience by using KDL PLugins for computing inverse kinematics?
Comment by ahendrix on 2018-06-06:
Nope. I don't know anything about MoveIt, I'm just good at reading and interpreting software documentation.
Comment by saztyga on 2020-08-31:
@ahendrix   Sir can you suggest me any tutorial where i can learn how to interpreter c++ documantation

