Q:

Incorrect camera extrinsics for simulated Gazebo cameras

I am simulating several cameras in Gazebo using the gazebo_ros_camera plugin in the gazebo_plugins package. All of the cameras are defined in the robot's URDF and the corresponding coordinate frames are published by the joint_state_publisher and robot_state_publisher nodes.
When I view frames captured from the simulated cameras, it is clear that they are pointing in roughly the correct direction. If I view the simulated world in RViz, the visualized world renders correctly for horizontal cameras (left), but not for cameras with a non-zero pitch (right):

It appears that the images captured in Gazebo have approximately twice the pitch that is specified in the URDF (note how the ground plane projected by RViz is too high in the right image). Has anyone else run into a similar problem?

Originally posted by mkoval on ROS Answers with karma: 524 on 2011-04-18
Post score: 0

A:

Hi,
For pin hole cameras that gazebo is simulating, the equation below holds,
focal_lengtth = image_width / (2*tan(hfov_radian / 2)

One way to avoid inconsistency is to NOT specify <focal_length> tag in your XML.  That way, <focal_length> is calculated using the above formula.
In addition, I'll patch gazebo_ros_camera plugin to raise an inconsistency error message when a focal_length is provided that is inconsistent with image_width and hfov.
Will that fix the problem for you?
Thanks,
John

Originally posted by hsu with karma: 5780 on 2011-04-20
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by leogeo on 2020-10-02:
hi,
if i want the focal_length value in mm or pixel dimensions (pixel per mm). i have already the intrinsic parameters from calibration. ( i am using gazebo )

