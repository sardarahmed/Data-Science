Q:

compiling the package [costmap_2d] is extremely slow on Jetson TK1

Have anyone experienced compiling costmap_2d on a Nvidia Jetson TK1 with Ubuntu 16.04 and ROS Kinetic? I've tried to compile it on 2 such boards. They all compiled very very slow!
In the extreme case, I tried to compile costmap_2d in my own catkin workspace with the command catkin_make with or without -j5, --use-ninja. In this case, costmap_2d simply failed to finish compiling. It stuck at
Linking CXX executable /home/ubuntu/catkin_ws/devel/lib/costmap_2d/costmap_2d_cloud
Linking CXX executable /home/ubuntu/catkin_ws/devel/lib/costmap_2d/costmap_2d_markers

The linking procedure lasts forever, never succeed to accomplish.
The only way I made it finish is by invoking catkin_make_isolated instead of catkin_make, and the linking still takes very long time when compared to other packages (like lasting 10min+ or so).

Originally posted by ZOU Lu on ROS Answers with karma: 143 on 2016-12-28
Post score: 1

A:

I have finally succeeded to compile costmap_2d with catkin_make alone. Just push my patience to the extreme, and it took 40+ minutes to link to success!
Still, can any one kindly point out why is this happening, any hints will be appreciated. Thanks!

Originally posted by ZOU Lu with karma: 143 on 2016-12-29
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by ahendrix on 2016-12-29:
Linking can be a very RAM-intensive process; perhaps your system is using swap while linking?
Comment by ZOU Lu on 2016-12-29:
Thank you for answering!
It probably didn't used the swap, the TK1 has 4GB memory. And I even tried to compiled with only one thread (-j1). I also tried free -m to see memory consumption, there are more than 2GB free memory available.

