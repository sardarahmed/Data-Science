Q:

Integrating cmake into qmake build process in QtCreator

Hi.
I already have a large (working) Qt program, where I want to use ROS functionalities now, too.
Therefore, I would like to keep the qmake build process.
So, everything is setup in QtCreator: On the one hand, I can build my (large) Qt program with qmake and on the other hand I can build another (test) Qt ROS program with cmake...
But how do I combine these build processes? How do I integrate (an additional) cmake into my qmake build process? Do I have to migrate everything to cmake? Or is it possible to use qmake and cmake?
Or is it possible to compile some parts seperately with cmake while others are compiled with qmake?
(I am not so experienced with build processes, btw)
Or is catkin_make another "option"?
All in all, I am looking for a convenient way to keep qmake and add "something" to build and link ROS dependent cpp files.
Thanks for your help.

Ubuntu 14.04 LTS |
Qt 5.4.1 |
ROS Indigo |
IDE: QtCreator

Originally posted by ROSTroy on ROS Answers with karma: 16 on 2016-01-20
Post score: 0

Original comments
Comment by lucasw on 2016-01-20:
catkin_make uses cmake, so the CMakeLists.txt file used by catkin_make could call the qmake process using a special cmake command.  And there would have to be special cmake commands if you have dependencies in cmake on the output of the qmake process...
Comment by lucasw on 2016-01-20:
Most of what you need to learn isn't ros specific, so going out and searching for 'build qmake from cmake', looking on stackoverflow could be more fruitful than here.

A:

Thank you for your answer.
So you think the way to go is:
using cmake (/catkin_make), adding some special cmake commands to build also qmake...
(I will look at stackoverflow or somewhere)
I thought that there are probably some other (ROS specific) possibilities to combine qmake and cmake. Obviously someone created the Qt templates with "catkin_create_qt_pkg", where qt_build "provides the qt cmake glue" [qt_ros/qt_build].
This is what I found so far... I am looking more into that but could not find the script which actually glues cmake with the qmake *.pro-file or something...
Thus, I will take a look at "build qmake from cmake" but if someone has other options I would be glad to hear them, too.

Originally posted by ROSTroy with karma: 16 on 2016-01-21
This answer was ACCEPTED on the original site
Post score: 0

