Q:

What am i doing wrong with ros::timer in rqt?

Hello,
i have some problems with making the ros::timer work. Usually if i need a timer within a class i add these three lines to the header:
  void timerCallback(const ros::TimerEvent& event);
  ros::Timer m_timer;
  ros::NodeHandle m_nh;

and in the cpp file i add this line for example to the constructor:
m_timer = m_nh.createTimer(ros::Duration(1), &MyClass::timerCallback, this);

Last but not least i add a callback function to the cpp:
void MyClass::timerCallback(const ros::TimerEvent& event)
{
  // something that has to be done frequently
  ROS_INFO("Beep");
}

Unfortunatly it does not work this way in an rqt plugin. For some reason the callback function is never thrown.
Please help me with that. I'm using ROS Hydro on Kubuntu 12.04.

Originally posted by Blizzard on ROS Answers with karma: 49 on 2014-02-23
Post score: 1

A:

Currently for the C++ plugins in rqt there is no spinning ROS thread therefore ROS timers do not work. Temporary you could work around it by using Qt timers instead.
I have created two pull requests which will add the functionality to rqt. If you want to give it a try checkout the branches of the following two pull request into your workspace: https://github.com/ros-visualization/qt_gui_core/pull/39 and https://github.com/ros-visualization/rqt/pull/95 Then your timer should fire as expected.

Originally posted by Dirk Thomas with karma: 16276 on 2014-02-27
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Blizzard on 2014-02-27:
Thank you very much. Now it works like expected.
Will these two branches be merged into future versions of rqt and qt_gui_core? I hope so.
Comment by Dirk Thomas on 2014-02-27:
All ROS distros are currently being released form the same branch for those repos. So yes, all will receive the change soon.

