Q:

How can I restart move_base server?

Sometimes I will encounter such a problem: due to the positioning error of AMCL, during the execution of the target sent to move_base, the robot will be considered to collide with an obstacle or get stuck in the wall. At this time, the target is Aborted, but move_base will not respond to subsequent targets. I have tried requesting clearmap and using AMCL's request_nomotion_update, but the effect is not very immediate. But I found that starting a move_base node with the same name through the launch file to force the previous move_base to close, so as to restart move_base, can effectively solve this problem, and can go to the next target point normally. So I want to know if it is possible to restart the move_base server or node in C++ (some kind of API?) to achieve the same effect, instead of forcing the old node out by using the node with the same name.

Originally posted by Laura on ROS Answers with karma: 35 on 2021-12-29
Post score: 1

Original comments
Comment by osilva on 2021-12-30:
Hi @Laura:
Have you considered using resetState. Below the code, perhaps you can create a method to do something not as drastic as well.
  void MoveBase::resetState(){
    state_ = PLANNING;
    recovery_index_ = 0;
    recovery_trigger_ = PLANNING_R;
    publishZeroVelocity();

    //if we shutdown our costmaps when we're deactivated... we'll do that now
    if(shutdown_costmaps_){
      ROS_DEBUG_NAMED("move_base","Stopping costmaps");
      planner_costmap_ros_->stop();
      controller_costmap_ros_->stop();
    }
  }

https://github.com/strawlab/navigation/blob/master/move_base/src/move_base.cpp
Comment by Laura on 2021-12-31:
@osilva,Thank you very much for your solution. ROS is a very large system for beginners like me. I also need to learn more about the source code and interfaces. Thank you again for your patient answers all the time!
Comment by osilva on 2021-12-31:
Hey @Laura I learned every day in this forum that’s what I like the most. Thank you for asking too

A:

Hi @Laura, adding this as an answer for future use.
Consider resetState() method. Below the code on how it works.
  void MoveBase::resetState(){
    state_ = PLANNING;
    recovery_index_ = 0;
    recovery_trigger_ = PLANNING_R;
    publishZeroVelocity();

    //if we shutdown our costmaps when we're deactivated... we'll do that now
    if(shutdown_costmaps_){
      ROS_DEBUG_NAMED("move_base","Stopping costmaps");
      planner_costmap_ros_->stop();
      controller_costmap_ros_->stop();
    }
  }

https://github.com/strawlab/navigatio...

Originally posted by osilva with karma: 1650 on 2022-01-02
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Laura on 2022-01-02:
@osilva Thank you very much！ I recently modified the source code of move_base so that this function will be called automatically under preset error conditions.
Comment by osilva on 2022-01-02:
Great 

