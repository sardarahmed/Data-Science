Q:

Subscriber declaration in while loop

If I declare a subscriber in the while (ros::ok()) loop is it is allowed to change the topic which I read from at each loop?
Actually it doesn't work: the topics which i read from are always the same, the initial ones: "..Data1","...Data2"
What am I doing wrong?
string targetI_id="1";
string targetII_id="2";

while (ros::ok())
{

 // here i change the string at each loop

  ros::Subscriber   vrepVideoSubscriber_trgII = n.subscribe("/vrep...
       /visionSensorData"+targetII_id,1,newImageTrigger_trgII);  
  ros::Subscriber   vrepVideoSubscriber_trgI = n.subscribe("/vrep...
       /visionSensorData"+targetI_id,1,newImageTrigger_trgI);  
   .....

Originally posted by mateo_7_7 on ROS Answers with karma: 90 on 2013-06-11
Post score: 1

A:

In principle this is allowed. However, you are probably changing the subscriptions very fast. To successfully get a message through after the subscribe call, the nodes must arrange for a connection to be opened and a message must be sent. This usually takes some time.
As soon as one loop cycle ends your subscribers go out of scope and will be destroyed, so depended on the code after ..... this code won't do what you want it to do.

Originally posted by dornhege with karma: 31395 on 2013-06-12
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by mateo_7_7 on 2013-06-12:
actually i receive the name of the topic (the string), which i have to read from, from another subscriber (and for sure the updating of this string is performed correctly)....but, as I said, i cannot read from this new topic"/vrep/visionSensorData"+targetII_id because the topic remains:
Comment by mateo_7_7 on 2013-06-12:
"/vrep/visionSensorData"+NULL even if the string is updated. The updating of this string (apart from the first time that is performed after 1 loop) is performed very rarely ....how can i do???
Comment by dornhege on 2013-06-12:
You have to give the subscribers some time to connect and receive messages in your code design. If you really just want to get something quickly, a service might be better suited.

