Q:

Do simple, non-sonic, omni-directional rangefinding beacons exist?

I am on a robotics team that plans to compete in a competition where one of the rules is that no sort of sonic sensor is allowed to be used. I guess that limits it to some sort of EM frequency right?
Ideally, my team is looking for a simple beacon system, where beacon A  would be attached to the robot, while beacon B would be attached to a known point on the competition space. Then, beacon A can give information about how far away B is. After some searching, I could only turn up laser rangefinders that required pointing at the target. I am a CS student, so I'm not familiar with the terminology to aid searches.
Another nice property would be if the beacons also gave the angle of beacon A in beacon B's field of view, although this is not necessary, since multiple beacons could be used to obtain this information.
We have an Xbox 360 Kinect working, and able to track things and give distances, but it looses accuracy over distance quickly (the arena is about 6 meters long), and this beacon should be as simple as possible. We ONLY need it for a relative position of our robot.
Alternate Solution:
Another way to solve this would be for an omni-directional beacon to only give angle information, two of these could be used to triangulate, and do the job just as well.

A:

Yes, there is such a system available today, ScenSor from DecaWave:

These tags can measure their distance from base stations using the time of flight of radio packets.
They have an precision of about 10cm, I.E. successive samples are randomly distributed in a 10cm diameter cloud around the true location. Also, the radio signal needs a clear line of sight from the tags to the base stations. Any obstacles will cause a slight delay in the signal, giving a slight error in the readings. 
However, if you combine enough tags and base stations, plus odometry from your robot, you can get pretty good precision indeed.
One caveat: The chips on the modules are very complex to use, and the example source code provided by Decawave is a nearly indecipherable mess, so expect to put a lot of time and effort into getting these to work.

