Q:

Is there a more direct way to set up a planning node in ompl?

Hi there!
I've been reading about how to use ROS for a robotic arm path planning for a while and I actually got some feedback about a doubt I had in this topic.
For what I see, I'll have to write my own c++ code to define the StateValididyChecker procedure.
Now, I also understand the URDF of a robot has all the physic information one could need to extract the collision information, so isn't there a direct way that uses the URDF for the planning algorithm instead of defining a StateValidityChecker? Or am I just missing it?
Thanks a lot for the help. I'm hopping some day I could be the one answeing questions here :)

Originally posted by Carlos on ROS Answers with karma: 53 on 2012-04-09
Post score: 0

A:

Hi Carlos,
Have you tried the arm_navigation stack together with the Warehouse Viewer?
It works like a charm for my (non-PR2) robot and I found it quite straight forward to set it up using the provided tutorials.

Originally posted by bit-pirate with karma: 2062 on 2012-07-11
This answer was ACCEPTED on the original site
Post score: 0

