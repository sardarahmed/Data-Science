Q:

Arduino To Linux in ROS

Hi
I am using a wii nunchuck controller to pass serial values to my Ubuntu Computer, I wrote a c++ file that carries out this function and it works perfectly, however I have tried making this in ROS where rather than print the value to the terminal I publish it to a topic.
I cannot get my package to build in ROS and I dont know why. I have never used a ROS file before where i have had to include header files so i could have done this incorrectly, the headers are in ws/src/pakage/include. The error which i think is the main one is.
/home/satellite/sendws/src/nunout/src/serialin.cpp:57:14: error: ambiguous overload for ‘operator>>’ in ‘file >> ss’

My code for the program which runs as a standard executable is.
#include <iostream>
#include <stdio.h>
#include <fstream>
#include <termios.h>
#include <unistd.h>
#include <fcntl.h>
#include <string.h>

using namespace std;

int
main()
{
    struct termios tio;
    
    memset(&tio,0,sizeof(tio));
    tio.c_iflag=0;
    tio.c_oflag=0;
    tio.c_cflag=CS8|CREAD|CLOCAL;
    tio.c_lflag=0;
    tio.c_cc[VMIN]=1;
    tio.c_cc[VTIME]=5;
    
    cfsetispeed(&tio, B9600);
    
    
    int i;
    string str;
cout << "START OF PROG";

fstream file;

file.open("/dev/ttyACM0");

if(file!=NULL){
      cout << "file not null" << endl;  
    for(i=0;i<1000;i++){
      
      file >> str;
      if(str == ""){cout<< "null"<<endl;}
      else{cout<<str<<endl;}

  }
      //fclose(file);
}
else {cout<<"file null"<<endl;}
}

when it is in ROS the code has been changed to
//Take nunchuck position from arduino
//over serial and broadcast it to
//topic for Odroid
     #include <stdio.h>
     #include <fstream>
     #include <termios.h>
     #include <unistd.h>
     #include <fcntl.h>
     //#include <string.h>
     
     #include "ros/ros.h" 
     #include "std_msgs/String.h"
     
     using namespace std;
     
     int
     main(int argc, char **argv)
     {
     //====================================================
     
        ros::init(argc, argv, "serialin");
        ros::NodeHandle n;
        ros::Publisher nunpos_pub = n.advertise<std_msgs::String>("nunpos",1);
        ros::Rate loop_rate(1);
        
     //==================================================== 
        
        
        struct termios tio;
        
        memset(&tio,0,sizeof(tio));
        tio.c_iflag=0;
        tio.c_oflag=0;
        tio.c_cflag=CS8|CREAD|CLOCAL;
        tio.c_lflag=0;
        tio.c_cc[VMIN]=1;
        tio.c_cc[VTIME]=5;
        
        cfsetispeed(&tio, B9600);
        
        
        int i;
        string str;
     
        fstream file;
     
        file.open("/dev/ttyACM0");
     
     if(file!=NULL){
        while(ros::ok()){
                  
                  std_msgs::String msg;
                  std::stringstream ss;
        
                  file >> ss;
                  
                  if(ss == ""){
                          ss = "Empty";
                          msg.data = ss.str();
                          ROS_INFO("%s", msg->data.c_str());
                      }
                  else{
                      
                        msg.data = ss.str();
                        nunpos_pub.publish(msg);                  
                      
                      }
                      
            loop_rate.sleep();
                  
     
            }
     
     return 0;
            }
        }

the output from the catkin_make is
satellite@satellite-OptiPlex-990:~/sendws$ catkin_make
Base path: /home/satellite/sendws
Source space: /home/satellite/sendws/src
Build space: /home/satellite/sendws/build
Devel space: /home/satellite/sendws/devel
Install space: /home/satellite/sendws/install
####
#### Running command: "make cmake_check_build_system" in "/home/satellite/sendws/build"
####
####
#### Running command: "make -j4 -l4" in "/home/satellite/sendws/build"
####
[100%] Building CXX object nunout/CMakeFiles/serialin.dir/src/serialin.cpp.o
/home/satellite/sendws/src/nunout/src/serialin.cpp: In function ‘int main(int, char**)’:
/home/satellite/sendws/src/nunout/src/serialin.cpp:57:14: error: ambiguous overload for ‘operator>>’ in ‘file >> ss’
/home/satellite/sendws/src/nunout/src/serialin.cpp:57:14: note: candidates are:
/usr/include/c++/4.6/istream:122:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__istream_type& (*)(std::basic_istream<_CharT, _Traits>::__istream_type&)) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>
/usr/include/c++/4.6/istream:122:7: note:   no known conversion for argument 1 from ‘std::stringstream {aka std::basic_stringstream<char>}’ to ‘std::basic_istream<char>::__istream_type& (*)(std::basic_istream<char>::__istream_type&) {aka std::basic_istream<char>& (*)(std::basic_istream<char>&)}’
/usr/include/c++/4.6/istream:126:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__ios_type& (*)(std::basic_istream<_CharT, _Traits>::__ios_type&)) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>, std::basic_istream<_CharT, _Traits>::__ios_type = std::basic_ios<char>] <near match>
/usr/include/c++/4.6/istream:126:7: note:   no known conversion for argument 1 from ‘std::stringstream {aka std::basic_stringstream<char>}’ to ‘std::basic_istream<char>::__ios_type& (*)(std::basic_istream<char>::__ios_type&) {aka std::basic_ios<char>& (*)(std::basic_ios<char>&)}’
/usr/include/c++/4.6/istream:133:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::ios_base& (*)(std::ios_base&)) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>
/usr/include/c++/4.6/istream:133:7: note:   no known conversion for argument 1 from ‘std::stringstream {aka std::basic_stringstream<char>}’ to ‘std::ios_base& (*)(std::ios_base&)’
/usr/include/c++/4.6/istream:241:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_istream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>] <near match>
/usr/include/c++/4.6/istream:241:7: note:   no known conversion for argument 1 from ‘std::stringstream {aka std::basic_stringstream<char>}’ to ‘std::basic_istream<char>::__streambuf_type* {aka std::basic_streambuf<char>*}’
/home/satellite/sendws/src/nunout/src/serialin.cpp:59:15: error: no match for ‘operator==’ in ‘ss == ""’
/home/satellite/sendws/src/nunout/src/serialin.cpp:59:15: note: candidates are:
/home/satellite/sendws/src/nunout/src/serialin.cpp:59:15: note: operator==(const char*, const char*) <built-in>
/home/satellite/sendws/src/nunout/src/serialin.cpp:59:15: note:   no known conversion for argument 1 from ‘std::stringstream {aka std::basic_stringstream<char>}’ to ‘const char*’
/home/satellite/sendws/src/nunout/src/serialin.cpp:59:15: note: operator==(void*, void*) <built-in>
/home/satellite/sendws/src/nunout/src/serialin.cpp:59:15: note:   no known conversion for argument 2 from ‘const char [1]’ to ‘void*’
/usr/include/c++/4.6/bits/postypes.h:218:5: note: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
/usr/include/c++/4.6/bits/stl_pair.h:201:5: note: template<class _T1, class _T2> bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
/usr/include/c++/4.6/bits/stl_iterator.h:285:5: note: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
/usr/include/c++/4.6/bits/stl_iterator.h:335:5: note: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_IteratorL>&, const std::reverse_iterator<_IteratorR>&)
/usr/include/c++/4.6/bits/allocator.h:122:5: note: template<class _T1, class _T2> bool std::operator==(const std::allocator<_T1>&, const std::allocator<_T2>&)
/usr/include/c++/4.6/bits/allocator.h:127:5: note: template<class _Tp> bool std::operator==(const std::allocator<_Tp1>&, const std::allocator<_Tp1>&)
/usr/include/c++/4.6/bits/basic_string.h:2427:5: note: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&)
/usr/include/c++/4.6/bits/basic_string.h:2434:5: note: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&)
/usr/include/c++/4.6/bits/basic_string.h:2448:5: note: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&)
/usr/include/c++/4.6/bits/basic_string.h:2460:5: note: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
/usr/include/c++/4.6/bits/streambuf_iterator.h:194:5: note: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
/usr/include/c++/4.6/bits/stl_vector.h:1273:5: note: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
/usr/include/c++/4.6/complex:453:5: note: template<class _Tp> bool std::operator==(const std::complex<_Tp>&, const std::complex<_Tp>&)
/usr/include/c++/4.6/complex:458:5: note: template<class _Tp> bool std::operator==(const std::complex<_Tp>&, const _Tp&)
/usr/include/c++/4.6/complex:463:5: note: template<class _Tp> bool std::operator==(const _Tp&, const std::complex<_Tp>&)
/usr/include/c++/4.6/bits/stl_tree.h:309:5: note: template<class _Val> bool std::operator==(const std::_Rb_tree_iterator<_Tp>&, const std::_Rb_tree_const_iterator<_Val>&)
/usr/include/c++/4.6/bits/stl_tree.h:856:5: note: template<class _Key, class _Val, class _KeyOfValue, class _Compare, class _Alloc> bool std::operator==(const std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&, const std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&)
/usr/include/c++/4.6/bits/stl_map.h:882:5: note: template<class _Key, class _Tp, class _Compare, class _Alloc> bool std::operator==(const std::map<_Key, _Tp, _Compare, _Alloc>&, const std::map<_Key, _Tp, _Compare, _Alloc>&)
/usr/include/c++/4.6/bits/stl_multimap.h:800:5: note: template<class _Key, class _Tp, class _Compare, class _Alloc> bool std::operator==(const std::multimap<_Key, _Tp, _Compare, _Alloc>&, const std::multimap<_Key, _Tp, _Compare, _Alloc>&)
/usr/include/c++/4.6/bits/stl_set.h:696:5: note: template<class _Key, class _Compare, class _Alloc> bool std::operator==(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key, _Compare, _Alloc>&)
/usr/include/c++/4.6/bits/stl_multiset.h:679:5: note: template<class _Key, class _Compare, class _Alloc> bool std::operator==(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key, _Compare, _Alloc>&)
/usr/include/c++/4.6/bits/stl_list.h:275:5: note: template<class _Val> bool std::operator==(const std::_List_iterator<_Tp>&, const std::_List_const_iterator<_Val>&)
/usr/include/c++/4.6/bits/stl_list.h:1564:5: note: template<class _Tp, class _Alloc> bool std::operator==(const std::list<_Tp, _Alloc>&, const std::list<_Tp, _Alloc>&)
/usr/include/c++/4.6/bits/stream_iterator.h:130:5: note: template<class _Tp, class _CharT, class _Traits, class _Dist> bool std::operator==(const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&, const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&)
/usr/include/c++/4.6/ext/new_allocator.h:123:5: note: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
/usr/include/c++/4.6/bits/stl_iterator.h:805:5: note: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
/usr/include/c++/4.6/bits/stl_iterator.h:799:5: note: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
/home/satellite/sendws/src/nunout/src/serialin.cpp:60:13: error: no match for ‘operator=’ in ‘ss = "Empty"’
/home/satellite/sendws/src/nunout/src/serialin.cpp:60:13: note: candidate is:
/usr/include/c++/4.6/sstream:483:11: note: std::basic_stringstream<char>& std::basic_stringstream<char>::operator=(const std::basic_stringstream<char>&)
/usr/include/c++/4.6/sstream:483:11: note:   no known conversion for argument 1 from ‘const char [6]’ to ‘const std::basic_stringstream<char>&’
/home/satellite/sendws/src/nunout/src/serialin.cpp:62:10: error: base operand of ‘->’ has non-pointer type ‘std_msgs::String’
make[2]: *** [nunout/CMakeFiles/serialin.dir/src/serialin.cpp.o] Error 1
make[1]: *** [nunout/CMakeFiles/serialin.dir/all] Error 2
make: *** [all] Error 2
Invoking "make" failed

Originally posted by Andrew Godley on ROS Answers with karma: 1 on 2015-04-22
Post score: 0

Original comments
Comment by cyborg-x1 on 2015-04-22:
I would suggest using the serial functions from ros. Would be much easier ;-)
http://wiki.ros.org/serial
Example:
http://docs.ros.org/indigo/api/serial/html/serial__example_8cc.html
http://docs.ros.org/indigo/api/serial/html/serial__example_8cc_source.html
Comment by Andrew Godley on 2015-04-24:
Thanks, i am new to ubuntu and ROS so it been a difficult. I have used the ROS serial libraries and i can access the arduino from a desktop perfectly. But when trying to install on the odroid i get Unable to locate package ros-hydro-rosserial-arduino i don't know why since this code worked on the PC

A:

I guess this problem results from the fact that you have a embedded system. There is another repo for those and this package is not built for the embedded repository, not all packages are built there. So you might have to build it yourself on your embedded platform (catkin_ws, checking out etc.)

Originally posted by cyborg-x1 with karma: 1376 on 2015-04-24
This answer was ACCEPTED on the original site
Post score: 0

