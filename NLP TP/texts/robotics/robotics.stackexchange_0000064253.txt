Q:

laser geometry and Eigen/Core bug - how to actually fix it?

Hello !
I've been planning to use PointCloud for processing some laser data from PR2 tilt scan, but when including <laser_geometry/laser_geometry.h>, I'm the case of Eigen/Core bug (Ubuntu 12.04 / Groovy).
I add a look to the proposed solution which is about modifying the CMakeLists. It seems that the problem has been solved (according to the ticket), but it is still there in my up-to-date groovy laser_geometry package. I don't really understand if I have to make a manual modification (my package is in /opt/ros/groovy/share/laser_geometry and only contains a package.xml and a cmake folder - no CMakeLists.txt) or if I should just reinstall something (from apt-get install, I get that my package is up-to-date). The bug exists also on the real PR2.
Ticket corresponding : https://code.ros.org/trac/ros-pkg/ticket/5566
Thanks for reading,
Erwan
EDIT after ahendrix answer :
I'm building packages with catkin.
I depend on the following packages (build_depend tag in package.xml) :
roscpp
geometry_msgs
tf
sensor_msgs
laser_geometry
message_generation
after checking, all packages have at least a cmake folder with *Config.cmake and *Config-version.cmake and a package.xml files. Laser_geometry and message_generation have nothing else, others contains msg and srv folders. In my understanding, there are all catkinized.
I added :
find_package(Eigen REQUIRED)
include_directories(${Eigen_INCLUDE_DIRS})

to my_package/CMakeLists.txt  and it's now compiling without error, I'm able to declare a LaserProjector. What I wasn't really understanding with the previous solutions was where to make this fix (as there is no CMakeLists.txt in the laser_geometry package accessible from roscd).
Thanks ahendrix !

Originally posted by Erwan R. on ROS Answers with karma: 697 on 2014-11-25
Post score: 0

A:

This has been fixed for almost two years. If you're running into it now, it probably means that there's something wrong with the way you're building your package.
Since you're on Groovy, are you using rosbuild or catkin as your build system? Are all of dependencies cakinized properly? laser_geometry is a catkinized package, so you should be able to use either.
It may be that laser_geometry isn't exporting the dependency on Eigen correctly. If you're using catkin, you should be able to fix this by finding Eigen in your package's CMakeLists.txt:
find_package(Eigen REQUIRED)
include_directories(${Eigen_INCLUDE_DIRS})

Originally posted by ahendrix with karma: 47576 on 2014-11-28
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Erwan R. on 2014-11-28:
Edited my question, it's working ! Thank you !
Comment by ahendrix on 2014-11-29:
The original question, bug and answer that you linked to was for the rosbuild version of laser_geometry. Now that laser_geometry is catkinized, the install process is simpler and the install layout is very different; much closer to a traditional FHS layout, which is why the old answers didn't apply.

