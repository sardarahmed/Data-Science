Q:

ROS2 add_on_set_parameters_callback not triggered for launch parameter

I've defined a callback for parameter value change:
MyNode::MyNode() : Node("myNode")
{
  // subscriber, publisher, ....

  // Define callback to update parameter
  parameter_set_callback = this->add_on_set_parameters_callback(std::bind(&MyNode::update_parameter_callback, this, _1));
}

The function update_parameter_callback itself sets the changed parameter values in my application.
rcl_interfaces::msg::SetParametersResult MyNode::update_parameter_callback(const std::vector<rclcpp::Parameter> &parameters)
{

  rcl_interfaces::msg::SetParametersResult res;

  // Update parameter
  res = UpdateParameter_MyCode(parameters);

  return res;
}

This works well when setting parameter during runtime via ros2 param set
When I set a default value in launch file, this callback is not triggered:
<node pkg = "my_pkg" name = "MyNode" exec = "MyNode" >
    <param name="bar" value="201.0"/>
</node>

Is there any chance to re-use existing callback for parameter that are set within launch?

Originally posted by holunder on ROS Answers with karma: 20 on 2023-06-28
Post score: 0

A:

It seems like changing the order in my code fixed the issue.
When I setadd_on_set_parameters_callback before actually declaring parameter, it ensures that parameter override value is triggering the callback and then populating the value to my function.

Originally posted by holunder with karma: 20 on 2023-06-29
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by holunder on 2023-06-29:
if someone with higher reputation could mark this reply as an answer, the questions could be closed properly.

