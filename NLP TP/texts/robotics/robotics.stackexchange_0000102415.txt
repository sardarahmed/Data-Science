Q:

Dynamixel Workbench Installation Error

I run make in accordance with the Section 3.3.3.Setup DYNAMIXEL Workbench library.
But, I got the following error.
user@user:~/dyna_ws/src/my_dyna_pkgs/dynamixel-workbench/dynamixel_workbench_toolbox/examples/build$ make
[  2%] Building CXX object CMakeFiles/dynamixel_workbench.dir/home/rentaro/dyna_ws/src/my_dyna_pkgs/dynamixel-workbench/dynamixel_workbench_toolbox/src/dynamixel_workbench_toolbox/dynamixel_driver.cpp.o
In file included from /home/rentaro/dyna_ws/src/my_dyna_pkgs/dynamixel-workbench/dynamixel_workbench_toolbox/src/dynamixel_workbench_toolbox/dynamixel_driver.cpp:19:
/home/rentaro/dyna_ws/src/my_dyna_pkgs/dynamixel-workbench/dynamixel_workbench_toolbox/src/dynamixel_workbench_toolbox/../../include/dynamixel_workbench_toolbox/dynamixel_driver.h:29:12: fatal error: dynamixel_sdk/dynamixel_sdk.h: No such file or directory
   29 |   #include "dynamixel_sdk/dynamixel_sdk.h"
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
compilation terminated.
make[2]: *** [CMakeFiles/dynamixel_workbench.dir/build.make:76: CMakeFiles/dynamixel_workbench.dir/home/rentaro/dyna_ws/src/my_dyna_pkgs/dynamixel-workbench/dynamixel_workbench_toolbox/src/dynamixel_workbench_toolbox/dynamixel_driver.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:162: CMakeFiles/dynamixel_workbench.dir/all] Error 2
make: *** [Makefile:84: all] Error 2

Please tell me how to run completely.

Originally posted by Renox on ROS Answers with karma: 27 on 2022-09-19
Post score: 0

A:

Please pay attention to the following error taken from the question:
In file included from /home/rentaro/dyna_ws/src/my_dyna_pkgs/dynamixel-workbench/dynamixel_workbench_toolbox/src/dynamixel_workbench_toolbox/dynamixel_driver.cpp:19:
/home/rentaro/dyna_ws/src/my_dyna_pkgs/dynamixel-workbench/dynamixel_workbench_toolbox/src/dynamixel_workbench_toolbox/../../include/dynamixel_workbench_toolbox/dynamixel_driver.h:29:12: fatal error: dynamixel_sdk/dynamixel_sdk.h: No such file or directory
   29 |   #include "dynamixel_sdk/dynamixel_sdk.h"
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
compilation terminated.

It can not find dynamixel_sdk. Therefore, you need to install it. There are various ways to install it. Since the question is for ROS Noetic, please remember to adapt commands to your ROS distro. Let's discuss them below:
Install from Source

Get the source code of DynamixelSDK.
ravi@dell:~$ mkdir dynamixel
    ravi@dell:~$ cd dynamixel/
ravi@dell:~/dynamixel$ git clone --branch noetic-devel https://github.com/ROBOTIS-GIT/DynamixelSDK.git
Cloning into 'DynamixelSDK'...
remote: Enumerating objects: 13727, done.
remote: Counting objects: 100% (1101/1101), done.
remote: Compressing objects: 100% (486/486), done.
remote: Total 13727 (delta 539), reused 1047 (delta 524), pack-reused 12626
Receiving objects: 100% (13727/13727), 28.50 MiB | 5.84 MiB/s, done.
Resolving deltas: 100% (7787/7787), done.

Compile the source code. Here I am compiling 64 bit version.
ravi@dell:~/dynamixel$ cd DynamixelSDK/c++/build/linux64
    ravi@dell:~/dynamixel/DynamixelSDK/c++/build/linux64$ make
mkdir -p ./.objects/
g++ -O2 -O3 -DLINUX -D_GNU_SOURCE -Wall -c -I../../include/dynamixel_sdk -m64 -fPIC -g -c ../../src/dynamixel_sdk/group_bulk_read.cpp -o .objects/group_bulk_read.o
../../src/dynamixel_sdk/group_bulk_read.cpp: In member function ‘bool dynamixel::GroupBulkRead::getError(uint8_t, uint8_t*)’:
../../src/dynamixel_sdk/group_bulk_read.cpp:235:19: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
  235 |   return error[0] = error_list_[id][0];
      |          ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
g++ -O2 -O3 -DLINUX -D_GNU_SOURCE -Wall -c -I../../include/dynamixel_sdk -m64 -fPIC -g -c ../../src/dynamixel_sdk/group_bulk_write.cpp -o .objects/group_bulk_write.o
g++ -O2 -O3 -DLINUX -D_GNU_SOURCE -Wall -c -I../../include/dynamixel_sdk -m64 -fPIC -g -c ../../src/dynamixel_sdk/group_sync_read.cpp -o .objects/group_sync_read.o
../../src/dynamixel_sdk/group_sync_read.cpp: In member function ‘bool dynamixel::GroupSyncRead::getError(uint8_t, uint8_t*)’:
../../src/dynamixel_sdk/group_sync_read.cpp:204:19: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
  204 |   return error[0] = error_list_[id][0];
      |          ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
g++ -O2 -O3 -DLINUX -D_GNU_SOURCE -Wall -c -I../../include/dynamixel_sdk -m64 -fPIC -g -c ../../src/dynamixel_sdk/group_sync_write.cpp -o .objects/group_sync_write.o
g++ -O2 -O3 -DLINUX -D_GNU_SOURCE -Wall -c -I../../include/dynamixel_sdk -m64 -fPIC -g -c ../../src/dynamixel_sdk/packet_handler.cpp -o .objects/packet_handler.o
g++ -O2 -O3 -DLINUX -D_GNU_SOURCE -Wall -c -I../../include/dynamixel_sdk -m64 -fPIC -g -c ../../src/dynamixel_sdk/port_handler.cpp -o .objects/port_handler.o
g++ -O2 -O3 -DLINUX -D_GNU_SOURCE -Wall -c -I../../include/dynamixel_sdk -m64 -fPIC -g -c ../../src/dynamixel_sdk/protocol1_packet_handler.cpp -o .objects/protocol1_packet_handler.o
g++ -O2 -O3 -DLINUX -D_GNU_SOURCE -Wall -c -I../../include/dynamixel_sdk -m64 -fPIC -g -c ../../src/dynamixel_sdk/protocol2_packet_handler.cpp -o .objects/protocol2_packet_handler.o
g++ -O2 -O3 -DLINUX -D_GNU_SOURCE -Wall -c -I../../include/dynamixel_sdk -m64 -fPIC -g -c ../../src/dynamixel_sdk/port_handler_linux.cpp -o .objects/port_handler_linux.o
g++ -shared -fPIC -m64 -o ./libdxl_x64_cpp.so ./.objects/group_bulk_read.o ./.objects/group_bulk_write.o ./.objects/group_sync_read.o ./.objects/group_sync_write.o ./.objects/packet_handler.o ./.objects/port_handler.o ./.objects/protocol1_packet_handler.o ./.objects/protocol2_packet_handler.o ./.objects/port_handler_linux.o -lrt

Install the compiled files to system location.
ravi@dell:~/dynamixel/DynamixelSDK/c++/build/linux64$ sudo make install
mkdir -p ./.objects/
g++ -shared -fPIC -m64 -o ./libdxl_x64_cpp.so ./.objects/group_bulk_read.o ./.objects/group_bulk_write.o ./.objects/group_sync_read.o ./.objects/group_sync_write.o ./.objects/packet_handler.o ./.objects/port_handler.o ./.objects/protocol1_packet_handler.o ./.objects/protocol2_packet_handler.o ./.objects/port_handler_linux.o -lrt
cp "./libdxl_x64_cpp.so" "/usr/local/lib/libdxl_x64_cpp.so"
ln -s "/usr/local/lib/libdxl_x64_cpp.so" "/usr/local/lib/libdxl_x64_cpp.so.2"
ln -s "/usr/local/lib/libdxl_x64_cpp.so" "/usr/local/lib/libdxl_x64_cpp.so.2.0"
ln -s "/usr/local/lib/libdxl_x64_cpp.so" "/usr/local/lib/libdxl_x64_cpp.so.2.0.0"
cp -r ../../include/dynamixel_sdk/* /usr/local/include/dynamixel_sdk
ldconfig

Get the source code of dynamixel-workbench
ravi@dell:~/dynamixel/DynamixelSDK/c++/build/linux64$ cd ~/dynamixel/
    ravi@dell:~/dynamixel$ git clone --branch noetic-devel https://github.com/ROBOTIS-GIT/dynamixel-workbench.git
Cloning into 'dynamixel-workbench'...
remote: Enumerating objects: 6268, done.
remote: Counting objects: 100% (279/279), done.
remote: Compressing objects: 100% (117/117), done.
remote: Total 6268 (delta 158), reused 241 (delta 142), pack-reused 5989
Receiving objects: 100% (6268/6268), 1.29 MiB | 4.27 MiB/s, done.
Resolving deltas: 100% (4161/4161), done.

Compile the examples to validate that SDK has been installed successfully.
ravi@dell:~/dynamixel$ cd dynamixel-workbench/dynamixel_workbench_toolbox/examples/
    ravi@dell:~/dynamixel/dynamixel-workbench/dynamixel_workbench_toolbox/examples$ mkdir build
ravi@dell:~/dynamixel/dynamixel-workbench/dynamixel_workbench_toolbox/examples$ cd build/
    ravi@dell:~/dynamixel/dynamixel-workbench/dynamixel_workbench_toolbox/examples/build$ cmake ..
-- The C compiler identification is GNU 9.4.0
-- The CXX compiler identification is GNU 9.4.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /home/ravi/dynamixel/dynamixel-workbench/dynamixel_workbench_toolbox/examples/build
ravi@dell:~/dynamixel/dynamixel-workbench/dynamixel_workbench_toolbox/examples/build$ make
Scanning dependencies of target dynamixel_workbench
[  2%] Building CXX object CMakeFiles/dynamixel_workbench.dir/home/ravi/dynamixel/dynamixel-workbench/dynamixel_workbench_toolbox/src/dynamixel_workbench_toolbox/dynamixel_item.cpp.o
[  5%] Building CXX object CMakeFiles/dynamixel_workbench.dir/home/ravi/dynamixel/dynamixel-workbench/dynamixel_workbench_toolbox/src/dynamixel_workbench_toolbox/dynamixel_driver.cpp.o
[  8%] Building CXX object CMakeFiles/dynamixel_workbench.dir/home/ravi/dynamixel/dynamixel-workbench/dynamixel_workbench_toolbox/src/dynamixel_workbench_toolbox/dynamixel_tool.cpp.o
[ 10%] Building CXX object CMakeFiles/dynamixel_workbench.dir/home/ravi/dynamixel/dynamixel-workbench/dynamixel_workbench_toolbox/src/dynamixel_workbench_toolbox/dynamixel_workbench.cpp.o
[ 13%] Linking CXX static library libdynamixel_workbench.a
[ 13%] Built target dynamixel_workbench
Scanning dependencies of target find_dynamixel
[ 16%] Building CXX object CMakeFiles/find_dynamixel.dir/src/o_Find_Dynamixel.cpp.o
[ 18%] Linking CXX executable find_dynamixel
[ 18%] Built target find_dynamixel
Scanning dependencies of target sync_read_write
[ 21%] Building CXX object CMakeFiles/sync_read_write.dir/src/m_Sync_Read_Write.cpp.o
[ 24%] Linking CXX executable sync_read_write
[ 24%] Built target sync_read_write
Scanning dependencies of target model_scan
[ 27%] Building CXX object CMakeFiles/model_scan.dir/src/a_Model_Scan.cpp.o
[ 29%] Linking CXX executable model_scan
[ 29%] Built target model_scan
Scanning dependencies of target velocity
[ 32%] Building CXX object CMakeFiles/velocity.dir/src/i_Velocity.cpp.o
[ 35%] Linking CXX executable velocity
[ 35%] Built target velocity
Scanning dependencies of target ping
[ 37%] Building CXX object CMakeFiles/ping.dir/src/b_Ping.cpp.o
[ 40%] Linking CXX executable ping
[ 40%] Built target ping
Scanning dependencies of target id_change
[ 43%] Building CXX object CMakeFiles/id_change.dir/src/c_ID_Change.cpp.o
[ 45%] Linking CXX executable id_change
[ 45%] Built target id_change
Scanning dependencies of target bps_change
[ 48%] Building CXX object CMakeFiles/bps_change.dir/src/d_BPS_Change.cpp.o
[ 51%] Linking CXX executable bps_change
[ 51%] Built target bps_change
Scanning dependencies of target mode_change
[ 54%] Building CXX object CMakeFiles/mode_change.dir/src/e_Mode_Change.cpp.o
[ 56%] Linking CXX executable mode_change
[ 56%] Built target mode_change
Scanning dependencies of target reboot
[ 59%] Building CXX object CMakeFiles/reboot.dir/src/f_Reboot.cpp.o
[ 62%] Linking CXX executable reboot
[ 62%] Built target reboot
Scanning dependencies of target reset
[ 64%] Building CXX object CMakeFiles/reset.dir/src/g_Reset.cpp.o
[ 67%] Linking CXX executable reset
[ 67%] Built target reset
Scanning dependencies of target bulk_read_write
[ 70%] Building CXX object CMakeFiles/bulk_read_write.dir/src/n_Bulk_Read_Write.cpp.o
[ 72%] Linking CXX executable bulk_read_write
[ 72%] Built target bulk_read_write
Scanning dependencies of target current_based_position
[ 75%] Building CXX object CMakeFiles/current_based_position.dir/src/j_Current_Based_Position.cpp.o
[ 78%] Linking CXX executable current_based_position
[ 78%] Built target current_based_position
Scanning dependencies of target monitor
[ 81%] Building CXX object CMakeFiles/monitor.dir/src/p_Monitor.cpp.o
[ 83%] Linking CXX executable monitor
[ 83%] Built target monitor
Scanning dependencies of target position
[ 86%] Building CXX object CMakeFiles/position.dir/src/h_Position.cpp.o
[ 89%] Linking CXX executable position
[ 89%] Built target position
Scanning dependencies of target read_write
[ 91%] Building CXX object CMakeFiles/read_write.dir/src/k_Read_Write.cpp.o
[ 94%] Linking CXX executable read_write
[ 94%] Built target read_write
Scanning dependencies of target sync_write
[ 97%] Building CXX object CMakeFiles/sync_write.dir/src/l_Sync_Write.cpp.o
[100%] Linking CXX executable sync_write
[100%] Built target sync_write

Install Prebuilt Binaries
The other way is to use apt as shown below:
sudo apt-get install ros-noetic-dynamixel-sdk

Please feel free to check here for more info on installation.
System Info
The above commands are tested in the following environment:

Kernel version (uname -r): 5.4.0-125-generic
gcc --version: 9.4.0
OS: Ubuntu 20.04.5 LTS

Originally posted by ravijoshi with karma: 1744 on 2022-09-19
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Renox on 2022-09-19:
Thank you for your reply.
I run "sudo apt-get install ros-noetic-dynamixel-sdk" you showed, but I got the same error.
I was doing "git clone" dynamixelsdk library in accordance with e-Manual and got an error.
I may have misplaced the library.
Where should I put dynamixelsdk library?
Comment by ravijoshi on 2022-09-19:
I have installed it successfully. Please check the updated answer. Let me know if the problem persists.
Comment by Renox on 2022-09-22:
Thank you for your reply. I could compile.
I have one more question. Where should I put dynamixel-workbench-msgs of e-Manual? Is it same place as dynamixel-workbench?
Best regards.
Comment by ravijoshi on 2022-09-23:\

Where should I put dynamixel-workbench-msgs of e-Manual?

The ROBOTIS-GIT/dynamixel-workbench and ROBOTIS-GIT/dynamixel-workbench-msgs are ROS packages. So both of them should be inside a ROS workspace. In my answer above, I kept the "dynamixel-workbench" inside a regular directory to show you the make command (as it was the original question).
Finally, if this information was helpful, do not forget to upvote and mark it as correct to accept this answer, please.
Comment by Renox on 2022-09-23:
Thank you so much.

