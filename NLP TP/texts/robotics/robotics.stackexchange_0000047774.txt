Q:

python: encapsulate map_server or import image_loader

I'm working on a project where we'd like to provide some additional waypoint data along with the the OccupancyGrid that we would usually just get from a map_server.  The way I've written it currently is in 2 nodes, a map_server node and my own projectX_map_server node.  The projectX_map_server node gets the static_map service from map_server and republishes it along with the extra data we want to include.
This isn't a great design and is pretty confusing; for example if I do a 'rosnode list' it shows by projectX_map_server and map_server, other developers are unsure on which they should be asking for data (or should they interact with both?).
I'd really like a way to encapsulate the map_server entirely, because I really want the automagical image loading.  Another guy on the team said I could just include the image_loader.h as a library to get the map loading functionality but I'm writing a python node not a c++ node.
Any ideas?

Originally posted by karl_corobot on ROS Answers with karma: 1 on 2013-01-30
Post score: 0

A:

If your problem is just user confusing you could simply rename the map_server to something more obviously upstream and have your map server take the standard name.

Originally posted by tfoote with karma: 58457 on 2013-08-27
This answer was ACCEPTED on the original site
Post score: 0

