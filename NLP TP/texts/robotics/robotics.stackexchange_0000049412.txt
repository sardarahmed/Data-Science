Q:

How can I create my own ROS C++ library?

Hello All,
This might be a repeat question (although I checked out some of the recommendations that ROS Answers asked me to look at while typing the title of this question, but they didn't seem relevant). Here goes.
So I have a C++ header file called "force_torque.h" (I had issues with this, but thanks to @jbohren I was able to fix those) and I want to convert it into a ROS library. So basically, I want it to be a valid ROS package, yet I also want other ROS packages to be able to depend on this package. So far, I have just been able to create a new package using 'roscreate-pkg'. Now I have a feeling that I need to modify "CMakeLists.txt" somehow, but I don't know how. Is there any good ROS tutorial on how to do this? Or if it could be described here on this question below, I would be very grateful.
Thanks, and all help is greatly appreciated!
Nishant

Originally posted by Nishant on ROS Answers with karma: 143 on 2013-03-15
Post score: 3

A:

In rosbuild, to build the library you use rosbuild_add_library shown here, which is similar to the standard CMake add_library function. Then to make it available to other ros packages, you add the library linker arguments to a  <cpp> export tag in the package's manifest.xml shown here.
In catkin, you use the normal add_library CMake function to build the library. Then to make the library available to other ros packages, you add the library target to the LIBRARIES arguments of a call to the catkin_package CMake macro, shown here.

Originally posted by jbohren with karma: 5809 on 2013-03-15
This answer was ACCEPTED on the original site
Post score: 10

Original comments
Comment by Nishant on 2013-03-19:
@jbohren : Thanks! I'll follow the links that you have provided, and see where it takes me. I'll post any roadblocks that I hit on this thread itself. Thanks once again!

