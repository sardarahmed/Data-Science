Q:

Joint Trajectory Controller Problem - ROS Hydro, Gazebo 1.9, MoveIt

Hi,
I am trying to build a simple simulation that uses ROS, Gazebo and MoveIt. I am currently trying to implement joint trajectory controllers on the Gazebo model so that it can communicate with MoveIt. Its only a very simple model as I want to master the basics before building a more complicated robot in simulation.
So far I have:

loaded a 'joint_trajectory_controllers.yaml' file (defines the joints to be controlled with type:position_controllers/JointTrajectoryController ) onto parameter server
passed the controller names to the node that spawns the controllers

When I run the code, it fails to load the controller and returns the error:
"This controller requires a hardware interface of type 'hardware_interface::PositionJointInterface'. Make sure this is registered in the hardware_interface::RobotHW class."
I have tried to modify the hardware interface arguments in the transmissions but nothing seems to work?!
Can someone who has done this before outline the discrete steps required to implement this controller and/or tell me how to fix this error. Or link me to a (preferably simple) example that works in Hydro - I have been using the Reem model as a reference so far and while it works perfectly, its complexity makes it hard to use for debugging my problem. Any help would be greatly appreciated!
Thanks in advance

Originally posted by M@verick on ROS Answers with karma: 1 on 2014-02-07
Post score: 0

A:

The issue seems to be a mismatch between the control mode exposed by your robot joints and what the controller is expecting.
More specifically, you're trying to load a controller of type position_controllers/JointTrajectoryController, which expects position-controlled joints, i.e., hardware_interface::PositionJointInterface, and your robot does not expose it.
The current version of gazebo_ros_control does not add a position control interface by default. This pull request should address the issue, but is pending for release. As solutions, you can either switch your controller to a hardware_interface::EffortJointInterface, or build gazebo_ros_control from source.
The reason why it works with REEM is that it has a custom Gazebo plugin that properly registers a position control interface.
Let me know if you still have any doubts.

Originally posted by Adolfo Rodriguez T with karma: 3907 on 2014-02-09
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by M@verick on 2014-02-10:
Thanks for the clarification on this. I managed to get it to work last night using the EffortJointInterface so I'm happy now. That being said I prefer the REEM control interface - so time permitting I will do as suggested and build gazebo_ros_control. Thanks again for your time and help with this. M
Comment by Adolfo Rodriguez T on 2014-02-10:
Glad to hear that it worked. If you're not time-constrained, you can wait until the next gazebo_ros_control release and get the pos interface without having to build from source.
Also, if the answer was satisfactory, please mark it as such (checkmark on the left), so the question shows as resolved.
Comment by M@verick on 2014-02-10:
Sorry - new user :)

