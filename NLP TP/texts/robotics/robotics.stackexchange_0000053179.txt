Q:

How do you build roslisp_support on fuerte?

I'm quite new to ROS, so my apologies if some of my assumptions or terminology are mistaken. I have run through the beginner tutorials and built and gotten to run some toy examples using Python. But to make progress on my real work I need to get Roslisp running.
I'm using the the NooTrix prebuilt virtual machine containing ROS Fuerte on Ubuntu 12.04.2 LTS, running in VirtualBox 4.2.16 under Mac OS X 10.8.4. I am limited to Fuerte, as my ultimate objective is to integrate my work with that of others who are using Fuerte.
It appears that to use Roslisp I need to install the roslisp_support stack, as without it there is no SBCL for me to launch and get started.  Searching about I can find no pre-built roslisp_support, so I've checked out the sources from (I'm not allowed to do links in this formum but it's https colon code.ros.org slash svn slash ros slash stacks slash roslisp_support slash trunk) into a subdirectory under ~/ros_workspace. I've cd'd there and run rosmake without any arguments. This fails while trying to build the sbcl package with the error
make-host-1.sh: 31: make-host-1.sh: sbcl: not found

I note that line 31 of make-host-1.sh appears to be
$SBCL_XC_HOST < make-host-1.lisp || exit 1

I may be completely mistaken, but am guessing that may imply that something, I don't know what, upstream in the build process is setting the environment variable SBCL_XC_HOST to 'sbcl', but that that executable, if it exists at all, is not in my PATH at that point.
Am I correct in believing I need to build roslisp_support from source in order to use Roslisp? If so, does anyone have any advice on how to get it built successfully?

Originally posted by dfm on ROS Answers with karma: 26 on 2013-07-30
Post score: 0

A:

I think I've figured this one out.
Before you can build and install SBCL, you have to install SBCL. :-)
That's not quite as silly as it sounds. The following recipe worked for me. Start with
sudo apt-get install sbcl

This installs a recent version of SBCL, not necessarily the one Roslisp wants. However, with it available, you can then successfully do a rosmake of the roslisp_support sources, which will use the newer SBCL to bootstrap its build of the, presumably older, version of SBCL that Roslisp wants.
I'm guessing most folks who try to build roslisp_support never encounter this as a problem 'cause they already have a version of SBCL on their machines -- mostly it's just Lisp hackers that are going to want to use Roslisp, I'm guessing. But I stumbled over it since I was using a nearly pristine VM.
Anyway, installing SBCL before installing SBCL seems to have done the trick for me.

Originally posted by dfm with karma: 26 on 2013-07-31
This answer was ACCEPTED on the original site
Post score: 0

