Q:

delete TransformListener object in python to release computational resource

Hello! Recently I notice that, after I create a TransformListener object in a class in python, e.g.:
self.tf = TransformListener(),
the created tf object gets stuck in the memory, even I try deleting it in the "__del__(self)" method of the class with:
del self.tf
self.tf = None,
it does not work. The TransformListener object is used by a method of this class. The problem is that when I continue to create the object of this class (which is called by another class during operation), the TransformListener objects accumulate and occupy the computational resources. Thus my question is that how I can get rid of it to free the unnecessarily occupied resources? I appreciate any answers and suggestions in advance!

Originally posted by Mike Gao on ROS Answers with karma: 108 on 2016-11-02
Post score: 0

A:

There may be something not cleaning up properly, but python does not necessarily clean up when del is called. http://effbot.org/pyfaq/why-doesnt-python-release-the-memory-when-i-delete-a-large-object.htm
Here are some more resources  if you want to dig in deeper:

https://stackoverflow.com/questions/15455048/releasing-memory-in-python
https://docs.python.org/2/reference/simple_stmts.html#the-del-statement
https://stackoverflow.com/questions/865115/how-do-i-correctly-clean-up-a-python-object
http://eli.thegreenplace.net/2009/06/12/safely-using-destructors-in-python

Originally posted by tfoote with karma: 58457 on 2016-11-02
This answer was ACCEPTED on the original site
Post score: 0

