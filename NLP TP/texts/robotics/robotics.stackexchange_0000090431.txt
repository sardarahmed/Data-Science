Q:

Spawn three different custom robots in a launch file

Is it possible to combine three different robot together in a launch file, spawn them together in gazebo and visualize in RVIZ ?
I've created and simulated the three robots but I'll like  to combine them in a single simulation.
Thanks.

Originally posted by the3kr on ROS Answers with karma: 91 on 2019-02-07
Post score: 1

A:

Yes it is possible you just need to be careful with the namespaces.
You will need two launch files : one to spawn a robot and one for the common configuration and to call the other one.
The first one should be something like that :
spawn.launch :
<launch>

    <arg name="initial_pose_x" default="0.0"/>
    <arg name="initial_pose_y" default="0.0"/>
    <arg name="initial_pose_a" default="0"/>
    <arg name="robot_name" default="A_DEFAULT_NAME"/>

    <!--  ******************** Robot Model ********************  -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find YOUR_PACKAGE_WITH_URDF_FILE)/urdf/$(arg robot_name).urdf'"/>

    <node pkg="gazebo_ros" type="spawn_model" name="spawn_$(arg robot_name)" 
        args="-x $(arg initial_pose_x) -y $(arg initial_pose_y) -Y $(arg initial_pose_a)
        -unpause -urdf -param robot_description -model $(arg robot_name)" respawn="false">
    </node>
</launch>

Then your other launch file will start gazebo (and maybe rviz too if you want) and call your other launch files in different namespaces (to allow make sure you have different cmd_vel topics so that the three robots don't move the same).
gazebo.launch :
<launch>
    <arg name="world_file"     default="YOUR_PATH_TO_A_WORLD_FILE"/>
    <arg name="gui" default="true"/>
    <arg name="initial_pose_x" default="0.0"/>
    <arg name="initial_pose_y" default="0.0"/>
    <arg name="initial_pose_a" default="0"/>
    <arg name="robot_name" default="A_DEFAULT_ROBOT_NAME"/>
    <param name="/use_sim_time" value="true"/>

        <!--  ******************** Gazebo ********************  -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="use_sim_time" value="true"/>
        <arg name="debug" value="false"/>
        <arg name="world_name" value="$(arg world_file)"/>
        <arg name="gui" value="$(arg gui)"/>
    </include>

<!-- Set different initial poses to avoid collision when spawning the model -->
<group ns="THE_NAME_OF_FIRST_ROBOT">
    <include file="$(find PACKAGE_WITH_SPAWN.LAUNCH)/launch/spawn.launch">
        <arg name="initial_pose_x" value="0.0"/>
        <arg name="robot_name" value="THE_NAME_OF_FIRST_ROBOT"/>

    </include>  
</group>
    
<group ns="THE_NAME_OF_SECOND_ROBOT">
    <include file="$(find PACKAGE_WITH_SPAWN.LAUNCH))/launch/spawn.launch">
        <arg name="initial_pose_x" value="1.0"/>
        <arg name="robot_name" value="THE_NAME_OF_SECOND_ROBOT"/>
    </include>
</group>    

<group ns="THE_NAME_OF_THIRD_ROBOT">
    <include file="$(find PACKAGE_WITH_SPAWN.LAUNCH))/launch/spawn.launch">
        <arg name="initial_pose_x" value="-1.0"/>
        <arg name="robot_name" value="THE_NAME_OF_THIRD_ROBOT"/>
    </include>
</group>

</launch>

That worked fine when I tested it.
Note :  From your question I assumed you had three different robots (thus three different urdf files) but it is also possible to do the same for three robots with the same urdf file, let me know if it's the case and I will modify the launch files accordingly.

Originally posted by Delb with karma: 3907 on 2019-02-08
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by the3kr on 2019-02-09:
Yes you are right. It's three different robots. Thanks.
Comment by Nick_JR on 2020-07-03:
What would i have to change in the code in order to spawn 3 copies of the same robot?
Thanks.
Comment by M.IR on 2022-08-31:
hi. thanks for your complete and nice reply. could you please consider replying the case of spawning two same models?

