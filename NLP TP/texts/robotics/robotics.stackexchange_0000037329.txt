Q:

Map pointcloud publishing in RGBDSLAM

I'm trying to use RGBDSLAM for path planning and navigation. I use tf to get position and orientation of the camera, but I need to be able to subscribe to the pointcloud map to detect obstacles.
Of all of the topics published by RGBDSLAM (I think the correct way to see this is rostopic info /rgbdslam), /rgbdslam/aggregate_clouds and /rgbdslam/batch_clouds seem to be what I'm looking for, but I have encountered a couple problems with this:
With /rgbdslam/batch_clouds I can create a topic that converts the point cloud to images and then use image_view to watch them. But a) this only works if I manually use the Send Model function, and b) as the description in the server parameter says, it appears to show individual pointclouds one after the other.
And with /rgbdslam/aggregate_clouds, I can't, for some reason I can't yet comprehend,  use the same visualization method, so I am not sure what is being published there.
So, my question is: Is it even possible to get online information of the map pointcloud (with the latest version)? If so, is /rgbdslam/aggregate_clouds the right topic to subscribe to?
Thanks.

Originally posted by JoaquinV on ROS Answers with karma: 5 on 2012-01-26
Post score: 0

A:

/aggregate_clouds might be what you are looking for, but it is one big cloud containing all the points from all processed point clouds so far. Using this would need way to much bandwidth, as all points will be sent over and over again. Also it needs to be triggerd, just as /batch_clouds
From what I understand, you want to have the all point clouds with the respective camera transformations, but online, not offline. You can do this by subscribing to the point clouds from the openni node, just as RGBDSLAM does and transforming them to the map frame RGBDSLAM sends out (which will of course lag behind a little, so you'll need to cache the clouds). You'll not get the corrections to the older camera transforms, though.
Actually I'll have to look up, whether the latest transform is still continuously sent out. It used to be so in the first version, but it might have been thrown out when we refactored the tf stuff.

Originally posted by Felix Endres with karma: 6468 on 2012-01-26
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by JoaquinV on 2012-01-26:
Thanks, I figured subscribing to the data from the camera would work just fine since all I need to do is detect objects and fill an ocupancy grid. Easier to filter with PCL passthrough, too. Thanks!

