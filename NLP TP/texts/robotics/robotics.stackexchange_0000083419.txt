Q:

static_transform_publisher and robot_state_publisher

Hello,
I am a bit confused about the static_transform_publisher and the robot_state_publisher (or at least I think I am).
So we are setting up a robot with sensor at all, and before we used the urdf approach we were using the static_transform_publisher to get the TF between sensors.
Now we want to use the urdf approach, i.e. robot_state_publisher. This is also publishing TF.
So this should be now our source for tf, right? No need for the static_transform_publisher? (I think it will even interfere)
Thanks!

Originally posted by tanasis on ROS Answers with karma: 97 on 2017-10-19
Post score: 0

A:

Now we want to use the urdf approach, i.e. robot_state_publisher. This is also publishing TF.
So this should be now our source for tf, right? No need for the static_transform_publisher? (I think it will even interfere)

In short: yes, TF frames should preferably have only one backing publisher.
If you have a urdf, robot_state_publisher (RSP) can do that for you, no need for static_transform_publisher (STP).
You're not required to use RSP though, you can use URDF and still use STP as well.
One advantage of the RSP over STP is that the former will listen to JointState msgs (on the joint_states topic) and update the frames it knows about (from your urdf) using FK. That is something STP cannot do.

Originally posted by gvdhoorn with karma: 86574 on 2017-10-19
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by gvdhoorn on 2017-10-19:
Btw: we have an expression here in the lab: if you are using ROS for your robot and don't have a urdf, you're "doing it wrong".
Comment by tanasis on 2017-10-19:
haha totally agree! I like your lab! I just wanted to clarify this as it is not 100% clear from the documentation. Thx!

