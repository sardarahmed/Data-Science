Q:

ROS navigation_stack implementation in custom robot

Trying to learn ROS while designing a generic software architecture to be used in various autonomous surface vehicles. If we use the navigation stack and the move_base package configured to our robots, my understanding is move_base will publish to a topic called "cmd_vel" that our base controllers should subscribe to. However we would like to be able to have a hiereachy control of who base_controller receives velocity inputs from for example using teleop or autonomous nagivation. Going through the tutorials it seems that all the turtlesim stuff like teleopkey the tf transform tutorial and standard rostopic pub msgs all publish to one topic that the "base controller" reads from. How should you handle conflicts in messages published to cmd_vel topics and/or use a hierachy controller that for example if teleopkey is active do not listen to messages from move_base or other navigation stacks.

Originally posted by thomaswatters on ROS Answers with karma: 11 on 2014-09-29
Post score: 1

A:

Sounds like you're looking for cmd_vel_mux

Originally posted by paulbovbel with karma: 4518 on 2014-09-30
This answer was ACCEPTED on the original site
Post score: 1

