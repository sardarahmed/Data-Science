Q:

How to log float64 on arduino?

I'm having trouble logging a float64 value. Here's my arduino code (I'm using rosserial):
void jt_callback(const trajectory_msgs::JointTrajectory &msg) {
  // http://docs.ros.org/kinetic/api/trajectory_msgs/html/msg/JointTrajectoryPoint.html
  trajectory_msgs::JointTrajectoryPoint *points = msg.points;  <-- is this correct?
  sprintf(log_msg,"points[0].positions[0] = %f",points[0].positions[0]);  <-- correct?
  nh.loginfo(log_msg);
}

Output:

The correct value should be 0.1 not ?.
Also, when I try %d or %i the output value is -13108.
Any help is much appreciated!

Originally posted by danielsnider on ROS Answers with karma: 203 on 2017-02-17
Post score: 1

A:

I fixed my own problem! I found that I needed to convert float to char* using a function in the standard Arduino library called dtostrf(). Think of it as "Decimal to String Float".
This answer has a better description: http://arduino.stackexchange.com/questions/26832/how-do-i-convert-a-float-into-char
Working code:
void jt_callback(const trajectory_msgs::JointTrajectory &msg) {
  nh.loginfo("msg received");
  // Print points.positions[0]
  char result[8]; // Buffer big enough for 7-character float
  dtostrf(points[0].positions[0], 6, 2, result); // Leave room for too large numbers!
  sprintf(log_msg,"points[0].positions[0] =%s", result);
  nh.loginfo(log_msg);
}

Correct output:

Originally posted by danielsnider with karma: 203 on 2017-02-17
This answer was ACCEPTED on the original site
Post score: 3

