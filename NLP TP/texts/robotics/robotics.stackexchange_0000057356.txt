Q:

Should I use tf or tf2 for broadcasting/receiving transforms?

As highlighted here:
https://github.com/ros/geometry_experimental/issues/20
http://wiki.ros.org/action/login/tf2/Migration
There are some issues with using tf2 as opposed to tf.  As someone who is just now looking into using these features, what should I be looking at?  Are tf2 and its tutorials something which should be avoided at the moment? Will the documentation/package for tf2 be fixed any time soon?  I'm looking into writing a simple broadcaster/receiver for my Kinect transforms in Rviz and would really like some guidance and what tutorials to look at.

Originally posted by Athoesen on ROS Answers with karma: 429 on 2014-02-19
Post score: 2

A:

tf2 follows similar design patterns. The API documentation is fine. However the tutorials are out of date due to a renamespacing of certain functionality for API review.
If you want a quick tutorial and to get going quickly tf is probably your best bet.

Originally posted by tfoote with karma: 58457 on 2014-02-19
This answer was ACCEPTED on the original site
Post score: 2

