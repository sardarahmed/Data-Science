Q:

How to write and parse "yaml" file for ROS?

Hello all,
My goal is to subscribe to an "unknown" number of topics. I want to do the next algorithm:

Create a "yaml" file for ROS, where all my topics are listed.
Extract it´s data as a string.
Parse the data, according to which I will know the number and the names of the topics to which I want to subscribe.
Subscribe in a loop to all of them.

The problem is that I have never written a "yaml" file, and the explanations in the Wikipedia page are not good for ROS.
I would also be happy to know what is the best way to "parse" the info in my code (C).
Thank you for your help,
Felix.

Originally posted by Felix Tr on ROS Answers with karma: 378 on 2011-12-12
Post score: 12

A:

First of all, ROS itself uses yaml-cpp, so that's not a bad way to go about it.
Second, I'd like to propose an alternative way to solve your problem (since I've just done the same thing myself). roslaunch supports all forms of XmlRpc values, including lists. Therefore, you can use the following code:
XmlRpc::XmlRpcValue topicList;
std::vector<std::string> topics;

if (private_nh.getParam("topics", topicList))
{
  std::map<std::string, XmlRpc::XmlRpcValue>::iterator i;
  for (i = topicList.begin(); i != topicList.end(); i++)
  {
    std::string topic_name;
    std::string topic_type;

    topic_name = i->first;
    topic_type.assign(i->second["topic_type"]);

    topics.push_back(topic_name);
  }
}

Essentially, this code will read all parameters that are under the "topics" namespace into a single list. You then iterate through that list to grab all topic names. Each new topic can have as many sub-fields (topic_type) as you desire. Here's an example launchfile statement for the above code.
<launch>
    <node pkg="my_package" type="my_node" name="my_node" output="screen">
        <param name="topics/topic1/topic_type" type="string" value="sensor_msgs/LaserScan" />
        <param name="topics/topic2/topic_type" type="string" value="sensor_msgs/PointCloud2" />
    </node>
</launch

Originally posted by DimitriProsser with karma: 11163 on 2011-12-13
This answer was ACCEPTED on the original site
Post score: 12

Original comments
Comment by Felix Tr on 2011-12-13:
Hello Dimitri, many thanks for your detailed answer, but since I am not very fluent in C++, I will try first to do it in the second way proposed here (which doesn´t really works well now http://answers.ros.org/question/3297/how-to-convert-xmlrpcxmlrpcvalue-into-string). Anyway, thanks again.

