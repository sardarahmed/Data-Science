Q:

Why do we need ROS?

I'm a beginner in robotics and I'm planning to do a basic navigation problem for differential drive robot. I know the concept involved and can code it in the arduino but I came to know about ROS and other robotic toolbox.
How is it useful if I wanted to improve myself in the concepts from scratch?

A:

I think it is safe to say that ROS adds a lot of value to many robotics applications, but it definitely isn't appropriate for every robotics application
In fact, the ROS website has a series of pages that address that very point. These pages explain

the major broad advantages of using ROS,
the core components that go to make up ROS, and also
describe how ROS integrates with other libraries used in
robotics.

The single major disadvantage with ROS is actually the time that it takes to learn ROS. It is not an easy learning-curve for people new to robotics, and it can take a long time before you are able to enjoy the benefits.
That said, there are now rather more "accessible" texts on ROS available on the market. For example, A Gentle Introduction to ROS and ROS Robotics By Example. These can make that learning-curve a little less daunting.

In your specific case, where you are looking at coding for a basic navigation problem for a differential drive robot using an Arduino, it is unlikely that ROS would be appropriate. It isn't possible to run ROS on an Arduino (although it is perfectly possible to run ROS on a Raspberry Pi).

