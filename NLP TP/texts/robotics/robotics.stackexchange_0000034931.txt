Q:

Can't Set RPath

Hello all,
I am having trouble with my CMake file.  I am getting a library not found after compiling, so I looked up the documentation for CMake 2.4.6 AND CMake 2.8 (no difference here) for setting your RPATH.
CMake file is as follows:

string(REGEX REPLACE "[\r\n]" "" OPENRAVE_LIB_DIR "${OPENRAVE_PREFIX}/lib")

set_target_properties(RaveServer PROPERTIES COMPILE_FLAGS "${OPENRAVE_CXX_FLAGS}" LINK_FLAGS "${OPENRAVE_LINK_FLAGS}" INSTALL_RPATH "${OPENRAVE_LIB_DIR}")

Checking the property in the same CMake file:

get_target_property(DURPDA RaveServer INSTALL_RPATH)
message(${DURPDA})

Revealed the property has been set correctly.
However examination of link.txt and CMakeCache.txt shows my -Wl,-rpath,[my rpath] is not seen anywhere.  Has anyone else experienced this?
Thank you

Originally posted by Constantin S on ROS Answers with karma: 296 on 2011-10-13
Post score: 0

A:

I wouldn't recommend using rpath. The code is not portable as the path to the shared libraries is hard coded in the executable.
The libraries in the lib folder of a package will be discoverable by the linker when you compile your own package. Say for example you have package A, with the folder lib and the library libfoo.so. Then if you write package B which depends (in the manifest.xml) on A, any executable in B will link against the libraries in A/lib. To check this, you can type:
ldd your_executable

and see the dependencies in /opt/ros.
Alternatively you can set LD_LIBRARY_PATH to add paths to the loader search list. This can be easily done in a launch file by using:
$(env ENVIRONMENT_VARIABLE)

For more information see the roslaunch xml format.

Originally posted by Lorenzo Riano with karma: 1342 on 2011-10-13
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Lorenz on 2011-10-14:
If I read http://www.vtk.org/Wiki/CMake_RPATH_handling correctly, cmake should always set the build rpath to all libraries used during compilation, so if a project compiles (and links), libraries should be found, even non-ros libs. You are right, adding more context would definitely help :)
Comment by Lorenzo Riano on 2011-10-14:
Lorenz, I though JustSpiffy was trying to link against libraries not in ROS and not in a standard path. Maybe adding a few info on the initial problem (apart from setting rpath) will help us.
Comment by Lorenz on 2011-10-14:
As far as I know, INSTALL_RPATH is only set when you do a make install. The binaries created by cmake should already have rpath set correctly. Setting LD_LIBRARY_PATH in a launch file should never be necessary.
Comment by Constantin S on 2011-10-14:
So manifest.xml depends also sets run time path?  I thought manifest.xml was only ROS specific settings, interesting.  I will attempt this.  In the end though, the bug still exists no?  ROS documentation states it is compatible with CMake 2.4.6, yet INSTALL_RPATH is not functioning.  Thank you.
Comment by Lorenzo Riano on 2011-10-13:
I have edited my answer, I hope it is more clear now.
Comment by Constantin S on 2011-10-13:
For now I am resorting to the LD_LIBRARY_PATH, however that is much less portable than setting rpath.  Which lib path are you referring to?  This shared library is in a ROS stack, so not stored in any of the typical lib folders.  Could you elaborate on what is easily done in a launch file?  Thank u.

