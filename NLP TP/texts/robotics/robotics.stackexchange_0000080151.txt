Q:

Switching between controllers with ros_control / controller_manager

Is there an easy way to switch between different controllers for a single resource?
I would like to control a joint of my Gazebo model either by effort_controllers/JointPositionController or effort_controllers/JointEffortController. I want to switch between these controllers during runtime by pressing a joystick button.
Right now, I make 4 service calls:

Stop the current controller (by calling controller_manager/switch_controller)
Unload the current controller (by calling controller_manager/unload_controller)
Load the new controller (by calling controller_manager/load_controller)
Start the new controller (by calling controller_manager/switch_controller again)

Is there an easier way to do that, like loading both controllers at the same time and only start/stop the corresponding controllers by a single switch_controller call? As the SwitchController Service has parameters for both start_controllers and stop_controllers, this seems to be supported somehow. But if I try to spawn both controllers in a launch file, I get a "resource conflict" error.

Originally posted by Andre Volk on ROS Answers with karma: 775 on 2017-04-11
Post score: 2

A:

I finally found a way to simplify my approach. If you pass --stopped as an argument to the  spawner, you can load a controller without starting it. So I ended up spawning the position controller as usual and the effort controller with the --stopped argument. Now I can switch from one controller to the other by just calling the switch_controller service.
I needed to add the following two lines to my launch file:

The code to switch from position controller to effort controller looks like that:

from controller_manager_msgs.srv import SwitchController
...
rospy.wait_for_service('/mybot/controller_manager/switch_controller')
try:
   switch_controller = rospy.ServiceProxy(
                       '/mybot/controller_manager/switch_controller', SwitchController)
   ret = switch_controller(['flipper_effort_controller'], 
                           ['flipper_position_controller'], 2)
   except rospy.ServiceException, e:
      print "Service call failed: %s"%e

Originally posted by Andre Volk with karma: 775 on 2017-04-17
This answer was ACCEPTED on the original site
Post score: 6

Original comments
Comment by itfanr on 2018-09-29:
It is still through service call.
And  I tried cm.unload() function, but return 0(failed) always.
Comment by Qt_Yeung on 2020-08-02:
When my own controller was switched to another controller effort_controllers/JointTrajectoryController, it was successful, but the robot arm fell down in simulation, does anybody know the reason?
Comment by chiku00 on 2022-09-14:
Did you add multiple hardware interfaces under transmissions for each joint? One for Position based controller and another for Effort based controller?

