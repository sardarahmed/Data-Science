Q:

Best Practice for Suscriber and Publisher

Hi everyone,
I heard somewhere that the best practice for a node was to create a file receiving and publishing all the message, and then to collect these datas from another file if we need to process them.
Something like this :
process.cpp <===> SuscribeAndPublish.cpp <================================>Node 2
l___________________________________/
Node 1
Sorry for the poor schema ahaha

Originally posted by StanSmooth on ROS Answers with karma: 62 on 2017-12-20
Post score: 0

Original comments
Comment by Airuno2L on 2017-12-20:
I'm not sure what you're asking.
Comment by StanSmooth on 2017-12-20:
Sorry if i'm not clear. Someone told me, it was better to have a file supposed to collect and send message on topic, and other files suposed to process the differents algorithm we use. My question is : how do we transfer data from those different files
Comment by jayess on 2017-12-20:
Usually, a node subscribes to the topics that it needs, processes the data, and publishes data if need be.
Comment by StanSmooth on 2017-12-21:
Yes, but will it do it on the same file ? (for instance is it possible to have multiple files per nodes ?)
I'm finding a lot of examples of basic suscriber and publisher on the net, but nothing with a real processing. Do you have some examples ?
Comment by StanSmooth on 2017-12-21:
Moreover, is there any advice to implement a ros node, in object-oriented aspect ?
Comment by jayess on 2017-12-21:
What do you mean by

multiple files per nodes

? Are you asking if you can have multiple nodes per file (like a *.py or *.cpp file)?
Comment by StanSmooth on 2017-12-21:
No. I know this is possible. What i'm asking is explanations (or examples) on how these nodes with multiples files are working.

A:

I think you have heard wrong. You shouldn't need more than one .cpp file to fully describe a node. Most of the time when I'm making a new node, I actually go to the simple tutorial and use it as a template.
When you do have a very complex node, it is sometimes better to do everything as a class, it is still all in one .cpp file though. Here are some pointers on doing that.

Originally posted by Airuno2L with karma: 3460 on 2017-12-21
This answer was ACCEPTED on the original site
Post score: 1

