Q:

Launching with parameters (was "How to block until a master is running")

I have a script that wraps rosbag play (because I need to set some rosparams first). However, if I run my script before my master finishes coming up, my calls to rosparam set fail, and my parameters don't get set (the call to play blocks until the master is up).
Is there a convenient way to block until a master comes up? I could write a miniature node that does it, but I thought I'd ask.
Another possibility: arguably, this is a bug in rosparam; it should either (a) block until it has a master or (b) at least provide a non-zero return code when it dies with "Unable to communicate with master", so I can spinblock it myself.
Thoughts?

Originally posted by Mac on ROS Answers with karma: 4119 on 2011-08-11
Post score: 2

A:

I'm not sure that I fully understand your use case, but you might try roslaunch args.  Here's a launch file that sets two params from arguments:
<launch>
  <arg name="my_integer_param" default="1"/>
  <arg name="my_string_param" default="foobar"/>
  <param name="my_integer_param" value="$(arg my_integer_param)"/>
  <param name="my_string_param" value="$(arg my_string_param)"/>
  <node name="rosplay" pkg="rosbag" type="rosbag" args="play /tmp/mybag.bag"/>
</launch>

Defaults for the args are given, so you can launch it normally:
roslaunch foo.launch

But you can override them on the command-line, e.g.:
roslaunch foo.launch my_integer_param:=42 my_string_param:=barfoo

Originally posted by Brian Gerkey with karma: 2916 on 2011-08-12
This answer was ACCEPTED on the original site
Post score: 7

