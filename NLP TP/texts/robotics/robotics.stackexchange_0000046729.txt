Q:

rospack export does not list all include directories

Suppose I'd like to retrieve all the build flags to be able to integrate syntax checking into my favorite editor for the package my_vision. I'd need to add a check-syntax target to the cmake.mk file according to something like this:
.PHONY: check-syntax
check-syntax:
        gcc -Wall -fsyntax-only $(shell rospack export --lang=cpp --attrib=cflags) $(CHK_SOURCES)

rospack export does not list /home/me/ros/my_vision/include as a include directory, even though the headers I've place here will still be found during compilation. So:

How does the ROS build system find my custom header files?

Can I also use this functionality in the cmake.mk file?

Originally posted by Jlicht on ROS Answers with karma: 1 on 2012-12-20
Post score: 0

A:

Your approach is going to run into some issues.
rospack exports are manually written in your manifest.xml.  They are the include directories which you need to export to packages which depend on your package.  This is not necessarily all include directories needed to compile the package itself.
If you need include directories in your own package you should be using include_directories in your CMakeLists.txt
And the correct thing to do is to add the target you want in cmake, and then have the makefile invoke cmake && make mytarget like cmake.mk does.

Originally posted by tfoote with karma: 58457 on 2012-12-20
This answer was ACCEPTED on the original site
Post score: 1

