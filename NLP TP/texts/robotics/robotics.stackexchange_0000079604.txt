Q:

Roscpp header file for tf2 transform

Which header file to include for tf2::Transform? Unfortunately this is not a well documented way to use tf2 as far as I can find. It is in the file Transform.h, but that file can't be included as such: <tf2/Transform.h> or <tf2/LinearMath/Transform.h>
Should I revert to using tf? Is this not a canonical way to use tf2?
Cheers!

Originally posted by errolflynn on ROS Answers with karma: 32 on 2017-03-15
Post score: 0

A:

The tf2::Transform is in <tf2/LinearMath/Transform.h> here.  My guess is that you are not adding the correct paths to your include directories in you CMakeLists.txt
Note that in general it's recommended to use a standalone linear math library like eigen or bullet or kdl
You can used packages like tf2_bullet or  tf2_eigen or  tf2_kdl
Or you can add support for your own datatypes: http://wiki.ros.org/tf2/Tutorials/Create%20Data%20Conversion%20Package%20%28C%2B%2B%29

Originally posted by tfoote with karma: 58457 on 2017-03-15
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by errolflynn on 2017-03-15:
Thank you. Any reasons why to use specifically one of those options over the other?
Comment by Airuno2L on 2017-03-15:
I like eigen because it is more general purpose and is easy to use (IMO).
Comment by errolflynn on 2017-03-16:
What is include header for tf2_eigen?
Comment by Airuno2L on 2017-03-17:
is it not tf2_eigen.h ?
Comment by errolflynn on 2017-03-17:
Getting the message fatal error: tf2_eigen/tf2_eigen.h: No such file or directory #include <tf2_eigen/tf2_eigen.h>
Comment by errolflynn on 2017-03-17:
Not getting the same error for tf2_kdl/tf2_kdl.h
Comment by errolflynn on 2017-03-17:
Solved: It's because I didn't have tf2_eigen installed

