Q:

Gazebo doesn't start even though no errors are reported

This is rather weird.
Gazebo refuses to start but no errors are reported...
The problem lies somewhere in the URDF file of the robot since commenting it out fixes things:
ROBOT URDF:
<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from robot.xacro                    | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="robot" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!--This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.5.1-0-g916b5db  Build Version: 1.5.7152.31018
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
  <link name="base_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.00390777224516517 -0.032446267219719 0.184169550820421"/>
      <mass value="4.20121630268732"/>
      <inertia ixx="0.0149000386129946" ixy="-4.66831001352174E-09" ixz="5.23920338795194E-08" iyy="0.0234359493013497" iyz="0.000771538751024883" izz="0.0286744535302635"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot/meshes/base_link.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.529411764705882 0.549019607843137 0.549019607843137 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot/meshes/base_link.STL"/>
      </geometry>
    </collision>
  </link>
  <link name="FL">
    <inertial>
      <origin rpy="0 0 0" xyz="-5.55111512312578E-17 9.10729824887824E-18 -6.93889390390723E-18"/>
      <mass value="0.0615219544751675"/>
      <inertia ixx="5.54433425808419E-05" ixy="-1.45453466603006E-20" ixz="-1.00225538664655E-21" iyy="3.00921775305435E-05" iyz="2.309188417276E-21" izz="3.00921775305435E-05"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot/meshes/FL.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.298039215686275 0.298039215686275 0.298039215686275 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot/meshes/FL.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="FLJ" type="continuous">
    <origin rpy="1.5707963267949 0 0" xyz="-0.162088045105054 0.0440194465480433 -0.0035605397876617"/>
    <parent link="base_link"/>
    <child link="FL"/>
    <axis xyz="-1 0 0"/>
  </joint>
  <link name="FR">
    <inertial>
      <origin rpy="0 0 0" xyz="2.77555756156289E-17 -5.3776427755281E-17 3.46944695195361E-17"/>
      <mass value="0.0615219544751675"/>
      <inertia ixx="5.54433425808419E-05" ixy="-1.73616162087809E-20" ixz="-8.97406720914896E-21" iyy="3.00921775305435E-05" iyz="-2.24902265994014E-21" izz="3.00921775305435E-05"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot/meshes/FR.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.298039215686275 0.298039215686275 0.298039215686275 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot/meshes/FR.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="FRJ" type="continuous">
    <origin rpy="1.5707963267949 0 0" xyz="0.169947769597777 0.0440194465480434 -0.00356053978766185"/>
    <parent link="base_link"/>
    <child link="FR"/>
    <axis xyz="-1 0 0"/>
  </joint>
  <link name="BL">
    <inertial>
      <origin rpy="0 0 0" xyz="-5.55111512312578E-17 7.85396053748499E-16 -1.38777878078145E-17"/>
      <mass value="0.0615219544751675"/>
      <inertia ixx="5.54433425808419E-05" ixy="-5.54431358512462E-21" ixz="2.27097066282367E-22" iyy="3.00921775305435E-05" iyz="2.73146067339844E-21" izz="3.00921775305435E-05"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot/meshes/BL.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.298039215686275 0.298039215686275 0.298039215686275 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot/meshes/BL.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="BLJ" type="continuous">
    <origin rpy="1.5707963267949 0 0" xyz="-0.162088045105054 -0.0759805534519569 -0.00356053978766179"/>
    <parent link="base_link"/>
    <child link="BL"/>
    <axis xyz="-1 0 0"/>
  </joint>
  <link name="BR">
    <inertial>
      <origin rpy="0 0 0" xyz="-8.32667268468867E-17 7.03430369508595E-16 2.77555756156289E-17"/>
      <mass value="0.0615219544751675"/>
      <inertia ixx="5.54433425808419E-05" ixy="-7.26178700863739E-21" ixz="-6.24920580783796E-21" iyy="3.00921775305435E-05" iyz="-3.51228039755728E-21" izz="3.00921775305435E-05"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot/meshes/BR.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.298039215686275 0.298039215686275 0.298039215686275 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot/meshes/BR.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="BRJ" type="continuous">
    <origin rpy="1.5708 0 0" xyz="0.16991 -0.075981 -0.0035605"/>
    <parent link="base_link"/>
    <child link="BR"/>
    <axis xyz="-1 0 0"/>
  </joint>
  <link name="TB">
    <inertial>
      <origin rpy="0 0 0" xyz="-7.8063E-18 1.3878E-17 0.001"/>
      <mass value="0.36807"/>
      <inertia ixx="0.00019523" ixy="7.0972E-20" ixz="-4.0656E-22" iyy="0.0026688" iyz="4.5169E-23" izz="0.0028638"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot/meshes/TB.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.52941 0.54902 0.54902 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot/meshes/TB.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="TBJ" type="fixed">
    <origin rpy="0 0 0" xyz="0.003912 -0.086602 0.46844"/>
    <parent link="base_link"/>
    <child link="TB"/>
    <axis xyz="0 0 0"/>
  </joint>
  <!--             LIDAR                     -->
  <gazebo reference="hokuyo_link">
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.57079</min_angle>
            <max_angle>1.57079</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>30</max>
          <resolution>0.1</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="TB_Lidar" type="fixed">
    <axis xyz="0 1 0"/>
    <parent link="TB"/>
    <child link="hokuyo_link"/>
    <origin rpy="0 0 1.57079633" xyz="0 0 0.005"/>
  </joint>
  <!-- Hokuyo Laser -->
  <link name="hokuyo_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
 

  <!--                Differential Drive                
     <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
     <legacyMode>false</legacyMode>
      <leftJoint>FLJ</leftJoint>
      <rightJoint>FRJ</rightJoint>
      <robotBaseFrame>base_link</robotBaseFrame>
      <wheelSeperation>0.25</wheelSeperation>
      <wheelDiameter>0.07</wheelDiameter>
      <publishWheelJointState>true</publishWheelJointState>
    </plugin>
  </gazebo>

    -->
  <!--                 Gazebo Transmission                        -->
  <transmission name="FLT">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="FLJ">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor1">
      <mechanicalReduction>20</mechanicalReduction>
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <transmission name="FRT">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="FRJ">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor2">
      <mechanicalReduction>20</mechanicalReduction>
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <transmission name="BLT">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="BLJ">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor3">
      <mechanicalReduction>20</mechanicalReduction>
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <transmission name="BRT">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="BRJ">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor4">
      <mechanicalReduction>20</mechanicalReduction>
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <!--                 Gazebo Ros Control Plugin              -->        
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/robot</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>

</robot>

OUTPUT FROM GAZEBO:
SUMMARY
========

PARAMETERS
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /use_sim_time: True

NODES
  /
    gazebo (gazebo_ros/gzserver)
    gazebo_gui (gazebo_ros/gzclient)
    spawn_model (gazebo_ros/spawn_model)
    tf_footprint_base (tf/static_transform_publisher)

auto-starting new master
process[master]: started with pid [19490]
ROS_MASTER_URI=http://localhost:11311

setting /run_id to 6417d242-529f-11ea-a52c-5800e3916931
process[rosout-1]: started with pid [19503]
started core service [/rosout]
process[gazebo-2]: started with pid [19508]
process[gazebo_gui-3]: started with pid [19517]
process[tf_footprint_base-4]: started with pid [19533]
process[spawn_model-5]: started with pid [19538]
[ INFO] [1582065513.017071930]: Finished loading Gazebo ROS API Plugin.
[ INFO] [1582065513.017956573]: waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
[ INFO] [1582065513.042921100]: Finished loading Gazebo ROS API Plugin.
[ INFO] [1582065513.043709858]: waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
SpawnModel script started
[INFO] [1582065513.417035, 0.000000]: Loading model XML from file
[INFO] [1582065513.417362, 0.000000]: Waiting for service /gazebo/spawn_urdf_model
[ INFO] [1582065514.595613277, 0.023000000]: waitForService: Service [/gazebo/set_physics_properties] is now available.
[INFO] [1582065514.623878, 0.000000]: Calling service /gazebo/spawn_urdf_model
[ INFO] [1582065514.633255624, 0.059000000]: Physics dynamic reconfigure ready.
[INFO] [1582065515.026068, 0.155000]: Spawn status: SpawnModel: Successfully spawned entity
[ INFO] [1582065515.041137382, 0.155000000]: Laser Plugin: Using the 'robotNamespace' param: '/'
[ INFO] [1582065515.041212855, 0.155000000]: Starting Laser Plugin (ns = /)
[ INFO] [1582065515.043808316, 0.155000000]: Laser Plugin (ns = /)  <tf_prefix_>, set to ""
[ INFO] [1582065515.182815576, 0.155000000]: Loading gazebo_ros_control plugin
[ INFO] [1582065515.182950455, 0.155000000]: Starting gazebo_ros_control plugin in namespace: /robot
[ INFO] [1582065515.183852027, 0.155000000]: gazebo_ros_control plugin is waiting for model URDF in parameter [robot_description] on the ROS param server.
[spawn_model-5] process has finished cleanly

But Gazebo has only a black screen...
RESULTS UNDER --verbose FLAG:
SUMMARY
========

PARAMETERS
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /use_sim_time: True

NODES
  /
    gazebo (gazebo_ros/gzserver)
    gazebo_gui (gazebo_ros/gzclient)
    spawn_model (gazebo_ros/spawn_model)
    tf_footprint_base (tf/static_transform_publisher)

auto-starting new master
process[master]: started with pid [6334]
ROS_MASTER_URI=http://localhost:11311

setting /run_id to 524b78ce-52af-11ea-a52c-5800e3916931
process[rosout-1]: started with pid [6347]
started core service [/rosout]
process[gazebo-2]: started with pid [6353]
process[gazebo_gui-3]: started with pid [6366]
process[tf_footprint_base-4]: started with pid [6379]
process[spawn_model-5]: started with pid [6380]
Gazebo multi-robot simulator, version 7.16.0
Copyright (C) 2012 Open Source Robotics Foundation.
Released under the Apache 2 License.
http://gazebosim.org

Gazebo multi-robot simulator, version 7.16.0
Copyright (C) 2012 Open Source Robotics Foundation.
Released under the Apache 2 License.
http://gazebosim.org

[ INFO] [1582072355.099776252]: Finished loading Gazebo ROS API Plugin.
[Msg] Waiting for master.
[ INFO] [1582072355.101793823]: waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
[ INFO] [1582072355.161269042]: Finished loading Gazebo ROS API Plugin.
[ INFO] [1582072355.161890009]: waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
[Msg] Waiting for master.
[Msg] Connected to gazebo master @ http://127.0.0.1:11345
[Msg] Publicized address: 192.168.1.12
SpawnModel script started
[INFO] [1582072355.478038, 0.000000]: Loading model XML from file
[INFO] [1582072355.478403, 0.000000]: Waiting for service /gazebo/spawn_urdf_model
[ INFO] [1582072356.057583076, 0.022000000]: waitForService: Service [/gazebo/set_physics_properties] is now available.
[INFO] [1582072356.082674, 0.046000]: Calling service /gazebo/spawn_urdf_model
[ INFO] [1582072356.090963259, 0.054000000]: Physics dynamic reconfigure ready.
[Msg] Connected to gazebo master @ http://127.0.0.1:11345
[Msg] Publicized address: 192.168.1.12
[INFO] [1582072356.418210, 0.156000]: Spawn status: SpawnModel: Successfully spawned entity
[ INFO] [1582072356.432143195, 0.156000000]: Laser Plugin: Using the 'robotNamespace' param: '/'
[ INFO] [1582072356.432206848, 0.156000000]: Starting Laser Plugin (ns = /)
[ INFO] [1582072356.433736436, 0.156000000]: Laser Plugin (ns = /)  <tf_prefix_>, set to ""
[ INFO] [1582072356.527392576, 0.156000000]: Loading gazebo_ros_control plugin
[ INFO] [1582072356.527503462, 0.156000000]: Starting gazebo_ros_control plugin in namespace: /robot
[ INFO] [1582072356.528275304, 0.156000000]: gazebo_ros_control plugin is waiting for model URDF in parameter [robot_description] on the ROS param server.
[spawn_model-5] process has finished cleanly
log file: /home/michael/.ros/log/524b78ce-52af-11ea-a52c-5800e3916931/spawn_model-5*.log

Originally posted by John999991 on ROS Answers with karma: 37 on 2020-02-18
Post score: 0

Original comments
Comment by sloretz on 2020-02-18:
What's labeled as OUTPUT FROM GAZEBO is actually output from roslaunch and the programs it launched. Gazebo classic prints nothing to console by default unless given the --verbose flag. Adding that flag may give more information about what went wrong.
http://answers.gazebosim.org/question/16560/how-to-use-roslaunch-having-gazebo-on-verbose-mode/
Comment by John999991 on 2020-02-18:
Run Gazebo under --verbose flag and added the results following my original question. Please check my question. I cannot see anything strange meaning no red marks etc.

A:

There is a pretty staright-forward log :
 gazebo_ros_control plugin is waiting for model URDF in parameter [robot_description] on the ROS param server.

And at the beginning of the ouput of roslaunch :
PARAMETERS
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /use_sim_time: True

So I assume that you don't define the parameter robot_description in your launch file and simply give it as an argument of the spawn_model node. In your launch file you simply need to add :
<!--  ******************** Robot Model ********************  -->
<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find YOUR_PACKAGE)/urdf/URDF_NAME'"/>

Originally posted by Delb with karma: 3907 on 2020-02-19
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by John999991 on 2020-02-19:
Great. That was the problem.
The thing I don't get is how did the Gazebo loaded the model at my previous attempts? Because the problem started at a specific point and on. Anyway thank you very much...
Comment by Delb on 2020-02-19:
If this has answered your question can you please mark the answer as correct ?
For your question I agree that it is rather strange that you could have loaded the model without the parameter robot_description, maybe if you show your launch file I could find something. Are you sure it was the correct model that was loaded into Gazebo when it worked ?
Comment by John999991 on 2020-02-19:
Yes 100%, because it was loading and after 2-3 re-loads it couldn't load.

