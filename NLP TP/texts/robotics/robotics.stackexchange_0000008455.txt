Q:

Small IR distance sensor that works on black surfaces

Can anyone recommend an IR distance sensor that works on black surfaces? I'm looking for something to use as a "cliff" sensor, to help a small mobile robot avoid falling down stairs or off a table, and I thought the Sharp GP2Y0D805Z0F would work. However, after testing it, I found any matte black surface does not register with the sensor, meaning the sensor would falsely report a dark carpet as a dropoff.
Sharp has some other models that might better handle this, but they're all much larger and more expensive. What type of sensor is good at detecting ledges and other dropoffs, but is small and inexpensive and works with a wide range of surfaces?

A:

A surface that appears black doesn't reflect much visible light (it's the absence of visible light reaching your eye that makes it look black), if the surface also doesn't reflect IR light very well, then IR sensors will not work very well (they work by shinning IR light and measuring the intensity of the IR light reflected back). Note you can not tell with certainty whether a surface will reflect infrared by looking at it since you cannot see IR, but if it is the case that your surface isn't reflecting IR, then no IR sensor will work. 
Have you considered using an ultrasonic distance sensor (aka ultrasonic rangefinders)? They work using the same principal but with sound (outside of auditory spectrum) instead of light. Or a mechanical sensor?

A:

Ultrasonic sensors have a deadband of about 2-5 cm, so wouldn't be useful for close-range sensing. Also ultrasonics work best with hard, solid surfaces. Carpet, clothing, drapes, cushions, etc. will absorb much of the ultrasonic pulse and are likely to result in a faulty reading with the target appearing much further away than it really is. 
The key for any sort of "cliff sensor" is that you are looking for a change in measurement by a significant value from previous measurements. I've built robots before that are programmed to avoid table edges and were using IR sensors. The heuristic for avoiding a table edge or stairway isn't to look for a specific value but a large change. 
So, something like:
//assuming distance is measured in raw sensor values vs. cm or inches. 
if ( abs(cur_distance - last_distance) > 100)  
{

 //do some avoidance logic here

}

This will work even if the sensors return weak or off-scale measurements when passing over a dark surface. 

