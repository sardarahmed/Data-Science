Q:

catkin metapackage now requires CMakeLists.txt?

I updated my ROS installation today and now catkin_make is spitting warnings for my metapackages:
-- ~~  - ycs_msgs (metapackage)
WARNING: The metapackage 'ycs_msgs' has no CMakeLists.txt. Please add one to the package source. You can use the following file: /opt/yujin/ycs/catkin_ws/build/catkin_generated/metapackages/ycs_msgs/CMakeLists.txt

The two things I wonder about now are:

The warning tells me to add a CMakeLists.txt to my metapackages, while the instructions on the catkin wiki page tells me different:

Metapackages do not require a CMakeLists.txt file. If one is provided, it is ignored by catkin.

The proposed CMakeLists.txt contains the new macro call catkin_metapackage(). Is there any information about this functionality out there?

Originally posted by bit-pirate on ROS Answers with karma: 2062 on 2013-03-31
Post score: 5

Original comments
Comment by bit-pirate on 2013-03-31:
I had an old CmakeLists.txt (created by catkin_create_pkg) in one metapackage which caused the build to break, since they are not ignored anymore. Those old lists make catkin think these metapackages are non-catkin packages. Might be worth to send out a warning on ros-users.

A:

This was discussed on the ros-buildsystem sig as well as in the ROS platform group meetings, and subsequently added to REP-127 as shown in the history here on github on March 7th.
I'm really surprised this change was released into groovy. I thought it wasn't going to take effect until Hydro.
From REP-127 as it reads today:

The empty tag is used to indicate that a package is a metapackage which implies that it does only have a fixed minimal CMakeLists.txt which will only install the package.xml file. This information is necessary for the ROS wiki to show the relationship between these metapackages and other packages and as a backward compatibility with rosbuild. Non-metapackages must not depend on metapackages but instead on the packages they depend on.

The CMakeLists.txt file for a metapackage is supposed to look like:

cmake_minimum_required(VERSION 2.8.3)
project(PACKAGE_NAME)
find_package(catkin REQUIRED)
catkin_metapackage()

From the buildsystem sig mailing list (@tkruse):

So the currently favoured solution will be to allow CMakeLists.txt with metapackages. In order to encourage users to not fill their metapackages with anything else than just the installation of the package manifest itself, catkin will scan the CmakeLists.txt and warn if users put in more than the minimally required lines. This may still change if someone has a better idea, or other blockers appear.

Originally posted by jbohren with karma: 5809 on 2013-03-31
This answer was ACCEPTED on the original site
Post score: 5

Original comments
Comment by joq on 2013-04-01:
+1 to making these changes only in Hydro, not in Groovy. Where do I open a defect issue for that?
Comment by jbohren on 2013-04-01:
Haha, everywhere? Probably worth emailing the buildsystem sig, adding an issue on the catkin github project, a pull request on the rep project, and sending a singing telegram to Dirk's home...

