Q:

How to get error information using roslibjs

Using roslibjs and rosbridge--I'd like to get more information when there is an error, particularly when connecting.
My code is:
ros = new ROSLIB.Ros({
url: robotUrl
});
ros.on('error', function(error) {
console.log ('Error connecting to websocket server: ' , error);
});
When an error occurs, I see in the debugger that the variable "error" contains a very involved structure, and I guess the actual error message is in there somewhere, but where?

Originally posted by Joseph Landau on ROS Answers with karma: 51 on 2015-05-11
Post score: 0

A:

The error variable is should always be a string. You can concatenate it in the console.log statement and it should work.

Originally posted by rtoris288 with karma: 1173 on 2015-05-12
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Joseph Landau on 2015-05-12:
When I concatenate the error variable (here's the code):  "console.log ('Error connecting to websocket server: ' + error);", the result is: "Error connecting to websocket server: [object Event]"  Looks like the argument called error is an Event rather than a string?
Comment by rtoris288 on 2015-05-12:
Strange, what if you just log the error variable by itself? console.log(error);, this is based off a working example: https://github.com/RobotWebTools/roslibjs/blob/develop/examples/simple.html#L19
Comment by Joseph Landau on 2015-05-12:
In that case, I get: "Event {path: Array[0], cancelBubble: false, returnValue: true, srcElement: WebSocket, defaultPrevented: falseâ€¦}"  This is clickable and expands to show lots of properties.  Incidentally, the debugger shows that roslib.js (line 651?) has the message.  Or, at least, a message.

