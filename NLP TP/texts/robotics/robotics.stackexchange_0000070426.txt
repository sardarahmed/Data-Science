Q:

killing a rosrun process using python script

Hi,
I am writing a GUI interface to run nodes in ROS. The following code execute a rosrun process when pressing Button1.
I looked for a code in order to kill that process when pressing Button 2. I did not find something specific or related to this work.
#simple GUI
import os, time, signal, threading
from Tkinter import * 
from subprocess import call
from subprocess import Popen  
import subprocess
import numpy as np
import cv2
#from PIL import Image, ImageTk
from PIL import *

def f1():
    subprocess.Popen(["rosrun", "package_name", "nodename"])
def f2():
    // NEED CODE HERE 

root.title("root") 
root.geometry("500x500") 
button1 = Button(root,text="CORE", bg="black", fg="white",  width=25, padx = 20, command=f1)
button1.pack()
button2 = Button(root,text="CORE", bg="black", fg="white",  width=25, padx = 20, command=f2)
button2.pack()

Originally posted by RSA_kustar on ROS Answers with karma: 275 on 2015-11-17
Post score: 0

Original comments
Comment by dornhege on 2015-11-17:
Have you tried just killing the opened process with normal functionality from the subprocess module?

A:

The subprocess.Popen instantiator inside of your f1() function returns a subprocess.Popen instance. That object has a kill method that allows you to terminate subprocesses. A simple re-write could be something like
proc = None
def f1():
    global proc
    proc = subprocess.Popen(["rosrun", "package_name", "nodename"])
def f2():
    proc.kill()

Alternatively, if you are going to be spawning ROS nodes, you could use rosnode.kill_nodes to shutdown nodes that you have started.

Originally posted by jarvisschultz with karma: 9031 on 2015-11-17
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by RSA_kustar on 2015-11-28:
Thank you :) it worked perfectly

