Q:

Nav2 vs. Moveit

Hello,
There seems to be some overlap between ros navigation and moveit. Navigation seems to be more concerned with mobile bases, while moveit is concerned with manipulators but like I said there seems to be some overlap. Is there a document that explains the scope and use cases of these two frameworks/systems?
Thanks

Originally posted by programmer-man on ROS Answers with karma: 29 on 2021-04-08
Post score: 1

A:

I'm not aware of such a document, or at least not a single one.
It's likely the fact these two frameworks have been developed mostly independently is a factor in this, and there hasn't been anyone (or at least, I don't know of anyone) who's taken the time to first analyse and then write down the results of such an analysis for those two specific pieces of software.
The overlap has been recognised previously though, especially with the addition of the concept of local and global planners to MoveIt (a current project) and the desire to use MoveIt together with the navigation stack for whole-body control.
navigation.ros.org hosts the main documentation on Nav2, but it doesn't appear to include design documentation or analyses. moveit.ros.org also doesn't have something like that (although it has the Concepts page). There are pieces of what you could consider (the start of) design documentation, but it's not made explicit.
In the end, Nav 2 is the second version of the ROS 1 nav stack (with many, many changes), while MoveIt is a continuation/rewrite of arm_navigation.
I wasn't involved at all in any of those, but looking at it now, the use cases for those two precursors were just not so close/related as they appear now. That could be one explanation for why the apparent overlap is not exploited more.
In earlier discussions, IIRC, developers and maintainers of both software stacks have expressed a desire to see whether that overlap could be used better, but I don't believe it's currently a high-priority item on the TODO.
(and perhaps interesting: arm_navigation/Reviews/arm_navigation_1.0_reviews_07_05_2011_API_Review is a (very old) review of arm_navigation which includes some description of the (early) use-cases for those components)

Originally posted by gvdhoorn with karma: 86574 on 2021-04-08
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by gvdhoorn on 2021-04-08:
Seeing as they were and are involved, perhaps @David Lu, @Dave Coleman and/or @stevemacenski can add something here as well.
(edit: I can't seem to @-mention Dave. Perhaps @David Lu can draw his attention to this post)
Comment by v4hn on 2021-04-09:
The main shortcoming in MoveIt was the inability to plan for non-holonomic planar movement.
DLu worked on this recently for MoveIt2. Whether this will ever be ported back to MoveIt depends on interest and community contributions.
The second issue in integrating mobile navigation is that base controllers usually do not provide the FollowJointTrajectory action interface required by standard MoveIt.
I believe improvements for MoveIt-support are in the making in this area, but the navigation stack is still clearly superior in its specific use-case.
Comment by programmer-man on 2021-04-09:
Would it not make sense to have the same planner with multiple interfaces? I.e., one for NAV and one for Moveit.
Comment by gvdhoorn on 2021-04-09:
Reuse of software / functionality always makes sense. But someone will have to do the work.
I believe that's the main blocker at this point.

