Q:

If i use a lambda function when creating a subscription, when it will be evaluated?

I use a lambda function to add a parameter to my callback function, but this new parameter does not have the value expected.
Here a code to reproduce my pb:
    class MyNode(Node):

        def __init__(self, ):
            super().__init__(__class__.__name__, namespace='lambda_pb')

            for my_value in range(5):
                self.create_subscription(
                    String, f"/ns_{my_value}/lambda_pb",
                    lambda msg: self.callback(msg, my_value),
                    10
                )

        def callback(self, msg, value):
            self.get_logger().info(f"value is {value} for {msg.data}")

Then I publish manually on the topics.
This code simply subscribe to several topics, with a callback that should take a parameter.
And on each publication, I expect "my_value" to change on each for topic. Here is the output :
ros2 topic pub --once /ns_0/lambda_pb std_msgs/msg/String 'data: whatever'

calling through main
[INFO] [1693326294.275137937] [lambda_pb.MyNode]: value is 4 for whatever

Value is '4' where I expect it to be '0'.
is this a python or a ROS2 behaviour ?
Does anyone have an idea on how to achieve my goal ? => Found one.
==========
I found a way to fix this. I replaced the lambda call with partial(self.callback, value=my_value).
partial is from functools module.

A:

This pb is not ros2 related.
cf explanations here : https://realpython.com/python-lambda/#evaluation-time
They propose this nice solution :
lambda msg, v=my_value: self.callback(msg, v)

