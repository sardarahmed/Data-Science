Q:

Universal robots calibration offsets

When running the Universal robots ur5_driver and connecting to the robot I always see these messages:
[WARN] [WallTime: 1390394126.210844] No calibration offset for joint "shoulder_pan_joint"
[WARN] [WallTime: 1390394126.212435] No calibration offset for joint "shoulder_lift_joint"
[WARN] [WallTime: 1390394126.214354] No calibration offset for joint "elbow_joint"
[WARN] [WallTime: 1390394126.216533] No calibration offset for joint "wrist_1_joint"
[WARN] [WallTime: 1390394126.219127] No calibration offset for joint "wrist_2_joint"
[WARN] [WallTime: 1390394126.222308] No calibration offset for joint "wrist_3_joint"
[ERROR] [WallTime: 1390394126.223789] Loaded calibration offsets: {}

I can however not find anything in the documentation about this. Is this to compensate any drift? Or with the calibration loaded you don't have to initialize the joints by moving them around? How can this be used?

Originally posted by davinci on ROS Answers with karma: 2573 on 2014-01-22
Post score: 1

Original comments
Comment by sedwards on 2014-01-22:
Can you please verify which version of the driver you are using?  Debian (ROS version) or from source (which branch)?
Comment by davinci on 2014-01-22:
I think it is the Debian version (as I copied it from /opt/ros/fuerte) of this package: http://wiki.ros.org/ur5_driver
Comment by maxgitt on 2017-08-03:
Did this end up being an issue for you? I'm having the exact same [WARN] message.
Comment by expo on 2018-10-19:
when these warns occured,the python file didn't run successfully to control the robot.As the answer said,the robot should run well in this situation.Is there something else wrong with my robot?

A:

This isn't a real answer, but I can tell you that we work without the joint offsets all the time.  The calibration procedure of the UR is separate from any ROS piece.  In my opinion, the calibration done by the UR is good enough and no further offsets are required.  The offsets are really only needed if the mechanics of the UR do not properly locate the true "zero" position.  Most industrial arms have well calibrated zero position since they often depend on accurate kinematics for cartesian control.

Originally posted by sedwards with karma: 1601 on 2014-01-23
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by expo on 2018-10-19:
As you said,the robot should run well in this situation.but when these warns occured,the python file didn't run successfully to control my robot.So sad

