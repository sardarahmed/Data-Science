Q:

python choice in some of ROS packages

I wonder why some .py files start with
#!/usr/bin/python

like in /camera_calibration/cameracalibrator.py
while the others are with
#!/usr/bin/env python

like in /rosbag/bag2png.py
The choice could be critical if one have two copies of python, which is the case in Mac OSX. I have a default preinstalled python version (/usr/bin/python) and the other one is installed through homebrew (is in my PATH).
And a side question have somebody installed ros with a default python?

Originally posted by Artem on ROS Answers with karma: 709 on 2013-12-07
Post score: 3

A:

I don't think there's a specific reason why some scripts use /usr/bin/python. For 99% of the users (on Ubuntu, for example) it doesn't make a difference, since they use the default python, so the script works for them either way. But you're right, the env version is more flexible, so my suggestion is whenever you run into a bug caused by this, write a bug report in the package's bug tracker.

Originally posted by Martin GÃ¼nther with karma: 11816 on 2013-12-08
This answer was ACCEPTED on the original site
Post score: 6

Original comments
Comment by demmeln on 2013-12-16:
I would add that if the script depends on python2.7, rather have #!/usr/bin/env python2. See answer by spease.

