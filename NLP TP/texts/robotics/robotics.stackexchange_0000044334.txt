Q:

Problems calling services within classes

Hello Community,
I have a couple of services and subscribers that are functions of a class that I created. The services are being advertised correctly and I can see them in rosservice list. However when the service gets called, it spins indefinitely never calling the appropriate callback function. However the subscribers work perfectly well within the same class. I am also able to call the same function (service callbacks) through normal function calls on the object. Could someone please suggest to me what the problem could be here.
Here is how I advertise the service in my main() method:
trader::Trader a;
ros::ServiceServer auction_service = n.advertiseService(PACKAGE_NAME + "/auction", &trader::Trader::auctionCB, &a);

Here is the function:
bool Trader::auctionCB(multiagent_coordination_msgs::Auction::Request &req, multiagent_coordination_msgs::Auction::Response &res){return true;}

Here is the function declaration in the .h file:
        bool auctionCB(multiagent_coordination_msgs::Auction::Request &req, multiagent_coordination_msgs::Auction::Response &res);

As I said the subscribers work perfectly.
Thanks
Ammar

Originally posted by Ammar on ROS Answers with karma: 289 on 2012-09-21
Post score: 0

A:

The declarations look fine to me. The only guess I might have: Do the Trader and ServiceServer maybe go out of scope?
Besides that, you should produce a complete minimal working example.

Originally posted by dornhege with karma: 31395 on 2012-09-22
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Ammar on 2012-09-22:
Thats an interesting observation. The service is being advertised in main(). Do I need to have an object of the class (Trader) present when I call the service? I just assumed the service can be called normally in other class methods.
Comment by dornhege on 2012-09-23:
I'm not really sure, what you mean, but as you declare the service once someone call it, it will call the auctionCB method in the Trader a object instance. This has to exist to not fail.

