Q:

ament_cmake vs ament_python?

I just started learning ros2 and I want to create a new package, and I noticed that it is possible to create a package with 2 different build types, ament_cmake and ament_python. However, I didn't find any explanation about the difference between both, what are the advantages and disadvantages of each one? Is one meant for c++ and the other for python?
I am following this tutorial: https://index.ros.org/doc/ros2/Tutorials/Creating-A-ROS2-Package/#createpkg

Originally posted by rezenders on ROS Answers with karma: 122 on 2020-01-20
Post score: 3

A:

Is one meant for c++ and the other for python?

Yes this is the main reason.
ament_cmake can be used for CMake package (usually C and C++), and provide some CMake magic to make things less verbose and more convenient to use with the ROS tools. It tells the build tool to build the package using a cmake workflow: cmake -> make -> make install.
Some examples of packages available here
ament_python it is used for pure python packages and tells the build tools to use a setuptools workflow: python setup.py -> python setup.py install.
Some examples of packages available here

I didn't find any explanation about the difference between both

It looks like a good area of improvement for the tutorial, as it should likely introduce these types in the introduction.

Originally posted by marguedas with karma: 3606 on 2020-01-20
This answer was ACCEPTED on the original site
Post score: 5

