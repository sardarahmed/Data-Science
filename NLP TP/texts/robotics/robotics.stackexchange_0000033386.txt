Q:

service exception using tf listener in rospy

I get a service exception whenever I call lookupTransform for tf.TransformListner.
tf_listener = tf.TransformListener()        
tf_listener.waitForTransform( reference_link, end_effector_link, rospy.Time(), rospy.Duration(4.0))     
(posn, rotn) = tf_listener.lookupTransform(reference_link, end_effector_link, rospy.Time())    

     

This is the service exception:
Exception in thread Thread-18:
Traceback (most recent call last):
  File "/usr/lib/python2.6/threading.py", line 532, in __bootstrap_inner
    self.run()
  File "/opt/ros/diamondback/stacks/geometry/tf/src/tf/listener.py", line 237, in run
    self.tl.frame_graph_server = rospy.Service('~tf_frames', FrameGraph, self.frame_graph_service)
  File "/opt/ros/diamondback/stacks/ros_comm/clients/rospy/src/rospy/impl/tcpros_service.py", line 682, in __init__
    get_service_manager().register(self.resolved_name, self)
  File "/opt/ros/diamondback/stacks/ros_comm/clients/rospy/src/rospy/service.py", line 120, in register
    raise ServiceException(err)
ServiceException: service [/test_code_22488_1312164786316/tf_frames] already registered

The tf_listener is initialized within a python function definition.  The output of the lookupTransform is otherwise fine (the position and rotation are correct and functional).  I just want to get rid of the exception always printing out the screen about the service being already registered.

Originally posted by Nash on ROS Answers with karma: 207 on 2011-07-31
Post score: 2

A:

I believe this is actually in the constructor.  tf.TransformListener advertises that service as a debugging tool.  In the c++ version it checks it it has been advertised and doesn't do so again if it's already been done so by a different Listener.  If you want to look into the code, the conditional execution could be added in the run method in TransformListenerThread in tf/src/tf/listener.py.

Originally posted by tfoote with karma: 58457 on 2011-08-01
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by bit-pirate on 2012-11-09:
This bug is still around. You are right, Tully. That exception is only thrown on creation of a tf listener. I posted a "ticket on github": https://github.com/ros/ros_comm/issues/18.
Comment by Sebastian Rockel on 2013-08-01:
As this seems to be not fixed on Fuerte as of today I created a patch and want to share it. Therefore the following pull request has been created:
https://github.com/ros/geometry/pull/26
Comment by lahiruherath on 2018-05-29:
Is it fixed for Indigo? I got it and don't know whether its something in my code or the repo itself.

