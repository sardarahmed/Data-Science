Q:

Arm Navigation interfaces for custom manipulators

Hi All,
being impressed with the arm_navigation warehouse viewer, I would like to integrate it into the control system of my custom arm. Using the warehouse viewer I was able to get to use my custom arm model to complete the tutorials. But now I'm not sure how to integergrate the trajectories generated, with the control system of my arm.
My basic arm:
Hardware(Gazebo plugin) ->(custom topic and msgs) -> controller(subscribes to trajectory msgs) -> ?what Arm Navigation Node?
My question is:
Will an actionserver node have to be written to feed trajectory messages to my controller? If not what would be the best way to intergrate with the arm_navigation stack.
I appreciate any guidance.
cheers
Peter

Originally posted by PeterMilani on ROS Answers with karma: 1493 on 2013-02-11
Post score: 2

A:

Hello, I think that best way to integrate is to use robot_mechanism_controllers package. You can check it here. I used Joint Trajectory Action Controller with my custom robotic arm(integrated with gazebo and warehouse viewer ) and it worked great. But don't forget you should edit this controller's config file. I did not change the code, i edited the configuration file of Joint Trajectory Action Controller. Yes i used it in simulation env. HiDOF is implementing a real time controller interface for custom manipulators. Check it here and here . This controller is based on pr2's real time controller.

Originally posted by cagatay with karma: 1850 on 2013-02-11
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by PeterMilani on 2013-02-11:
thanks cagatay, so did you have to modify the JointTrajectoryActionController to interface it to your hardware? The documentation doesn't specify what messages it produces. Or should it be included as an object within a node?
Comment by PeterMilani on 2013-02-11:
after looking into the coding, the controllers listed in robot_mechanism_controllers are wrapped up in a plugin library that interfaces with a model representation of the robot. So for hardware control i would need to adjust to include interfaces to the hardware nodes. is this your experience?
Comment by PeterMilani on 2013-02-12:
Thanks again cagatay, your additional info was very helpful. Its a bit hard starting in the arm_navigation stack to understand at what level of abstraction above the hardware you are at. Thanks for the starting point!

