Q:

Fortress windows Binary Install

Hi all!
I wanted to try out ignition Fortress on windows 10, so I followed these installation instructions of the ignitionrobotics website: https://ignitionrobotics.org/docs/fortress/install_windows
I managed to install all the packages in the Conda environment and double checked the library version numbers here https://ignitionrobotics.org/docs/fortress/install#fortress-libraries to what is installed with conda list.  'ign' is recognized, I do not see 'gazebo' as part of the commands under 'ign help' so I can't try out any of the getting started examples. Also, with any other command, I get the following error:
Library error: ignition-tools-backward.dll not found. Improved backtrace generation will be disabled
Missing resource type (e.g. --type model).

So it seems from the instructions that Windows is not fully supported, however the outstanding ticket as explained in the instructions say that all the packages are now available for Conda , and I was able to find them in the conda-forge channel. I did see that eventhough the ign-gazebo and ign-launch packages exist, they are still failing for window... (see this issue)
I guess that my question is, is it worth it to try to get it to work on Windows or shall I just take the WSL (xserver)/ Native Ubuntu road for now? I just got into ROS/Gazebo again after an few years absence and I would like to get a simulator running reasonable amount, so perhaps somebody in the community has a good view on the state of things.

Originally posted by kimmcg on Gazebo Answers with karma: 1 on 2021-11-08
Post score: 0

A:

Hi @kimmcg!

So it seems from the instructions that Windows is not fully supported, however the outstanding ticket as explained in the instructions say that all the packages are now available for Conda , and I was able to find them in the conda-forge channel.

Sorry for the misunderstanding, in that context "available" meant that the packages are compiled successfully and can be installed, not that all their possible use has been tested. Indeed, Ignition Gazebo on Windows is still not working correctly. There are a few open issues and PRs that once fixed may permit to run Ignition Gazebo on Windows, see:

https://github.com/conda-forge/libignition-gazebo-feedstock/issues/27
https://github.com/ignitionrobotics/ign-tools/issues/70
https://github.com/ignitionrobotics/ign-tools/issues/71
https://github.com/conda-forge/ruby-feedstock/pull/81

Once all of these are merged/fixed, ign gazebo may work out of the box on Windows. See last part of https://community.gazebosim.org/t/community-meeting-ignition-on-conda-forge-october-2021/1139/2 for a bit of recap on this.

I guess that my question is, is it worth it to try to get it to work on Windows or shall I just take the WSL (xserver)/ Native Ubuntu road for now? I just got into ROS/Gazebo again after an few years absence and I would like to get a simulator running reasonable amount, so perhaps somebody in the community has a good view on the state of things.

If you are interested in Ignition Gazebo (and not in Classic Gazebo) and you just want something that works out of the box, I would go for Native Ubuntu for now. Even WSL/WSL2/WSLg has problems with Ignition Gazebo at the moment:

https://github.com/ignitionrobotics/ign-gazebo/issues/1116
https://github.com/ignitionrobotics/ign-gazebo/issues/920

While if you are interested in Classic Gazebo, that should work quite fine on both Conda (with RoboStack to provide the ROS bits: https://github.com/RoboStack/ros-noetic) or WSL/WSLg.

Originally posted by silvio.traversaro with karma: 200 on 2021-11-09
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by kimmcg on 2021-11-09:
Thanks for your elaborate answer! I was afraid indeed that it wasn't quite ready for windows. I was hoping to make use of the new multicopter class that is now part of ignition gazebo but not part of the old one, so I'll just try the native ubuntu way for now.
Btw, I did get it to work with WSL2 with an xserver, but only with Ogre 1 rendering.
Anyway, I'll go ahead and develop for Ubuntu but perhaps in the future I can help out with the windows port, once I'm more familiar with the libraries
Comment by silvio.traversaro on 2021-11-09:
Cool! Happy you found a way that works for you. Hopefully the Windows port will work out of the box in the near future, in that case even just testing would be welcome.

