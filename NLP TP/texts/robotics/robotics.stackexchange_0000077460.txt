Q:

fatal error: angles/angles.h: No such file or directory #include 

Hello,
The question is pretty much in the title. I have that package I haven't done and that source install of kinetic on my laptop. When I'm trying to compile using catkin build I have this error message :
fatal error: angles/angles.h: No such file or directory
 #include <angles/angles.h>

But when I look at my source install, I can find the file. The project compiled fine using a source install of indigo.
Does anyone has any idea why it can't find that file ? I'm pretty sure I'm forgetting something trivial here...
Some more info:
I have source the setup of both my source install and my ws.
ROS_ROOT=/home/malcolm/ros_catkin_ws/source_kinetic/install_isolated/share/ros
ROS_PACKAGE_PATH=/home/malcolm/ros_catkin_ws/kinetic_ws/src/vision_opencv/cv_bridge:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation/fake_localization:/home/malcolm/ros_catkin_ws/kinetic_ws/src/ndt_feature/flirtlib_ros:/home/malcolm/ros_catkin_ws/kinetic_ws/src/geometry2/geometry2:/home/malcolm/ros_catkin_ws/kinetic_ws/src/vision_opencv/image_geometry:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation_msgs/map_msgs:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation/map_server:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation/amcl:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation_msgs/move_base_msgs:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation/navigation:/home/malcolm/ros_catkin_ws/kinetic_ws/src/pcl_msgs:/home/malcolm/ros_catkin_ws/kinetic_ws/src/pcl_conversions:/home/malcolm/ros_catkin_ws/kinetic_ws/src/perception_oru/perception_oru:/home/malcolm/ros_catkin_ws/kinetic_ws/src/perception_pcl/perception_pcl:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation/robot_pose_ekf:/home/malcolm/ros_catkin_ws/kinetic_ws/src/perception_oru/sdf_tracker:/home/malcolm/ros_catkin_ws/kinetic_ws/src/semrob/semrob_conversions:/home/malcolm/ros_catkin_ws/kinetic_ws/src/semrob/semrob_generic:/home/malcolm/ros_catkin_ws/kinetic_ws/src/semrob/semrob_geometry:/home/malcolm/ros_catkin_ws/kinetic_ws/src/semrob/semrob_rviz:/home/malcolm/ros_catkin_ws/kinetic_ws/src/geometry2/tf2_msgs:/home/malcolm/ros_catkin_ws/kinetic_ws/src/geometry2/tf2:/home/malcolm/ros_catkin_ws/kinetic_ws/src/geometry2/tf2_bullet:/home/malcolm/ros_catkin_ws/kinetic_ws/src/geometry2/tf2_eigen:/home/malcolm/ros_catkin_ws/kinetic_ws/src/perception_pcl/pcl_ros:/home/malcolm/ros_catkin_ws/kinetic_ws/src/perception_oru/ndt_map:/home/malcolm/ros_catkin_ws/kinetic_ws/src/DAS:/home/malcolm/ros_catkin_ws/kinetic_ws/src/perception_oru/ndt_localization:/home/malcolm/ros_catkin_ws/kinetic_ws/src/perception_oru/ndt_registration:/home/malcolm/ros_catkin_ws/kinetic_ws/src/perception_oru/ndt_map_builder:/home/malcolm/ros_catkin_ws/kinetic_ws/src/perception_oru/ndt_rviz_visualisation:/home/malcolm/ros_catkin_ws/kinetic_ws/src/perception_oru/ndt_visualisation:/home/malcolm/ros_catkin_ws/kinetic_ws/src/perception_oru/ndt_costmap:/home/malcolm/ros_catkin_ws/kinetic_ws/src/perception_oru/ndt_feature_reg:/home/malcolm/ros_catkin_ws/kinetic_ws/src/perception_oru/ndt_fuser:/home/malcolm/ros_catkin_ws/kinetic_ws/src/perception_oru/ndt_mcl:/home/malcolm/ros_catkin_ws/kinetic_ws/src/ndt_feature/ndt_feature:/home/malcolm/ros_catkin_ws/kinetic_ws/src/geometry2/tf2_py:/home/malcolm/ros_catkin_ws/kinetic_ws/src/geometry2/tf2_ros:/home/malcolm/ros_catkin_ws/kinetic_ws/src/geometry2/tf2_geometry_msgs:/home/malcolm/ros_catkin_ws/kinetic_ws/src/geometry2/tf2_kdl:/home/malcolm/ros_catkin_ws/kinetic_ws/src/geometry2/tf2_sensor_msgs:/home/malcolm/ros_catkin_ws/kinetic_ws/src/geometry2/tf2_tools:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation/voxel_grid:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation/costmap_2d:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation/nav_core:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation/base_local_planner:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation/carrot_planner:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation/clear_costmap_recovery:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation/dwa_local_planner:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation/move_slow_and_clear:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation/navfn:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation/global_planner:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation/rotate_recovery:/home/malcolm/ros_catkin_ws/kinetic_ws/src/navigation/move_base:/home/malcolm/ros_catkin_ws/source_kinetic/install_isolated/share
ROS_MASTER_URI=http://localhost:11311
ROSLISP_PACKAGE_DIRECTORIES=/home/malcolm/ros_catkin_ws/kinetic_ws/devel/share/common-lisp
ROS_DISTRO=kinetic
ROS_ETC_DIR=/home/malcolm/ros_catkin_ws/source_kinetic/install_isolated/etc/ros

This is the CMake of the project :
cmake_minimum_required(VERSION 2.8.3)
project(semrob_generic)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS cmake_modules)
find_package(Boost REQUIRED COMPONENTS serialization)
find_package(Eigen REQUIRED)
## System dependencies are found with CMake's conventions
# find_package(Boost REQUIRED COMPONENTS system)

message("VAR")

# message(STATUS ${catkin_INCLUDE_DIRS})
MESSAGE( STATUS "CMAKE_CURRENT_BINARY_DIR: " ${catkin_INCLUDE_DIRS} )

message("DONNE")

get_cmake_property(_variableNames VARIABLES)
foreach (_variableName ${_variableNames})
    message(STATUS "${_variableName}=${${_variableName}}")
endforeach()

## Uncomment this if the package has a setup.py. This macro ensures
## modules and global scripts declared therein get installed
## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html
# catkin_python_setup()

################################################
## Declare ROS messages, services and actions ##
################################################

## To declare and build messages, services or actions from within this
## package, follow these steps:
## * Let MSG_DEP_SET be the set of packages whose message types you use in
##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).
## * In the file package.xml:
##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET
##   * If MSG_DEP_SET isn't empty the following dependencies might have been
##     pulled in transitively but can be declared for certainty nonetheless:
##     * add a build_depend tag for "message_generation"
##     * add a run_depend tag for "message_runtime"
## * In this file (CMakeLists.txt):
##   * add "message_generation" and every package in MSG_DEP_SET to
##     find_package(catkin REQUIRED COMPONENTS ...)
##   * add "message_runtime" and every package in MSG_DEP_SET to
##     catkin_package(CATKIN_DEPENDS ...)
##   * uncomment the add_*_files sections below as needed
##     and list every .msg/.srv/.action file to be processed
##   * uncomment the generate_messages entry below
##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)

## Generate messages in the 'msg' folder
# add_message_files(
#   FILES
#   Message1.msg
#   Message2.msg
# )

## Generate services in the 'srv' folder
# add_service_files(
#   FILES
#   Service1.srv
#   Service2.srv
# )

## Generate actions in the 'action' folder
# add_action_files(
#   FILES
#   Action1.action
#   Action2.action
# )

## Generate added messages and services with any dependencies listed here
# generate_messages(
#   DEPENDENCIES
#   std_msgs  # Or other packages containing msgs
# )

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if you package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
  INCLUDE_DIRS include
#  LIBRARIES semrob_generic
#  CATKIN_DEPENDS other_catkin_pkg
#  DEPENDS system_lib
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
set(CMAKE_CXX_FLAGS "-std=c++0x ${CMAKE_CXX_FLAGS}")

include_directories(include ${Boost_INCLUDE_DIR} ${Eigen_INCLUDE_DIRS} ${catkin_INCLUDE_DIRS})

## Declare a cpp library
# add_library(semrob_generic
#   src/${PROJECT_NAME}/semrob_generic.cpp
# )

## Declare a cpp executable
# add_executable(semrob_generic_node src/semrob_generic_node.cpp)

## Add cmake target dependencies of the executable/library
## as an example, message headers may need to be generated before nodes
# add_dependencies(semrob_generic_node semrob_generic_generate_messages_cpp)

## Specify libraries to link a library or executable target against
# target_link_libraries(semrob_generic_node
#   ${catkin_LIBRARIES}
# )

### ---------------------
add_executable(random_test test/random_test.cc)
target_link_libraries(random_test)

add_executable(serialization_test test/serialization_test.cc)
target_link_libraries(serialization_test -lboost_serialization)

#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
# install(PROGRAMS
#   scripts/my_python_script
#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark executables and/or libraries for installation
# install(TARGETS semrob_generic semrob_generic_node
#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark cpp header files for installation
# install(DIRECTORY include/${PROJECT_NAME}/
#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
# install(FILES
#   # myfile1
#   # myfile2
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
# )

#############
## Testing ##
#############

## Add gtest based cpp test target and link libraries
# catkin_add_gtest(${PROJECT_NAME}-test test/test_semrob_generic.cpp)
# if(TARGET ${PROJECT_NAME}-test)
#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
# endif()

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)

Originally posted by Maya on ROS Answers with karma: 1172 on 2016-11-22
Post score: 0

A:

Try to add the following lines to your package.xml file:
<build_depend>angles</build_depend>
<run_depend>angles</build_depend>

And then, in your CMakeLists.txt change the line:
find_package(catkin REQUIRED COMPONENTS cmake_modules)

for:
find_package(catkin REQUIRED COMPONENTS cmake_modules angles)

This should tell catkin that your package needs the angles package

Originally posted by Martin Peris with karma: 5625 on 2016-11-23
This answer was ACCEPTED on the original site
Post score: 0

