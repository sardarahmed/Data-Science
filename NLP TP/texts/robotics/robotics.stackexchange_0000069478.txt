Q:

Private Parameters in a sub namespace

Hello,
I have a ROS node that essentially does this:
      ros::NodeHandle nh("~");
      ros::NodeHandle node_handle(nh, "derp"),
      node_handle.param<double>("rate", rate, 10.0);

Which means that the private parameter "rate" is pushed down into a namespace like so: derp/rate
I want to run aforementioned node from the command line and set this private parameter, but I do get errors.
If the parameter were not in a sub namespace i could just launch the node by
rosrun mypack mynode _rate:=100

Running the node via
rosrun mypack mynode derp/_rate:=100
Fails with a graph error. How can I set this private parameter via commandline?
Thanks!
Edit: running this with a launch file like so works:
<node name="mynode" pkg="mypack" type="mynode" output="screen"">
    <param name="derp/rate" value="100.0" />
</node>
    

But I do need to set this parameter via commandline.

Originally posted by Crusty on ROS Answers with karma: 70 on 2015-09-03
Post score: 2

Original comments
Comment by gvdhoorn on 2015-09-03:
Just to make sure: the _hz suffix is only in your launch file example, not any of the command lines. Your C++ excerpt also doesn't show it. Are these the same nodes?
Comment by Crusty on 2015-09-03:
Typo only local to this post, fixed thanks.

A:

Try:
 rosrun mypack mynode _derp/rate:=100

Originally posted by ahendrix with karma: 47576 on 2015-09-03
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Crusty on 2015-09-03:
Tested, sadly doesnt work, node still running at 10Hz :(
Comment by ahendrix on 2015-09-03:
When I run a node with that syntax, it correctly sets the parameter. Are you sure you didn't make a typo in the parameter name?
Comment by Crusty on 2015-09-03:
Yep, it was just a copy paste error to here. I tried reducing and simplifying the example to the essence for the sake of posting it here distraction-free. The topic is indeed called rate_hz everywhere in my code.
Comment by Crusty on 2015-09-04:
I tested this again today, and it works, thanks. I added some debugging statements, and turns out the rate got set correctly, but the publishing speed was still always at 10 Hz. So I concluded it didn't work.  The slow publishing had other reasons in the code I am working with.

