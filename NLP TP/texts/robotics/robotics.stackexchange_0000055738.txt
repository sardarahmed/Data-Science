Q:

Eclipse IDE problem

Hi everyone!
I configurate eclipse 3.8 for catkin workspace.
talker.cpp and listener.cpp (from examples) compile and work fine (build by eclipse), but herewith eclipse find few errors.
In talker:
LINE: ros::Publisher chatter_pub = n.advertise < std_msgs::String > ("chatter", 1000);

Description Resource    Path    Location    Type
Invalid arguments '
Candidates are:
ros::Publisher advertise(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &, ?, bool)
ros::Publisher advertise(ros::AdvertiseOptions &)
ros::Publisher advertise(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &, ?, const boost::function<void (const ros::SingleSubscriberPublisher &)> &, const boost::function<void (const ros::SingleSubscriberPublisher &)> &, const boost::shared_ptr<const void> &, bool)
'   talker.cpp  /Project@build/[Source directory]/beginner_tutorials/src    line 45 Semantic Error

In listener:
LINE: ros::Subscriber sub = n.subscribe("chatter", 1000, chatterCallback);

Description Resource    Path    Location    Type
Invalid arguments '
Candidates are:
ros::Subscriber subscribe(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &, ?, void (#1::*)(#0), #1 *, const ros::TransportHints &)
ros::Subscriber subscribe(ros::SubscribeOptions &)
ros::Subscriber subscribe(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &, ?, void (#1::*)(#0)const, #1 *, const ros::TransportHints &)
ros::Subscriber subscribe(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &, ?, void (#1::*)(const boost::shared_ptr<const #0> &), #1 *, const ros::TransportHints &)
ros::Subscriber subscribe(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &, ?, void (#1::*)(const boost::shared_ptr<const #0> &)const, #1 *, const ros::TransportHints &)
ros::Subscriber subscribe(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &, ?, void (#1::*)(#0), const boost::shared_ptr<#1> &, const ros::TransportHints &)
ros::Subscriber subscribe(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &, ?, void (#1::*)(#0)const, const boost::shared_ptr<#1> &, const ros::TransportHints &)
ros::Subscriber subscribe(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &, ?, void (#1::*)(const boost::shared_ptr<const #0> &), const boost::shared_ptr<#1> &, const ros::TransportHints &)
ros::Subscriber subscribe(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &, ?, void (#1::*)(const boost::shared_ptr<const #0> &)const, const boost::shared_ptr<#1> &, const ros::TransportHints &)
ros::Subscriber subscribe(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &, ?, void (*)(#0), const ros::TransportHints &)
ros::Subscriber subscribe(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &, ?, void (*)(const boost::shared_ptr<const #0> &), const ros::TransportHints &)
ros::Subscriber subscribe(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &, ?, const boost::function<void (const boost::shared_ptr<const #0> &)> &, const boost::shared_ptr<const void> &, const ros::TransportHints &)
ros::Subscriber subscribe(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &, ?, const boost::function<void (#1)> &, const boost::shared_ptr<const void> &, const ros::TransportHints &)
'   listener.cpp    /Project@build/[Source directory]/beginner_tutorials/src    line 79 Semantic Error

What's the matter?

Originally posted by tuuzdu on ROS Answers with karma: 85 on 2013-11-27
Post score: 0

A:

If I see correctly, your Eclipse does not recognize ros libraries. Follow these steps to install the Kepler Eclipse and then do a cmake compilation in order to make it recognisable.

http://www.eclipse.org/downloads/ From the eclipse page, scroll down to C/C++ for Developers and download it. Then untar it and copy it into /opt folder.

Start eclipse by command
/opt/eclipse/./eclipse

If it complaints for java, install openjdk-7-jre.

Now go right to your catkin workspace and create a ros package
roscreate-pkg my_pkg_example roscpp

Make it eclipse project
cd ~/catkin_ws/src/my_pkg_example/
make eclipse-project

Now, go ahead and create the file src/myfile.cpp and edit cmake by adding something like this to the default cmake (Assuming your executable is in src directory)
rosbuild_add_executable(my_pkg_example src/myfile.cpp)

On the terminal type
cd ~/catkin_ws/src/my_pkg_example/
cmake .
make

The last thing to do now is to go to Eclipse and Project > Run & Debug Settings (or something like this I don't remember). Add C/C++ Application. Select binary file which is ~/catkin_ws/src/my_pkg_example/bin/my_pkg_example. Then hit Apply.

Now your file should be correct.

Originally posted by mozcelikors with karma: 181 on 2013-11-29
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by tuuzdu on 2013-11-29:
I followed a manual http://answers.ros.org/question/52013/catkin-and-eclipse/?answer=53090#post-id-53090 and Eclipse build the workspace successfully. But Eclipse issue errors above.
Comment by mozcelikors on 2013-12-01:
I don't know about your manual, but if you do a fresh start and do these steps, I can help you with any related problem. Cheers.
Comment by mfran89 on 2014-01-22:
Hey mozcelikors
I am using ROS Hydro and trying to import a ROS package into Eclipse Kepler. When I get to the step using "make eclipse-project" I keep getting this error
make: *** No rule to make target `eclipse-project'.  Stop.
Do you know why this happens? I would appreciate any tips.
Thanks
Mike
Comment by mozcelikors on 2014-01-22:
You have to execute make eclipse-project to a project that you've already created using "roscreate-pkg  roscpp. The folder should be like cd ~/catkin_ws/src/ , provided that your catkin workspace is in ~/catkin_ws.
Comment by mozcelikors on 2014-01-22:
If you assured that you havent done anything wrong there, I can ask a colleague of mine who had the same problem.
Comment by mfran89 on 2014-01-23:
I created my ROS package using catkin_create_pkg instead of roscreate_pkg. The project is located in the catkin_ws which is in the home directory. I am using ROS Hydro as well. I still do not know where the problem lies.
Comment by Markus Bader on 2014-01-27:
I am using as well ROS Hydro with Catkin on Ubuntu 12.04 64bit with Eclipse.
I have the same problem.
Even after deleting the ecliplse project and the build and devel folder and running catkin_make -DCMAKE_BUILD_TYPE=DEBUG --force-cmake -G"Eclipse CDT4 - Unix Makefiles"
Comment by Markus Bader on 2014-01-27:
By the way there is no command like "make eclipse-project"
Comment by kersm on 2014-02-02:
@Markus Bader did you find any Solution? Having the same troubles here with ROS Groovy Ubuntu 12.04 64bit and Eclipse Kepler. The above described approach using rosbuild worked in a previous test. But I should use the catkin approach and don't want to maintainance both approaches...
Comment by mfran89 on 2014-02-03:
Hey Markus, unfortunately I have not found a solution and continue to use a standard text editor to write my code. If I do come up with a solution I will get back to you.
Comment by kersm on 2014-02-03:
Hi everyone, meanwhile i found a workaround but not using eclipse any longer. I tried out qtcreator and it worked out of the box, just open the ~/catkin_ws/src/CMakeLists.txt as project there and everything (codecompletion, inline error marks, ...) works fine for me now...
Comment by Markus Bader on 2014-02-03:
Hi
Yes I found a solution. I am using kdevelop again. Just click import Project and select the CMakeFile in your worspace src Folder. If you get asked a build Folder point to the projects build folder.
Kdevelop is faster but not as stable as eclipse. :-)

