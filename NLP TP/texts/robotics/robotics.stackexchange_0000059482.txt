Q:

How do I use collision_object.header.frame_id? Can I use it for frame transformations?

I want to add collision objects to the world using a frame that is broadcast by a node. Setting
collision_object.header.frame_id = "task_frame"

results in the planner responding that

Unable to transform from frame 'task_frame' to frame '/base_link'. Returning identity.

I tried setting my
collision_object.header.stamp = ros::Time::now();

but no luck. I know task_frame exists, because I can run through tf_echo just fine. I can also manually transform poses, but the code will soon become really ugly as the list of objects increases.
Am I using collision_object.header wrong?
frames.png

Originally posted by paturdc on ROS Answers with karma: 157 on 2014-05-19
Post score: 0

Original comments
Comment by Maya on 2014-05-19:
Can you upload on image of the tf using $ rosrun tf view_frames $ evince frames.pdf ? And I know its working but could you add the output of rosrun tf tf_echo /map /odom ?
Comment by paturdc on 2014-05-19:
I don't have /map or /odom transforms, are they required? I'm transforming directly from the base_link of the robot (which is stationary), to a particular configuration of the end_effector. I'll edit my question to include an image of the tf.
Comment by paturdc on 2014-05-19:
Weird, it suddenly stared working, I didn't change anything. I suppose there might be some suboptimal way I've set up my transforms/timing/planning_scene somewhere.
Comment by paturdc on 2014-05-19:
And now it is back where I started. I even added a wait for transform before setting my collision_object.header to prove to myself that the frame is coming through. Every node that I can think of can see "task_frame" except my planner. I'm out of ideas.
Comment by Maya on 2014-05-19:
It's probably a typo somewhere but when I look at your image, I don't see any task_frame, I see task_space...
Comment by paturdc on 2014-05-19:
Yeah, it's a type in the question. But everything is spelled correctly in the code. I imagine it has to do with the timestamp, embedded in the collision_object, but I can't find a solution that works.
Comment by Maya on 2014-05-20:
Ok osrry it's the end of my knowledge. I have no idea why it does not work :/

A:

It turns out that restarting the planner after the new transform has been published does the trick. I suppose it loads a list of transforms to subscribe to, and doesn't update that list after it has been started. Thanks for the help, it did at least clear up that I was on the right track :)

Originally posted by paturdc with karma: 157 on 2014-05-21
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Maya on 2014-05-21:
Hey! Just realize by you saying it actually doesn't actualize the transformation loaded. I don't think it's a normal behavior of the system. Are you, by any chance doing something as describe here : http://answers.ros.org/question/39643/problem-with-roscore-subscription-and-publishing/ ?
Comment by paturdc on 2014-05-21:
Yes, it looks like it is the same kind of problem. I can't tell if this is undesired behaviour from ROS or if I just need to make sure that things are running in the correct sequence. It is impossible to change the sequence in certain applications for me.
Comment by Maya on 2014-05-21:
Last attempt to understand : is your roscore launch in a independant terminal ? =)
Comment by paturdc on 2014-05-21:
Yes, I have multiple terminals, and my subscriber is launched in a different terminal than my publisher (and the subscriber is launched before the publisher).

