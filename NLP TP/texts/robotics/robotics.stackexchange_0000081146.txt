Q:

utm points drifting on rviz over time

I have a set of gps navsatfix points that are recorded within a visible physical boundary when viewed on a google satellite image. I am using rviz_satellite to view the utm points on the satellite image, but I noticed that my trajectory is drifting south over time. Based on the answer given below regarding rviz float32 precision:
http://answers.ros.org/question/33624/how-to-view-map-regions-with-large-coordinate-values-using-rviz/
I changed my tf transform to:
tf::Transform transform;
transform.setOrigin( tf::Vector3( (utmpoint.easting-easting_ref), (utmpoint.northing-northing_ref), utmpoint.altitude ));
tf::Quaternion q;
q.setRPY(0, 0, 0);
transform.setRotation(q);
br.sendTransform(tf::StampedTransform(transform, msg->header.stamp, frame_fix_origin, frame_robot));

where ref_easting and ref_northing are utm points captured from my first incoming gps message, therefore now my first tf x,y coordinate starts at (0,0). On rviz Fixed Frame is set to frame_fix_origin and Robot frame(from rviz_satellite package) is set to frame_robot, but I still see the drift happening.
If I use another mapping visualization tool called mapviz(which has its own lat long to local xy coordinate system) and feed it my gps coordinates(using same maptile URI source) everything is displayed correctly, there is no drift. So I think my raw /fix coordinates are fine. Either I'm doing the transformation wrong when giving it to rviz or maybe the rviz_satellite is not projecting the satellite images correctly or it's something else.
I guess my question is has anyone used rviz_satellite and been able to plot their utm points without seeing this drift?

Originally posted by obotic on ROS Answers with karma: 41 on 2017-06-04
Post score: 0

A:

Well I still don't know why the drift happens, but I started to do the navsatfix to local coordinate transformation similar to how mapviz does it and that seems to solve my problem on rviz. Although I can't accept the answer since I still don't quite understand what the underlying problem is.

Originally posted by obotic with karma: 41 on 2017-06-05
This answer was ACCEPTED on the original site
Post score: 0

