Q:

Navigation (groovy): Adding moving obstacles

Hello everyone,
I am trying to use Navigation stack with the Khepera III robot, using its IR sensors as a "laser" and the Optitrack System as "odometry". My intention is to use several robots in order to create a testbed. In order to do so, I've developed a driver in ROS that communicates with Khepera through the UDP protocol in ROS Groovy.
The problem I am having is that the IR sensors are not much better than going blind. When two robots drive towards each other (more or less the game of chicken XD), the collision is impossible to avoid.
I am currently working in two different ways to solve this. The first one includes the ultrasound sensors that the robots include. This has proven not to work.The problem is that there is an important blind zone between the IR sensors and the US sensors.
The second one is to create a node that subscribes to all robots poses and publishes them as inflated_obstacles. It would subscribe these:
/khepera0/pose
/khepera1/pose
/khepera2/pose
etc
My first doubt is if this is the right approach or not.
For creating the obstacle, I've used as GridCell the perimeter of a 15*15cm square around the robot (which is a cillinder of 7cm of radius). My second doubt is if this is correct.
And, lastly, my third doubt is: where should I publish the obstacle? Currently I am publishing the obstacle here:
/khepera0/move_base/NavfnROS/NavfnROS_costmap/inflated_obstacles
/khepera0/move_base/global_costmap/inflated_obstacles
/khepera0/move_base/local_costmap/inflated_obstacles
It does not seem to work. Any ideas?
Thank you in advance.

Originally posted by jaimerv on ROS Answers with karma: 96 on 2014-08-07
Post score: 1

Original comments
Comment by cognitiveRobot on 2014-08-07:
Hi Jaimerv, why the collision? is it because your robots can't detect obstacles or can't take decisions properly??

A:

Hi
The move_base/global_costmap/inflated_obstacles is published by the costmap_handler for visualization purpues only. Therefore you can't use it to add "obstacles" to the map.
The solution I've used for this, is to create a kind of virtual map of the environment, where you can add and remove the obstacles dynamically and then publish them in a /map topic. Since you have both the position of the other robots in the same frame (provided by the optitrack) it should not be complicated.
Regards,
Mario

Originally posted by Mario Garzon with karma: 802 on 2014-08-08
This answer was ACCEPTED on the original site
Post score: 0

