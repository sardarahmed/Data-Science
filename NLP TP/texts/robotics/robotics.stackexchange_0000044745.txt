Q:

Arch x86_64 Linux ROS core build fails

Hi,
When i try to build the ROS core on Arch Linux x86_64 system i get the following error, if some one could help me solve this or at least point me in the rite direction would be very helpful
The error is below:
Linking CXX executable ../../bin/rxloggerlevel
[100%] Built target rxconsole
In file included from /tmp/yaourt-tmp-zion/aur-ros-core/src/ros-underlay/build/rx/rxtools/rosout_panel_swig_generated.cpp:3240:0:
/usr/include/wx-2.8/wx/wxPython/wxPython.h: In function 'bool wxPyCoreAPI_IMPORT()':
/usr/include/wx-2.8/wx/wxPython/wxPython.h:39:80: error: 'PyCObject_Import' was not declared in this scope
[100%] Built target rxloggerlevel
make[2]: *** [rx/rxtools/CMakeFiles/python_rxtools.dir/rosout_panel_swig_generated.cpp.o] Error 1
make[1]: *** [rx/rxtools/CMakeFiles/python_rxtools.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
Linking CXX shared library ../../../lib/librosbag.so
[100%] Built target rosbag
make: *** [all] Error 2

Originally posted by vijay on ROS Answers with karma: 13 on 2012-10-09
Post score: 0

Original comments
Comment by SL Remy on 2012-10-09:
Take a look here.. it may be a new swig issue in rxtool... http://projects.scipy.org/scipy/ticket/1365 good luck.
Comment by vijay on 2012-10-10:
Hi Lorenz,
Thanks for your response, i tried cmake -DCMAKE_INSTALL_PREFIX=/opt/ros/fuerte -DSETUPTOOLS_DEB_LAYOUT=OFF -DPYTHON_EXECUTABLE=/usr/bin/python2 ..
looked for any reference to python in the build directory there was none but i still get the same errro :( any ideas
Comment by Lorenz on 2012-10-11:
Have a look at CMakeCache.txt. There should be something related to libpython.
Comment by vijay on 2012-10-12:
Thanks Lorenz looks like that solved the python problem but now i face a boost problem i think http://answers.ros.org/question/45689/ros-core-build-on-arch-linux/

A:

That seems to be another python issue. My guess is that cmake's configure finds python3 instead of python2. If you are lucky, you can change that using ccmake. Go into your build directory, execute cmake . and check if the configure contains something python3 related. Change it to the corresponding files/directories/flags for python2. If that doesn't work, you might have to patch some catkin cmake files that are responsible for finding python.

Originally posted by Lorenz with karma: 22731 on 2012-10-09
This answer was ACCEPTED on the original site
Post score: 3

