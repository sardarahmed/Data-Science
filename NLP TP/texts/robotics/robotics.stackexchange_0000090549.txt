Q:

subscribe to callback which takes arguments and transport hints

Hi all,
I'm subscribing to a callback which takes arguments by using the boost::bind structure:
nh_.subscribe<MsgT>(topic, 1000,  boost::bind(&ROSFrontEnd::callback<MsgT>, this, _1, sensor_id)); 

where the callback signature is the follwing:
template <class MsgT>
void callback(boost::shared_ptr<MsgT const> msg,
              const SensorId& Key);

Now I want to extend the subscription by adding transport hints, like so:
nh_.subscribe<MsgT>(topic, 1000,  boost::bind(&ROSFrontEnd::callback<MsgT>, this, _1, sensor_id), ros::TransportHints().tcpNoDelay()); 

but I get a compilation error saying that there is no such signature for subscribe.
What is the correct way to subscribe to a callback taking arguments and passing transport hints as well?
The code worked just fine without the transport hints. I'm using Ubuntu 16.04 with ROS Kinetic.
UPDATE
Here is a MCVE with the full error listing:
#include <boost/shared_ptr.hpp>
#include <boost/bind.hpp>
#include <std_msgs/String.h>
#include <ros/node_handle.h>
#include <ros/subscriber.h>
#include <ros/transport_hints.h>

class TransportHintsTest {
public:
    typedef std::string SensorId;
public:

    TransportHintsTest(ros::NodeHandle& nh) : nh_(nh){

        SensorId id = "string";
        sub = nh_.subscribe<std_msgs::String>("mytopic", 10, boost::bind(&TransportHintsTest::callback<std_msgs::String>,
                                                                         this,
                                                                         _1,
                                                                         id),
                                              ros::TransportHints().tcpNoDelay()); // without this last argument, compiles fine
    }

    template <class MsgT>
    void callback(boost::shared_ptr<MsgT const> msg, const SensorId& sensor_id){
    }

private:
    ros::Subscriber sub;
    ros::NodeHandle nh_;
};

int main(int argc, char** argv) {
    ros::init(argc, argv,"transport_hint_test");
    ros::NodeHandle nh;
    TransportHintsTest node(nh);
}

The error says:
/home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp: In constructor ‘TransportHintsTest::TransportHintsTest(ros::NodeHandle&)’:
/home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:20:81: error: no matching function for call to ‘ros::NodeHandle::subscribe(const char [8], int, boost::_bi::bind_t<void, boost::_mfi::mf2<void, TransportHintsTest, boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >, const std::__cxx11::basic_string<char>&>, boost::_bi::list3<boost::_bi::value<TransportHintsTest*>, boost::arg<1>, boost::_bi::value<std::__cxx11::basic_string<char> > > >, ros::TransportHints&)’
                                               ros::TransportHints().tcpNoDelay());
                                                                                 ^
In file included from /home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:4:0:
/opt/ros/kinetic/include/ros/node_handle.h:402:14: note: candidate: template<class M, class T> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(M), T*, const ros::TransportHints&)
   Subscriber subscribe(const std::string& topic, uint32_t queue_size, void(T::*fp)(M), T* obj, 
              ^
/opt/ros/kinetic/include/ros/node_handle.h:402:14: note:   template argument deduction/substitution failed:
/home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:20:81: note:   mismatched types ‘void (T::*)(std_msgs::String_<std::allocator<void> >)’ and ‘boost::_bi::bind_t<void, boost::_mfi::mf2<void, TransportHintsTest, boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >, const std::__cxx11::basic_string<char>&>, boost::_bi::list3<boost::_bi::value<TransportHintsTest*>, boost::arg<1>, boost::_bi::value<std::__cxx11::basic_string<char> > > >’
                                               ros::TransportHints().tcpNoDelay());
                                                                                 ^
In file included from /home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:4:0:
/opt/ros/kinetic/include/ros/node_handle.h:413:14: note: candidate: template<class M, class T> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(M) const, T*, const ros::TransportHints&)
   Subscriber subscribe(const std::string& topic, uint32_t queue_size, void(T::*fp)(M) const, T* obj, 
              ^
/opt/ros/kinetic/include/ros/node_handle.h:413:14: note:   template argument deduction/substitution failed:
/home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:20:81: note:   mismatched types ‘void (T::*)(std_msgs::String_<std::allocator<void> >) const’ and ‘boost::_bi::bind_t<void, boost::_mfi::mf2<void, TransportHintsTest, boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >, const std::__cxx11::basic_string<char>&>, boost::_bi::list3<boost::_bi::value<TransportHintsTest*>, boost::arg<1>, boost::_bi::value<std::__cxx11::basic_string<char> > > >’
                                               ros::TransportHints().tcpNoDelay());
                                                                                 ^
In file included from /home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:4:0:
/opt/ros/kinetic/include/ros/node_handle.h:465:14: note: candidate: template<class M, class T> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(const boost::shared_ptr<const M>&), T*, const ros::TransportHints&)
   Subscriber subscribe(const std::string& topic, uint32_t queue_size, 
              ^
/opt/ros/kinetic/include/ros/node_handle.h:465:14: note:   template argument deduction/substitution failed:
/home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:20:81: note:   mismatched types ‘void (T::*)(const boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >&)’ and ‘boost::_bi::bind_t<void, boost::_mfi::mf2<void, TransportHintsTest, boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >, const std::__cxx11::basic_string<char>&>, boost::_bi::list3<boost::_bi::value<TransportHintsTest*>, boost::arg<1>, boost::_bi::value<std::__cxx11::basic_string<char> > > >’
                                               ros::TransportHints().tcpNoDelay());
                                                                                 ^
In file included from /home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:4:0:
/opt/ros/kinetic/include/ros/node_handle.h:475:14: note: candidate: template<class M, class T> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(const boost::shared_ptr<const M>&) const, T*, const ros::TransportHints&)
   Subscriber subscribe(const std::string& topic, uint32_t queue_size, 
              ^
/opt/ros/kinetic/include/ros/node_handle.h:475:14: note:   template argument deduction/substitution failed:
/home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:20:81: note:   mismatched types ‘void (T::*)(const boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >&) const’ and ‘boost::_bi::bind_t<void, boost::_mfi::mf2<void, TransportHintsTest, boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >, const std::__cxx11::basic_string<char>&>, boost::_bi::list3<boost::_bi::value<TransportHintsTest*>, boost::arg<1>, boost::_bi::value<std::__cxx11::basic_string<char> > > >’
                                               ros::TransportHints().tcpNoDelay());
                                                                                 ^
In file included from /home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:4:0:
/opt/ros/kinetic/include/ros/node_handle.h:529:14: note: candidate: template<class M, class T> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(M), const boost::shared_ptr<U>&, const ros::TransportHints&)
   Subscriber subscribe(const std::string& topic, uint32_t queue_size, void(T::*fp)(M), 
              ^
/opt/ros/kinetic/include/ros/node_handle.h:529:14: note:   template argument deduction/substitution failed:
/home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:20:81: note:   mismatched types ‘void (T::*)(std_msgs::String_<std::allocator<void> >)’ and ‘boost::_bi::bind_t<void, boost::_mfi::mf2<void, TransportHintsTest, boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >, const std::__cxx11::basic_string<char>&>, boost::_bi::list3<boost::_bi::value<TransportHintsTest*>, boost::arg<1>, boost::_bi::value<std::__cxx11::basic_string<char> > > >’
                                               ros::TransportHints().tcpNoDelay());
                                                                                 ^
In file included from /home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:4:0:
/opt/ros/kinetic/include/ros/node_handle.h:540:14: note: candidate: template<class M, class T> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(M) const, const boost::shared_ptr<U>&, const ros::TransportHints&)
   Subscriber subscribe(const std::string& topic, uint32_t queue_size, void(T::*fp)(M) const, 
              ^
/opt/ros/kinetic/include/ros/node_handle.h:540:14: note:   template argument deduction/substitution failed:
/home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:20:81: note:   mismatched types ‘void (T::*)(std_msgs::String_<std::allocator<void> >) const’ and ‘boost::_bi::bind_t<void, boost::_mfi::mf2<void, TransportHintsTest, boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >, const std::__cxx11::basic_string<char>&>, boost::_bi::list3<boost::_bi::value<TransportHintsTest*>, boost::arg<1>, boost::_bi::value<std::__cxx11::basic_string<char> > > >’
                                               ros::TransportHints().tcpNoDelay());
                                                                                 ^
In file included from /home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:4:0:
/opt/ros/kinetic/include/ros/node_handle.h:594:14: note: candidate: template<class M, class T> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(const boost::shared_ptr<const M>&), const boost::shared_ptr<U>&, const ros::TransportHints&)
   Subscriber subscribe(const std::string& topic, uint32_t queue_size, 
              ^
/opt/ros/kinetic/include/ros/node_handle.h:594:14: note:   template argument deduction/substitution failed:
/home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:20:81: note:   mismatched types ‘void (T::*)(const boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >&)’ and ‘boost::_bi::bind_t<void, boost::_mfi::mf2<void, TransportHintsTest, boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >, const std::__cxx11::basic_string<char>&>, boost::_bi::list3<boost::_bi::value<TransportHintsTest*>, boost::arg<1>, boost::_bi::value<std::__cxx11::basic_string<char> > > >’
                                               ros::TransportHints().tcpNoDelay());
                                                                                 ^
In file included from /home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:4:0:
/opt/ros/kinetic/include/ros/node_handle.h:605:14: note: candidate: template<class M, class T> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(const boost::shared_ptr<const M>&) const, const boost::shared_ptr<U>&, const ros::TransportHints&)
   Subscriber subscribe(const std::string& topic, uint32_t queue_size, 
              ^
/opt/ros/kinetic/include/ros/node_handle.h:605:14: note:   template argument deduction/substitution failed:
/home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:20:81: note:   mismatched types ‘void (T::*)(const boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >&) const’ and ‘boost::_bi::bind_t<void, boost::_mfi::mf2<void, TransportHintsTest, boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >, const std::__cxx11::basic_string<char>&>, boost::_bi::list3<boost::_bi::value<TransportHintsTest*>, boost::arg<1>, boost::_bi::value<std::__cxx11::basic_string<char> > > >’
                                               ros::TransportHints().tcpNoDelay());
                                                                                 ^
In file included from /home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:4:0:
/opt/ros/kinetic/include/ros/node_handle.h:656:14: note: candidate: template<class M> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (*)(M), const ros::TransportHints&)
   Subscriber subscribe(const std::string& topic, uint32_t queue_size, void(*fp)(M), const TransportHints& transport_hints = TransportHints())
              ^
/opt/ros/kinetic/include/ros/node_handle.h:656:14: note:   template argument deduction/substitution failed:
/home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:16:73: note:   cannot convert ‘boost::bind(R (T::*)(B1, B2), A1, A2, A3) [with R = void; T = TransportHintsTest; B1 = boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >; B2 = const std::__cxx11::basic_string<char>&; A1 = TransportHintsTest*; A2 = boost::arg<1>; A3 = std::__cxx11::basic_string<char>; typename boost::_bi::list_av_3<A1, A2, A3>::type = boost::_bi::list3<boost::_bi::value<TransportHintsTest*>, boost::arg<1>, boost::_bi::value<std::__cxx11::basic_string<char> > >](((TransportHintsTest*)this), ({anonymous}::_1, boost::arg<1>()), std::__cxx11::basic_string<char>(id))’ (type ‘boost::_bi::bind_t<void, boost::_mfi::mf2<void, TransportHintsTest, boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >, const std::__cxx11::basic_string<char>&>, boost::_bi::list3<boost::_bi::value<TransportHintsTest*>, boost::arg<1>, boost::_bi::value<std::__cxx11::basic_string<char> > > >’) to type ‘void (*)(std_msgs::String_<std::allocator<void> >)’
         sub = nh_.subscribe<std_msgs::String>("mytopic", 10, boost::bind(&TransportHintsTest::callback<std_msgs::String>,
                                                                         ^
In file included from /home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:4:0:
/opt/ros/kinetic/include/ros/node_handle.h:704:14: note: candidate: template<class M> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (*)(const boost::shared_ptr<const M>&), const ros::TransportHints&)
   Subscriber subscribe(const std::string& topic, uint32_t queue_size, void(*fp)(const boost::shared_ptr<M const>&), const TransportHints& transport_hints = TransportHints())
              ^
/opt/ros/kinetic/include/ros/node_handle.h:704:14: note:   template argument deduction/substitution failed:
/home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:16:73: note:   cannot convert ‘boost::bind(R (T::*)(B1, B2), A1, A2, A3) [with R = void; T = TransportHintsTest; B1 = boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >; B2 = const std::__cxx11::basic_string<char>&; A1 = TransportHintsTest*; A2 = boost::arg<1>; A3 = std::__cxx11::basic_string<char>; typename boost::_bi::list_av_3<A1, A2, A3>::type = boost::_bi::list3<boost::_bi::value<TransportHintsTest*>, boost::arg<1>, boost::_bi::value<std::__cxx11::basic_string<char> > >](((TransportHintsTest*)this), ({anonymous}::_1, boost::arg<1>()), std::__cxx11::basic_string<char>(id))’ (type ‘boost::_bi::bind_t<void, boost::_mfi::mf2<void, TransportHintsTest, boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >, const std::__cxx11::basic_string<char>&>, boost::_bi::list3<boost::_bi::value<TransportHintsTest*>, boost::arg<1>, boost::_bi::value<std::__cxx11::basic_string<char> > > >’) to type ‘void (*)(const boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >&)’
         sub = nh_.subscribe<std_msgs::String>("mytopic", 10, boost::bind(&TransportHintsTest::callback<std_msgs::String>,
                                                                         ^
In file included from /home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:4:0:
/opt/ros/kinetic/include/ros/node_handle.h:750:14: note: candidate: template<class M> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, const boost::function<void(const boost::shared_ptr<const M>&)>&, const VoidConstPtr&, const ros::TransportHints&)
   Subscriber subscribe(const std::string& topic, uint32_t queue_size, const boost::function<void (const boost::shared_ptr<M const>&)>& callback,
              ^
/opt/ros/kinetic/include/ros/node_handle.h:750:14: note:   template argument deduction/substitution failed:
/home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:20:79: note:   cannot convert ‘ros::TransportHints().ros::TransportHints::tcpNoDelay(1)’ (type ‘ros::TransportHints’) to type ‘const VoidConstPtr& {aka const boost::shared_ptr<const void>&}’
                                               ros::TransportHints().tcpNoDelay());
                                                                               ^
In file included from /home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:4:0:
/opt/ros/kinetic/include/ros/node_handle.h:799:14: note: candidate: template<class M, class C> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, const boost::function<void(C)>&, const VoidConstPtr&, const ros::TransportHints&)
   Subscriber subscribe(const std::string& topic, uint32_t queue_size, const boost::function<void (C)>& callback,
              ^
/opt/ros/kinetic/include/ros/node_handle.h:799:14: note:   template argument deduction/substitution failed:
/home/mcamurri/catkin_ws/src/transport_hint_test/src/transport_hints.cpp:20:81: note:   ‘boost::_bi::bind_t<void, boost::_mfi::mf2<void, TransportHintsTest, boost::shared_ptr<const std_msgs::String_<std::allocator<void> > >, const std::__cxx11::basic_string<char>&>, boost::_bi::list3<boost::_bi::value<TransportHintsTest*>, boost::arg<1>, boost::_bi::value<std::__cxx11::basic_string<char> > > >’ is not derived from ‘const boost::function<void(C)>’
                                               ros::TransportHints().tcpNoDelay());
                                                                                 ^
make[2]: *** [CMakeFiles/transport_hints_test.dir/src/transport_hints.cpp.o] Error 1
make[1]: *** [CMakeFiles/transport_hints_test.dir/all] Error 2
make: *** [all] Error 2
cd /home/mcamurri/catkin_ws/build/transport_hint_test; catkin build --get-env transport_hint_test | catkin env -si  /usr/bin/make --jobserver-fds=6,7 -j; cd -

Originally posted by mcamurri on ROS Answers with karma: 102 on 2019-02-17
Post score: 0

Original comments
Comment by PeteBlackerThe3rd on 2019-02-18:
Can you post the full error message please, we need to see all the detail to be able to help you.
Comment by mcamurri on 2019-02-18:
I've added a minimal example with full error output.

A:

From the API docs it seems that all the boost::bind versions (11 and 12 out of 13) require you to also specify the tracked object:

tracked_object: A shared pointer to an object to track for these callbacks. If set, the a weak_ptr will be created to this object, and if the reference count goes to 0 the subscriber callbacks will not get called. Note that setting this will cause a new reference to be added to the object before the callback, and for it to go out of scope (and potentially be deleted) in the code path (and therefore thread) that the callback is invoked from.

The default seems to be typedef boost::shared_ptr<void const> ros::VoidConstPtr, i.e. this compiles:
#include <ros/forwards.h>

    sub = nh_.subscribe<std_msgs::String>("mytopic", 10, boost::bind(&TransportHintsTest::callback<std_msgs::String>,
                                                                     this,
                                                                     _1,
                                                                     id),
                                          ros::VoidConstPtr(),
                                          ros::TransportHints().tcpNoDelay());

Originally posted by aPonza with karma: 589 on 2019-02-18
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by mcamurri on 2019-02-18:
Thank you! It works!

