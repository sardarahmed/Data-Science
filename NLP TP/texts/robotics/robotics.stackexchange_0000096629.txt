Q:

Why catkin_make_isolated on Rasberry Pi?

I am puzzled by the fact that various instructions for putting ROS on a Raspi use catkin_make_isolated and related scripts, and end up creating build_isolated and devel_isolated. Is that required? Why would I not want to do a regular catkin_make?
(and perhaps related, why did it call the directory the non-standard ros_catkin_ws?)

Originally posted by pitosalas on ROS Answers with karma: 628 on 2020-07-24
Post score: 0

A:

Why would I not want to do a regular catkin_make?

because most RPi installations are built-from-sources, which will include non-Catkin packages.
Plain catkin_make cannot build non-Catkin packages.
catkin_make_isolated can.

and perhaps related, why did it call the directory the non-standard ros_catkin_ws?

Because there is no requirement on what the name of the workspace is?
It's also not important: that workspace is really "only" a workspace used while building the initial, base ROS install from sources. Most instructions will end with a catkin_make_isolated command which installs the resulting binaries into /opt/ros/.. (or a similar read-only location).
After that, the temporary ros_catkin_ws can be deleted and a regular workspace can be created and used (which will contain just the packages the user is working on, rather than with).
Unless a user wishes to track upstream and benefit from re-using some of the binary objects in the build_isolated directory of course. Then it should not be deleted. But perhaps something like ccache would be better to use in that case.

Originally posted by gvdhoorn with karma: 86574 on 2020-07-24
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by pitosalas on 2020-07-25:
Important things I did not know! Especially that I can delete the make_isolated ws. It all makes sense.

