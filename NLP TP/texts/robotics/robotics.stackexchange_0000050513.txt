Q:

How to test a patched 3rd-party bloom GBP package before releasing it?

@piyushk and I thought our patched libfreenect might work, so we released it yesterday to Groovy.
It installs the library in lib64/, which must not work with Jenkins.
Before we release another broken fix for it, I need to learn how to run a pre-release test on a patched 3rd-party library like this one.

Originally posted by joq on ROS Answers with karma: 25443 on 2013-04-19
Post score: 3

A:

I am able to create the pre-release jobs, but I think it might be lagging behind bloom on which branch/tag to use when testing from the release repository.
This will be resolved as the new rosdistro library is deployed as the new rosdistro fromat has the release tags encoded into each repository listing. e.g.:
https://github.com/ros/rosdistro/blob/rep137/releases/groovy.yaml#L473
(the location of that file might change as we shuffle things around while rolling out the new rosdistro)
So, I would say you have to wait for us to fix the pre-release to use the new rosdistro library.
A little more on why; other tools which use the old rosdistro don't have the release tag template either, but they instead "guess" over a set of tags which bloom used at different points, which is... suboptimal. The rosinstall generator does this for example. Normally I would say we can introduce this same "guess" and check logic into the pre-release system, but since we are so close to finishing the rosdistro roll out, it makes more sense for us to not waste time fixing a system that is going to be updated in the very near future.

Originally posted by William with karma: 17335 on 2013-04-19
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by joq on 2013-04-19:
Thanks, William! We can wait for the new rosdistro support. How do we turn off repeated attempts to build the 0.1.2-1 release? Just delete it from the rosdistro/releases/groovy.yaml?
Comment by William on 2013-04-19:
Set the version to null or leave it empty, e.g.  version:

