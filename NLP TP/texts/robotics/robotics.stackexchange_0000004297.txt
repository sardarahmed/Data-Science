Q:

Which micro-controler/processor to be used for autonomous stereo vision robot system?

I am very new two robotics, however I have a working stereo algorithm which I want to combine with a SLAM algorithm. I am developing this system for an other application but I decided integrating it on a robot first and testing it might be a good way to get used to the system and test its behaviour in a realistic environment. (rather than testing it in some kind of software simulator only) However, I want the system to be autonomous and running on-board of the rover. 
The system I am talking about will consist of:
a stereo camera
a rover with wheels with one motor each 
possibly some kind of sensor that "measures" the movement, e.g. how much the wheels turned
maybe some distance sensor 
Appart from this it's only software
the stereo software is already developed, the SLAM algorithm not. Therefore it is currently impossible to say how much RAM it needs. I am currently running the stereo-vision only on an i7 in approx. 1s.
Now my question:
as mentioned I have no idea about robotics, and also my electronics knowledge is limited, so I have no idea what I need for this robot when it comes to the processor and the electronics. 
I read some stuff about the Raspberry Pi and Arduino boards but I have no idea what to make from this. I am afraid that a Arduino will not be able to handle the computational load of the stereo vision and the SLAM algorithm but I read that Raspberry Pis are not the first choice when interfacing with sensors is needed (in this case my stereo cameras). Also I found the Leika kit which is a robotics kit for the Raspberry Pi. Maybe this would be a good option for me?
Maybe an entirely different system would be even more advisable? 
Possibly someone else build an equally complex system before and can give me some advise form his/her experience? 

A:

Stereo vision and SLAM are pretty heavy algorithms, both in terms of the processing power and RAM required. You can forget about running this on a little microcontroller like an Arduino. These run at tens of MHz, and have only a few KB RAM.
At the very least you'll need something running at hundreds of MHz with hundreds of MBs of RAM. You didn't say exactly what i7 you were using, but these typically run at several GHz clock speed, and would have several GB RAM installed. On this machine, your stereo vision took a whole second to process. On a Beaglebone, you might expect this to take tens of seconds at best.
I recommend using a small laptop computer to process the vision, and something like an Arduino to interface the laptop to the rest of the robot. The laptop can talk to the Arduino over the USB serial port, which should have ample bandwidth for that.
This is quite a common way to prototype a robot:

