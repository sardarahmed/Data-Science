Q:

Python pickling with ros msgs

Hello Community,
I am transmitting custom ros msgs through a ZeroMQ protocol over a network. In order to create a data stream that I can send, I use the pickle method within Python. It works perfectly when I pass and receive over localhost. However when it is unicasted to a remote machine I am unable to load it back using pickle.loads(message). I get the following error:
ImportError: No module named genpy.rostime
This is really puzzling me since I believe genpy is a part of roslib and I have imported roslib. I also imported other necessary modules like pickle, rospy etc.
Has anyone used pickle to package and parse ros msgs ? I would appreciate any help or suggestions.
Thank you,
Ammar
EDIT: So I was experimenting with a bunch of different serialization methods to broadcast a custon ros msg over a network. However all of them give the error 'No module name genpy.rostime' during deserialization... The most recent method I am using is:
initializing a ros msg
using socket.send_pyobj()
on the other machine:
socket.recv_pyobj() --> This is where it errors out because it cannot find genpy.rostime
I am absolutely sure it is nothing with ZeroMQ (my communication protocol) since it can deserialize other python objects perfectly. Could some one please help me figure out how to deserialize ros msg objects in Python? I am completely lost

Originally posted by Ammar on ROS Answers with karma: 289 on 2012-10-01
Post score: 1

Original comments
Comment by Mac on 2012-10-01:
Serious question: why? Why are you using fully three different serialization tools? Can you explain the problem you're trying to solve?

A:

I figured out what the problem was!!!
Basically in my ros msg type I was inheriting the PoseStamped msg from geometry_msgs. So on one of my machine the common_msgs (or geometry_msgs) package was from ROS Fuerte and the other had ROS Electric. There is probably (actually definitely) some difference in the msg definitions between the 2 versions, causing a mismatch when a Fuerte PoseStamped msg was being deserialized referencing an Electric PoseStamped msg. Thus the ERROR: No module name genpy.rostime
What is bothering is the fact that the Error said very very little about the actual problem it faced deserializing (NOT ROS's fault anyway), but such is life. Anyways please be careful mixing Electric and Fuerte, it could be dangerous.

Originally posted by Ammar with karma: 289 on 2012-10-03
This answer was ACCEPTED on the original site
Post score: 1

