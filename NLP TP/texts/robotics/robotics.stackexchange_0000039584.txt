Q:

how to report master connection status in android

Hi,
I'm working on an android application which connects a master on PC.
I wonder if there's any way to feedback the current connection status in android user interface ? I can see the status in logcat in eclipse, but is there a way to show it to the android user?
one of the idea is to catch the registration error, and make a toast to handle it. is it possible to catch the registration error? if yes, where to catch it?
following is the logcat from eclipse. i want to tell the user "connecting to master failed" whenever the following error occurs.
04-17 12:16:50.856: E/Registrar(17158): Exception caught while communicating with master.
04-17 12:16:50.856: E/Registrar(17158): java.lang.RuntimeException: java.net.ConnectException: orome.intern.vmi.ei.tum.de/192.168.13.7:11311 - Connection refused
04-17 12:16:50.856: E/Registrar(17158):     at org.ros.internal.node.xmlrpc.XmlRpcClientFactory$1.invoke(XmlRpcClientFactory.java:157)
04-17 12:16:50.856: E/Registrar(17158):     at $Proxy0.unregisterPublisher(Native Method)
04-17 12:16:50.856: E/Registrar(17158):     at org.ros.internal.node.client.MasterClient.unregisterPublisher(MasterClient.java:161)
04-17 12:16:50.856: E/Registrar(17158):     at org.ros.internal.node.client.Registrar$3$1.call(Registrar.java:170)
04-17 12:16:50.856: E/Registrar(17158):     at org.ros.internal.node.client.Registrar$3$1.call(Registrar.java:167)
04-17 12:16:50.856: E/Registrar(17158):     at org.ros.internal.node.client.Registrar.callMaster(Registrar.java:111)
04-17 12:16:50.856: E/Registrar(17158):     at org.ros.internal.node.client.Registrar.access$100(Registrar.java:51)
04-17 12:16:50.856: E/Registrar(17158):     at org.ros.internal.node.client.Registrar$3.call(Registrar.java:167)
04-17 12:16:50.856: E/Registrar(17158):     at org.ros.internal.node.client.Registrar$3.call(Registrar.java:164)
04-17 12:16:50.856: E/Registrar(17158):     at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:306)
04-17 12:16:50.856: E/Registrar(17158):     at java.util.concurrent.FutureTask.run(FutureTask.java:138)
04-17 12:16:50.856: E/Registrar(17158):     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:444)
04-17 12:16:50.856: E/Registrar(17158):     at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:306)
04-17 12:16:50.856: E/Registrar(17158):     at java.util.concurrent.FutureTask.run(FutureTask.java:138)
04-17 12:16:50.856: E/Registrar(17158):     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1088)
04-17 12:16:50.856: E/Registrar(17158):     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:581)
04-17 12:16:50.856: E/Registrar(17158):     at java.lang.Thread.run(Thread.java:1019)
04-17 12:16:50.856: E/Registrar(17158): Caused by: java.net.ConnectException: orome.intern.vmi.ei.tum.de/192.168.13.7:11311 - Connection refused
04-17 12:16:50.856: E/Registrar(17158):     at org.apache.harmony.luni.net.PlainSocketImpl.connect(PlainSocketImpl.java:207)
04-17 12:16:50.856: E/Registrar(17158):     at org.apache.harmony.luni.net.PlainSocketImpl.connect(PlainSocketImpl.java:437)
04-17 12:16:50.856: E/Registrar(17158):     at java.net.Socket.connect(Socket.java:983)
04-17 12:16:50.856: E/Registrar(17158):     at java.lang.reflect.Method.invokeNative(Native Method)
04-17 12:16:50.856: E/Registrar(17158):     at java.lang.reflect.Method.invoke(Method.java:507)
04-17 12:16:50.856: E/Registrar(17158):     at org.apache.commons.httpclient.protocol.ReflectionSocketFactory.createSocket(ReflectionSocketFactory.java:140)
04-17 12:16:50.856: E/Registrar(17158):     at org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory.createSocket(DefaultProtocolSocketFactory.java:125)
04-17 12:16:50.856: E/Registrar(17158):     at org.apache.commons.httpclient.HttpConnection.open(HttpConnection.java:707)
04-17 12:16:50.856: E/Registrar(17158):     at org.apache.commons.httpclient.HttpMethodDirector.executeWithRetry(HttpMethodDirector.java:387)
04-17 12:16:50.856: E/Registrar(17158):     at org.apache.commons.httpclient.HttpMethodDirector.executeMethod(HttpMethodDirector.java:171)
04-17 12:16:50.856: E/Registrar(17158):     at org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:397)
04-17 12:16:50.856: E/Registrar(17158):     at org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:323)
04-17 12:16:50.856: E/Registrar(17158):     at org.apache.xmlrpc.client.XmlRpcCommonsTransport.writeRequest(XmlRpcCommonsTransport.java:227)
04-17 12:16:50.856: E/Registrar(17158):     at org.apache.xmlrpc.client.XmlRpcStreamTransport.sendRequest(XmlRpcStreamTransport.java:151)
04-17 12:16:50.856: E/Registrar(17158):     at org.apache.xmlrpc.client.XmlRpcHttpTransport.sendRequest(XmlRpcHttpTransport.java:143)
04-17 12:16:50.856: E/Registrar(17158):     at org.apache.xmlrpc.client.XmlRpcClientWorker$1.run(XmlRpcClientWorker.java:80)
04-17 12:16:50.856: E/Registrar(17158):     ... 1 more
04-17 12:16:50.866: I/DefaultPublisher(17158): Publisher unregistration failed: Publisher<PublisherDefinition<PublisherIdentifier<NodeSlaveIdentifier</Ant_Sender, http://192.168.13.111:43461>, TopicIdentifier</ANT>>, Topic<TopicIdentifier</ANT>, TopicDescription<ant_msgs/sdm,c5bc5cc934c24b6f16ba7e243086fdbb>>>>

Originally posted by rosdai on ROS Answers with karma: 61 on 2012-04-16
Post score: 1

Original comments
Comment by damonkohler on 2012-04-16:
Master connections are not maintained. The go up and down as necessary. What exactly do you want to report to the user? Do you want to ping the master to see if it's alive?
Comment by rosdai on 2012-04-17:
ping master could also be an idea thx for that! how can i do it?
i wanted to catch the error above and make a toast to the user. but i don't know where to catch this error.

A:

Perhaps you're looking for the PublisherListener API. See:
http://docs.rosjava.googlecode.com/hg/rosjava_core/html/javadoc/org/ros/node/topic/Publisher.html#addListener(org.ros.node.topic.PublisherListener)
http://docs.rosjava.googlecode.com/hg/rosjava_core/html/javadoc/org/ros/internal/node/RegistrantListener.html#onMasterRegistrationFailure(T)
There is an example provided in the documentation here:
http://docs.rosjava.googlecode.com/hg/rosjava_core/html/advanced.html

Originally posted by damonkohler with karma: 3838 on 2012-04-18
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by rosdai on 2012-04-19:
thx! i think the second one is what I'm looking for. any idea where i should implement it? in my nodemain?
Comment by damonkohler on 2012-04-19:
That's a good place, yes. Wherever you call newPublisher().
Comment by rosdai on 2012-04-19:
thank you Damon  Kohler. just another stupic question, what should the parameter be? somehow i can't figure out what type my registrant is. also shall i instantiate a new registrantlistener or there's any method to create a new one (like messagefactory)
Comment by damonkohler on 2012-04-22:
See the example I linked to above. I just pushed it, so it may take a few minutes to show up.
Comment by rosdai on 2012-04-24:
this is really helpful. thx a lot!
Comment by autonomy on 2016-10-21:
Hi, dead link in your answer, should be https://github.com/rosjava/rosjava_core/blob/master/docs/src/main/sphinx/advanced.rst
Comment by Tav_PG on 2019-09-11:
All the above links are now dead.  Does anyone know where they have moved to?

