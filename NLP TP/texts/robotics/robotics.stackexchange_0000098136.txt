Q:

PointCloud2 visualisation in rviz2

EDIT:
Apparently the problem is not about visualisation or rviz. I tried to implement a minimal subscriber that receives point cloud messages and just print a notification and it doesn't work. The callback is never called. However, if I use ros2 echo I can subscribe and receive messages. I can confirm that the nodes are connected in the graph, so it is not a topic name issue.

Am I missing something?
END EDIT
Hi all,
I am finally migrating from ROS1 to ROS2 and, currently, I am trying to implement nodes to process depth images and point clouds.
I have a node that reads depth images from a folder and publishes them as messages paired with the corresponding camera calibration message. These depth messages are feed to depth_image_proc::PointCloudXyzNode, which correctly publish them as point clouds.
This is the output I get from echoing the topic:
header:
  stamp:
    sec: 1611675769
    nanosec: 545850714
  frame_id: camera_depth_optical_frame
height: 480
width: 640
fields: '<sequence type: sensor_msgs/msg/PointField, length: 3>'
is_bigendian: false
point_step: 16
row_step: 10240
data: '<sequence type: uint8, length: 4915200>'
is_dense: false

From here the message seems fine and well-formed. However, when I try to see in rviz2 I get nothing. At first I thought it was a problem with tf, so I tried to publish a dummy transformation between map and camera_depth_optical_frame, but nothing appears.
This is what I get in rviz2:

No matter what it keeps saying: "Showing [0] points from [0] messages"
Any idea of what could be the problem?

Originally posted by g.bardaro on ROS Answers with karma: 110 on 2021-01-26
Post score: 0

A:

To expand on the solution provided in the previous answer.
depth_image_proc::PointCloudXyzNode publisher has a "sensor data" QoS profile, which means it has a "best effort" reliability policy. This policy is incompatible with the default QoS profile that uses "reliable" as its reliability policy.
ros2 topic echo was still working because it defaults to "sensor data" as a QoS profile when no profile is provided.
To whoever may run in this same issue, you can check the profile of every publisher and subscriber on a topic by using ros2 topic info -v [topic_name].
Maybe a warning of some sort should be included somewhere to notify if two nodes are using incompatible QoS profiles?

Originally posted by g.bardaro with karma: 110 on 2021-01-27
This answer was ACCEPTED on the original site
Post score: 1

