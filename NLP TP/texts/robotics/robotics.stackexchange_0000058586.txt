Q:

How to export header and library build flags for non-catkin projects?

For some of our in-house ROS nodes, I want to link against some of our proprietary headers and libraries, none of which are built using catkin or cmake. What I would like to do is create a ROS package that acts as a wrapper, so that all my other ROS packages can just list the wrapper package as a dependency, and all the include and library C++ flags that point to our proprietary software are automatically included. What's the most efficient way to do that?

Originally posted by Tom Moore on ROS Answers with karma: 13689 on 2014-04-08
Post score: 2

A:

The easiest way to provide custom CMake logic with a catkin package is using an extras file:
http://docs.ros.org/api/catkin/html/dev_guide/generated_cmake_api.html#catkin_package
This allows you to specify a cmake file for catkin to include(...) anytime that package is find_package'ed.
Related:
http://answers.ros.org/question/93266/how-to-export-non-standard-include-directories-in-catkin/

Originally posted by William with karma: 17335 on 2014-04-08
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Tom Moore on 2014-04-08:
Great, thank you.

