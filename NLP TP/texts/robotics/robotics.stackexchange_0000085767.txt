Q:

roscpp message_filters Synchronizer.registerCallback problem

Hi,
For the example of message filter in this example , I  tried to register callback from a class member function as in the following code:
#include <message_filters/subscriber.h>
#include <message_filters/synchronizer.h>
#include <message_filters/sync_policies/approximate_time.h>
#include <sensor_msgs/Image.h>

using namespace sensor_msgs;
using namespace message_filters;
  
typedef sync_policies::ApproximateTime<Image, Image> MySyncPolicy;

void callback(const ImageConstPtr& image1, const ImageConstPtr& image2)
{
  // Solve all of perception here...
}
class A {
  public:
    void my_callback(const ImageConstPtr& image1, const ImageConstPtr& image2) 
    {
    }

    void init(const Synchronizer<MySyncPolicy>& sync) {
       //Fail to compile 
       sync.registerCallback(boost::bind(&A::my_callback, this, _1, _2));
    }
};

int main(int argc, char** argv)
{
   ros::init(argc, argv, "vision_node");

   ros::NodeHandle nh;
   message_filters::Subscriber<Image> image1_sub(nh, "image1", 1);
   message_filters::Subscriber<Image> image2_sub(nh, "image2", 1);

   // ApproximateTime takes a queue size as its constructor argument, hence MySyncPolicy(10)
   Synchronizer<MySyncPolicy> sync(MySyncPolicy(10), image1_sub, image2_sub);
   sync.registerCallback(boost::bind(&callback, _1, _2));
   A a;
  // this is OK
  sync.registerCallback(boost::bind(&A::my_callback, &a, _1, _2));

  // but this fails
  a.init(sync);
  ros::spin();

  return 0;
}

I could call registerCallback of the A class method in the main sync.registerCallback(boost::bind(&A::my_callback, &a, _1, _2));.  But when I made the call in the init of the class definition it failed to compiled with the following errors:

In member function ‘void A::init(const message_filters::Synchronizer >, sensor_msgs::Image_ > > >&)’:
/home/mango/workspace/cyngn_ros/src/lev-ros/lev_localization/src/message_test.cpp:26:69: error: no matching function for call to ‘message_filters::Synchronizer >, sensor_msgs::Image_ > > >::registerCallback(boost::_bi::bind_t > >&, const boost::shared_ptr > >&>, boost::_bi::list3, boost::arg, boost::arg > >) const’
sync.registerCallback(boost::bind(&A::my_callback, this, _1, _2));
/opt/ros/kinetic/include/message_filters/synchronizer.h:302:14: note: candidate: message_filters::Connection message_filters::Synchronizer::registerCallback(C&) [with C = boost::_bi::bind_t > >&, const boost::shared_ptr > >&>, boost::_bi::list3, boost::arg, boost::arg > >; Policy = message_filters::sync_policies::ApproximateTime >, sensor_msgs::Image_ > >] 
   Connection registerCallback(C& callback)
/opt/ros/kinetic/include/message_filters/synchronizer.h:302:14: note:   conversion of argument 1 would be ill-formed:
/home/mango/workspace/cyngn_ros/src/lev-ros/lev_localization/src/message_test.cpp:26:38: error: invalid initialization of non-const reference of type ‘boost::_bi::bind_t > >&, const boost::shared_ptr > >&>, boost::_bi::list3, boost::arg, boost::arg > >&’ from an rvalue of type ‘boost::_bi::bind_t > >&, const boost::shared_ptr > >&>, boost::_bi::list3, boost::arg, boost::arg > >’
     sync.registerCallback(boost::bind(&A::my_callback, this, _1, _2));
/opt/ros/kinetic/include/message_filters/synchronizer.h:308:14: note: candidate: message_filters::Connection message_filters::Synchronizer::registerCallback(const C&) [with C = boost::_bi::bind_t > >&, const boost::shared_ptr > >&>, boost::_bi::list3, boost::arg, boost::arg > >; Policy = message_filters::sync_policies::ApproximateTime >, sensor_msgs::Image_ > >] 
   Connection registerCallback(const C& callback)
              ^
/opt/ros/kinetic/include/message_filters/synchronizer.h:308:14: note:   passing ‘const message_filters::Synchronizer >, sensor_msgs::Image_ > > >*’ as ‘this’ argument discards qualifiers
/opt/ros/kinetic/include/message_filters/synchronizer.h:314:14: note: candidate: template message_filters::Connection message_filters::Synchronizer::registerCallback(const C&, T*) [with C = C; T = T; Policy = message_filters::sync_policies::ApproximateTime >, sensor_msgs::Image_ > >]
   Connection registerCallback(const C& callback, T* t)
/opt/ros/kinetic/include/message_filters/synchronizer.h:314:14: note:   template argument deduction/substitution failed:
/home/mango/workspace/cyngn_ros/src/lev-ros/lev_localization/src/message_test.cpp:26:69: note:   candidate expects 2 arguments, 1 provided
sync.registerCallback(boost::bind(&A::my_callback, this, _1, _2));
In file included from /home/mango/workspace/cyngn_ros/src/lev-ros/lev_localization/src/message_test.cpp:2:0:
/opt/ros/kinetic/include/message_filters/synchronizer.h:320:14: note: candidate: template<class C, class T> message_filters::Connection message_filters::Synchronizer::registerCallback(C&, T*) [with C = C; T = T; Policy = message_filters::sync_policies::ApproximateTime<sensor_msgs::Image_std::allocator<void >, sensor_msgs::Image_std::allocator<void > >]
Connection registerCallback(C& callback, T* t)
^
/opt/ros/kinetic/include/message_filters/synchronizer.h:320:14: note:   template argument deduction/substitution failed:
/home/mango/workspace/cyngn_ros/src/lev-ros/lev_localization/src/message_test.cpp:26:69: note:   candidate expects 2 arguments, 1 provided
sync.registerCallback(boost::bind(&A::my_callback, this, _1, _2));

Sorry for the long compilation error messages. Thanks for any help.

Originally posted by jlin on ROS Answers with karma: 63 on 2018-03-09
Post score: 0

A:

Remove the const in void init(const Synchronizer<MySyncPolicy>& sync) (make it void init(Synchronizer<MySyncPolicy>& sync)) and it compiles fine.
The problem is that registerCallback is a non-const member function, so you can't call it on the currently const sync parameter.

Originally posted by Maarten with karma: 206 on 2018-03-10
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by jlin on 2018-03-10:
Thank you!

