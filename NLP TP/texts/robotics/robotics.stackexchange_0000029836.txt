Q:

Face Recognition with Kinect

Update: Patrick Goebel has posted a great new package and tutorial for robust face detection. I have posted an answer to this question below (See Pi Robot example of robust face detection with Kinect:) if you find Patrick's work helpful, please vote up the answer to move it to the top of this question. (Scott)
I am moving this thread to the Answers site. It was started on ros-kinect before Answers was released, so trying to be a good ROS citizen. :)
Hi Radu I am able to pretty easily do face detection via the kinect using the built in recognition python package that comes inside the vision_opencv stack. For those on this thread here are the steps... roscd to openni_camera go into the launch directory, edit the openni_kinect.launch file and add the following line to remap the default video output topic from kinect to the topic that the face recognition listens node listens on.
Run the face recognition node with.. rosrun opencv_tests rosfacedetect.py (located in vision_opencv stack)
If performance lags a bit, use rosrun dynamic_reconfigure reconfigure_gui to adjust settings (I tend to use the QVGA options)
For any newbies reading this, you can use rosrun rviz rviz and add a pointcloud2 option that listens on /camera/depth/points2 topic to see the point cloud.
OK....So where does this get us? I now have the face found and boxes to a region of interest and can visualize it. I can capture and see the point cloud data of the larger scene. What I want to do to feed this into your recognition flow Radu is to then use the detected face ROI to crop the point cloud down to just the points that represent the face.
...and that is where I am stuck... Any tips from anyone on how to use ROI info to crop a point cloud image on the fly would be greatly appreciated.
And for those that are interested in facial recognition, hopefully this helps you get started.
Best Regards, -Scott

Originally posted by Scott on ROS Answers with karma: 693 on 2011-02-24
Post score: 11

Original comments
Comment by Asomerville on 2011-05-11:
Is this a question?
Comment by Tully on 2011-02-24:
FYI: you can edit an existing answer instead of reposting.  I'm going to delete your duplicate question with they typo in the name.

A:

Scott, I've been keeping an eye on your thread on ros-users.
I've written a small package "face_builder" to detect faces using OpenCV and return a clustered point cloud of the face. It works as a stand-alone node, but it should also work as a library. It publishes clustered faces on the "faces" topic (type: sensor_msgs/PointCloud2) and publishes a "detected_faces" image for debugging.
It builds against trunk of PCL right now and ROS Diamondback. If you need to patch it to get it to build, let me know.
Not having a great place to put it, I uploaded it to the "PR" wiki:
http://pr.willowgarage.com/wiki/Useful_general_references
Look for "face_builder.tar"
Let me know what you find with face recognition.

Originally posted by watts with karma: 584 on 2011-02-27
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by Scott on 2011-05-17:
Hi Murph, glad to see your post. I have been off in rgbdslam/kinect/octomap land and my progress there has hit a bit of a wall. So in the interim, I am coming back to put in some more cycles on this as well. Please post your progress and tips and I will do the same as I try to follow after you.
Comment by Murph on 2011-04-07:
Has any more work been done on your face_builder? I'm going to hack on it some.

