Q:

camera_calibration: checkerboard target not found

Hello everyone!
I am having a really hard time calibrating my Videre Design stereo cameras within ROS. My driver node is publishing the appropriate CameraInfo and Image messages, but the calibration tool is never able to find the checkerboard pattern.
I have tried better illumination and even printed targets of different sizes. What could I be doing wrong? Is there any chance my driver node is not behaving as expected?
I tried to use the videre_stereo_cam package initially, but I was never able to get it to work. So I simply wrote a wrapper node for the SVS (Small Vision System, by SRI International) libraries we used prior to ROS and, as far my judgement goes, it is working perfectly fine.
Thanks for your attention!
EDIT: Turns out the problem was with the definition of the size parameter of camera_calibrator. OpenCV expects the number of inner corners, not the number of squares. That was quite misleading and I was only able to figure that out after reading this.
I suggest the documentation and/or tutorials are more explicit about that. OpenCV documentation is quite clear about [how cvFindChessboardCorners works](http://docs.opencv.org/modules/calib3d/doc/camera_calibration_and_3d_reconstruction.html?highlight=cvfindchessboard#int cvFindChessboardCorners(const void* image, CvSize pattern_size, CvPoint2D32f* corners, int* corner_count, int flags)), but the user of camera_calibration won't know that function is used until they open the source code.

Originally posted by georgebrindeiro on ROS Answers with karma: 1264 on 2012-08-15
Post score: 1

Original comments
Comment by Dan Lazewatsky on 2012-08-15:
Could you post some pictures from your camera in which the checkerboard can't be detected?
Comment by georgebrindeiro on 2012-08-15:
Sure thing! I will post them here as soon as I get back to the lab tommorow.

A:

Turns out the problem was with the definition of the size parameter of camera_calibrator. OpenCV expects the number of inner corners, not the number of squares. That was quite misleading and I was only able to figure that out after reading this.
I suggest the documentation and/or tutorials are more explicit about that. OpenCV documentation is quite clear about [how cvFindChessboardCorners works](http://docs.opencv.org/modules/calib3d/doc/camera_calibration_and_3d_reconstruction.html?highlight=cvfindchessboard#int cvFindChessboardCorners(const void* image, CvSize pattern_size, CvPoint2D32f* corners, int* corner_count, int flags)), but the user of camera_calibration won't know that function is used until they open the source code.

Originally posted by georgebrindeiro with karma: 1264 on 2012-09-05
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by rukie on 2019-09-19:
I also spent today struggling with this. Its rather exact too. A 9x9 checkerboard would require a 8x8, searching for a smaller 8x7 would fail.

