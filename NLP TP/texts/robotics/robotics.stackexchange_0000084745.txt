Q:

Package Manifest 2 -  attribute version does not work

I am currently looking into versioning my catkin packages and making sure that I am using the correct versions. I am using Package Manifest Version 2 and according to REP-140, I should be able to specify the versions of my dependencies.
E.g. I have a package A (version 1.1) and a package B that depends on package A. I now would like to make sure, that version 1.1 of package A is used when building package B. My package.xml's will contain the following (for the sake of simplicity, I only include the relevant parts):
package A package.xml
<?xml version="1.0"?>
  <package format='2'>
  <name>A</name>
  <version>1.1.0</version>
  ...
</package>

package B package.xml
<?xml version="1.0"?>
  <package format='2'>
  <name>B</name>
  <version>1.0.0</version>
  <depend version_eq="1.1.0">A</depend>
  ...
</package>

So far so good, everything compiles fine. However, if I change that depend tag in package B package.xml above, e.g. to
<depend version_eq="2.0.0">A</depend>

..it still compiles fine! Meaning that it just does not care about the version attribute.
What am I doing wrong?

Edit: I just noticed that a warning is printed:
catkin_package() version mismatch: the package.xml of 'B' build_depends on 'A = 1.0.0', but 'A 0.9.0' found

Is this the expected behaviour or should the build fail?

Originally posted by takahashi on ROS Answers with karma: 185 on 2018-01-17
Post score: 0

Original comments
Comment by gvdhoorn on 2018-01-17:
Btw: the depend tag works just fine, it just doesn't do what you are expecting it to do. But that is something else :)

A:

I just noticed that a warning is printed:

catkin_package() version mismatch: the package.xml of 'B' build_depends on 'A = 1.0.0', but 'A 0.9.0' found

Is this the expected behaviour or should the build fail?

Yes (that is the expected behaviour right now), see #q254811 (and ros-infrastructure/rosdep#325).
As far as I know what I write there is still the current situation.
Enforcing versions of dependencies at this point is only possible in your CMakeLists.txt.

Originally posted by gvdhoorn with karma: 86574 on 2018-01-17
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by takahashi on 2018-01-17:
I found out that in the catkin_package.cmake script only a WARNING is printed upon a version mismatch, so this behaviour is expected. I think specifying the dependency versions in the package.xml rather than the CMakeLists.txt find_package() is more elegant, but the build should fail upon a mismatch
Comment by gvdhoorn on 2018-01-17:
The build will fail, if you do a find_package(<DEPENDENCY> X.Y.Z EXACT ..) in your CMakeLists.txt.
I agree that it's less than elegant that you'd have to duplicate that, but the manifest is used for different things (see #q217475).
Comment by takahashi on 2018-01-17:
First of all, thanks a lot for the quick&clarifying answers! But if the manifest is used for different things, why is the version attribute in there at all? I see that you are a contributor to ROS, would it make sense to request this feature (build failure) in the ros/catkin repository?
Comment by gvdhoorn on 2018-01-17:
I'm a ROS Industrial contributor, that is slightly different.
If you want to address this shortcoming in rosdep, then I guess ros-infrastructure/rosdep#325 would be the starting point.
Comment by gvdhoorn on 2018-01-17:
re: why are version attributes there at all: I believe that is covered by #q217475?

