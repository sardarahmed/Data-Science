Q:

Use of diff_drive_controller to simulate a differential drive in Gazebo

Did anybody manage to use diff_drive_controller in to simulate a differential drive in Gazebo**?
Theoretically should work if the  gazebo_ros_control (libgazebo_ros_control.so) plug in is used in Gazebo but there is a note that the hardware_interface::VelocityJointInterface is not fully implemented.

Originally posted by Toma Tacescu on ROS Answers with karma: 36 on 2017-12-06
Post score: 1

Original comments
Comment by Humpelstilzchen on 2017-12-06:
Works for me, do you have any specific question?
Comment by Toma Tacescu on 2017-12-06:
It is not necessary to implement RobotHWSim, it works using just the Gazebo plugin, correct? Do you know  of any robot sample that have implemented this configuration?
Comment by Humpelstilzchen on 2017-12-06:
libgazebo_ros_control with DefaultRobotHWSim should do.
Comment by Humpelstilzchen on 2017-12-06:
As an example I would only have mine atm: launch-, urdf- file.
Comment by Humpelstilzchen on 2017-12-06:
Husky might use it.
Comment by Toma Tacescu on 2017-12-06:
Thank you! I really appreciate your feedback!
Comment by Toma Tacescu on 2017-12-06:
Do you also use the diff_drive_controller on the real robot? I was looking at the links from your repository and could not find the diff_drive_controller implemented on the hardware robot.
Comment by Humpelstilzchen on 2017-12-06:
No, only simulation, "real" odometry calculation is done on a separate real time cpu
Comment by Toma Tacescu on 2017-12-09:
Did you encounter this error: "Controller Spawner couldn't find the expected controller_manager ROS interface". I am getting it when I run my launch file your "gazebo.launch"
Comment by Humpelstilzchen on 2017-12-09:
You should open a new question for this with your launch files

A:

@Humpelstilzchen thank you for your help! It works and your suggestions helped a lot!
Here are some of the key steps that may help others:

in the robot model need to use  
in the robot model need SimpleTransmission reference
in the robot model inertia values exported from CAD do not always work
orientation of the robot is not always exported correctly from CAD (X axis forward)
need to setup diff_drive_controller.yaml parameters (these worked for me: http://wiki.ros.org/diff_drive_controller)
need to run the controller_spawner node: 
I had to be very specific with the name space

Originally posted by Toma Tacescu with karma: 36 on 2017-12-11
This answer was ACCEPTED on the original site
Post score: 0

