Q:

Easiest way for non-ROS program to talk to a ROS node

I have a totally ROS-independent application (the "app", say written in python, and launched from the command line) running on the same computer (i.e. the linux instance, with direct access to the same disk). The app has no ROS includes or dependencies. Note that because of this I don't have to rely on http per se.
What is the best/simplest way to have that app to talk to a ROS node? Performance is not an issue as the amount of data going back and forth would be very small. To be specific, the data could be represented in JSON file of a few hundred bytes being sent and received every few seconds.
For example, one way is to read and write a shared file which is very general and generic but not so elegant.
Is it possible to read and write ROS parameters from outside ROS?
What are better ideas?

Originally posted by pitosalas on ROS Answers with karma: 628 on 2017-08-03
Post score: 0

A:

You don't give us any info on what you'd like to communicate, so this is hard to answer, but: there is a similar / duplicate question from just a few hours ago. See #q267939.

But this -- and #q267939 -- are essentially duplicates of many others. Please try to use the search or Google (add site:answers.ros.org to your query).

Edit:

To be specific, the data could be represented in JSON file of a few hundred bytes being sent and received every few seconds.

That is exactly what the tools (rosbridge_suite) in the answer to #q267939 actually do: provide you with a JSON bridge to a ROS nodegraph.

I have done a ton of googling

this is probably google and my search bubble with them, but the first result for me when searching for ros json is rosbridge_suite.

Edit2: another option might be rosnodejs.

and another one rosserial, in particular rosserial_embeddedlinux. It wasn't meant for this, but could be an option. Just run client and server on the same machine.

Originally posted by gvdhoorn with karma: 86574 on 2017-08-03
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by pitosalas on 2017-08-03:
Actually those are not essentially duplicates as I am not talking about networking. I have done a ton of googling and looking at libraries and talking to developers and the result is still open. I won't go through the results of all my research here (no room) but I will update my question.
Comment by gvdhoorn on 2017-08-03:
You're asking how to exchange data with a ROS application. ROS is networked, so any interchange infrastructure is going to use networking. It's the most natural way to do it.
Comment by pitosalas on 2017-08-03:
@gvdhoorn I see that, but my needs are so lightweight and all the libraries I've seen seem to be pretty heavy weight so I am not quite satisfied with the options I have so far, which is why I am consulting the community!
Comment by gvdhoorn on 2017-08-03:\

heavy weight

on the ROS side or the non-ROS side? Working with JSON should not need too many dependencies.
And rosbridge_suite is basically two nodes?
Comment by pitosalas on 2017-08-03:
on the ROS side, and not just in terms of my programming but on the load it would put on the on board processor which is a Pi for now. I realize that it doesn't have to be on the onboard, but for design reasons I prefer that.
Comment by gvdhoorn on 2017-08-03:
Have you tried rosbridge_suite? I cannot imagine that it is resource intensive for just a few hundred bytes of json each second.

