Q:

RGBDslam error in Fuerte and electric

After trying any paths I could find, I seem to have run up against a wall I can't get past. I have tried rgbdslam in fuerte and electric, on the same computer but in different /opt/ros/ directories, but with similar results either way.
When I try rosmake rgbdslam_freiburg in fuerte, I get an "undefined reference to g2o::globalStats" message multiple times.
  graph_manager.cpp:(.text._ZN3g2o11BlockSolverINS_17BlockSolverTraitsILi6ELi3EEEE16computeMarginalsERNS_17SparseBlockMatrixIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEERKSt6vectorISt4pairIiiESaISC_EE[g2o::BlockSolver<g2o::BlockSolverTraits<6, 3> >::computeMarginals(g2o::SparseBlockMatrix<Eigen::Matrix<double, -1, -1, 0, -1, -1> >&, std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > const&)]+0x57): undefined reference to `g2o::globalStats'
  CMakeFiles/rgbdslam.dir/src/graph_manager.o: In function `g2o::BlockSolver<g2o::BlockSolverTraits<6, 3> >::computeMarginals()':
  graph_manager.cpp:(.text._ZN3g2o11BlockSolverINS_17BlockSolverTraitsILi6ELi3EEEE16computeMarginalsEv[g2o::BlockSolver<g2o::BlockSolverTraits<6, 3> >::computeMarginals()]+0xe5): undefined reference to `g2o::globalStats'
  CMakeFiles/rgbdslam.dir/src/graph_manager.o: In function `g2o::LinearSolverCholmod<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::computeSymbolicDecomposition(g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&)':
  graph_manager.cpp:(.text._ZN3g2o19LinearSolverCholmodIN5Eigen6MatrixIdLi6ELi6ELi0ELi6ELi6EEEE28computeSymbolicDecompositionERKNS_17SparseBlockMatrixIS3_EE[g2o::LinearSolverCholmod<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::computeSymbolicDecomposition(g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&)]+0x73): undefined reference to `g2o::globalStats'
  CMakeFiles/rgbdslam.dir/src/graph_manager.o: In function `g2o::LinearSolverCholmod<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solvePattern(g2o::SparseBlockMatrix<Eigen::Matrix<double, -1, -1, 0, -1, -1> >&, std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > const&, g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&)':
  graph_manager.cpp:(.text._ZN3g2o19LinearSolverCholmodIN5Eigen6MatrixIdLi6ELi6ELi0ELi6ELi6EEEE12solvePatternERNS_17SparseBlockMatrixINS2_IdLin1ELin1ELi0ELin1ELin1EEEEERKSt6vectorISt4pairIiiESaISB_EERKNS5_IS3_EE[g2o::LinearSolverCholmod<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solvePattern(g2o::SparseBlockMatrix<Eigen::Matrix<double, -1, -1, 0, -1, -1> >&, std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > const&, g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&)]+0x19d): undefined reference to `g2o::globalStats'
  CMakeFiles/rgbdslam.dir/src/graph_manager.o: In function `g2o::LinearSolverCholmod<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solveBlocks(double**&, g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&)':
  graph_manager.cpp:(.text._ZN3g2o19LinearSolverCholmodIN5Eigen6MatrixIdLi6ELi6ELi0ELi6ELi6EEEE11solveBlocksERPPdRKNS_17SparseBlockMatrixIS3_EE[g2o::LinearSolverCholmod<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solveBlocks(double**&, g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&)]+0x183): undefined reference to `g2o::globalStats'
  CMakeFiles/rgbdslam.dir/src/graph_manager.o:graph_manager.cpp:(.text._ZN3g2o19LinearSolverCholmodIN5Eigen6MatrixIdLi6ELi6ELi0ELi6ELi6EEEE5solveERKNS_17SparseBlockMatrixIS3_EEPdS9_[g2o::LinearSolverCholmod<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solve(g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&, double*, double*)]+0x112): more undefined references to `g2o::globalStats' follow
  CMakeFiles/rgbdslam.dir/src/graph_manager.o: In function `g2o::LinearSolverCholmod<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solve(g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&, double*, double*)':
  graph_manager.cpp:(.text._ZN3g2o19LinearSolverCholmodIN5Eigen6MatrixIdLi6ELi6ELi0ELi6ELi6EEEE5solveERKNS_17SparseBlockMatrixIS3_EEPdS9_[g2o::LinearSolverCholmod<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solve(g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&, double*, double*)]+0x220): undefined reference to `g2o::writeCCSMatrix(char const*, int, int, int const*, int const*, double const*, bool)'
  CMakeFiles/rgbdslam.dir/src/graph_manager.o: In function `g2o::LinearSolverCSparse<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::computeSymbolicDecomposition(g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&)':
  graph_manager.cpp:(.text._ZN3g2o19LinearSolverCSparseIN5Eigen6MatrixIdLi6ELi6ELi0ELi6ELi6EEEE28computeSymbolicDecompositionERKNS_17SparseBlockMatrixIS3_EE[g2o::LinearSolverCSparse<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::computeSymbolicDecomposition(g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&)]+0x4d): undefined reference to `g2o::globalStats'
  CMakeFiles/rgbdslam.dir/src/graph_manager.o: In function `g2o::LinearSolverCSparse<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solvePattern(g2o::SparseBlockMatrix<Eigen::Matrix<double, -1, -1, 0, -1, -1> >&, std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > const&, g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&)':
  graph_manager.cpp:(.text._ZN3g2o19LinearSolverCSparseIN5Eigen6MatrixIdLi6ELi6ELi0ELi6ELi6EEEE12solvePatternERNS_17SparseBlockMatrixINS2_IdLin1ELin1ELi0ELin1ELin1EEEEERKSt6vectorISt4pairIiiESaISB_EERKNS5_IS3_EE[g2o::LinearSolverCSparse<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solvePattern(g2o::SparseBlockMatrix<Eigen::Matrix<double, -1, -1, 0, -1, -1> >&, std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > const&, g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&)]+0x62): undefined reference to `g2o::cs_chol_workspace(cs_di_sparse const*, cs_di_symbolic const*, int*, double*)'
  graph_manager.cpp:(.text._ZN3g2o19LinearSolverCSparseIN5Eigen6MatrixIdLi6ELi6ELi0ELi6ELi6EEEE12solvePatternERNS_17SparseBlockMatrixINS2_IdLin1ELin1ELi0ELin1ELin1EEEEERKSt6vectorISt4pairIiiESaISB_EERKNS5_IS3_EE[g2o::LinearSolverCSparse<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solvePattern(g2o::SparseBlockMatrix<Eigen::Matrix<double, -1, -1, 0, -1, -1> >&, std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > const&, g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&)]+0xe7): undefined reference to `g2o::globalStats'
  CMakeFiles/rgbdslam.dir/src/graph_manager.o: In function `g2o::LinearSolverCSparse<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solveBlocks(double**&, g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&)':
  graph_manager.cpp:(.text._ZN3g2o19LinearSolverCSparseIN5Eigen6MatrixIdLi6ELi6ELi0ELi6ELi6EEEE11solveBlocksERPPdRKNS_17SparseBlockMatrixIS3_EE[g2o::LinearSolverCSparse<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solveBlocks(double**&, g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&)]+0xee): undefined reference to `g2o::cs_chol_workspace(cs_di_sparse const*, cs_di_symbolic const*, int*, double*)'
  graph_manager.cpp:(.text._ZN3g2o19LinearSolverCSparseIN5Eigen6MatrixIdLi6ELi6ELi0ELi6ELi6EEEE11solveBlocksERPPdRKNS_17SparseBlockMatrixIS3_EE[g2o::LinearSolverCSparse<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solveBlocks(double**&, g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&)]+0x16b): undefined reference to `g2o::globalStats'
  CMakeFiles/rgbdslam.dir/src/graph_manager.o: In function `g2o::LinearSolverCSparse<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solve(g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&, double*, double*)':
  graph_manager.cpp:(.text._ZN3g2o19LinearSolverCSparseIN5Eigen6MatrixIdLi6ELi6ELi0ELi6ELi6EEEE5solveERKNS_17SparseBlockMatrixIS3_EEPdS9_[g2o::LinearSolverCSparse<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solve(g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&, double*, double*)]+0x124): undefined reference to `g2o::cs_cholsolsymb(cs_di_sparse const*, double*, cs_di_symbolic const*, double*, int*)'
  graph_manager.cpp:(.text._ZN3g2o19LinearSolverCSparseIN5Eigen6MatrixIdLi6ELi6ELi0ELi6ELi6EEEE5solveERKNS_17SparseBlockMatrixIS3_EEPdS9_[g2o::LinearSolverCSparse<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solve(g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&, double*, double*)]+0x132): undefined reference to `g2o::globalStats'
  graph_manager.cpp:(.text._ZN3g2o19LinearSolverCSparseIN5Eigen6MatrixIdLi6ELi6ELi0ELi6ELi6EEEE5solveERKNS_17SparseBlockMatrixIS3_EEPdS9_[g2o::LinearSolverCSparse<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solve(g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&, double*, double*)]+0x197): undefined reference to `g2o::globalStats'
  graph_manager.cpp:(.text._ZN3g2o19LinearSolverCSparseIN5Eigen6MatrixIdLi6ELi6ELi0ELi6ELi6EEEE5solveERKNS_17SparseBlockMatrixIS3_EEPdS9_[g2o::LinearSolverCSparse<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solve(g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&, double*, double*)]+0x21d): undefined reference to `g2o::writeCs2Octave(char const*, cs_di_sparse const*, bool)'
  CMakeFiles/rgbdslam.dir/src/graph_manager.o: In function `g2o::BlockSolver<g2o::BlockSolverTraits<6, 3> >::solve()':
  graph_manager.cpp:(.text._ZN3g2o11BlockSolverINS_17BlockSolverTraitsILi6ELi3EEEE5solveEv[g2o::BlockSolver<g2o::BlockSolverTraits<6, 3> >::solve()]+0x6c): undefined reference to `g2o::globalStats'
  graph_manager.cpp:(.text._ZN3g2o11BlockSolverINS_17BlockSolverTraitsILi6ELi3EEEE5solveEv[g2o::BlockSolver<g2o::BlockSolverTraits<6, 3> >::solve()]+0x88): undefined reference to `g2o::globalStats'
  graph_manager.cpp:(.text._ZN3g2o11BlockSolverINS_17BlockSolverTraitsILi6ELi3EEEE5solveEv[g2o::BlockSolver<g2o::BlockSolverTraits<6, 3> >::solve()]+0x10f3): undefined reference to `g2o::globalStats'
  graph_manager.cpp:(.text._ZN3g2o11BlockSolverINS_17BlockSolverTraitsILi6ELi3EEEE5solveEv[g2o::BlockSolver<g2o::BlockSolverTraits<6, 3> >::solve()]+0x1176): undefined reference to `g2o::globalStats'
  graph_manager.cpp:(.text._ZN3g2o11BlockSolverINS_17BlockSolverTraitsILi6ELi3EEEE5solveEv[g2o::BlockSolver<g2o::BlockSolverTraits<6, 3> >::solve()]+0x1199): undefined reference to `g2o::globalStats'
  CMakeFiles/rgbdslam.dir/src/graph_manager.o:graph_manager.cpp:(.text._ZN3g2o15LinearSolverPCGIN5Eigen6MatrixIdLi6ELi6ELi0ELi6ELi6EEEE5solveERKNS_17SparseBlockMatrixIS3_EEPdS9_[g2o::LinearSolverPCG<Eigen::Matrix<double, 6, 6, 0, 6, 6> >::solve(g2o::SparseBlockMatrix<Eigen::Matrix<double, 6, 6, 0, 6, 6> > const&, double*, double*)]+0xc92): more undefined references to `g2o::globalStats' follow
  collect2: ld returned 1 exit status
  make[3]: *** [../bin/rgbdslam] Error 1

With Electric, I get a few warnings about file conflicts, which I don't think should stop the make process. The problem is that there are some "undefined reference to cv::..." errors.
  [ 38%] Built target gicp
  make[3]: Entering directory `/home/linux/Electric/sandbox/rgbdslam/build'
  make[3]: Leaving directory `/home/linux/Electric/sandbox/rgbdslam/build'
  make[3]: Entering directory `/home/linux/Electric/sandbox/rgbdslam/build'
  Linking CXX executable ../bin/rgbdslam
  /usr/bin/ld.bfd.real: warning: libopencv_imgproc.so.2.3, needed by /opt/ros/electric/stacks/vision_opencv/cv_bridge/lib/libcv_bridge.so, may conflict with libopencv_imgproc.so.2.4
  /usr/bin/ld.bfd.real: warning: libopencv_core.so.2.3, needed by /opt/ros/electric/stacks/vision_opencv/cv_bridge/lib/libcv_bridge.so, may conflict with libopencv_core.so.2.4
  CMakeFiles/rgbdslam.dir/src/misc.o: In function `createDescriptorExtractor(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':
  misc.cpp:(.text+0x205a): undefined reference to `cv::SIFT::DescriptorParams::DescriptorParams()'
  misc.cpp:(.text+0x2062): undefined reference to `cv::SIFT::CommonParams::CommonParams()'
  misc.cpp:(.text+0x2080): undefined reference to `cv::SiftDescriptorExtractor::SiftDescriptorExtractor(cv::SIFT::DescriptorParams const&, cv::SIFT::CommonParams const&)'
  misc.cpp:(.text+0x2116): undefined reference to `cv::SurfDescriptorExtractor::SurfDescriptorExtractor(int, int, bool, bool)'
  misc.cpp:(.text+0x21b6): undefined reference to `cv::SurfDescriptorExtractor::SurfDescriptorExtractor(int, int, bool, bool)'
  misc.cpp:(.text+0x2222): undefined reference to `cv::OrbDescriptorExtractor::OrbDescriptorExtractor(cv::ORB::CommonParams)'
  CMakeFiles/rgbdslam.dir/src/misc.o: In function `createDetector(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':
  misc.cpp:(.text+0x5bde): undefined reference to `cv::StarFeatureDetector::StarFeatureDetector(int, int, int, int, int)'
  misc.cpp:(.text+0x5c46): undefined reference to `cv::SiftFeatureDetector::SiftFeatureDetector(double, double, int, int, int, int)'
  misc.cpp:(.text+0x5f58): undefined reference to `cv::GoodFeaturesToTrackDetector::GoodFeaturesToTrackDetector(int, double, double, int, bool, double)'
  misc.cpp:(.text+0x5fca): undefined reference to `cv::MserFeatureDetector::MserFeatureDetector(int, int, int, double, double, int, double, double, int)'
  misc.cpp:(.text+0x609c): undefined reference to `cv::OrbFeatureDetector::OrbFeatureDetector(unsigned int, cv::ORB::CommonParams)'
  collect2: ld returned 1 exit status

My thought is that both errors are due to the compilation of the C++ code, and that perhaps my file structure is incorrect or these could be bugs in the packages. If anyone has seen something vaguely similar, with something related to undefined references, all pointers are appreciated.

Originally posted by autorover on ROS Answers with karma: 93 on 2012-12-15
Post score: 0

A:

Hello autorover,
I just wanted to share my experience, I don't know what I did was the right thing though.
On fuerte, after getting a bunch of g2o errors, I removed libg2o package. Downloaded the source and built g2o in the vslam stack.
https://code.ros.org/svn/ros-pkg/stacks/vslam/trunk/
Then I needed to delete the line
find_package(g2o REQUIRED)

in the cmakelists and change the dependence entry about g2o in the manisfest.xml as:
<rosdep name="libg2o"/>  ----> <depend package="g2o"/>

CMake and manifest files are in /rgbdslam_freiburg/rgbdslam

Again, I doubt that this is the right way of getting it to work, however I didn't question the method after seeing it working.
I have to tell that it explicitly states here not to use the g2o package instead of libg2o. But this is how I did, you might want to give it a try.

Originally posted by yigit with karma: 796 on 2012-12-16
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by autorover on 2012-12-17:
Thanks, I managed to get it working thanks to another comment and it's exactly what you said. The libg2o needed to be uninstalled and was probably causing issues with the other g2o package I had installed. We should get these fuerte instructions posted somewhere so others can bypass these issues.
Comment by K_Yousif on 2012-12-17:
what is the command for unistalling libg2o or g2o? thanks.
Comment by yigit on 2012-12-18:
libg2o is a linux package. you can remove it by the command apt-get remove libg2o. g2o is a ros package, you can delete the folder to remove g2o.
Comment by K_Yousif on 2012-12-18:
Thanks for your quick response, however when i type this command I get:
E: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)
E: Unable to lock the administration directory (/var/lib/dpkg/), are you root?
and I cannot delete or move any ros folders. What do you think?
Comment by yigit on 2012-12-18:
you need to call apt-get as root. Try this sudo apt-get remove libg2o. I am not saying you need to remove any package, I don't know enough about your situation. However, if you need to remove a folder on ubuntu, use this command "rm -rf path_of_the_folder"
Comment by tgaaly on 2012-12-18:
when you got rgbdslam working were you able to view the 3D point cloud reconstruction? I followed your instructions and got it running. The rgb and depth feeds are working. SURF features are detected & correspondences b/w them looks good. but when I select to process the frames no point cloud shows?
Comment by yigit on 2012-12-18:
I configured it once but don't remember exactly how. Do you know if the depth-registration has to be enabled or disabled?

