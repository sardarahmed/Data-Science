Q:

Tweak or customize cost around people on the costmap

Hello,
I want to tweak or customize the costmap my turtlebot generates such that it assigns higher costs to the cells ahead of a moving person, based on his direction of motion. That is, I want it to predict where the person will be in the next few seconds in order to more intelligently perform its path-planning.
I will be using the PCL People Detection Code to first of all detect and recognize that an 'object' is a person. I will be using the costmap_2d and gmapping packages for the costmap generation. So once I combine these two, I assume it's just a matter of detecting the direction of motion and then knowing which cells' costs to elevate.
Any thoughts on how to do this? How do I detect direction of motion? How do I track motion of ONLY 'people objects'? How do I customize and choose which cells to elevate costs?
Thanks.

Originally posted by oswinium on ROS Answers with karma: 105 on 2014-03-18
Post score: 5

A:

To ellaborate on what Austin said, I worked on precisely this problem.
In the people stack that Austin referenced, there is a laser-based people tracker. Their direction is based on tracking their motion from frame to frame.
Be sure to check out Layered Costmaps in the Hydro navigation package (http://wiki.ros.org/costmap_2d). There's a groovy fork in my repo available as well. https://github.com/DLu/navigation/tree/groovy_dev My implementation uses a Proxemics-based layer, the code for which can be found in the social_navigation_layers package in the people stack. https://github.com/DLu/people

Originally posted by David Lu with karma: 10932 on 2014-03-19
This answer was ACCEPTED on the original site
Post score: 8

Original comments
Comment by oswinium on 2014-03-19:
Thank you; I'll check those resources out and let you & Austin know whether I still have any questions or not :)
Comment by mateus03 on 2014-06-04:
Thank you! Those resources were just what I needed to understand how to do this.

