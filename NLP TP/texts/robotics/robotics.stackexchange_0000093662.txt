Q:

cmake error find_package cmake_modules

Some time in the last 24 hours (2019.10.27), the ROS apt repositories started publishing the following:

python-catkin-pkg-modules (0.4.14-1)
python-catkin-pkg (0.4.14-100)

Right around that time, fully all of my CMakeLists.txt started producing errors of the following form:
CMake Error at /home/luser/copy_catkin_ws/src/foobar/CMakeLists.txt:5 (find_package) Failed << robot_models:cmake [ Exited with code 1 ]
: By not providing "Findcmake_modules.cmake" in CMAKE_MODULE_PATH this project has asked CMake to find a package configuration file provided by "cmake_modules", but CMake did not find one.

Could not find a package configuration file provided by "cmake_modules" with any of the following names:

cmake_modulesConfig.cmake
cmake_modules-config.cmake

Add the installation prefix of "cmake_modules" to CMAKE_PREFIX_PATH or set "cmake_modules_DIR" to a directory containing one of the above files.  If "cmake_modules" provides a separate development package or SDK, be sure it has been installed.

-- Configuring incomplete, errors occurred!

I'm guessing it has something to do with the manner by which I'm invoking find_package(catkin) and/or find_package(cmake_modules). Here's what was working right up until yesterday:
cmake_minimum_required(VERSION 3.5)
project(foobar)
find_package(catkin REQUIRED)
find_package(cmake_modules REQUIRED)
catkin_package(
  LIBRARIES ${PROJECT_NAME}
  INCLUDE_DIRS inc
)
...

Here's what the associated package.xml looks like:
<?xml version="1.0"?>
<package format="2">
  <name>foobar</name>
  <version>1.1.0</version>
  <description>The FooBar Thinger</description>
  <author email="author@foobar.com">author person</author>
  <maintainer email="maintainer@foobar.com">maintainer person</maintainer>
  <license>GPL</license>
  <url type="website">http://foobar.com</url>
  <url type="repository">https://github.com/foobar/foobar</url>
  <build_depend>cmake_modules</build_depend>
  <buildtool_depend>catkin</buildtool_depend>
</package>

Anybody know what happened on 2019.10.26 regarding python-catkin-pkg-modules and python-catkin-pkg? I'm willing to believe I was laboring all along with broken CMakeLists.txt and/or package.xml, but I would like to understand what happened.

Originally posted by rubicks on ROS Answers with karma: 193 on 2019-10-27
Post score: 1

A:

Okay, this one is on me. Until recently, in my build environment, just after I ran rosdep against the package.xmls in my source space and just before I ran $ catkin config --install && catkin build, I did a # apt purge --yes sudo. This ~is~ was fine, so long as sudo was never an (eventual) build-time dependency. On 2019.10.26, that all changed and, for the first time, removing sudo from the set of installed packages caused ros-cmake-modules to be removed along with it. I've since stopped twiddling packages between the invocation of rosdep and the build proper.

Originally posted by rubicks with karma: 193 on 2019-11-05
This answer was ACCEPTED on the original site
Post score: 1

