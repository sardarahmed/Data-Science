Q:

User defined grasp pose for pick task

Hi,
I am  quite satisfied with the grasp generator that MoveIt task constructor offers, but I wanted to know if and also how it would be possible to define a custom grasp pose instead of a generated one for a pick task.
Normally you would do this stage to create a pick :
{
    // grasp generator
    auto grasp_generator = std::make_unique<stages::GenerateGraspPose>("generate grasp pose left");
    grasp_generator->setAngleDelta(M_PI/4);
    grasp_generator->setPreGraspPose("left_open");
    grasp_generator->setGraspPose("left_close");
    grasp_generator->setMonitoredStage(current_state);

    auto grasp = std::make_unique<stages::SimpleGrasp>(std::move(stage));
    grasp->setIKFrame(Eigen::Affine3d::Identity(), "l_gripper_tool_frame");
    grasp->properties().configureInitFrom(Stage::PARENT);
    grasp->setMaxIKSolutions(10);

    // pick container, using the generated grasp generator
    auto pick = std::make_unique<stages::Pick>(std::move(grasp));
    pick->setProperty("eef", "left_gripper");
    pick->setProperty("object", std::string("object"));
    pick->properties().configureInitFrom(Stage::PARENT);

    geometry_msgs::TwistStamped approach;
    approach.header.frame_id = "l_wrist_roll_link";
    approach.twist.linear.x = 1.0;
    pick->setApproachMotion(approach, 0.01, 0.10);

    geometry_msgs::TwistStamped lift;
    lift.header.frame_id = "base_footprint";
    lift.twist.linear.z =  1.0;
    pick->setLiftMotion(lift, 0.05, 0.10);
    current_state = pick.get();
    t.add(std::move(pick));
}

If I understand well, the grasp generator find possible grasp, these information are given to "SimpleGrasp" that assemble them with IK and gripper movement (in a serial container), then "Pick" is a serial container that compile previous information with approach and lift moves, right ?
I thought that I would need to generate a pose with "GeneratePose" stage (and also set the pregrasp and grasp property "manually") and then give it to "SimpleGrasp" but it doesn't seem to work.
Any idea on how I could use a custom grasp pose instead of using the grasp generator ?
Thanks in advance for the help,
Regards

Originally posted by Madcreator on ROS Answers with karma: 114 on 2020-06-12
Post score: 3

Original comments
Comment by Madcreator on 2020-06-16:
I found that I would need to carry all of the "open gripper, approach, close gripper, attach object" manually in a serial container. It seems to work but is there any cleaner/compact way to do this ?
Comment by timtuch96 on 2021-07-28:
Could you maybe post your solution, as I am currently also struggling to use the task constructor without generating the grasps?
Comment by Madcreator on 2021-07-29:
I finally managed to add custom poses, you can find the stage here : https://github.com/YannickRiou/moveit_task_constructor/blob/master/core/src/stages/generate_custom_pose.cpp
You can then use it by giving it an array with custom poses (please see the function createDropTask that use the stage "GenerateCustomPose") : https://github.com/YannickRiou/pr2_mtc/blob/4b6242d05bad952ac7b6d3f2df7e7a5df6f0afdb/src/pr2_tasks.cpp#L329
Feel free to ask question if something is unclear.
Comment by timtuch96 on 2021-07-29:
Thank you very much, I will try it out asap :)

A:

I finally managed to add custom poses, you can find the stage here : https://github.com/YannickRiou/moveit_task_constructor/blob/master/core/src/stages/generate_custom_pose.cpp
You can then use it by giving it an array with custom poses (please see the function createDropTask that use the stage "GenerateCustomPose") : https://github.com/YannickRiou/pr2_mtc/blob/4b6242d05bad952ac7b6d3f2df7e7a5df6f0afdb/src/pr2_tasks.cpp#L329
Feel free to ask question if something is unclear.

Originally posted by Madcreator with karma: 114 on 2021-07-29
This answer was ACCEPTED on the original site
Post score: 2

