Q:

Is there a newer nxt_ros stack using nxt-python 2.2.2 instead of 1.2.0? (on Raspberry Pi)

I have a Raspberry Pi running ROS Groovy on a Lego NXT with a Webcam and Wifi.
Youtube: Pictures and complete Visualization.
The nxt_ros package is using the old nxt-python 1.2.0 and the performance of the Motors is good enough for teleop, but not for controlling. Therefore, I rewrote my controller: linefollower in NXC, and I am starting the .rxe Machinecode with ROS directly on the NXT.
Then I found a MotorControl for NXT, and that it is already included in the new nxt-python 2.2.2 version.
Before rewriting, the complete nxt_ros Package from nxt-python 1.2.0 to 2.2.2, does anyone knows, if this already exists somewhere?
Or maybe someone has experience with the new nxt-pythons 2.2.2 Motor-sync, and ideas for a new nxt base controller?

Originally posted by msieber on ROS Answers with karma: 181 on 2013-07-20
Post score: 2

Original comments
Comment by msieber on 2013-07-22:
I added a execute "Sensor" to nxt_ros, to Start a NXT .rxe Program configured by the robot.yaml.
Comment by msieber on 2013-07-24:
Since I would like to have the same Performance of the Linefollwer.rxe for teleop, I will start porting the nxt-python 2.2.2 to nxt_ros (based on 1.2.0) to have the complete MotorControl, and also setting the I2C Bus faster on the NXT.
But don,t have time till mid of October for doing this. :-(
Comment by mdtobi on 2013-08-18:
@msieber: I'm currently catkinizing the nxt_ros package because I need it for my master thesis. I already thought about updating it to the new nxt-python version, but hesitated. Perhaps we could work together on this topic to keep the nxt_ros package up-to-date?!
Comment by msieber on 2013-08-25:
@mdtobi How far are you? can I see it somewhere? Keeping the NXT up-to-date sounds great. But, as already said, I have Exams and also regular work, so don't rely on me if it's for a Thesis. maybe we should start a SIG as IsaacSaito suggested in the other discussion
Comment by mdtobi on 2013-08-26:
@msieber I started migrating but run into some building-errors due to a change of the rviz::display interface. Therefore I was used to understand the rviz-plugin mechanism in more detail. As soon as I have time (estimated Wednesday/Thursday), I keep on solving these issues, hoping not to receive further errors.
I'm going to upload my progress as soon as I be able to create an error-free build. (I don't like half-finished commits...)
Afterwards I will look more deeper into the nxt_python stack to understand how the nxt-python lib is used and how to replace it.
Besides, I also think we should start a SIG because I think there are a few more aspects to look at (Implement more sensors, using the new EV3, Migration to Hydro, and so on..). Therefore will create one.
About my thesis: Don't worry - my deadline is next january, so I have enought time ;-)
Comment by bjarkijoha on 2013-11-19:
Hey guys, is there any progress on this? Did you start an SIG or anything?
Comment by mdtobi on 2013-11-19:
Sorry, I forgot to mention it here:
Yes, there is a SIG (although I'm the only member). I also forked the nxt_ros stack (https://github.com/ToPitz/nxt_ros_catkin) and migrated it to the catkin build system.
But there some other building lots (winros), which is why I wasn't able to test it until now

A:

FYI the SIG at http://wiki.ros.org/sig/NXT and now has 2 members.

Originally posted by Nick J Chalko with karma: 81 on 2014-01-19
This answer was ACCEPTED on the original site
Post score: 0

