Q:

Is there any point in using image_transport republish instead of using CompressedImage in Python?

I have a Python ROS node that subscribes to a topic of message type CompressedImage. So far it works fine (I play a rosbag with compressed images, run my node, and it correctly reads them [I checked using cv2.imshow()].
I'm probably misunderstanding what the point of compressed_image_transport is. If I have a ROS node (say usb_cam) publishing compressed image messages, and my Python node subscribes to those compressed images (specifying sensor_msgs.msg.CompressedImage as the message type), why would I ever need image_transport or republish for my node (I know it's being used in the publishing node, i.e. usb_cam).

Originally posted by basheersubei on ROS Answers with karma: 33 on 2014-10-25
Post score: 1

A:

The answer is a bit late, but in my case it was more convenient to migrate from input data type Images to CompressedImages using republish. This way, I did not have to modify code which stated in multiple occasions the incoming message type as sensor_msgs::Image.

Originally posted by Tommi with karma: 111 on 2016-09-08
This answer was ACCEPTED on the original site
Post score: 1

