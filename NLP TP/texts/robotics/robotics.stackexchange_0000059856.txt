Q:

MD5 error for feedback_states topic

Hi all,
I receive the following error:

[WARN] [WallTime: 1401915353.147587]
Could not process inbound connection:
Client [/rostopic_4474_1401915352624]
wants topic [/feedback_states] to have
datatype/md5sum
[control_msgs/FollowJointTrajectoryFeedback/10817c60c2486ef6b33e97dcd87f4474],
but our version has
[control_msgs/FollowJointTrajectoryFeedback/b11d532a92ee589417fdd76559eb1d9e]
Dropping
connection.{'message_definition': '#
====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION
======\nHeader header\nstring[] joint_names\ntrajectory_msgs/JointTrajectoryPoint
desired\ntrajectory_msgs/JointTrajectoryPoint
actual\ntrajectory_msgs/JointTrajectoryPoint
error\n\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata
for higher-level stamped data
types.\n# This is generally used to
communicate timestamped data \n# in a
particular coordinate frame.\n# \n#
sequence ID: consecutively increasing
ID \nuint32 seq\n#Two-integer
timestamp that is expressed as:\n# *
stamp.secs: seconds (stamp_secs) since
epoch\n# * stamp.nsecs: nanoseconds
since stamp_secs\n# time-handling
sugar is provided by the client
library\ntime stamp\n#Frame this data
is associated with\n# 0: no frame\n#
1: global frame\nstring
frame_id\n\n================================================================================\nMSG: trajectory_msgs/JointTrajectoryPoint\n#
Each trajectory point specifies either
positions[, velocities[,
accelerations]]\n# or positions[,
effort] for the trajectory to be
executed.\n# All specified values are
in the same order as the joint names
in JointTrajectory.msg\n\nfloat64[]
positions\nfloat64[]
velocities\nfloat64[]
accelerations\nfloat64[]
effort\nduration time_from_start\n\n',
'callerid':
'/rostopic_4474_1401915352624',
'tcp_nodelay': '0', 'md5sum':
'10817c60c2486ef6b33e97dcd87f4474',
'topic': '/feedback_states', 'type':
'control_msgs/FollowJointTrajectoryFeedback'}

I have a machine publishing on the feedback_states topic using the code shown below. The error is raised when, on another machine, i run rostopic echo "feedback_states". The publisher is Groovy whist the receiver is Hydro.
Code to publish on feedback_states:
b_msg = FollowJointTrajectoryFeedback()
time = rospy.Time.now()
fb_msg.header.stamp = time
fb_msg.joint_names = 'j_wrist1_arm1'
fb_msg.actual.positions = val
pub_fb_state.publish(fb_msg)

My initial thinking is that perhaps there is an issue with the different distributions for the control_msgs.
If this is the case or not i have no idea how to resolve this.
Should i update the Groovy version to Hydro?
Any help is appreciated it.
Regards.

Originally posted by anonymous8676 on ROS Answers with karma: 327 on 2014-06-04
Post score: 0

A:

The publisher is Groovy whist the receiver is Hydro.

While I don't really see any changes to the control_msgs package between groovy and hydro (see control_msgs/compare/groovy-devel...hydro-devel), it could well be that the MD5 of the individual messages has changed, due to changes to the code generation. That would explain the error you are seeing.
Try again with a Groovy - Groovy, or Hydro - Hydro combination and see if that resolves your error (I'm betting it will).

Originally posted by gvdhoorn with karma: 86574 on 2014-06-05
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by anonymous8676 on 2014-06-13:
Correct, the issue was that there were two different versions being used. I ended up making both Hydro and the messages worked.
Thanks for your help.

