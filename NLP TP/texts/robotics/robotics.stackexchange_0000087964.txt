Q:

How does robot_localization ekf work?

I have looked through the paper that was published regarding the package and I was wondering how was the kalman filter implemented, this is, which values are used in the prediction step and which values are used in the update step.
I currently have 3 different sensors:
-> one for X,Y,Z
-> one for roll, pitch, yaw
-> one for angular velocity and linear acceleration
I would like to know if these values are used in different steps or if they are used in the same (update step).
Also, is it possible to configure any of these steps regarding the information they use?

Originally posted by JRosa on ROS Answers with karma: 43 on 2018-07-17
Post score: 1

A:

All of the sensor measurements are incorporated as measurement updates in the EKF. So, if you were to look at the r_l code responsible for the prediction step of the EKF here (specifically if you look at the transfer functions defined), you'll see that state prediction is entirely based on the current estimate.
You may already know this, but in your r_l configuration file you can set which specific measurements from each sensor are included in the update step, as shown in the example launch file here.

Originally posted by stevejp with karma: 929 on 2018-07-25
This answer was ACCEPTED on the original site
Post score: 2

