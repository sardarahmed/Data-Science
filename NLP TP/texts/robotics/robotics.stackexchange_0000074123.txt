Q:

How is the orientation of frame /odom initialized?

What determines the orientation of the tf frame /odom when it is initialized?
On the page for GPS integration, here. It says:
"The odom and map frames are world-fixed frames and generally have their origins at the vehicle's start position and orientation."
However I have personally found that while the position of /odom and /base_link match at startup, the orientation doesn't. In the image below all I have done is move the robot directly forward, and you can see that it's orientation (/base_link) does not match that of /odom.

So, if it isn't being initialized to match /base_link, how is it being initialized? Or is this a bug?

Originally posted by M@t on ROS Answers with karma: 2327 on 2016-05-25
Post score: 2

A:

It looks like you're using a simulated Jackal. Looking at the r_l config for the Jackal, you can see that the yaw data from the IMU is being fused. Therefore, if at time t0, your simulated IMU reports a non-zero yaw, then the filter is going to reflect that. If you want it to start with 0 yaw even when the IMU doesn't, turn on relative mode for that sensor (i.e., imu0_relative: true).
Edit in response to comments
First, the template launch file is just that: a template. It's meant to show you what parameters are available to you, but isn't actually used by the nodes in r_l. The various parameters, where appropriate, do have default values if not specified, and you are correct that the _relative parameter defaults to false.
Second, note that moving the odom frame origin is equivalent to setting the robot's pose in the odom frame. You can use the set_pose service for that.

Originally posted by Tom Moore with karma: 13689 on 2016-05-30
This answer was ACCEPTED on the original site
Post score: 5

Original comments
Comment by M@t on 2016-05-31:
Ah, I think I understand. But I'm actually using a real Jackal, and I see that in ekf_template.launch this variable is already set to true, whereas in robot_localization.yaml it's undefined. So am I correct in assuming it defaults to false and robot_localization.yaml overrides ekf_template.launch?
Comment by M@t on 2016-05-31:
Yeap, that did the trick. Adding imu0_relative: true to robot_localization.yaml forces the /odom frame to align with /base_link. Is there also a way to explicitly set the origin and orientation of /odom the same way you can with /utm using navsat_transform_node?

