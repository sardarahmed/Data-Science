Q:

in what cases nodelets be used?

I am working on a ros project in which my publisher node (say x) collects data from camera processes it and sends 7 commands according to the result and my subscriber(say y) receives these seven commands , processes it and gives me the result
Could this process be done using nodelets.
The important thing is to note that there are only 7 commands but they change according to camera image, so the publisher is sending these 7 commands repetitively but not in any sequence.

Originally posted by kamalpandey1993 on ROS Answers with karma: 21 on 2018-02-09
Post score: 0

A:

Nodelets are 'just' nodes, but then run in threads instead of processes.
Just about everything you can do with nodes you can do with nodelets, the advantage nodelets have though is that they can directly exchange pointers to msgs -- provided that the nodelets are hosted by the same manager.
So the short answer to your question would likely be: "yes, you can do that with nodelets".
But the question is also a bit of a strange one, as your reason for asking it does not seem to touch on one of the main reasons for using them, which is performance.
Perhaps you can better explain why you are considering using nodelets.

Originally posted by gvdhoorn with karma: 86574 on 2018-02-09
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by kamalpandey1993 on 2018-02-09:
yes performance is the only reason for  my shift towards nodelets  but now i am worried as the beaglebone is a single core processor would it be able to make it faster
Comment by gvdhoorn on 2018-02-09:
If you are publishing camera images it is almost always beneficial to use nodelets. But do understand the consequences of using nodelets (ie: the implicit "you shall not mutate incoming msgs in callbacks" contract).
Comment by gvdhoorn on 2018-02-09:
The biggest advantage of nodelets is skipping (de)serialisation. That will lower CPU usage, which is always a good thing, independent of how many cores you have.

