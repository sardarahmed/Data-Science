Q:

buildfarm dev job crashes with apt key error

Hi,
Was trying to configure a addon fork of buildfarm, using the following rosdistro configuration:
distributions:
  kinetic:
    distribution: [kinetic/distribution.yaml, kinetic/my_dist.yaml]
    distribution_cache: http://repositories.ros.org/rosdistro_cache/kinetic-cache.yaml.gz
type: index
version: 3

my_dist.yaml is like:
release_platforms:
  ubuntu:
  - xenial
repositories:
  velodyne:
    source:
      type: git
      url: https://github.com/prclibo/velodyne.git # A repo not included in kinetic/distribution.yaml
      version: master
    status: maintained
type: distribution
version: 2
tags: [my]

The job Kdev__velodyne__ubuntu_xenial_amd64 is added by calling Kdev_reconfigure-jobs with paramter velodyne. When I invoke this job, the error pops as follows, saying a key error of ros-kinetic-catkin:
08:22:11 reading in sources list data from /etc/ros/rosdep/sources.list.d
08:22:11 Hit https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/osx-homebrew.yaml
08:22:11 Hit https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/base.yaml
08:22:11 Hit https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/python.yaml
08:22:11 Hit https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/ruby.yaml
08:22:11 Hit https://raw.githubusercontent.com/ros/rosdistro/master/releases/fuerte.yaml
08:22:11 Query rosdistro index https://raw.githubusercontent.com/prclibo/rosdistro/master/index.yaml
08:22:11 Add distro "kinetic"
08:22:11 updated cache in /home/buildfarm/.ros/rosdep/sources.cache
08:22:11 Crawling for packages in workspace '/tmp/catkin_workspace/src'
08:22:11 Found the following packages:
08:22:11   - velodyne
08:22:11   - velodyne_driver
08:22:11   - velodyne_msgs
08:22:11   - velodyne_pointcloud
08:22:11 Package maintainer emails: brice.rebsamen@gmail.com jack.oquin@gmail.com
08:22:14 Always install the following generic dependencies:
08:22:14   - build-essential
08:22:14   - python3
08:22:14   - ros-kinetic-catkin
08:22:14 Identified the following build dependencies (ignoring packages available from source):
08:22:14   - angles
08:22:14   - catkin
08:22:14   - diagnostic_updater
08:22:14   - dynamic_reconfigure
08:22:14   - libpcap
08:22:14   - message_generation
08:22:14   - message_runtime
08:22:14   - nodelet
08:22:14   - pcl_conversions
08:22:14   - pcl_ros
08:22:14   - pluginlib
08:22:14   - roscpp
08:22:14   - roslaunch
08:22:14   - roslib
08:22:14   - rostest
08:22:14   - sensor_msgs
08:22:14   - std_msgs
08:22:14   - tf
08:22:14   - tf2_ros
08:22:14   - yaml-cpp
08:22:14 Resolved the dependencies to the following binary packages:
08:22:14   - libpcap0.8-dev
08:22:14   - libyaml-cpp-dev
08:22:14   - ros-kinetic-angles
08:22:14   - ros-kinetic-catkin
08:22:14   - ros-kinetic-diagnostic-updater
08:22:14   - ros-kinetic-dynamic-reconfigure
08:22:14   - ros-kinetic-message-generation
08:22:14   - ros-kinetic-message-runtime
08:22:14   - ros-kinetic-nodelet
08:22:14   - ros-kinetic-pcl-conversions
08:22:14   - ros-kinetic-pcl-ros
08:22:14   - ros-kinetic-pluginlib
08:22:14   - ros-kinetic-roscpp
08:22:14   - ros-kinetic-roslaunch
08:22:14   - ros-kinetic-roslib
08:22:14   - ros-kinetic-rostest
08:22:14   - ros-kinetic-sensor-msgs
08:22:14   - ros-kinetic-std-msgs
08:22:14   - ros-kinetic-tf
08:22:14   - ros-kinetic-tf2-ros
08:22:14 Traceback (most recent call last):
08:22:14   File "/usr/lib/python3/dist-packages/apt/cache.py", line 194, in __getitem__
08:22:14     return self._weakref[key]
08:22:14   File "/usr/lib/python3.5/weakref.py", line 131, in __getitem__
08:22:14     o = self.data[key]()
08:22:14 KeyError: 'ros-kinetic-catkin'
08:22:14 
08:22:14 During handling of the above exception, another exception occurred:
08:22:14 

So just wanna seek for some help on why will this happen and what is missed in my configuration. Thanks!

Originally posted by Bo Li on ROS Answers with karma: 1 on 2017-08-06
Post score: 0

A:

If you are doing an add-on rosdistro you need to import all the ROS packages that are dependencies of your package into your building repo using the import_upstream: https://github.com/ros-infrastructure/ros_buildfarm/blob/master/doc/custom_rosdistro.rst
As well as create a rosdep rules file that encompasses those imported packages. And add it as a custom_rosdep_urls https://github.com/ros-infrastructure/ros_buildfarm/blob/master/doc/configuration_options.rst

Originally posted by tfoote with karma: 58457 on 2017-08-07
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Dirk Thomas on 2017-08-07:
I don't think this applies here since the rosdistro contains the upstream distribution file kinetic/distribution.yaml as well as the custom distribution file kinetic/my_dist.yaml. the farm should build catkin.
Can you please check the status pages to see which packages have already been built.
Comment by tfoote on 2017-08-07:
Ahh, I missed that you had both sources and were rebuilding kinetic. Please change the name of the rosdistro you don't have name collisions with the public build farm with your fork.
Related to that. I notice that you're still using the upstream rosdistro_cache which needs to be changed.
Comment by tfoote on 2017-08-07:
And have you updated the apt repo locations and has ros-kinetic-catkin been successfully built into that repo?
Comment by Bo Li on 2017-08-08:
Thanks for the reply. I changed the distribution_cache. In the import_upstream, I see a lot of aptmethod got http://....deb, but there are not "ros-kinetic-catkin". Should this package be imported here?
Comment by Bo Li on 2017-08-08:
My config file was on github.com/prclibo/{buildfarm_deployment_config, ros_buildfarm_config, rosdistro}. In my configs I want to target the build to kinetic-{amd64, souce}-xenial. I am not sure if any of the config make import_upstream not import the package.
Comment by Dirk Thomas on 2017-08-08:
Can you please check the status pages to see which packages have already been built.
Comment by Bo Li on 2017-08-08:
Dirk, do you mean Krel_repos-status-page? I see some packages at http://165.227.5.32:8080/job/Krel_repos-status-page/ws/status_page/kinetic_default.html, but those are only very few packages. Those packages seem corresponds to those aptmethod got in import_upstream
Comment by Bo Li on 2017-08-08:
I also have another (may silly) question: I found that Krel_reconfigure-jobs generates tons of jobs from rosdistro. However, if I only want to CI my customized packages, can I avoid generating those rosdistro jobs?
Comment by Dirk Thomas on 2017-08-08:
E.g. http://repositories.ros.org/status_page/ros_kinetic_default.html?q=catkin If catkin is not listed their something is configured incorrectly. I assume you also don't have a similar job as this http://build.ros.org/view/Kbin_uX64/job/Kbin_uX64__catkin__ubuntu_xenial_amd64__binary/ ?
Comment by Dirk Thomas on 2017-08-08:
You either build all ROS packages (at least the ones you need) yourself which gives you full control what version of each repo you want OR you import a snapshot from the ROS apt repo (and repeat that periodically if you want to stay up-to-date) and use custom rosdep key to map these package names.
Comment by Bo Li on 2017-08-10:
Thanks Dirk! Changed to the 2nd way, removing kinetic/distribution.yaml from rosdistro. I know I can use import_upstream to snapshot ROS packages e.g. (% ros-indigo-* ). But the dev job still requires many linux system libraries.
Comment by Bo Li on 2017-08-10:
I guess I should not snapshot all the system libraries to my repo server, right? But my velodyne dev job seems not know where to get these libraries.

