Q:

build simExtROS2Interface on Windows 10

I was wondering if anyone has built simExtROS2Interface on WIndows 10 successfully? If you did, could you please share your experience. I understand that simExtROS2Interface depends on image_transport package. I have acquired it from https://github.com/ros-perception/image_common/tree/ros2. I can build image_common-ros2 without problems. Also, simExtROS2Interface makes use of the boost library. I also downloaded and installed the boost library in my local drive c:/local/boost_1_74_0. But, building ros2_bubble_rob and sim_ros2_interface failed because cmake was unable to locate boost header files.
If you have done this successfully, how did you manage to tell cmake where to look for boost header files? Thanks.
C:\dev\ros2_ws>set COPPELIASIM_ROOT_DIR=C:/Program Files/CoppeliaRobotics/CoppeliaSimEdu
C:\dev\ros2_ws>colcon build --merge-install --continue-on-error --cmake-args "-DBOOST_ROOT=c:/local/boost_1_74_0"
Starting >>> camera_calibration_parsers
Starting >>> image_transport
Starting >>> ros2_bubble_rob
[Processing: camera_calibration_parsers, image_transport, ros2_bubble_rob]
[Processing: camera_calibration_parsers, image_transport, ros2_bubble_rob]
Failed   <<< ros2_bubble_rob [1min 9s, exited with code 1]
Finished <<< camera_calibration_parsers [1min 20s]
Starting >>> camera_info_manager
Finished <<< image_transport [1min 25s]
Starting >>> sim_ros2_interface
Finished <<< camera_info_manager [19.7s]
Starting >>> image_common
Finished <<< image_common [12.0s]
[Processing: sim_ros2_interface]
Failed   <<< sim_ros2_interface [1min 15s, exited with code 1]

Summary: 4 packages finished [2min 45s]
  2 packages failed: ros2_bubble_rob sim_ros2_interface

C:\dev\ros2_ws>

Originally posted by Weidong Chen on ROS Answers with karma: 26 on 2020-08-27
Post score: 0

A:

HI Mirella, thanks for the reply. I am afraid that is not the answer. First of all, image_transport and simExtROS2Interface can be built together because colcon takes care of the dependency. Secondly, I was able to build image_transport successfully as my original question concerns building simExtROS2Interface on Windows 10.
Anyway, I have figured out the answer. The key is to add find_package(Boost REQUIRED) to the CMakeFiles.txt for simExtROS2Interface package. With such a change, I am now able to build simExtROS2Interface.dll/lib successfully with Visual Studio 2019 on Windows 10.

Originally posted by Weidong Chen with karma: 26 on 2020-08-31
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by mirella melo on 2020-09-01:
Good to hear, Weidong!

