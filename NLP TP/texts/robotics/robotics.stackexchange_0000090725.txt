Q:

moveit_msgs::CollisionObjects has no member named meshs/ meshes_pose etc

Hello,
I'm trying to add a mesh into rviz as a collision object on ros_kinetic.
Below is the code i'm using:
// ROS
#include <ros/ros.h>

// MoveIt!
#include <moveit/planning_scene_interface/planning_scene_interface.h>
#include <moveit/move_group_interface/move_group_interface.h>
#include <moveit_msgs/CollisionObject.h>
#include "geometric_shapes/shapes.h"
#include "geometric_shapes/mesh_operations.h"
#include "geometric_shapes/shape_operations.h"

// TF2
#include <tf2_geometry_msgs/tf2_geometry_msgs.h>

void addCollisionObjects(moveit::planning_interface::PlanningSceneInterface& planning_scene_interface)
{
  
  // Creating Environment

std::vector<moveit_msgs::CollisionObject> collision_object;
collision_object.resize(1);
Eigen::Vector3d b(0.001, 0.001, 0.001);

collision_object[0].id = "shelf";
shapes::Mesh* m = shapes::createMeshFromResource("package://robot_description/meshes/RVIZ/shelf_dae.dae",b);

shape_msgs::Mesh mesh;
shapes::ShapeMsg mesh_msg;
shapes::constructMsgFromShape(m, mesh_msg);
mesh = boost::get<shape_msgs::Mesh>(mesh_msg);

collision_object.meshes.resize(1);
collision_object.mesh_poses.resize(1);
collision_object.meshes[0] = mesh;
collision_object.header.frame_id = "panda_link0";
collision_object.mesh_poses[0].position.x = 0.283853;
collision_object.mesh_poses[0].position.y = 0.730556;
collision_object.mesh_poses[0].position.z = -0.003741;
collision_object.mesh_poses[0].orientation.x = 0.999850;
collision_object.mesh_poses[0].orientation.y= 0.006747;
collision_object.mesh_poses[0].orientation.z= 0.000108;
collision_object.mesh_poses[0].orientation.w= 0.015920;

collision_object.meshes.push_back(mesh);
collision_object.mesh_poses.push_back(collision_object.mesh_poses[0]);
collision_object.operation = collision_object[0].ADD;
std::vector<moveit_msgs::CollisionObject> collision_vector;
collision_vector.push_back(collision_object);

planning_scene_interface.applyCollisionObjects(collision_vector);
planning_scene_interface.(collision_object[0].id);

}

int main(int argc, char** argv)
{
  ros::init(argc, argv, "moveit_interface");
  ros::NodeHandle nh;
  ros::AsyncSpinner spinner(1);
  spinner.start();

  ros::WallDuration(1.0).sleep();
  moveit::planning_interface::PlanningSceneInterface planning_scene_interface;
  moveit::planning_interface::MoveGroupInterface group("panda_arm");
  group.setPlanningTime(45.0);

  addCollisionObjects(planning_scene_interface);

  // Wait a bit for ROS things to initialize
  ros::WallDuration(1.0).sleep();

  //pick(group);
}

When i run catkin_make i get lot of errors which can be seen below
[ 50%] Built target fetch_model_poses
[ 75%] Building CXX object robot_moveit_config/CMakeFiles/moveit_interface.dir/src/moveit_interface.cpp.o
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp: In function ‘void addCollisionObjects(moveit::planning_interface::PlanningSceneInterface&)’:
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:35:18: error: ‘class std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >’ has no member named ‘meshes’
 collision_object.meshes.resize(1);
                  ^
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:36:18: error: ‘class std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >’ has no member named ‘mesh_poses’
 collision_object.mesh_poses.resize(1);
                  ^
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:37:18: error: ‘class std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >’ has no member named ‘meshes’
 collision_object.meshes[0] = mesh;
                  ^
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:38:18: error: ‘class std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >’ has no member named ‘header’
 collision_object.header.frame_id = "panda_link0";
                  ^
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:39:18: error: ‘class std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >’ has no member named ‘mesh_poses’
 collision_object.mesh_poses[0].position.x = 0.283853;
                  ^
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:40:18: error: ‘class std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >’ has no member named ‘mesh_poses’
 collision_object.mesh_poses[0].position.y = 0.730556;
                  ^
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:41:18: error: ‘class std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >’ has no member named ‘mesh_poses’
 collision_object.mesh_poses[0].position.z = -0.003741;
                  ^
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:42:18: error: ‘class std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >’ has no member named ‘mesh_poses’
 collision_object.mesh_poses[0].orientation.x = 0.999850;
                  ^
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:43:18: error: ‘class std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >’ has no member named ‘mesh_poses’
 collision_object.mesh_poses[0].orientation.y= 0.006747;
                  ^
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:44:18: error: ‘class std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >’ has no member named ‘mesh_poses’
 collision_object.mesh_poses[0].orientation.z= 0.000108;
                  ^
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:45:18: error: ‘class std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >’ has no member named ‘mesh_poses’
 collision_object.mesh_poses[0].orientation.w= 0.015920;
                  ^
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:47:18: error: ‘class std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >’ has no member named ‘meshes’
 collision_object.meshes.push_back(mesh);
                  ^
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:48:18: error: ‘class std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >’ has no member named ‘mesh_poses’
 collision_object.mesh_poses.push_back(collision_object.mesh_poses[0]);
                  ^
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:48:56: error: ‘class std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >’ has no member named ‘mesh_poses’
 collision_object.mesh_poses.push_back(collision_object.mesh_poses[0]);
                                                        ^
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:49:18: error: ‘class std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >’ has no member named ‘operation’
 collision_object.operation = collision_object[0].ADD;
                  ^
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:51:44: error: no matching function for call to ‘std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >::push_back(std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >&)’
 collision_vector.push_back(collision_object);
                                            ^
In file included from /usr/include/c++/5/vector:64:0,
                 from /usr/include/c++/5/bits/random.h:34,
                 from /usr/include/c++/5/random:49,
                 from /usr/include/c++/5/bits/stl_algo.h:66,
                 from /usr/include/c++/5/algorithm:62,
                 from /usr/include/boost/math/tools/config.hpp:17,
                 from /usr/include/boost/math/special_functions/round.hpp:13,
                 from /opt/ros/kinetic/include/ros/time.h:58,
                 from /opt/ros/kinetic/include/ros/ros.h:38,
                 from /home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:2:
/usr/include/c++/5/bits/stl_vector.h:913:7: note: candidate: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = moveit_msgs::CollisionObject_<std::allocator<void> >; _Alloc = std::allocator<moveit_msgs::CollisionObject_<std::allocator<void> > >; std::vector<_Tp, _Alloc>::value_type = moveit_msgs::CollisionObject_<std::allocator<void> >]
       push_back(const value_type& __x)
       ^
/usr/include/c++/5/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >’ to ‘const value_type& {aka const moveit_msgs::CollisionObject_<std::allocator<void> >&}’
/usr/include/c++/5/bits/stl_vector.h:931:7: note: candidate: void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = moveit_msgs::CollisionObject_<std::allocator<void> >; _Alloc = std::allocator<moveit_msgs::CollisionObject_<std::allocator<void> > >; std::vector<_Tp, _Alloc>::value_type = moveit_msgs::CollisionObject_<std::allocator<void> >]
       push_back(value_type&& __x)
       ^
/usr/include/c++/5/bits/stl_vector.h:931:7: note:   no known conversion for argument 1 from ‘std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >’ to ‘std::vector<moveit_msgs::CollisionObject_<std::allocator<void> > >::value_type&& {aka moveit_msgs::CollisionObject_<std::allocator<void> >&&}’
/home/mvish7/ws_panda_gazebo_moveit/src/robot_moveit_config/src/moveit_interface.cpp:54:26: error: expected unqualified-id before ‘(’ token
 planning_scene_interface.(collision_object[0].id);
                          ^
robot_moveit_config/CMakeFiles/moveit_interface.dir/build.make:62: recipe for target 'robot_moveit_config/CMakeFiles/moveit_interface.dir/src/moveit_interface.cpp.o' failed
make[2]: *** [robot_moveit_config/CMakeFiles/moveit_interface.dir/src/moveit_interface.cpp.o] Error 1
CMakeFiles/Makefile2:2559: recipe for target 'robot_moveit_config/CMakeFiles/moveit_interface.dir/all' failed
make[1]: *** [robot_moveit_config/CMakeFiles/moveit_interface.dir/all] Error 2
Makefile:138: recipe for target 'all' failed
make: *** [all] Error 2
Invoking "make -j4 -l4" failed

Here is the cmake.txt file and here is the package.xml file.
Can anyone help me in this??

Originally posted by mvish7 on ROS Answers with karma: 104 on 2019-03-02
Post score: 0

A:

I'll post what worked out for me.

inclusion of header such as these helped me get rid of error "class XYZ has no member named ABC"
#include <moveit_msgs/CollisionObject.h>
#include <moveit_msgs/PlanningScene.h>
#include "geometric_shapes/shape_operations.h"
#include "geometric_shapes/shapes.h"
#include "geometric_shapes/mesh_operations.h"

As mentioned by @aPonza, vector resizing and indexing plays the trick when you want to include multiple meshes in planning scene

Frame id should always be the frame you want to reference your collision object to
collision_objects[0].header.frame_id = "world";

There is another option to get this thing working, it is posted here

ros::sleep(duration) is necessary after below line in code or else RVIZ may miss out of visulizing collision object to planning scene but RVIZ will add the collision object to planning scene and it can be scene in motion planning plugin >> scene object tab in RVIZ.
planning_scene_interface.applyCollisionObjects(collision_vector)

Below is my full working code:
#include "ros/ros.h"
#include "moveit/move_group_interface/move_group_interface.h"
#include "moveit/planning_scene_interface/planning_scene_interface.h"
#include <moveit_msgs/CollisionObject.h>
#include <moveit_msgs/PlanningScene.h>
#include "geometric_shapes/shape_operations.h"
#include "geometric_shapes/shapes.h"
#include "geometric_shapes/mesh_operations.h"

int main(int argc, char **argv)
{
    ros::init(argc, argv, "attach_collision_objects");
    ros::NodeHandle node_handle;
    ros::AsyncSpinner spinner(1);
    spinner.start();

    //const std::string PLANNING_GROUP = "panda_arm";
    //moveit::planning_interface::MoveGroupInterface move_group(PLANNING_GROUP);

    moveit::planning_interface::PlanningSceneInterface planning_scene_interface;
    //Eigen::Vector3d b(0.001, 0.001, 0.001);
    sleep(2.0);

    std::vector<moveit_msgs::CollisionObject> collision_objects;
    collision_objects.resize(2);
    
    shapes::Mesh* m1 = shapes::createMeshFromResource("package://robot_description/meshes/RVIZ/shelf_stl.stl");
    ROS_INFO("shelf mesh loaded");

    sleep(2.0);

    shape_msgs::Mesh shelf_mesh;
    shapes::ShapeMsg shelf_mesh_msg;
    shapes::constructMsgFromShape(m1, shelf_mesh_msg);
    shelf_mesh = boost::get<shape_msgs::Mesh>(shelf_mesh_msg);
    collision_objects[0].id = "shelf";
    collision_objects[0].header.frame_id = "world";
    sleep(2.0);

    collision_objects[0].meshes.resize(1);
    collision_objects[0].mesh_poses.resize(1);
    collision_objects[0].meshes[0] = shelf_mesh;
    collision_objects[0].mesh_poses[0].position.x = 0.283853;
    collision_objects[0].mesh_poses[0].position.y = 0.730556;
    collision_objects[0].mesh_poses[0].position.z = -0.003741;
    collision_objects[0].mesh_poses[0].orientation.x = 0.999850;
    collision_objects[0].mesh_poses[0].orientation.y= 0.006747;
    collision_objects[0].mesh_poses[0].orientation.z= 0.000108;
    collision_objects[0].mesh_poses[0].orientation.w= 0.015920;

    collision_objects[0].meshes.push_back(shelf_mesh);
    collision_objects[0].mesh_poses.push_back(collision_objects[0].mesh_poses[0]);
    collision_objects[0].operation = collision_objects[0].ADD;

    // adding kaffee mesh

    shapes::Mesh* m2 = shapes::createMeshFromResource("package://robot_description/meshes/RVIZ/kaffee.stl");
    ROS_INFO("kaffee mesh loaded");

    sleep(2.0);

    shape_msgs::Mesh kaffee_mesh;
    shapes::ShapeMsg kaffee_mesh_msg;
    shapes::constructMsgFromShape(m2, kaffee_mesh_msg);
    kaffee_mesh = boost::get<shape_msgs::Mesh>(kaffee_mesh_msg);
    collision_objects[1].id = "kaffee";
    collision_objects[1].header.frame_id = "world";
    sleep(2.0);

    collision_objects[1].meshes.resize(1);
    collision_objects[1].mesh_poses.resize(1);
    collision_objects[1].meshes[0] = kaffee_mesh;
    collision_objects[1].mesh_poses[0].position.x = 0.325435;
    collision_objects[1].mesh_poses[0].position.y = 0.496533;
    collision_objects[1].mesh_poses[0].position.z = 0.422545;
    collision_objects[1].mesh_poses[0].orientation.x = -0.026790;
    collision_objects[1].mesh_poses[0].orientation.y= -0.001546;
    collision_objects[1].mesh_poses[0].orientation.z= 0.015858;
    collision_objects[1].mesh_poses[0].orientation.w= 0.999514;
    

    collision_objects[1].meshes.push_back(kaffee_mesh);
    collision_objects[1].mesh_poses.push_back(collision_objects[1].mesh_poses[0]);
    collision_objects[1].operation = collision_objects[1].ADD;    

    std::vector<moveit_msgs::CollisionObject> collision_vector;
    //collision_vector.resize(2);
    collision_vector.push_back(collision_objects[0]);  
    ROS_INFO("shelf added into the world");  

    collision_vector.push_back(collision_objects[1]);  
    ROS_INFO("kaffee added into the world"); 
    
    planning_scene_interface.applyCollisionObjects(collision_vector);
    sleep(5.0);
    ros::waitForShutdown();
    return 0;
}

Originally posted by mvish7 with karma: 104 on 2019-03-04
This answer was ACCEPTED on the original site
Post score: 1

