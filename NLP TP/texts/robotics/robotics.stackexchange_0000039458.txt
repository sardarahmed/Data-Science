Q:

Separating callback from other modules

Hello!
May I want something strange, but it interesting programming problem.
So, I wrote class-wrapper Sensor that subscribes on topic (like /camera/image) and in callback receives data (like this->callback(Image& data), node.subscribe(..., &Sensor::callback). Data should be prepared by some filters. At this moment, filters called in callback:
void Sensor::callback(Image& data)
{
Image* newData;
newData = filter1(data);
newData = filter2(newData);
...
}

But I think it is not good. Is there way to separate them from Sensor? Something like this:
data = Sensor.getData();
data = filter1(data);
data = filter2(data);

I think that I missed simple idea of this.

Originally posted by CaptainTrunky on ROS Answers with karma: 546 on 2012-04-10
Post score: 0

A:

Similar things have been done in ROS and other libraries already. You can either use and extend existing implementations or take them as examples on how the design could look like. Have a look at filters, pcl_ros, the pcl_ros tutorials and pcl including its tutorials.

Originally posted by Lorenz with karma: 22731 on 2012-04-10
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by CaptainTrunky on 2012-04-11:
Thanks. Filters are exactly what I need.

