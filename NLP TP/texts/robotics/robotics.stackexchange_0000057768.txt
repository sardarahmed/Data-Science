Q:

ar_pose and kinect

Hi all,
I have a question regarding the usage of ar_pose with kinect.
So, what I did so far. I rosmake the ar_pose node and to make everything run I execute the following commands:
roslaunch openni_launch openni.launch

(for kinect)
and
roslaunch ar_pose ar_pose_single.launch

In the list of topics I have /ar_marker, /world and topics related to the camera. I tried choosing different topics for fixed and target frames as well as for camera topic. I am getting an image from the camera, but the target (I use standard pattHiro.pdf mentioned in ros wiki for ar_pose) is not recognized.
I also tried changing options for my kinect in launch file, but without success.
Here is the content of the launch file for ar_pose:
<launch>
   <arg name="kinect" default="false"/>
  <param name="use_sim_time" value="false"/>

    <node pkg="rviz" type="rviz" name="rviz" 
      args="-d $(find ar_pose)/launch/live_single.vcg"/>
            
   <node pkg="tf" type="static_transform_publisher" name="world_to_cam" 
     args="1 1 0.3 0 0 0 world ar_marker 10" />

    <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" respawn="false" output="log">
        <param name="video_device" type="string" value="/dev/video1"/>
        <param name="camera_frame_id" type="string" value="usb_cam"/>
        <param name="io_method" type="string" value="mmap"/>
        <param name="image_width" type="int" value="640"/>
        <param name="image_height" type="int" value="480"/>
        <param name="pixel_format" type="string" value="mjpeg"/>
        <rosparam param="D">[0.025751483065329935, -0.10530741936574876,-0.0024821434601277623, -0.0031632353637182972, 0.0000]</rosparam>
        <rosparam param="K">[558.70655574536931, 0.0, 316.68428342491319, 0.0, 553.44501004322387, 238.23867473419315, 0.0, 0.0, 1.0]</rosparam>
        <rosparam param="R">[1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]</rosparam>
        <rosparam param="P">[558.70655574536931, 0.0, 316.68428342491319, 0.0, 0.0, 553.44501004322387, 238.23867473419315, 0.0, 0.0, 0.0, 1.0, 0.0]</rosparam>
   </node>
    
    <node name="ar_pose" pkg="ar_pose" type="ar_single" respawn="false" output="screen">
        <param name="marker_pattern" type="string" value="data/patt.hiro"/>
        <param name="marker_width" type="double" value="80.0"/>
        <param name="marker_center_x" type="double" value="0.0"/>
        <param name="marker_center_y" type="double" value="0.0"/>
        <param name="threshold" type="int" value="100"/>
        <param name="use_history" type="bool" value="true"/>

     <remap if="$(arg kinect)" from="/usb_cam/image_raw"   to="/camera/rgb/image_raw"/>
        <remap if="$(arg kinect)" from="/usb_cam/camera_info" to="/camera/rgb/camera_info"/>

        <remap unless="$(arg kinect)" from="/usb_cam/image_raw" to="/wide_stereo/left/image_rect_color"/>
        <remap unless="$(arg kinect)" from="/usb_cam/camera_info" to="/wide_stereo/left/camera_info"/>

    </node>
</launch>

Could anyone please help me with settings needed for kinect to recognize ar target in ar_pose and topics I should subscribe to?
Thank you

Originally posted by Andrii Matviienko on ROS Answers with karma: 56 on 2014-03-09
Post score: 0

A:

So, I got some progress and stuck in the different place. I will write everything I've got, maybe it could be useful for understanding the problem I have now and for others to refer in the future.

Calibration. I follow the instruction described on wiki page for visp_camera_calibration
rosdep install visp_camera_calibration
rosmake visp_camera_calibration
roslaunch launch/lagadic_grid.launch

At the end you find all calibration parameters you need for the launch file as it is described there or in ~/.ros/calibration.ini

Launch file looks like this for me:
 <node pkg="rviz" type="rviz" name="rviz" />
     args="-d $(find ar_pose)/demo/demo_single.vcg"/> 

 <node pkg="tf" type="static_transform_publisher" name="world_to_cam"
     args="1 0 0 0 0 0 world camera_link 10" />

 <node name="camera" pkg="openni_camera" type="openni_node" respawn="false" output="log">

     <param name="camera_frame_id" type="string" value="camera"/>
     <param name="video_device" type="string" value="/dev/bus/usb/002/009"/>
     <param name="camera_frame_id" type="string" value="camera"/>

     <param name="io_method" type="string" value="mmap"/>
     <param name="image_width" type="int" value="640"/>
     <param name="image_height" type="int" value="480"/>
     <param name="pixel_format" type="string" value="mjpeg"/> 

     <rosparam param="D">[-0.01019, 0.00000, 0.00000, 0.00000, 0.00000]</rosparam>
     <rosparam param="K">[548.83913,0.00000,309.68288,0.00000,541.05367,246.39086, 0.00000, 0.00000, 1.00000]</rosparam>
     <rosparam param="R">[1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]</rosparam>
     <rosparam param="P">[548.83913,0.00000,309.68288,0.00000,0.00000,541.05367,246.39086, 0.00000, 0.00000 0.00000, 1.00000, 0.00000]</rosparam>

 </node>

 <node name="ar_pose" pkg="ar_pose" type="ar_single" respawn="false" output="screen">
     <param name="marker_pattern" type="string" value="data/patt.hiro"/>

     <param name="marker_width" type="double" value="80.0"/>
     <param name="marker_center_x" type="double" value="0.0"/>
     <param name="marker_center_y" type="double" value="0.0"/>
     <param name="threshold" type="int" value="100"/>
     <param name="use_history" type="bool" value="true"/>    

     <remap if="$(arg kinect)" from="/usb_cam/image_raw"   to="/camera/rgb/image_color"/>
            <remap if="$(arg kinect)" from="/usb_cam/camera_info" to="/camera/rgb/camera_info"/>

         <remap unless="$(arg kinect)" from="/usb_cam/image_raw" to="/wide_stereo/left/image_rect_color"/>
            <remap unless="$(arg kinect)" from="/usb_cam/camera_info" to="/wide_stereo/left/camera_info"/>  

 </node>

Two crucial lines were(pay attention to the names of package and types you specify):
 args="1 0 0 0 0 0 world camera_link 10" />

<node name="camera" pkg="openni_camera" type="openni_node" respawn="false" output="log">

Rviz. I rviz I've chosen 3 topics: TF, Camera (/camera/rgb/image_rect_color) and Marker (visualization_marker). Fixed frame - /world and nothing for Target Frame.
I get image from the camera and the transformation between world and camera seem to ok, but ar markers are not recognized.

I changed camera topics in include/ar_pose/ar_single.h to the following existing topics:
const std::string cameraImageTopic_ = "/camera/rgb/image_raw";
const std::string cameraInfoTopic_  = "/camera/rgb/camera_info";

Subscribing to info topics seems to be fine, but subscribing to image topics gives me the following error:
OpenCV Error: Image step is wrong () in cvInitMatHeader, file /tmp/buildd/ros-fuerte-opencv2-2.4.2-1precise-20130312-1308/modules/core/src/array.cpp, line 162
terminate called after throwing an instance of 'cv::Exception'
  what():  /tmp/buildd/ros-fuerte-opencv2-2.4.2-1precise-20130312-1308/modules/core/src/array.cpp:162: error: (-13)  in function cvInitMatHeader

I figure out that the problem is with this line:
   capture_ = bridge_.imgMsgToCv (image_msg, "bgr8");

(probably with a format I specify), but I tried different formats(bgr, rgb, mono) in lower and upper cases and no success. Could anyone please help me with that?

kinect.launch file
 <node pkg="tf" type="static_transform_publisher" name="k1_world_tfb" args="-0.37 0.94 1.04 0 0.83 -1.57 /world_base_link /kinect_1_link  40" />
 <node pkg="tf" type="static_transform_publisher" name="k2_world_tfb" args=" 0.37 0.98 1.02 0 0.80 -1.57 /world_base_link /kinect_2_link  40" />

  <param name="marker_dist_threshold" type="double" value="0.02" />
  <param name="publish_tf" type="bool" value="true" />

Originally posted by Andrii Matviienko with karma: 56 on 2014-03-17
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Zoid on 2015-01-15:
I am trying to calibrate the Kinect camera using Visp and I followed the wiki page instructions for visp_camera_calibration. Unfortunately, although I have an image_view, I get only a black screen on the visp_calibration . Could you please provide me with your .launch file for calibrating Kinect?
Comment by Andrii Matviienko on 2015-01-18:
I added the launch file to my answer above under 5). I hope it's what you need.
Comment by Zoid on 2015-02-02:
Is that the launch/lagadic_grid.launch file for Kinect of visp_camera_calibration? That is the file I am looking for. Thank you.
Comment by Leandro on 2015-05-14:
Any progress using ar_pose with kinect ? I have the same problem.

