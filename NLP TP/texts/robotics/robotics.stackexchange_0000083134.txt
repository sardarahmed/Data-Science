Q:

is there a way to run the ROS code of machine A from machine B using serial communication?

Here is my machine setup. I have Jetson TX1 connected to raspberry pi, and each machine has a set of ROS-based codes. They are connected using the ttl-to-USB converter, and I checked that the connection was made using the standard pyserial library.
My question here is how I can use ROS to let them still get connected. The tutorial said that I need to have some kind of embedded linux development environment to write the code for the pi board on jetson and download the code to the pi board. But that's far beyond what I can do now, and I would like to come up with other ways to enable the serial communication, while the codes I wrote for both machines stay intact. I'm thinking of utilizing launch files (the launch files from the jetson tx1  calls serial-related libraries, which would call the ROS nodes written on the pi board). Please let me know if my theory is correct.
Thank you.

Originally posted by chanhyeoni on ROS Answers with karma: 62 on 2017-10-03
Post score: 0

Original comments
Comment by gvdhoorn on 2017-10-04:
I don't completely understand what you want to do, but perhaps rosserial can help here.
Comment by gvdhoorn on 2017-10-04:\

The tutorial said [..]

which tutorial. Always include a link to anything you refer to. Without that we cannot help you.

I need to have some kind of embedded linux development environment

no, you don't. For rosserial_embeddedlinux ..
Comment by gvdhoorn on 2017-10-04:
.. you just need a platform that can compile regular C/C++ code and has a serial or network connection available.
It's just that you need a Linux environment, as opposed to any of the other supported target platforms (ie: Arduino, MBED, etc, which are not Linux).

A:

It is basicly a Linux network thing that you want to achive. You want to be able to send ros Messages over a Serial line.
Just setup a permanent SLIP or PPP Connection between the two controllers.
If the network connection between the controllers exists, it acts like a Ethernet/wifi connection. Just the physical layer is RS232. It's speed is bound to the physical speen. Maybe you can use compression on both sides to increase throughput but it might increase latency.
See
https://www.systutorials.com/docs/linux/man/8-slattach/
https://en.wikibooks.org/wiki/Linux_Networking/SLIP_client#Permanent_SLIP_connection_using_a_leased_line_and_slattach.

Originally posted by schorsch_76 with karma: 26 on 2017-10-06
This answer was ACCEPTED on the original site
Post score: 1

