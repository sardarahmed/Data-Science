Q:

Understanding types of hand eye calibration

I have been reading about hand eye calibration for a couple days. Basically, I have 2 setups I want to execute hand eye calibration.

Camera is fixed in a position and arm is moving (eye on base);
Camera is fixed to the robot wrist (eye on hand).

I have read Tsai's paper and a lot of other documents and read some similar question posted here (Hand Eye Calibration)
I also, have found some libraries that I can achieve this with ROS. 

easy_handeye: https://github.com/IFL-CAMP/easy_handeye
handeye_calib_camodocal: https://github.com/jhu-lcsr/handeye_calib_camodocal

I believe that both hand-eye setups I described before can be solved with formulation AX=XB (since easy_handeye solves this way). Furthermore, I believe that setup 2 (eye-on-hand) is the classic problem for AX=XB. However, I cannot understand how to model the problem in order to solve for setup 1 (eye-on-base). Also, I cannot understand the difference between AX=XB and AX=ZB (which sometimes is written as AX=YB).
This is a more theoretical question, but I like to understand the theory before start using any tool, otherwise I will have some technical debt that can generate problems in the future. If someone can explain to me or provide material to clarify these points, I will be very grateful.

A:

The references you gave actually have all the information that you need. I think you are maybe getting confused a bit with the different coordinate systems. As the same symbol can have subtle different meanings.

difference between AX=XB and AX=ZB

If you write the transforms with the coordinate subscripts then it becomes more clear. The equations then become:
$$A_{12}X=XB_{12}$$
$$A_{wc}X=Z_{w}B_{wh}$$

$w$ is world origin
$c$ is camera frame
$h$ is hand frame

So $AX=XB$ is used when you have delta transforms. You have the camera on the wrist(scenario 2). You move the robot arm around to estimate $X$, which is the sole quantity you are trying to estimate. Note you don't ever actually care about any absolute poses. You only care about the transforms between 2 poses. If you look at the image you can see that $A$ and $B$ are between different poses. Not from some origin.

$AX=ZB$ is used when you have or are interested in the poses with respect to some coordinate frame(e.g World). You then need an extra term to represent this transform which is $Z$. Now $Z$ might be given to you are it might be something you have to simultaneously estimate. It depends on your specific problem.
The images in the stackoverflow post you link to show this quite well. The parameters with the question marks are the ones you are trying to estimate.

1 (eye-on-base)

It is a bit different then the general $AX=XB$ or $AX=ZB$ as here $X$ is not constant. Instead it is the value that changes and we are interested in estimating $A$.
The equation should be something like this
$$ A_{bc}X_{ch}=B_{bh}$$

$b$ is the robot base

and could be modified to look like $AX=ZB$ by adding a world coordinate frame.
$$ A_{wc}X_{ch}=Z_{wb}B_{bh}$$
which corresponds to the picture.
 
To solve this you put a marker on your robot hand so the camera can track it as seen in your link here. $Z_{wb}$ is arbitrary and depends on what you consider your origin. $B_{bh}$ comes from your odometry/encoders, and $X_{ch}$ comes from the marker tracking. You can then solve for $A_{wc}$

