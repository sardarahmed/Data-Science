Q:

Force rosmake to use parameters?

Hi!
I'm trying to to use threading in RosAria.cpp, but I need to compile the cpp file using:
"g++ thread.cpp -pthread -std=c++11 -Wl,--no-as-needed". How can I force rosmake to include the parameter "-pthread -std=c++11 -Wl,--no-as-needed" when compiling?
I need to thread this way because I'm using cin to ask for user input, and the other thread needs to check sensor inputs and control the robot based on this. Cin is blocking/waiting for user input and can therefore not run on the same thread AFAIK.

Originally posted by Mokona on ROS Answers with karma: 1 on 2014-03-11
Post score: 0

Original comments
Comment by ReedHedges on 2014-03-14:
You could also create a client node that gets the user input and perform the control, rather than modifying the rosaria driver node.

A:

if you use catkin_make you can add compiler flags (as with cmake) via command line (not sure whether this is possible with rosmake):
catkin_make -DCMAKE_CXX_FLAGS=-pthread\ -std=c++11\ -Wl,--no-as-needed -DCMAKE_C_FLAGS=-pthread\ -std=c++11\ -Wl,--no-as-needed

Note that you need to escape the spaces.
Or you can set them in your CMakeLists.txt (works for both, catkin and rosmake):
set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread -std=c++11 -Wl,--no-as-needed" ) 
set( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -pthread -std=c++11 -Wl,--no-as-needed" ) 

Linker flags set with CMAKE_EXE_LINKER_FLAGS, CMAKE_MODULE_LINKER_FLAGS, CMAKE_SHARED_LINKER_FLAGS

Originally posted by Wolf with karma: 7555 on 2014-03-13
This answer was ACCEPTED on the original site
Post score: 1

