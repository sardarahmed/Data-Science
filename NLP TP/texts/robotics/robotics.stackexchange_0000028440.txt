Q:

How correctly move joints by SetPositionPID() and SetPositionTarget()

I want to set a joint to a certain angle properly and  get its torque using Joint::GetForceTorque() in the process.
So I follow this tutorials try to control a joint,
I try SetPositionPID() and SetPositionTarget() to contorl a joint ,but when I do this the joint cannt
stop even its PID be set  to zero by SetPositionPID(name, common::PID(0, 0, 0)).
P.S. I am using Gazebo-8, WITHOUT ROS. I have added (part of) the code from my plugin below.
    std::string name;
    if (update_num == 0)
    {

        //Joint velocity using PID controller
        this->jointController.reset(new physics::JointController(this->model));
        this->jointController->AddJoint(model->GetJoint("purple_joint"));
        name = model->GetJoint("purple_joint")->GetScopedName();
        //          this->jointController->SetVelocityPID(name, common::PID(100, 0, 0));
        this->jointController->SetPositionPID(name, common::PID(100, 0, 0));
        this->jointController->SetPositionTarget(name,1.57);
        //          this->jointController->SetVelocityTarget(name, 1.0);

    }
    else if (update_num < 200)
    {
        // Must update PID controllers so they apply forces
        this->jointController->Update();
    }
    else if (update_num >= 200)
    {
        name = model->GetJoint("purple_joint")->GetScopedName();
        this->jointController->SetPositionPID(name, common::PID(0, 0, 0));
        this->jointController->SetPositionTarget(name,0);

    }
    update_num++;

Is there something wrong and why?
How to set a joint to a certain angle properly and  get its torque using Joint::GetForceTorque() in this process?
Best Regards!
xinaxjm

Originally posted by xianxjm on Gazebo Answers with karma: 15 on 2018-03-21
Post score: 1

A:

The controller cannot stop the joint if the PID gains are set to common::PID(0, 0, 0).
The gains control how much torque the controller will apply. All zeros means everything in the equation used to calculate the torque applied by the controller is being multiplied by zero. Some torque needs to be applied to stop a moving joint.
Often the gains on the controller are set once at startup.
if (update_num == 0)
{
  // Initialize the controller with the gains to use
  this->jointController->SetPositionPID(name, common::PID(100, 0, 0));
}
else if (update_num == X)
{
  // time to tell the joint to go to position 1.57
  this->jointController->SetPositionTarget(name, 1.57);
}
else if (update_num == Y)
{
  // time to tell the joint to go back to position 0
  this->jointController->SetPositionTarget(name, 0);
}
// The controller applies torque when it is updated.
// This must be called every update that the controller should be controlling the joint position
this->jointController->Update();

You might be interested in reading
https://en.wikipedia.org/wiki/PID_controller#Mathematical_form

Originally posted by sloretz with karma: 558 on 2018-03-21
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by xianxjm on 2018-04-25:
thank you very much~

