Q:

vslam compilation error

Following is the error reported on rosmake in laser_slam. It is checked out from svn, Revision: 39215.
I am building it on ROS electric, Ubuntu 10.04
Most errors are invalid conversion from 'const double*' to 'double *' . I was able to build previous revision in diamondback.
[rosmake-0] Starting >>> vocabulary_tree [ make ]                                                                                                            
[ rosmake ] Last 40 linesa: 5.8 sec ] [ vocabulary_tree: 0.4 sec ]                                                                [ 2 Active 59/86 Complete ]
{-------------------------------------------------------------------------------
  make[3]: Entering directory `/opt/ros/topological_navigation_rosinstall/vslam/sba/build'
  make[3]: Leaving directory `/opt/ros/topological_navigation_rosinstall/vslam/sba/build'
  [ 32%] Built target sba_vis
  make[3]: Entering directory `/opt/ros/topological_navigation_rosinstall/vslam/sba/build'
  make[3]: Leaving directory `/opt/ros/topological_navigation_rosinstall/vslam/sba/build'
  make[3]: Entering directory `/opt/ros/topological_navigation_rosinstall/vslam/sba/build'
  [ 34%] Building CXX object CMakeFiles/sba.dir/src/csparse.o
  In file included from /opt/ros/topological_navigation_rosinstall/vslam/sba/include/sba/csparse.h:74,
                   from /opt/ros/topological_navigation_rosinstall/vslam/sba/src/csparse.cpp:40:
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h: In member function ‘void sba::jacobiBPCG<N>::mMV2(std::vector<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N>, Eigen::aligned_allocator<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N> > >&, const Eigen::VectorXd&, Eigen::VectorXd&) [with int N = 6]’:
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h:300:   instantiated from ‘int sba::jacobiBPCG<N>::doBPCG2(int, double, std::vector<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N>, Eigen::aligned_allocator<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N> > >&, std::vector<std::map<int, Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N>, std::less<int>, Eigen::aligned_allocator<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N> > >, std::allocator<std::map<int, Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N>, std::less<int>, Eigen::aligned_allocator<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N> > > > >&, Eigen::VectorXd&, Eigen::VectorXd&, bool, bool) [with int N = 6]’
  /opt/ros/topological_navigation_rosinstall/vslam/sba/src/csparse.cpp:392:   instantiated from here
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h:152: error: invalid conversion from ‘const double*’ to ‘double*’
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h:152: error:   initializing argument 1 of ‘Eigen::Map<MatrixType, MapOptions, StrideType>::Map(typename Eigen::MapBase<Eigen::Map<PlainObjectType, MapOptions, StrideType>, (Eigen::internal::accessors_level::has_write_access ? (Eigen::AccessorLevels)1u : (Eigen::AccessorLevels)0u)>::PointerType, const StrideType&) [with PlainObjectType = Eigen::Matrix<double, 6, 1, 0, 6, 1>, int MapOptions = 1, StrideType = Eigen::Stride<0, 0>]’
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h:300:   instantiated from ‘int sba::jacobiBPCG<N>::doBPCG2(int, double, std::vector<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N>, Eigen::aligned_allocator<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N> > >&, std::vector<std::map<int, Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N>, std::less<int>, Eigen::aligned_allocator<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N> > >, std::allocator<std::map<int, Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N>, std::less<int>, Eigen::aligned_allocator<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N> > > > >&, Eigen::VectorXd&, Eigen::VectorXd&, bool, bool) [with int N = 6]’
  /opt/ros/topological_navigation_rosinstall/vslam/sba/src/csparse.cpp:392:   instantiated from here
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h:159: error: invalid conversion from ‘const double*’ to ‘double*’
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h:159: error:   initializing argument 1 of ‘Eigen::Map<MatrixType, MapOptions, StrideType>::Map(typename Eigen::MapBase<Eigen::Map<PlainObjectType, MapOptions, StrideType>, (Eigen::internal::accessors_level::has_write_access ? (Eigen::AccessorLevels)1u : (Eigen::AccessorLevels)0u)>::PointerType, const StrideType&) [with PlainObjectType = Eigen::Matrix<double, 6, 1, 0, 6, 1>, int MapOptions = 1, StrideType = Eigen::Stride<0, 0>]’
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h:300:   instantiated from ‘int sba::jacobiBPCG<N>::doBPCG2(int, double, std::vector<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N>, Eigen::aligned_allocator<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N> > >&, std::vector<std::map<int, Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N>, std::less<int>, Eigen::aligned_allocator<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N> > >, std::allocator<std::map<int, Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N>, std::less<int>, Eigen::aligned_allocator<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N> > > > >&, Eigen::VectorXd&, Eigen::VectorXd&, bool, bool) [with int N = 6]’
  /opt/ros/topological_navigation_rosinstall/vslam/sba/src/csparse.cpp:392:   instantiated from here
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h:160: error: invalid conversion from ‘const double*’ to ‘double*’
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h:160: error:   initializing argument 1 of ‘Eigen::Map<MatrixType, MapOptions, StrideType>::Map(typename Eigen::MapBase<Eigen::Map<PlainObjectType, MapOptions, StrideType>, (Eigen::internal::accessors_level::has_write_access ? (Eigen::AccessorLevels)1u : (Eigen::AccessorLevels)0u)>::PointerType, const StrideType&) [with PlainObjectType = Eigen::Matrix<double, 6, 1, 0, 6, 1>, int MapOptions = 1, StrideType = Eigen::Stride<0, 0>]’
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h: In member function ‘void sba::jacobiBPCG<N>::mMV2(std::vector<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N>, Eigen::aligned_allocator<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N> > >&, const Eigen::VectorXd&, Eigen::VectorXd&) [with int N = 3]’:
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h:300:   instantiated from ‘int sba::jacobiBPCG<N>::doBPCG2(int, double, std::vector<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N>, Eigen::aligned_allocator<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N> > >&, std::vector<std::map<int, Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N>, std::less<int>, Eigen::aligned_allocator<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N> > >, std::allocator<std::map<int, Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N>, std::less<int>, Eigen::aligned_allocator<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N> > > > >&, Eigen::VectorXd&, Eigen::VectorXd&, bool, bool) [with int N = 3]’
  /opt/ros/topological_navigation_rosinstall/vslam/sba/src/csparse.cpp:746:   instantiated from here
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h:152: error: invalid conversion from ‘const double*’ to ‘double*’
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h:152: error:   initializing argument 1 of ‘Eigen::Map<MatrixType, MapOptions, StrideType>::Map(typename Eigen::MapBase<Eigen::Map<PlainObjectType, MapOptions, StrideType>, (Eigen::internal::accessors_level::has_write_access ? (Eigen::AccessorLevels)1u : (Eigen::AccessorLevels)0u)>::PointerType, const StrideType&) [with PlainObjectType = Eigen::Matrix<double, 3, 1, 0, 3, 1>, int MapOptions = 1, StrideType = Eigen::Stride<0, 0>]’
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h:159: error: invalid conversion from ‘const double*’ to ‘double*’
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h:159: error:   initializing argument 1 of ‘Eigen::Map<MatrixType, MapOptions, StrideType>::Map(typename Eigen::MapBase<Eigen::Map<PlainObjectType, MapOptions, StrideType>, (Eigen::internal::accessors_level::has_write_access ? (Eigen::AccessorLevels)1u : (Eigen::AccessorLevels)0u)>::PointerType, const StrideType&) [with PlainObjectType = Eigen::Matrix<double, 3, 1, 0, 3, 1>, int MapOptions = 1, StrideType = Eigen::Stride<0, 0>]’
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h:300:   instantiated from ‘int sba::jacobiBPCG<N>::doBPCG2(int, double, std::vector<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N>, Eigen::aligned_allocator<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N> > >&, std::vector<std::map<int, Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N>, std::less<int>, Eigen::aligned_allocator<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N> > >, std::allocator<std::map<int, Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N>, std::less<int>, Eigen::aligned_allocator<Eigen::Matrix<double, N, N, ((Eigen::._95)0u | (((N == 1) && (N != 1)) ? (Eigen::._95)1u : (((N == 1) && (N != 1)) ? (Eigen::._95)0u : (Eigen::._95)0u))), N, N> > > > >&, Eigen::VectorXd&, Eigen::VectorXd&, bool, bool) [with int N = 3]’
  /opt/ros/topological_navigation_rosinstall/vslam/sba/src/csparse.cpp:746:   instantiated from here
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h:160: error: invalid conversion from ‘const double*’ to ‘double*’
  /opt/ros/topological_navigation_rosinstall/vslam/bpcg/include/bpcg/bpcg.h:160: error:   initializing argument 1 of ‘Eigen::Map<MatrixType, MapOptions, StrideType>::Map(typename Eigen::MapBase<Eigen::Map<PlainObjectType, MapOptions, StrideType>, (Eigen::internal::accessors_level::has_write_access ? (Eigen::AccessorLevels)1u : (Eigen::AccessorLevels)0u)>::PointerType, const StrideType&) [with PlainObjectType = Eigen::Matrix<double, 3, 1, 0, 3, 1>, int MapOptions = 1, StrideType = Eigen::Stride<0, 0>]’
  make[3]: *** [CMakeFiles/sba.dir/src/csparse.o] Error 1
  make[3]: Leaving directory `/opt/ros/topological_navigation_rosinstall/vslam/sba/build'
  make[2]: *** [CMakeFiles/sba.dir/all] Error 2
  make[2]: Leaving directory `/opt/ros/topological_navigation_rosinstall/vslam/sba/build'
  make[1]: *** [all] Error 2
  make[1]: Leaving directory `/opt/ros/topological_navigation_rosinstall/vslam/sba/build'

Originally posted by prince on ROS Answers with karma: 660 on 2012-03-27
Post score: 0

A:

As you probably know, vslam is not being actively maintained.
Nevertheless, if you have a fix for these errors, please open a defect ticket and attach your patch. Presumably, someone will commit the change for you.

Originally posted by joq with karma: 25443 on 2012-03-27
This answer was ACCEPTED on the original site
Post score: 0

