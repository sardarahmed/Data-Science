Q:

What good robotics software platforms / operating systems are available?

My company will soon be starting a brand new robotics project, and we are still trying to decide whether we should design and code a robotics software platform from scratch, or if there are any good existing ones.
It would be very useful if there was a software platform which was commonly used among both academics and industry so that our robotic system was generally compatible with others, and so that people were already familiar with it.
We would like the software platform to be able to:

Integrate new robotic hardware components easily.
Already contain a wide array of useful data processing and visualisation tools
Make efficient use of computing hardware

A:

ROS is quickly becoming the new standard for both industrial and research robotics. Most research groups I know of are adopting ROS for their work and then pushing their results back into the open for everyone to use and improve. Willow Garage is developing a suite of hardware and software platforms which are all centered around ROS at their core. ROS is a good place to start your search.

A:

The Robot Construction Kit is an alternative to ROS. It is driven towards model-driven engineering and design/management of complex systems. It also is driven towards "not being tightly dependent on Rock". Most of the algorithms / drivers in Rock are independent of the component layer. See also this page for a quick summary of the differences between Rock and ROS.
As a previous answer points out, ROS is mainly used as a thin communication library. Rock's component layer is thicker, to provide the tools necessary to scale to complex systems. 
What you have to understand is this: in this day and age, the only open-source robotic software worth looking at is framework-independent (OpenCV, PCL, OpenRave, Gazebo, ...). Even Willow Garage finally understood this. Therefore, it can be integrated with a minimal amount of work in any framework.
Now: your best pick also depends on your aim. If what you want is sell hardware, then it is well possible that having a ROS node is your best choice (even though having a good driver library that is then integrated into a ROS node is even better).

A:

Orocos

It is one of the oldest open source framework in robotics, under development since 2001, and with professional industrial applications and products using it since about 2005. The focus of Orocos has always been to provide a hard real- time capable component framework — the so-called Real-Time Toolkit (RTT) implemented in C++ — and as independent as possible from any communication middleware and operating system.

As @BarretAmes said there are integrations which allows the implementation of hybrid systems, where Orocos and other Software Framework work together. 

ROS Orocos Integration for ROS and Orocos integration
JOrocos for Java and ROS integration

