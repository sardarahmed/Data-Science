Q:

gzserver dies after roslaunching rrbot

I tried running the plugin camera sensor from tutorial: http://gazebosim.org/wiki/Tutorials/1.9/ROSMotorandSensorPlugins
After launching rviz:
roslaunch rrbot_description rrbot_rviz.launch

I get (in gazebo terminal):
[gazebo-1] process has died [pid 6887, exit code 139, cmd /home/wojciech/catkin_ws/src/gazebo_ros_pkgs/gazebo_ros/scripts/gzserver /home/wojciech/catkin_ws/src/gazebo_ros_demos/rrbot_gazebo/worlds/rrbot.world __name:=gazebo __log:=/home/wojciech/.ros/log/dc769250-24b1-11e3-ae77-78e400c426ae/gazebo-1.log].
log file: /home/wojciech/.ros/log/dc769250-24b1-11e3-ae77-78e400c426ae/gazebo-1*.log

If anyone knows or has any ideas what's wrong, please feel free to suggest. Many thanks!

Originally posted by Wojciech on ROS Answers with karma: 66 on 2013-09-23
Post score: 2

Original comments
Comment by Menglord on 2013-11-28:
I have the same problem.  When my computer first boots up, I run the command rosluanch rrbot_gazebo rrbot_world.launch , it works well, then ctrl+C to kill the process and run the same command, the poblem orrured as you described. Have you found the way to deal with it?
Comment by mfran89 on 2014-02-24:
I think to solve Menglords problem you just need to use the command "killall gzserver", it might be happening because Gazebo is not closing correctly so one way to deal with that is using the above command.
Comment by joq on 2014-02-24:
Yes, gzxerver sometimes fails to shut down. You should ask about this on http://answers.gazebosim.org/
Comment by nbanyk on 2014-07-22:
was there ever a solution to this?

A:

I have this problem, too. In my case, I consider it as a laser problem.(because the process always die approximately after loading the laser.)
You may try this:
First, replace the <sensor> tag of hokuyo in rrbot.gazebo
<sensor type="gpu_ray" name="head_hokuyo_sensor">

with
<sensor type="ray" name="head_hokuyo_sensor">

Second, replace
<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">

with
<plugin name="hokuyo_node" filename="libgazebo_ros_laser.so">

So, after this process, the whole <gazebo> tag of hokuyo is:
<!-- hokuyo -->
<gazebo reference="hokuyo_link">
  <sensor type="ray" name="head_hokuyo_sensor">
    <pose>0 0 0 0 0 0</pose>
    <visualize>false</visualize>
    <update_rate>40</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>720</samples>
          <resolution>1</resolution>
          <min_angle>-1.570796</min_angle>
          <max_angle>1.570796</max_angle>
        </horizontal>
      </scan>
      <range>
        <min>0.10</min>
        <max>30.0</max>
        <resolution>0.01</resolution>
      </range>
      <noise>
        <type>gaussian</type>
        <!-- Noise parameters based on published spec for Hokuyo laser
             achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
             stddev of 0.01m will put 99.7% of samples within 0.03m of the true
             reading. -->
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise>
    </ray>
    <plugin name="hokuyo_node" filename="libgazebo_ros_laser.so">
      <topicName>/rrbot/laser/scan</topicName>
      <frameName>hokuyo_link</frameName>
    </plugin>
  </sensor>
</gazebo>

I use ros hydro, and this works for me.
Please feel free to suggest any better methods, thanks!

Originally posted by WeiShih with karma: 16 on 2015-11-29
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by dinesh on 2016-08-23:
has anyone tried this method in indigo also, cas im also getting same error. cas of which im installing ros hydro in VM just cas of this error.

