Q:

Difference between rospy.Service and rospy.Serviceproxy

Hi
When I'm learning the concepts about ROS service from this web :http://wiki.ros.org/rospy/Overview/Services, I was confused by these two similar functions rospy.Service and rospy.Serviceproxy. From my understanding , both functions do the same things as they pass the same arguments. Hope someone can address my question.

Originally posted by hammerli on ROS Answers with karma: 5 on 2020-06-17
Post score: 0

A:

Hi @hammerli,

Therospy.Servicedirective returns an Service instance with a callback for the node to provide a service communication.
The rospy.ServiceProxydirective returns a callable instance that is used to perform a request to the server client.

To provide a simple example I will use the main tutorial about this paradigm of communication.
Let us say that you have two nodes: Node A provides a service with the name add_integers to sum two integer numbers, so it needs to use rospy.Service to let ROS know that it provides this kind of service for anyone willing to compute the sum of two integers. Meanwhile, Node B, that struggles to compute the sum of two numbers, suddenly realised that it can use the implementation provided by Node A and solve its problem. In that case, Node B, will use a rospy.ServiceProxy instance refering to the add_integers Service to request Node A with the sum of two integer that he provides. With that particular set up you have a Server/Client architecture where one node processes requests (Node A) and another one just requests things (Node B).
I hope that helps you to understand better both directives.
Cheers.

Originally posted by Weasfas with karma: 1695 on 2020-06-18
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by hammerli on 2020-06-22:
Thanks for your explanation, it really helps!

