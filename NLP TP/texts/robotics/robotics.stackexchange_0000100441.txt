Q:

Two index.yaml files

Hi,
Is it possible to have two index.yaml files in ~/.config/rosdistro/config.yaml?  What I'm trying to do is to basically have ros source some proprietary packages without having to fork an upstream rosdistro. Currently I'm able to do this by just adding a yaml in /etc/ros/rosdep/sources.list.d/50-my-packages.yaml that contains the ros-package name and the apt-package name for the proprietary packages.
However, based on the note in 20-default.list, I'm worried that this method will become deprecated. After poking around a bit, it looks like all newer packages are referred to by looking at the index file for the rosdistro. However, some circumstances makes me have to depend on a rosdistro that's already been forked from the main, and I don't want to fork the forked distro, but I still need access to the packages in it.
I'm also interested to know if this is possible in ROS2 if it isn't in ROS1.

Originally posted by yuzuser on ROS Answers with karma: 1 on 2021-11-03
Post score: 0

A:

If these are proprietary packages that you're building through an external mechanism what you're doing, using the custom rosdep.yaml file is correct.
There's no plans to deprecate custom rosdep rules.
The comments in 20-default.list is about how we import packages into a rosdistro. The active rosdistro will currently be queried by the rosdistro API. We used to require listing the yaml files generated for the rosdistro explicitly as the sources which is much more prone to going out of date. (the old gbprosdistro rules) We can probably remove that legacy boilerplate soon. It has been kept for backwards compatibility on very old systems but you don't need to worry about it.

Originally posted by tfoote with karma: 58457 on 2021-11-03
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by yuzuser on 2021-11-04:
Great! Thanks for answering!

