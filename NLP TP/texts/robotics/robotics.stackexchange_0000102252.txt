Q:

Is it possible to subscribe to an action feedback?

Hi, I was considering to is it possible to subscribe to a action feedback from another node. I tried it to subscribe a moveit2 action feedback ( /scaled_joint_trajectory_controller/follow_joint_trajectory/_action/feedback) from a node.
Before run the node:
ros2 topic info /scaled_joint_trajectory_controller/follow_joint_trajectory/_action/feedback
Type: control_msgs/action/FollowJointTrajectory_FeedbackMessage
Publisher count: 1
Subscription count: 2

After run the node
ros2 topic info /scaled_joint_trajectory_controller/follow_joint_trajectory/_action/feedback
Type: [‘control_msgs/action/FollowJointTrajectory_Feedback’, ‘control_msgs/action/FollowJointTrajectory_FeedbackMessage’]
Publisher count: 1
Subscription count: 3

But when action feedback starts to come , in node callback function is not triggering. And also when i check the node info
ros2 node info /anlys_node 
/anlys_node
Subscribers:

Publishers:
/parameter_events: rcl_interfaces/msg/ParameterEvent
/rosout: rcl_interfaces/msg/Log
Service Servers:
/anlys_node/describe_parameters: rcl_interfaces/srv/DescribeParameters
/anlys_node/get_parameter_types: rcl_interfaces/srv/GetParameterTypes
/anlys_node/get_parameters: rcl_interfaces/srv/GetParameters
/anlys_node/list_parameters: rcl_interfaces/srv/ListParameters
/anlys_node/set_parameters: rcl_interfaces/srv/SetParameters
/anlys_node/set_parameters_atomically: rcl_interfaces/srv/SetParametersAtomically
Service Clients:

Action Servers:

Action Clients:
/scaled_joint_trajectory_controller/follow_joint_trajectory: control_msgs/action/FollowJointTrajectory_Feedback

As seen above , its created Action Clients not Subscribers.
I didn’t get what is up going here, am i doing something wrong or is there a bug ?
Here is my node script.
 #!/usr/bin/env python3

 import rclpy
 from rclpy.node import Node

 import numpy as np
 import matplotlib.pyplot as plt
 import yaml

from control_msgs.action import FollowJointTrajectory

class PlanAnlys(Node):

def __init__(self):
    super().__init__('anlys_node')

    self.get_logger().info("Node Init")

    self.create_subscription(FollowJointTrajectory.Feedback,"/scaled_joint_trajectory_controller/follow_joint_trajectory/_action/feedback",self.save_data,10)

    
    

def save_data(self,msg):
    
    self.get_logger().info("Test")

rclpy.init()

node = PlanAnlys()

rclpy.spin(node)

node.destroy_node()
rclpy.shutdown()

Originally posted by muratcngncr on ROS Answers with karma: 56 on 2022-08-09
Post score: 3

Original comments
Comment by Fetullah Atas on 2022-08-09:
did you do a ros2 topic echo to make sure data is on the topic ?, also be careful with QOS compatibility of publisher and subscriber,
Comment by muratcngncr on 2022-08-10:
Yeah when i send a goal to action server. I can see the feedback topic via ros2 topic  echo.

A:

The key is in the type. If you show the topic (ros2 topic list --include-hidden-topics -t) you'll probably see that the type of the feedback is not "FollowJointTrajectory.Feedback" but FollowJointTrajectory_FeedbackMessage.
That type is hidden as well, but you should be able to import it as follows:
from control_msgs.action._follow_joint_trajectory import FollowJointTrajectory_FeedbackMessage
This worked for me in Humble

Originally posted by iwasinnam with karma: 46 on 2023-05-01
This answer was ACCEPTED on the original site
Post score: 3

