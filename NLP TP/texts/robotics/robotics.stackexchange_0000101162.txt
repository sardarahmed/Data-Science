Q:

Seeking clarity regarding callback queues and ros::spin()

Let's say that we have initialized 2 different nodes inside 2 different main functions. Also assume that each of these two nodes have one subscriber each, subscribing to the topic topic_a. We also have ros::Spin() at the end of each of these 2 main functions.
Would the callbacks corresponding to each of these 2 subscribers be pushed to the same global queue and ros::spin() call from either of the 2 nodes would spin the oldest callback from this queue? Or, there would be 2 callback queues, one for  each node?

Originally posted by skpro19 on ROS Answers with karma: 310 on 2022-02-02
Post score: 0

Original comments
Comment by gvdhoorn on 2022-02-02:
After posting an answer I must say this sounds a lot like a question on an exam, or as part of someone's homework.
Comment by skpro19 on 2022-02-03:
@gvdhoorn I need more time.

A:

Let's say that we have initialized 2 different nodes inside 2 different main functions. Also assume that each of these two nodes have one subscriber each, subscribing to the topic topic_a. We also have ros::Spin() at the end of each of these 2 main functions.

In ROS 1, there is a 1-to-1 correspondence between nodes and processes.
So only a single node can "live" in a specific process (or: program).
Programs do not share any of their internal state by default, which would include any (global) variables.
You also -- by default -- cannot have "two different main functions" in a single program. The compiler will not allow you.
In my answer below I've assumed that "two different main functions" therefore means: "two different programs".

Would the callbacks corresponding to each of these 2 subscribers be pushed to the same global queue and ros::spin() call from either of the 2 nodes would spin the oldest callback from this queue?

Due to the way operating systems isolate processes from each other, it's impossible for two nodes to share a single callback queue (or to share anything of their internal state really).
In the end, this is not really a "ROS question". Distilling it down to its essence, you ask whether process_A can access internal state of process_B. For any modern operating system, and without using special "tricks" (ie: shared memory), the answer will always be: no.

Originally posted by gvdhoorn with karma: 86574 on 2022-02-02
This answer was ACCEPTED on the original site
Post score: 2

