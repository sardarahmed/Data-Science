Q:

Signifiance of fixed_frame parameter in lookupTransform function

I was going through the implementation of the lookupTransform function defined inside the base_local_planner::getGoalPose() function.
What is the significance of the fixed_frame parameter in tf2_ros::Buffer::lookupTransform (target_frame, target_time, source_frame, source_time, fixed_frame, timeout)  function ?
The documentation mentions the following - Get the transform between two frames by frame ID assuming fixed frame.
What's preventing us to always go for the other implementation of the lookupTransform function -   tf2_ros::Buffer::lookupTransform (target_frame, source_frame, time, timeout) ?

Originally posted by skpro19 on ROS Answers with karma: 310 on 2021-07-14
Post score: 1

A:

If you use the advanced API you're transporting the data in time. As such you need to tell tf which coordinate frame it is considered fixed during the change in time.
There's tutorials on this in the main tf2 tutorials for both C++ and Python
You can also read about it in the 2013 paper: http://wiki.ros.org/Papers/TePRA2013_Foote

Originally posted by tfoote with karma: 58457 on 2021-07-15
This answer was ACCEPTED on the original site
Post score: 2

