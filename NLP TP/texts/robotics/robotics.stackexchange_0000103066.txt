Q:

Does the package robot_localization need the position transform between sensors?

My robot has a IMU sensor and a GPS.Now I want to use the package robot_localization.
How have I published the position transform?
For instance,I set the frame_id of IMU sensor to 'imu', set the frame_id of GPS to 'gps' and the robot's frame_id is 'base_link'.
So I publish the transform to the node /tf:
For IMU sensor,frame_id is 'base_link' and child_frame_id is 'imu', x:... y:... z:...
For GPS,frame_id is 'base_link' and child_frame_id is 'gps', x:... y:... z:...
Am I right?Will the robot_localization package automatically acquire these transforms when doing merging?

Originally posted by peter_feng on ROS Answers with karma: 3 on 2023-02-23
Post score: 0

A:

The best is probably to have all these frames defined in a URDF. This is basically the model of your robot.
robot_state_publisher can parse it and publish both the fixed and time-varying transforms.

Originally posted by Olivier Kermorgant with karma: 280 on 2023-06-05
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Tom Moore on 2023-06-05:
Yes, this is the correct way to go, @peter_feng, and the EKF will still work with the transforms when they are defined this way.
Comment by chased11 on 2023-06-05:
Does using the static transform publishers from base_link to imu_link and gps_link not suffice? (i.e. define base_link as COR and broadcast static transform between [-0.5,0,0] if IMU is 0.5 m behind the COR)
Comment by Tom Moore on 2023-06-06:
Yes, using a static_transform_publisher is fine, and was my original suggestion, but putting together a URDF model for your bot is always a good idea.

