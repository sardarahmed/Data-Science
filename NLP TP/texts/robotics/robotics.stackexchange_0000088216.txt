Q:

Command line argument passing in rosrun

Hi All,
I am trying to pass the command line arguments while running
  rosrun <package> <node> <parameter> 

So that a particular block of code could be executed based on the parameter.
Below is the approach.
     int main(int argc, char *argv[])
     {  
            std::string param;
            ros::init(argc, argv, "node_name");
            ros::NodeHandle nh("~");
            ROS_INFO("Got parameter : %s", param.c_str());

            if(nh.getParam("blue", param))
            {
                 blue();    //Run program blue
            }
            else if(nh.getParam("green", param))
            {
                green();
            }
            else
            {
                 cout << "Don't run anything !! " << endl;
            }
            return 0;
       }

Also when I try to print the value of param it shows nothing.
Can anybody help me to fix this please.
Thank you,
KK

Originally posted by kk2105 on ROS Answers with karma: 262 on 2018-07-30
Post score: 3

A:

I was able to get the expected result by updating the code as given below.
 int main(int argc, char *argv[])
 {  
       ros::init(argc, argv, "node_name");
       std::string param;
       ros::NodeHandle nh("~");
       std::string check;
       nh.getParam("param", check);
       cout << check << endl;
       ROS_INFO("Got parameter : %s", check.c_str());

        if(check.compare("blue") == 0)
        {
          cout << check << endl;
          blue();
        }
         else if(check.compare("greeen") == 0)
        {
          cout << check << endl;
          green();
        }
        else
        {
          cout << "Control has come out !!! " << endl;
        }  
        return 0;
  }

command to run
 rosrun package node_name _param:=blue
 rosrun package node_name _param:=green

Originally posted by kk2105 with karma: 262 on 2018-07-31
This answer was ACCEPTED on the original site
Post score: 4

