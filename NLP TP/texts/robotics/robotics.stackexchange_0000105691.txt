Q:

Is there a way to publish a ROS AnyMsg in Python?

I am trying to publish a rospy.msg.AnyMsg by doing the following:
import rospy
.
.
.
publisher = rospy.Publisher('jason_topic',
                            rospy.msg.AnyMsg,
                            queue_size=10)

publisher.publish(ros_message)

I get the following stack trace:
Traceback (most recent call last):
  File "subscriber_any.py", line 26, in <module>
    publisher.publish(ros_message)
  File "/opt/ros/noetic/lib/python3/dist-packages/rospy/topics.py", line 879, in publish
    data = args_kwds_to_message(self.data_class, args, kwds)
  File "/opt/ros/noetic/lib/python3/dist-packages/rospy/msg.py", line 118, in args_kwds_to_message
    if len(data_class._slot_types) == 0:
AttributeError: type object 'AnyMsg' has no attribute '_slot_types'

I did a print(dir(rospy.msg.AnyMsg())) and verified that there was no attribute _slot_types. Is what I am trying to do possible and if so how?

A:

This is not how AnyMsg is intended to be used, and I wouldn't expect it to be possible to do this. As the error message shows, AnyMsg is missing key attributes that are required for being published: it's only useful for subscribers, so you can subscribe to anything and access the raw data. AnyMsg is usually not the tool you want to be using, though. If you have the message you want to use, you should use it.
If your goal is to publish to a topic when you don't have the message beforehand, you can:

Subscribe to the topic using AnyMsg
Use this newly constructed subscriber to get the topic's message type
Use this message type to construct a publisher
Use genpy to dynamically construct the message

...But you probably don't need (or want) to do anything that complicated: just use the correct message type whenever possible.

