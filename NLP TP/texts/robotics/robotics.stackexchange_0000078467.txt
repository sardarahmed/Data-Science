Q:

How to build a package from source on Ubuntu MATE 16.04 LTS and ROS Kinetic?

There are two packages that I could build from source for their respective reasons. The first one is ardrone-autonomy. This package, as indicated by this question, is not being installed on my computer with the command sudo apt-get install ros-kinetic-ardrone-autonomy. The other package is lsd-slam. This package, as indicated by this question, must be built from source. lsd-slam is yet to be released for ros-kinetic.
Now The standard instructions for building from source are:
$ cd ~/ros_catkin_ws
$ rosinstall_generator ros_desktop <package_name> --rosdistro kinetic --deps --wet-only --tar > kinetic-custom_ros.rosinstall
$ wstool merge -t src kinetic-custom_ros.rosinstall
$ wstool update -t src
$ rosdep install --from-paths src --ignore-src --rosdistro kinetic -y -r --os=debian:jessie
$ sudo ./src/catkin/bin/catkin_make_isolated --install -DCMAKE_BUILD_TYPE=Release --install-space /opt/ros/kinetic

But when you install kinetic using the command, sudo apt-get install ros-kinetic-desktop-full, the folder ~/ros_catkin_ws is not created in your root directory. So how exactly am I supposed to proceed with the installation of ardrone-autonomy? I know these are the instructions for installing lsd-slam, but this also need me to use catkin_make and that would need ~/ros_catkin_ws. What exactly am I supposed to do here?

Originally posted by sharan100 on ROS Answers with karma: 83 on 2017-01-20
Post score: 3

Original comments
Comment by gvdhoorn on 2017-01-20:
Those are definitely not the "standard instructions for building from source", if only for the fact that you are forcing rosdep to consider dependency mapping for Debian Jessie. Also: this will build all of ROS, which is completely unnecessary (as I mentioned in #q252390).
Comment by sharan100 on 2017-01-20:
So how would I go about building from source?

A:

See the answer to #q208963, but to make it slightly more generic (so this is an example set of commands for a 'regular' ROS package, not one with special requirements and / or system dependencies that have to be built from sources):
# make sure you have sourced the correct setup.bash file for your ROS distribution already

# go to workspace src space
cd /path/to/your/catkin_ws/src

# acquire a copy of the sources of the package that you want to build.
# For a package hosted on github, you'd do something like (where
# $organisation and $package obviously depend on what it is that you
# want to build):
git clone https://github.com/$organisation/$package.git

# change to the workspace base directory (this has to be the working directory
# in a minute anyway when building, and we can shorten the 'rosdep' command a bit)
cd /path/to/your/catkin_ws

# we need to make sure you have all dependencies installed.

# once in a while, update our local database
rosdep update

# then check (and install) for any missing dependencies
# NOTE: we ask rosdep to check for ROS Indigo here, if you are using another ROS
# distribution, substitute that there (ie: for Kinetic, use 'kinetic', without the quotes)
rosdep install --from-paths src/ --ignore-src --rosdistro indigo

# now build
catkin_make

If compilation was successful, you should now have a build and devel directory next to the src directory, and after sourcing /path/to/your/catkin_ws/devel/setup.bash you should now be able to use the package you just built from sources.
Note: just cloning a package from somewhere is not enough. Packages most likely depend on other packages and / or system libraries to be present, and we use rosdep to install those for us. We do depend on the author(s) of the package that you are building to have properly declared their dependencies. If they haven't done so, catkin_make will tell you about that (in the form of "Can't find .." etc errors).

Originally posted by gvdhoorn with karma: 86574 on 2017-01-20
This answer was ACCEPTED on the original site
Post score: 19

Original comments
Comment by sharan100 on 2017-01-23:
I have posted a new question here related to this topic.

