Q:

catkin_make issue updating .srv and .cpp file simultaneously

Think of a situation where rosnode (written in c++) is using messages generated by a .srv file. You want to add a field to the .srv file and use it in the rosnode. If you make these changes simultaneously, catkin_make will fail because it does not yet recognize the new field you have added. Is there a way to make sure that message_generation occurs before compilation of c++ files during catkin_make? Would this even avoid the issue?

Originally posted by stbuebel on ROS Answers with karma: 5 on 2019-01-28
Post score: 0

A:

The catkin message documentation describes how to do this. You can have messages in the same package as your executable, or in another package. In either case, if you're building with catkin_make, you need to tell cmake about the dependency between your C++ code and the messages.
If your messages are in the same package, you can use:
add_dependencies(your_program ${${PROJECT_NAME}_EXPORTED_TARGETS})

If you use messages from a different package, you can use:
add_dependencies(your_program ${catkin_EXPORTED_TARGETS})

If you use messages from other packages and your package, you will need both of those.

Originally posted by ahendrix with karma: 47576 on 2019-01-28
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by gvdhoorn on 2019-01-29:
+1 and I would add: storing msg/srv/action definitions in a separate package is almost always preferable over merging them into the pkg that hosts the node(s) using them.
It makes interfacing with your nodes much easier, as a "client" now only needs to build your msg pkg.

