Q:

Best way to control a robot from an application

I developed an application that places itself just before controlling the robot (CAD/CAM like application) and now I want to control my robot directly within the application.
Typically I have two choices when working with this industrial arm robot (I'm using a St√§ubli robot in this case) :

I either use the manufacturer solution, and write programs with its own language and software that will just get a trajectory and perform the trajectory the way I want it by itself. So I'm just sending a trajectory file to the robot controller and then the robot is autonomous
Or I create the whole model by myself (or most likely using pre-existing general solutions) to simulate the robot's behavior first and stream the joints in real time to the robot to control it.

What would be the best choice here ? Should my application just

integrate a communication protocol that just sends a trajectory file to the robot and only gets the robots position during functioning time
or fully control the robot from within my application and send joints positions to the robot?

What is the best technical option here?

A:

If you wanna develop application to control industrial arm robot, there are several thing you need to look up :
1. Accuracy and precision
If you create your own controller, would your program at least match original controller accuracy and precision?
2. Safety and reachability
From my experience, arm robotic control often face singularity which is very-very dangerous if not handled well. And some control method to avoid singularity, also prevent us from reaching some robot configuration.
3. Development
Developing controller and addressing two problem I mention before will take time and determination.
Thus if you sure you can handle several thing I mention, you are good to go developing your own application. But I suggest to just send trajectory to original controller, since it much faster, stable, easier to do and save you from problem that didn't exist in the first place.

