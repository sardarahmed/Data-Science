Q:

Nodelet unloading based on misconfiguration in onInit()

I'm currently trying to determine if anyone has come up with a sound way of unloading a nodelet based on error conditions in either the onInit() function, or in normal operation of the node.
Essentially, I would like to sanity check all of the nodelet's parameters in the onInit() function, and then stop operation if the parameters don't fall within the correct bounds.
Obviously, I could probably return before loading all of the publishers and subscribers, but this leaves the nodelet loaded, which I don't feel is a terribly clean solution.
Has anyone else come up with a better mechanism for this?

Originally posted by mjcarroll on ROS Answers with karma: 6414 on 2012-10-24
Post score: 7

A:

Looks like the current best solution is still calling the manager's 'unloadNodelet' service.  You'll have to use a parameter (or some REALLY clever namespace/nodehandle tricks) to determine what service to call.
Here's a relevant mailing list thread:
http://ros-users.122217.n3.nabble.com/nodelet-shutdown-unload-itself-requestShutdown-td3151148.html
Here's the still open ticket:
https://code.ros.org/trac/ros-pkg/ticket/4431

Originally posted by Chad Rockey with karma: 4541 on 2012-10-24
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by WilliamWoodall on 2012-10-24:
Has that ticket been moved to github? If not we have a script to move trac tickets to github around here somewhere...
Comment by Chad Rockey on 2012-10-24:
https://github.com/hershwg/github-migrate-trac-tickets

