Q:

How do I get rosmake to call cmake

Here's a minimal example. ROS Package A depends on ROS Package B. The authors of these packages did not distribute Makefiles, because they contain hard-coded paths to their computers. Therefore, I need to call cmake . and then make.
I would like to to call rosmake A and have it call cmake on both A and B and then make. Is that possible?
Currently, it just skips over any package without a Makefile:
[rosmake-0] Starting >>> A [ make ]
[rosmake-0] Finished <<< A  No Makefile in package A

I do not want to copy their code into a new package, because I would need to do that every time that the authors publish a new version.
In addition, when I create my ROS Package C, which depends on A, I don't want the users of my package to have problems compiling, because they are not necessarily familiar with ROS. I want them to type rosmake C and have everything working as expected.

Originally posted by Benoit Larochelle on ROS Answers with karma: 867 on 2011-03-20
Post score: 0

Original comments
Comment by Benoit Larochelle on 2011-03-27:
I updated the question to make it clearer, because I still don't have an answer

A:

When wrapping 3rd party packages you need to write a custom Makefile for that package which will download and build the 3rd party package.  An example of calling cmake is the kdl package.  A slightly simpler example is bfl.
If you want other packages to build first you must add dependencies on that package.  And export required compile and link flags.  I highly recommend you go through the Beginner Tutorials which covers how to create and use ROS packages.

Originally posted by tfoote with karma: 58457 on 2011-04-04
This answer was ACCEPTED on the original site
Post score: 0

