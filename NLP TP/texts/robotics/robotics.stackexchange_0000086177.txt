Q:

What is the difference DWAPlannerROS/global_plan and DWAPlannerROS/local_plan?

Hi there, can anybody tell me the difference between these two topics in DWA Planner?

Originally posted by fighterxi on ROS Answers with karma: 13 on 2018-03-27
Post score: 0

A:

To Quote the wiki:

2.1.1 Published Topics
~/global_plan (nav_msgs/Path)
The portion of the global plan that
the local planner is currently
attempting to follow. Used primarily
for visualization purposes.
~/local_plan (nav_msgs/Path) The
local plan or trajectory that scored
the highest on the last cycle. Used
primarily for visualization purposes.

Basically, global_plan is what is currently viewed as "follow this path", i.e. the Input to the planner, which is not the full path to the goal. Otherwise, it might be that tremendous shortcuts could appear. How long this is depends on several Parameters, maily those in 2.2.3 of the wiki.
The local plan is the adjusted/sampled trajectory which is executed in the following, i.e. the Output. The execution, however, happens in terms of velocities that are published through move_base.

Originally posted by mgruhler with karma: 12390 on 2018-03-27
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by fergs on 2018-03-27:
It sometimes helps to think of the local_planner as a "controller" -- it's really generating direct commands to the base by figuring out how to follow the global plan (while still avoiding collisions, etc).
Comment by mgruhler on 2018-03-28:
@fergs good point, though I'd rather see it as collision avoidance (in terms of which way to go around obstacles) + controller.
IMO, this is one of those things I experienced to be of a constant source of confusion in beginning with ROS. One could probably argue that this could be split, though some
Comment by mgruhler on 2018-03-28:
local planners (as dwa) work directly in velocity space and thus splitting makes no sense, as the computations are interleaved. But others, (e.g. eband_local_planner) work in configuration space and then require controllers generating the velocities.

