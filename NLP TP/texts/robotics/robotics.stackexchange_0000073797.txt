Q:

Multi-line strings with indentation as input to C++ logging macros

How can I input a multi-line string to one of the C++ logging functions and have it properly ignore the white space? Here's an example:
ROS_INFO("Cost error: %d = \
        (Current: %u - Initial: %u)",
        error_cost, cost, cost_init);

What ends up being printed is a single line (desirable) but with a bunch of spaces (undesirable):
Cost error: 0 =                       (Current: 88 - Initial: 88)

Reading this (http://stackoverflow.com/a/1135862/2653356) I realized that the backslash takes care of the new line but not the indentation. Is there a better way? (I'd rather not define the string beforehand and then pass a variable to ROS_INFO if I can avoid it.)

Originally posted by spmaniato on ROS Answers with karma: 1788 on 2016-05-06
Post score: 0

A:

C/C++ implicitly joins string literals that are adjacent, so you can do:
ROS_INFO("Cost error: %d = "
         "(Current: %u - Initial: %u)",
         error_cost, cost, cost_init); 

Originally posted by ahendrix with karma: 47576 on 2016-05-06
This answer was ACCEPTED on the original site
Post score: 1

