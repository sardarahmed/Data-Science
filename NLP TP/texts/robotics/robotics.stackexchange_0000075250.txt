Q:

Good way to detect joystick failure?

It's important to stop my robot if there's ever a break in communication.  I've accomplished this by using a 1.5 second timeout and requiring that a joystick event be received before the timeout elapses.  It would be ideal if joy_node could publish an update on its own every 0.X seconds so that the operator would not have to keep pressing buttons.
Is there an existing way to do this well?  (Is "bond" what I should use?)
update:  autorepeat_rate is exactly what I needed, of course.  I'm embarrassed that I didn't find it on my own.  Thank you!
Note that autorepeat_rate "repeats last known state" with an incremented  sequence number but it uses the last time stamp.  Thus, if you're filtering based on the age of the time stamp, you might miss the updates.

Originally posted by kylerlaird on ROS Answers with karma: 104 on 2016-07-16
Post score: 0

Original comments
Comment by ahendrix on 2016-07-19:
Repeating the last known timestamp might be a bug or it might be intended behavior, indicating that the node is still alive but hasn't received any data from the joystick. You can file an issue on the joy package's bug tracker if you think this is a bug.

A:

The joy node has an autorepeat_rate parameter that does this. It seems like the documentation for it wasn't being formatted properly, so I fixed the wiki page: http://wiki.ros.org/joy
If you're using the joy node, try setting the parameter:
rosrun joy joy_node.py _autorepeat_rate:=10

Originally posted by ahendrix with karma: 47576 on 2016-07-17
This answer was ACCEPTED on the original site
Post score: 1

