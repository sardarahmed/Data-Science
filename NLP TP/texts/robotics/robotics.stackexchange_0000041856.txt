Q:

Counterpart to pcl_ros::transformAsMatrix?

Hi,
I understand pcl_ros::transformAsMatrix(const tf::Transform& bt, Eigen::Matrix4f &out_mat) can be used to convert a tf::transform to a 4x4 matrix describing the same transformation.
I am now looking for a method that does the same thing backwards, converting a 4x4 matrix to a tf::transform.
Is such a method already implemented somewhere?
Thanks
EDIT:
Solution that works for me, thanks to Eric:
  Eigen::Matrix4f mf; //The matrix I want to convert
  Eigen::Matrix4d md(mf.cast<double>());
  Eigen::Affine3d affine(md);
  tf::Transform transform;
  tf::TransformEigenToTF(affine, transform);

Originally posted by jodafo on ROS Answers with karma: 365 on 2012-07-01
Post score: 3

Original comments
Comment by balakumar-s on 2013-11-30:
A small info which might be helpful for others.
For ROS hydro,
tf::transformEigenToTF must be used.

A:

You should look at the tf_conversions package, specifically the tf::TransformEigenToTF function.
You would have to make an Eigen::Affine3d from your Eigen::Matrix4f. See the Eigen Geometry Module Tutorial (and linked docs for each class) for information on how to go about that. I expect it involves a conversion from Matrix4f to Matrix4d and then passing that to the Affine3d constructor, but I don't know the exact function calls and syntax required off the top of my head.

Originally posted by Eric Perko with karma: 8406 on 2012-07-01
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by jodafo on 2012-07-01:
Works, thank you.
Comment by bzr on 2014-12-02:
The Eigen Geometry Module Tutorial no longer exists. Is there an updated version?

