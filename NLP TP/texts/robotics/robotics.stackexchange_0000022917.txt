Q:

ROS: How to slow down in order to wait for my results

I am doing a very complex calculation inside a node using some other libraries.
The node is...

doing the calculation in an endless loop
it is calculating from the last calculation to ROS::Timer::Now()
Example:
while(true){
    do_some_expensive_calculation_and_publish(from=last_calculation_point, to=ROS::Time::Now());
    last_calculation_point = ROS::Time::Now();
}

Unfortunately ROS time is running way faster than I can do the calculation. Therefore I would need to slow down ROS/Gazebo somehow in order to get the result of the calculation before the next one should begin. Otherwise it takes longer an longer to get the calculation results since the time since the last calculation increases.
How to do that properly?

A:

Since you're using gazebo already and it should then be generating simulated time you can ask gazebo to run slower than realtime.
In the physics section of your world you can ajdust the maximum realtime factor to tell gazebo to run slower than realtime using the real_time_factor parameter.
There's a tutorial on the physics parameters here which you may find helpful.
If you're running the gazebo gui you can adjust it in realtime to experiment before embedding it into your world sdf file.
As a side note this will get you working for this use case, but if you're looking to make this run outside of simulation where you can't slow down time. You may want to look at adjusting your algorithm to allow it to skip forward in time by dropping information to keep it current instead of running on older and older data.

