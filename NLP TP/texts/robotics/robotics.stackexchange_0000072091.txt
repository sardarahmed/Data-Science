Q:

Trouble converting cv2 to imgmsg

Hi everyone,
I am trying to write a python node that publishes single frames the attached webcam records. However, when I try to run it I get the following error message.
VIDIOC_QUERYMENU: Invalid argument
VIDIOC_QUERYMENU: Invalid argument
VIDIOC_QUERYMENU: Invalid argument
VIDIOC_QUERYMENU: Invalid argument
VIDIOC_QUERYMENU: Invalid argument
VIDIOC_QUERYMENU: Invalid argument
VIDIOC_QUERYMENU: Invalid argument
Traceback (most recent call last):
  File "/home/x/catkin_ws/src/webcam_pub/webcam_pub/src/webcam_pub.py", line 34, in <module>
    webcam_pub()
  File "/home/x/catkin_ws/src/webcam_pub/webcam_pub/src/webcam_pub.py", line 23, in webcam_pub
    msg = cv2_to_imgmsg(frame, encoding="bgr8")
NameError: global name 'cv2_to_imgmsg' is not defined

I do not understand why I cannot call the cv2_to_imgmsg function as defined here.
Help would be appreciated - my node looks as follows.
#!/usr/bin/env python

import rospy
from sensor_msgs.msg import Image
import cv2
import numpy as np
from cv_bridge import CvBridge, CvBridgeError

def webcam_pub():
 pub = rospy.Publisher('webcam/image_raw', Image, queue_size=1)
 rospy.init_node('webcam_pub', anonymous=True)
 rate = rospy.Rate(60) # 60hz

 cam = cv2.VideoCapture(0)

 if not cam.isOpened():
  sys.stdout.write("Webcam is not available")
  return -1

 while not rospy.is_shutdown():
  ret, frame = cam.read()
  msg = cv2_to_imgmsg(frame, encoding="bgr8")
  
  if ret:
   rospy.loginfo("Capturing image failed.")

  pub.publish(msg)
  rate.sleep()

if __name__ == '__main__':
 try:
  webcam_pub()
 except rospy.ROSInterruptException:
  pass

Originally posted by ebaumert on ROS Answers with karma: 28 on 2016-02-16
Post score: 1

A:

Check out the example Python script at the bottom of the tutorial you linked. Notice that both imgmsg_to_cv2 and cv2_to_imgmsg are methods that belong to the cv_bridge.CvBridge class. Your code needs to mimic this structure. First instantiate an instance of cv_bridge.CvBridge, and then call the cv2_to_imgmsg method. Something like:
#!/usr/bin/env python

import rospy
from sensor_msgs.msg import Image
import cv2
import numpy as np
from cv_bridge import CvBridge, CvBridgeError

def webcam_pub():
    pub = rospy.Publisher('webcam/image_raw', Image, queue_size=1)
    rospy.init_node('webcam_pub', anonymous=True)
    rate = rospy.Rate(60) # 60hz

    cam = cv2.VideoCapture(0)
    bridge = CvBridge()

    if not cam.isOpened():
         sys.stdout.write("Webcam is not available")
         return -1

    while not rospy.is_shutdown():
        ret, frame = cam.read()
        msg = bridge.cv2_to_imgmsg(frame, encoding="bgr8")

        if ret:
            rospy.loginfo("Capturing image failed.")

        pub.publish(msg)
        rate.sleep()

if __name__ == '__main__':
    try:
        webcam_pub()
except rospy.ROSInterruptException:
    pass

Originally posted by jarvisschultz with karma: 9031 on 2016-02-16
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by ebaumert on 2016-02-17:
Thank you very much, I must have overlooked the instantiation!
Comment by kk2105 on 2019-04-04:
Thanks for answer. I too had the same doubt.
Comment by Kansai on 2021-03-23:
I run the program (but opening a file instead of camera) and eventhough the camera is open , if ret shows that the image capture failed. Shoouldnt it be if not ret??
Comment by jarvisschultz on 2021-03-23:
@Kansai at a quick glance I'd say you are probably correct. I was just copying OPs code. My goal was to answer the original question not debug other issues in the code.

