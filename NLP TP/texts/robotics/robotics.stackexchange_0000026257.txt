Q:

Implementing paged geometry

If paged geometry were to be implemented in Gazebo then the possible objectives could be: Run an algorithm which determines the area of the world which has to be rendered and only render the models which directly exist in that portion. Thereby saving the amount of memory being used in one instance of running of the world.
Is there some place where any detailed description of this exists?
One good source is https://code.google.com/p/ogre-paged/
Also how would you page from the physics engine if you had to. (Nothing to do with the rendering engine). Is that even a good idea. Because lets say you have built a very big world and a model walking in another corner of it and is doing an action which we know will not have any effect on this model. Then that action should be ignored by the physics engine. Is it even a feasible idea?

Originally posted by vedmathai on Gazebo Answers with karma: 11 on 2013-04-19
Post score: 0

A:

I'd suggest starting off with terrain paging. You'll likely need to modify the physics engine to dynamically load heightmap data and create HeightMapShape in Gazebo.

Originally posted by iche033 with karma: 1018 on 2013-04-23
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by nkoenig on 2013-09-19:
See this pull-request

