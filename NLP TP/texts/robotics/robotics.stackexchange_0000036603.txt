Q:

Why is this simple service not returning anything?

Hi,
I am new to ROS and have a little problem regarding services.
Right now I am sending a request to the server, triggering the handle_speech function.
In this function I subscribe to the pocketsphinx recognizer/output node.
When I return an integer value from here, the client receives it and shows it to me.
But when I return a value from the speechCB callback function, the client shows nothing.
What am I doing wrong here?
Edit: Now it is working, but this code is not my best coding ;)
#!/usr/bin/env python
import roslib; roslib.load_manifest('kmr01')

from kmr01.srv import *
import rospy

from std_msgs.msg import String

command = 0

def handle_speech(req):
  print "handling speech input"
  rospy.Subscriber('recognizer/output', String, speechCb)

  r = rospy.Rate(10.0)
  while not rospy.is_shutdown():
    r.sleep()
    print "sleeping"
    if command != 0:
      return RecognizeSpeechResponse(command)

def speechCb(msg):
  global command
  print "speechCB"

  if msg.data.find("forward") > -1:    
    command = 2  

  elif msg.data.find("stop") > -1 or msg.data.find("halt") > -1:          
    command = 1    

  print "nothing recognized"    
  command = 99    
     

def recognize_speech_server():
  rospy.init_node('recognize_speech_server')
  s = rospy.Service('recognize_speech', RecognizeSpeech, handle_speech)
  print "Ears wide open ..."
  rospy.spin()

if __name__ == "__main__":
  recognize_speech_server()

Regards
Max

Originally posted by madmax on ROS Answers with karma: 496 on 2011-12-19
Post score: 1

A:

But, you're never returning a value from the service callback now? The subscribe callback function is completely unrelated to the service callback function.
If you want the service to return a value received on the topic, you have to let the topic CB store the value in some shared variable. As your service function already has a wait loop, you could poll this value there to see if it's been set. You probably want to have some global boolean also to make sure the value has been updated since the service was called (unless returning an old value is fine).
Don't know if I'd call this solution a good design, though...

Originally posted by raahlb with karma: 317 on 2011-12-19
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by madmax on 2011-12-19:
I know that it is not a good design, but I put basically the service client tutorial and the voice_cmd_vel.py pocketsphinx tutorial together. I aso don't know python really well. Actually, my service should only listen for one command and then stop again.
Comment by raahlb on 2011-12-19:
BTW, by definition a topic callback can never return a value. Also you probably won't want to start a new subscription for each call to the service. Save the handle somewhere and each call check if it's set. If not, start the subscription, otherwise do nothing.

