Q:

Is it possible to self-compile ROS2 on an unsupported OS?

I need to get ROS2 running on Ubuntu 18.10. Since ROS2 only officially supports Ubuntu 18.04, there is no binary readily available, as answered here.
For this reason I decided to try building ROS2 from source myself. Unfortunately, this ended up being a catch-22 since the instructions on building ROS2 include adding the ROS2 apt repository, the unavailability of which is the entire reason why I have to build from source in the first place.
Is there any alternative method to build from source or is it just impossible to get ROS running on any unsupported build?

Originally posted by anonymous40856 on ROS Answers with karma: 3 on 2019-04-12
Post score: 0

Original comments
Comment by gvdhoorn on 2019-04-12:
Please note: the Q&A you reference about ROS 2 not being available on 18.10 is actually a question about ROS 1 (Melodic specifically). It doesn't say anything about ROS 2 availability.

A:

It is absolutely possible. Users build ROS 1 / 2 all the time on various platforms which have no official binaries.
You will need to build / install all the packages which are commonly provided by the ROS apt repos on your own. Python packages you can e.g. install via pip. Other packages you might need to build and install from source.
If you mention specific packages you are missing in your questions maybe we can give suggestion how to get / build / install them.

Originally posted by Dirk Thomas with karma: 16276 on 2019-04-12
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by anonymous40856 on 2019-04-12:
The missing packages are python3-colcon-common-extensions, python3-lark-parser, python3-vcstool. Also note that apt picked up rosdep2 instead of rosdep. In the hopes of finding accidental compatibility I attempted to use the bionic repo as a source - suffice to say that wasn't such a good idea. I was however able to acquire lark-parser and vcstool by using pip install. Unfortunately, the same was not the case for colcon-common-extensions, because pip was unable to find a matching distribution for colcon-core.
Comment by Dirk Thomas on 2019-04-12:
All of the mentioned packages are available through PyPI so you should be able to install them through pip (in case of ROS 2 pip3 since you need to use Python 3).

