Q:

rospy.Time.now() sometimes returns 0

Hello, I'm trying to run this code:
  prevTime = rospy.Time.now()
    while not rospy.is_shutdown():
            currentTime = rospy.Time.now()

            delT = currentTime-prevTime
            
            print("Previous time:",prevTime.to_sec())
            print("Current time",currentTime.to_sec())
            print("Time:",delT.to_sec())

            rate.sleep()

to get the time of the while loop, because I have a function of time that needs it. Sometimes when running this, prevTime becomes 0:
Previous time: 0.0
Current time 1266.097
Time: 1266.097
Previous time: 0.0
Current time 1266.107
Time: 1266.107
Previous time: 0.0
Current time 1266.117
Time: 1266.117
Previous time: 0.0
Current time 1266.127
Time: 1266.127

And other times it works as intended:
Previous time: 1263.221
Current time 1263.321
Time: 0.1
Previous time: 1263.221
Current time 1263.331
Time: 0.11
Previous time: 1263.221
Current time 1263.341
Time: 0.12
Previous time: 1263.221
Current time 1263.351
Time: 0.13

Wondering what the issue could be, and how to stop it from becoming 0

Originally posted by Roshan on ROS Answers with karma: 51 on 2021-10-14
Post score: 0

Original comments
Comment by tryan on 2021-10-14:
Are you using simulated time?
Comment by Roshan on 2021-10-14:
Yes, running the simluations in Gazebo

A:

prevTime  may sometimes initialize before the first /clock message, so it defaults to 0.  If you use a non-deterministic method of starting nodes, e.g., roslaunch, the startup order can vary, so this will happen sometimes but not others.  As noted in the rospy Time overview, one workaround is to loop the assignment until it returns a non-zero value:
prevTime = 0
while not prevTime:
    prevTime = rospy.Time.now()

Originally posted by tryan with karma: 1421 on 2021-10-14
This answer was ACCEPTED on the original site
Post score: 1

