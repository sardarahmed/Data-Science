Q:

ros service callback blocks the other node callbacks?

Hi all!
Does a slow service callback prevent the other callbacks from running? Is there a multi-thread solution behind the scenes, or a FIFO queue?
In the situation that there's a service with a publisher/subscriber structure for what should be a service, is there a neat wait to sincronize the request with the published answer? It looks like waiting on a mutex or flag prevents the subscription callback from running.
Cheers!

Originally posted by quimnuss on ROS Answers with karma: 169 on 2011-06-27
Post score: 3

A:

It depends on the number of spin threads you have running. If you have only one, the service callback will block subscriptions. If you have more than one running, subscriptions should still work. The easiest way to run multiple spin threads is the AsyncSpinner class.

Originally posted by Lorenz with karma: 22731 on 2011-06-27
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by quimnuss on 2011-06-28:
Understood, so there's only one thread if there's a sinle ros::spin. I'll take a look at the AsyncSpinner class, although i'll probably change the node to provide a service functionality rather than a publisher/subscriber structure (I'll set both, actually). Thanks!
Comment by mark_vision on 2015-05-05:
Sorry I didn't get. If I have a single node with a global variable, single spin and two callbacks, if I try to modify the variable on one callback I'm ensured that there will be no race conditions while I try to modify the same variable on the other callback?

