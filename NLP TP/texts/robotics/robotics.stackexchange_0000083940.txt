Q:

Build Ros Nodes with bazel

Is it possible to Build ROS nodes with Bazel?
e.g. could we build below example with Bazel?
http://wiki.ros.org/ROS/Tutorials/WritingServiceClient%28c%2B%2B%29
Please share your views.
Thanks.

Originally posted by manan on ROS Answers with karma: 11 on 2017-11-16
Post score: 1

A:

Unless you have a very compelling reason to use bazel, don't. It does a lot of things that aren't terribly compatible with the ROS package management system or traditional open-source build systems and package management.
The company that I work for uses bazel for our internal build system, and we have custom build rules for all of the ROS packages that we use, and a custom compatibility layer between bazel packages and ROS packages. Our rules are pretty specific to our application and are a pretty invasive modification to ROS, so we're not willing to open source them.
Bazel doesn't have any way to import local packages that are build by other tools (it can't read pkgconfig files or cmake find-package files), so it isn't easy to bring in external packages.
In theory you could install the precompiled ROS packages for Ubuntu or build and install ROS the normal way, and then add those libraries to bazel's WORKSPACE file, but that's still quite a bit of setup and you lose all of the inter-package dependencies that are defined in the cmake files and the package.xml files, so you'd have to either lump all of the ROS libraries into a single target, or redefine all of the packages and their dependencies within bazel.

Originally posted by ahendrix with karma: 47576 on 2017-11-16
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by robarnes on 2018-08-28:
Update:  https://github.com/bazelbuild/rules_foreign_cc allows building libraries with CMake inside bazel project.
@ahendrix does this new functionality affect your view at all?
Comment by ahendrix on 2018-08-28:
I don't think that substantially changes my position. Those rules might save you some time importing C++ packages (but it's not clear how to handle dependencies between imported cmake projects), but they don't help at all with python or for making package management in ROS and bazel work together.
Comment by gvdhoorn on 2018-08-29:
Just an fyi: for ROS2 there is apparently a colcon compatibility pkg for Bazel: colcon/colcon-ros-bazel. That is the opposite direction of what the OP (and probably @robames) ask for, but I thought I'd mention it none-the-less.

