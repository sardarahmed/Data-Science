Q:

Uncontrollable quadrotor_with_asus in Gazebo - hector_quadrotor

Hi there,
I'm trying to get a simulation working with hector_quadrotor, which urdf model is the on with only an Asus Xtion camera. I adapted the pr2_teleop code so to have a altitude control of the quad in the simulation on Gazebo (thorugh twist off course, sending /cmd_vel).
It appears to work good, for example, to the quad with the hokuyo only, but when I spawn any quadrotor with asus, giving it a throttle command (which influences the vertical linear vel), it tombs and rolls straight in front, without being able to control it... then it crashes off course. With the hokuyo only, for example, that doesn't happen.
I thought that could be a substantial difference between the to urdf's (by the way, I converted from xacro to urdf using the xacro tool) but the only difference I found is in the sensor being used, of course. Here are propulsion model parameters for both quads:
k_m     = -7.01163e-05
k_t     = 0.0153369
CT2s    = -0.013077
CT1s    = -0.00025224
CT0s    = 1.53819e-05
Psi     = 0.00724218
J_M     = 2.57305e-05
R_A     = 0.201084
l_m     = 0.275
alpha_m = 0.104864
beta_m  = 0.549262

and the quadrotor drag model parameters for both quads also:
C_wxy = 0.12
C_wz = 0.1
C_mxy = 0.0741562
C_mz = 0.0506433

Any tips on finding the problem? Thanks in advance!

Originally posted by TSC on ROS Answers with karma: 210 on 2014-07-03
Post score: 0

A:

I could reproduce the problem. It is caused by the additional mass and moment of the ASUS camera, that was never tested with the new controller implementation. For some reason the Kinect model in our hector_sensors_description package has almost no mass, while the ASUS Xtion has a mass of 200 g.
Proposed solution at Github: https://github.com/tu-darmstadt-ros-pkg/hector_quadrotor/issues/12

Originally posted by Johannes Meyer with karma: 1266 on 2014-07-13
This answer was ACCEPTED on the original site
Post score: 0

