Q:

Get current position of a robot from a world file (Stage)

I have C++ code where I am defining the behaviour of a group of robots. However right now the initial positions of each robots are defined in a .world file for the Stage simulation. Is there a way of possibly getting the position and theta defined in the .world file and referring to it in the C++ code?
I need some sort of way to set the following in the C++ code:
x = theXNumberDefinedInWorldFile
y = theYNumberDefinedinWorldFile
z = 0
theta = theAngleNumberDefinedInWorldFile

Sorry if this is hard to understand but I couldn't think of any other way of putting it as I'm still new to ROS. Any help would be much appreciated.
Thanks.

Originally posted by Clefairy on ROS Answers with karma: 11 on 2012-08-09
Post score: 0

A:

you should be able to use:
math::Pose currentPose;
currentPose=world->GetModel(i)->GetLink("link_name_from_urdf")->GetWorldPose();

since i can change even when loading the same urdf file, you can find i by something like:
if (world->GetModel(i)->GetName().find("model_name_in_gazebo")!=std::string::npos) { }

check out the manipulating models world plugin example and the math page for some more info.

Originally posted by mcevoyandy with karma: 235 on 2012-08-09
This answer was ACCEPTED on the original site
Post score: 1

