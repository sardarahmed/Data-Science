Q:

Robot Operating System can be usable other than Robot application?

I am asking very general question, but i would appreciate if someone helps me. I want to use ROS for manufacturing process (Not robots) as a middleware that can create simulated Cyber physical system environment to enabling the interoperability of different nodes in real time. Before start involving in ROS, i would like to ask you below questions.

ROS can be usable other than robot application for our manufacturing system ?
If yes, then what challenges i will face? if i want to use it for manufacturing system?
What are advantages/disadvantages of using ROS as a middleware in normal manufacturing process?
How much time it will take to develop ROS middleware for normal manufacturing process? (I never used ROS)
I know C++/Python are good options, but what programming language is best for me?
Is their any other options are available other than can use as a middleware in my manufacturing process that can create simulated Cyber physical system environment to enabling the interoperability of different nodes? I would appreciate if someone suggest me other options, which can easy to use than ROS.

Thanks a ton

A:

First of all, you have to define real-time. Is it "motion control real-time" or "instant messaging chat app real-time". For the first one, ROS is not a good option.

In theory yes, but in practice, the advantage of ROS, the ready made ROS nodes for interfacing with robots, path planning, interfaces to different sensors are largely only applicable for robots.

Interfacing all systems to ROS will be the main issue. As you do not intend to use it for robots, you will need to create your own interfaces.

Depending on how deep you are going down the automation pyramid. For motion control the main drawback is no real-time support. For programming logic, you do not have a clear separation between application programs and firmware. You will need to interface all your equipment to ROS. Even higher up in the pyramid, you do not have any options of SCADA, MES or ERP interface. Advantages to ROS...I do not see why it would be advantageous fr your use case. It uses DDS as a messaging system, you are probably better off using directly that and you are then not stuck to the ROS way of doing (building) things.

The middleware is not your problem, that is ROS. All the interfaces to the middleware will be your problem.

C++ is more complicated to write but is faster then Python. Python is more convenient but slower. So if execution time matters more, go with C++.

OPC-UA, MQTT, AMQP, EdgeX Foundry, Assest Administration Shells, TOGAF Open Process Automation, MT-Connect are all worth looking into related to your question.

