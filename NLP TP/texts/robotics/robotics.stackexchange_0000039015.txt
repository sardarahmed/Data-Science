Q:

run a subscriber callback once using rospy.spin()

Hi,
I am sorry if I am not using the proper words when I refer to "run a callback function" from a subscriber while using rospy. I'm not sure I got the concept of keeping the nodes sleeping. However, this is not my question.
I want to make a logger node node which takes data from the first message received in a topic, and writes it as a header in a file. Then it will be storing the raw data as long as rospy.spin() says so. The problem is, I have not found an example of how to do this, or if there is such a function. All I can think about are pretty cluttered solutions, which take the time stamp and compares them in every message.
my question is, is there a way to call
rospy.Subscriber("Flow", OpticalFlow2D.msg.FrameFlow, callbackOF)

many times  and
rospy.Subscriber("Flow", OpticalFlow2D.msg.FrameFlow, callbackOFonce)

just on the first time, to write the header?
Many thanks,
Cristian

Originally posted by cduguet on ROS Answers with karma: 187 on 2012-03-26
Post score: 3

A:

If you want a particular callback for a topic only to be run for the first message received, you can unsubscribe from within the callback after you've finished your processing. For example:
def cb_once(msg, subscriber):
    #do processing here
    subscriber.unregister()

sub_once = None
sub_once = rospy.Subscriber('my_topic,', MyType, cb_once, sub_once)

In your case, however, you could have a single callback, and just keep a flag around like wrote_header, which you can set to true after the first message was received so you only write the header once.

Originally posted by Dan Lazewatsky with karma: 9115 on 2012-03-26
This answer was ACCEPTED on the original site
Post score: 6

Original comments
Comment by Dan Lazewatsky on 2012-03-27:
The above may not be entirely correct. The callback args may have to be an iterable, so the line would be sub_once = rospy.Subscriber('my_topic,', MyType, cb_once, [sub_once])
Comment by Benjamin Blumer on 2014-06-10:
Based on the upvotes, I'm guessing this works for others. For me though, cb_once is receiving a None, and I get the exception "AttributeError: 'NoneType' object has no attribute 'unregister'".

