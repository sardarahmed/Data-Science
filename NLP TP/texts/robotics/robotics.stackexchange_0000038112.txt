Q:

Error when using real robot data for planning_scene_warehouse_viewer

I want to use the arm_navigation_warehouse with our real robot and I don't get along this error. As the warehouse tutorial states, I start the planning_scene_warehouse_viewer_scitos_haw_schunk.launch from my wizard-created package.
I specify the trajectory action service and check Use Robot Data. Accepting this config loads the planning_scene_warehouse_viewer, so long so usual. But after creating a new.. planning scene, I get the following errors:
[ERROR] [x.300639468, x.297759056]: Setting planning scene state to NULL
[ERROR] [x.300739768, x.297759056]: Setting planning scene state to NULL
[ WARN] [x.301398800, x.297759056]: Incomplete robot state in setPlanningScene
[ERROR] [x.301461209, x.297759056]: Setting planning scene state to NULL
[ERROR] [x.301492785, x.297759056]: Setting planning scene state to NULL
[ERROR] [x.303755538, x.297759056]: Something wrong with planning scene

However, the next window for the planning scene opens, but trying to create a new Motion Plan Request quits the viewer:
[planning_scene_warehouse_viewer-9] process has died [pid 9602, exit code -11].

If I enable debug level for those parts:
/planning_scene_warehouse_viewer:ros.planning_models
/planning_scene_warehouse_viewer:ros.urdf

.. before clicking new.., I also get this five times (for every joint?) before the [ WARN] from above:
[DEBUG] [x.643684884, x.637037992]: Transform angle is 0 axis x 1 axis y 0 axis z 0

Does anyone know what's up or how to investigate further?
"Something wrong with planning scene" code line
"Incomplete robot state in setPlanningScene" code line

Originally posted by felix k on ROS Answers with karma: 1650 on 2012-02-22
Post score: 1

A:

I would first copy your warehouse_viewer launch file to a new file, as you'll be making several changes, and the result will no longer work without a real robot in the loop.
In the copy, first these lines in your planning_scene_warehouse_viewer launch file:
 <include file="$(find planning_environment)/launch/environment_server.launch">
    <arg name="use_monitor" value="false" />
    <arg name="use_collision_map" value="false" />
  </include>

If you are running with real robot data, you'll need to change the "use_monitor" parameter to true - this will actually subscribe to the /joint_states message to populate the current position of the robot.
You'll also need to delete these two lines in the launch file:
<node pkg="planning_environment" name="wall_clock_server" type="fake_time.py" />

<node pkg="robot_state_publisher" type="state_publisher" name="rob_st_pub" />

If you like, you can also set your trajectory action parameter in this new file (use the entries for the left arm) and set this parameter so that you don't have to mess with the configuration screen:
<param name="use_robot_data" value="true"/>

Originally posted by egiljones with karma: 2031 on 2012-02-22
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by felix k on 2012-02-23:
Ah, that totally makes sense. As I hadn't seen these (with that detail) in the tutorials, I'll put a hint there. BUT, after clicking Accept, neither the successional window appears, nor do I get an error msg. I had to remap my joint_states topic, and now (in rxgraph) the only topic, the ... tbc..
Comment by felix k on 2012-02-23:
... warehouse viewer is subscribed to that has no publisher is /planning_scene_warehouse_viewer_controls/feedback. Any ideas? edit: The last lines I get (and before the Accept button) are both: ik_utilities: waiting for IK services to be there
Comment by felix k on 2012-02-23:
All seems to work well if I do not remove the wall_clock_server from the launch file. =)
Comment by bit-pirate on 2012-02-27:
hey guys, i tried the above tips, but the planning_scene_warehouse_viewer still keeps crashing, when I'm trying to real robot data. without, the whole - really cool - system works. i'm not using sim time and commented out fake_time.py and the state_publisher. below are my errors. any hints?
Comment by bit-pirate on 2012-02-27:
QLayout: Attempting to add QLayout "" to WarehouseViewer "", which already has a layout \n (16367) KSycocaPrivate::openDatabase: Trying to open ksycoca from  "/var/tmp/kdecache-marcus/ksycoca4" \n [ INFO] [1330418639.971961797]: Starting load \n [ INFO] [1330418639.974...]: Num Planning Scenes: 1
Comment by bit-pirate on 2012-02-27:
then 5x: QObject::connect: Cannot queue arguments of type 'Qt::Orientation'
(Make sure 'Qt::Orientation' is registered using qRegisterMetaType().) and finally: [korus/planning_scene_warehouse_viewer-24] process has died [pid 16367, exit code -11].
Comment by felix k on 2012-02-27:
@Marcus, your output IMO has no errors, those Qt lines are somewhat normal. Did you read my last comment, I had to not remove the wall_clock_server==fake_time.py. Btw, we can use backticks etc. in comments.
Comment by bit-pirate on 2012-02-28:
@felix, it's true, I get the same output, when running the working warehouse_viewer, which doesn't use real robot date (except the dying node of course). And yes, I tried running it with and w/o fake_time.py. Both version end up crashing. Btw, I needed to turn off using sim time, when commenting out
Comment by bit-pirate on 2012-02-28:
fake_time.py. So, do you have any other ideas about what is so different between using and not using real robot data? I'm only using one (left) arm, so every parameter for the right side contains "none". Also, I have no proximity services. Are there any other tests I could do?
Comment by bit-pirate on 2012-03-04:
I found a solution to my problem. See my answer here: http://answers.ros.org/question/28866/warehouseviewer-on-real-care-o-bot-hanging-up?answer=29041#answer-container-29041

