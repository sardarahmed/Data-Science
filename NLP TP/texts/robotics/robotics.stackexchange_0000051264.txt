Q:

Hokuyo scans to 3D point clouds (with tilt angle and sensor position)

Hi All,
I have gone through the laser_assembler package and have successfully run its tutorial to convert scan data from Hokuyo UTM-30LX to composite point cloud.
However, since the scan lines are in 2D hence the composite cloud is also a 2D cloud. I know there is a way to convert the scans to 3D point clouds by using sensor position and tilt angle, but is there some node in laser_assembler or any other ros package to obtain 3D point cloud?
Currently Hokuyo is hand held, however I have bag files recorded from Quadcopter having all information inside.
Thank you and regards,

Originally posted by zahid on ROS Answers with karma: 81 on 2013-05-21
Post score: 0

Original comments
Comment by dornhege on 2013-05-21:
What do you mean with 2D cloud? The laser_assembler gives out 3D point clouds.
Comment by zahid on 2013-05-21:
The composite cloud shown in rviz is 2D. Actually I run my Hokuyo node which publishes /scan topic. This topic is then buffer up to 400 scans. Then I call the assemble_scans service to publish the buffer point cloud and see it in rviz. Is there anything wrong happening? thanks
Comment by dornhege on 2013-05-21:
Did you maybe set the fixed_frame to the laser frame?
Comment by zahid on 2013-05-21:
right! the fixed_frame is set to laser.
Comment by Narek on 2016-02-11:
@zahid, did you get it to work? You mentioned that the laser is handheld, do you have any kind of gyroscope attached to it?

A:

For this to work, you'll need to set the "fixed frame" to a fixed frame, i.e. the frame must be fixed with respect to the world. If this is the laser frame and the laser is moving, it is not fixed and you'll get the results that you see.
Use something like world or map or even base_link depending on your application.

Originally posted by dornhege with karma: 31395 on 2013-05-21
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by zahid on 2013-05-23:
Thank you dornhege, actually I already took care of fixed_frame as it was emphasised also in tutorials but there was something wrong with my /tf as well. But considering a fix frame helped me to figure out other problems as well.

