Q:

Seminal work in multi-robot task decomposition

Multi-Robot task decomposition implies that there is a mission that needs multiple mobile robots like guarding the president's car with a team of drones. This high-level layman interpretation of the mission has to be broken down into algorithmic language. Basically the missions have to be decomposed into atomic tasks which robots can be instructed to do in terms of their existing abilities and intelligence.
Here are some papers i found on this problem:-
[1]
[2]
Can someone point some seminal papers on it that tackle the algorithmic aspects of this problem? Pointing to open source codes in any language will also be preferred.
Note there is a closely related problem of multi-robot task allocation which i am not referring to.

A:

The most simple example for multi-robot task planning are boxpushing (two robot push a object through the room) and Real-time-strategy games (a robot army has to follow the tiberium truck). The algorithm for solving these problems are:

Solver (particle swarm optimization, Neuroevolution)
Hybrid Solver (PDDL Planner mit motion primitives)
procedural animation (hardcoded software with AutoIt)

According to my knowledge the two first concepts doesn't work on real robots because the cpu-usage is to high.

