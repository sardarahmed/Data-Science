Q:

Kinect obstacle avoidance: moving obstacles don't clear

I'm using a sick laser (lms-200) and a kinect camera as my sensors, mounted on a pioneer 3-at. I'm running ros diamondback on ubuntu 10.10, running amcl with the nav stack.
I use both point cloud and laser scan for obstacle avoidance. In rviz, I can see the registered local obstacles through the topic /move_base_node/local_costmap/obstacles. The moving obstacles sensed from point cloud do not clear in rviz, even when they move outside the field of view. This way move_base thinks the obstacles are still there and tries to avoid the non-existent obstacles. Does anyone know how to clear them? Thanks a lot in advance!
Here are the related parameters in my nav stack.
In costmap_common_params:

point_cloud: {sensor_frame: openni_camera, data_type: PointCloud2, topic: /camera/depth/points, expected_update_rate: 5.0, observation_persistence: 0.0,  marking: true, clearing: true, min_obstacle_height: 0.05, max_obstacle_height: 1.0}

In local_costmap_params:

update_frequency: 5;
publish_frequency: 1;
static_map: false;
rolling_window: true

Originally posted by xylo on ROS Answers with karma: 184 on 2011-10-12
Post score: 2

A:

Using the raw cloud from the Kinect passes a ton of points to the navigation stack for it to ray-trace when clearing. A couple of questions:

Have you considered downsampling the point cloud a bit to a more reasonable resolution, something like 1-5mm?

Are you seeing any warnings or errors from the navigation stack when you run?

Are you sure that there is enough information in the cloud you're passing to the navigation stack to allow it to clear obstacles through raytracing? Specifically, you'll want to check whether or not you have a lot of missing depth readings from the sensor which you'd probably need to fill in artificially for things to work well.

Originally posted by eitan with karma: 2743 on 2011-10-13
This answer was ACCEPTED on the original site
Post score: 2

