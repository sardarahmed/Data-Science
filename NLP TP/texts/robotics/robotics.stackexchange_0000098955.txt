Q:

Controlling multiple huskies in ROS Gazebo

Hey all, I'm very new to this software and am trying to figure out how to do basic control of multiple Huskies.
I'm just trying to replicate this very simple way of moving a single husky:
roscore
roslaunch husky_gazebo husky_playpen.launch

then running:
rostopic pub /husky_velocity_controller/cmd_vel geometry_msgs/Twist "linear:
  x: 0.5
  y: 0.0
  z: 0.0
angular:
  x: 0.0
  y: 0.0
  z: 0.0" -r 10

to cause it to drive indefinitely, which is visible in gazebo.
I then launched:
roslaunch husky_gazebo multi_husky_playpen.launch
and ran:
rostopic list

to see find the equivalent velocity controller for each husky thats been spawned. Full output from this at the end.
I thought from here it would be easy to just run:
rostopic pub /husky_alpha/husky_velocity_controller/cmd_vel geometry_msgs/Twist "linear:
  x: 0.5
  y: 0.0
  z: 0.0
angular:
  x: 0.0
  y: 0.0
  z: 0.0" -r 10

and get the same behavior, being able to choose which husky moves by specifying the namespace of the 3 different huskies. However, it's apparently not this simple, as the corresponding husky_alpha in gazebo doesn't start moving. What extra kind of stuff is necessary to be able to seperately control multiple huskies?
rostopic list output:
/clock
/clock_offset
/gazebo/link_states
/gazebo/model_states
/gazebo/parameter_descriptions
/gazebo/parameter_updates
/gazebo/set_link_state
/gazebo/set_model_state
/gazebo_gui/parameter_descriptions
/gazebo_gui/parameter_updates
/husky_alpha/husky_velocity_controller/cmd_vel
/husky_alpha/husky_velocity_controller/odom
/husky_alpha/imu/data
/husky_alpha/imu/data/accel/parameter_descriptions
/husky_alpha/imu/data/accel/parameter_updates
/husky_alpha/imu/data/bias
/husky_alpha/imu/data/rate/parameter_descriptions
/husky_alpha/imu/data/rate/parameter_updates
/husky_alpha/imu/data/yaw/parameter_descriptions
/husky_alpha/imu/data/yaw/parameter_updates
/husky_alpha/joint_states
/husky_alpha/navsat/fix
/husky_alpha/navsat/fix/position/parameter_descriptions
/husky_alpha/navsat/fix/position/parameter_updates
/husky_alpha/navsat/fix/status/parameter_descriptions
/husky_alpha/navsat/fix/status/parameter_updates
/husky_alpha/navsat/fix/velocity/parameter_descriptions
/husky_alpha/navsat/fix/velocity/parameter_updates
/husky_alpha/navsat/vel
/husky_alpha/scan
/husky_beta/husky_velocity_controller/cmd_vel
/husky_beta/husky_velocity_controller/odom
/husky_beta/imu/data
/husky_beta/imu/data/accel/parameter_descriptions
/husky_beta/imu/data/accel/parameter_updates
/husky_beta/imu/data/bias
/husky_beta/imu/data/rate/parameter_descriptions
/husky_beta/imu/data/rate/parameter_updates
/husky_beta/imu/data/yaw/parameter_descriptions
/husky_beta/imu/data/yaw/parameter_updates
/husky_beta/joint_states
/husky_beta/navsat/fix
/husky_beta/navsat/fix/position/parameter_descriptions
/husky_beta/navsat/fix/position/parameter_updates
/husky_beta/navsat/fix/status/parameter_descriptions
/husky_beta/navsat/fix/status/parameter_updates
/husky_beta/navsat/fix/velocity/parameter_descriptions
/husky_beta/navsat/fix/velocity/parameter_updates
/husky_beta/navsat/vel
/husky_beta/scan
/husky_gamma/husky_velocity_controller/cmd_vel
/husky_gamma/husky_velocity_controller/odom
/husky_gamma/imu/data
/husky_gamma/imu/data/accel/parameter_descriptions
/husky_gamma/imu/data/accel/parameter_updates
/husky_gamma/imu/data/bias
/husky_gamma/imu/data/rate/parameter_descriptions
/husky_gamma/imu/data/rate/parameter_updates
/husky_gamma/imu/data/yaw/parameter_descriptions
/husky_gamma/imu/data/yaw/parameter_updates
/husky_gamma/joint_states
/husky_gamma/navsat/fix
/husky_gamma/navsat/fix/position/parameter_descriptions
/husky_gamma/navsat/fix/position/parameter_updates
/husky_gamma/navsat/fix/status/parameter_descriptions
/husky_gamma/navsat/fix/status/parameter_updates
/husky_gamma/navsat/fix/velocity/parameter_descriptions
/husky_gamma/navsat/fix/velocity/parameter_updates
/husky_gamma/navsat/vel
/husky_gamma/scan
/master_discovery/changes
/master_discovery/linkstats
/rosout
/rosout_agg
/sim/clock
/sim/husky_alpha/husky_velocity_controller/cmd_vel
/sim/husky_alpha/husky_velocity_controller/odom
/sim/husky_alpha/imu/data
/sim/husky_alpha/joint_states
/sim/husky_alpha/navsat/fix
/sim/husky_alpha/navsat/vel
/sim/husky_alpha/scan
/sim/husky_beta/husky_velocity_controller/cmd_vel
/sim/husky_beta/husky_velocity_controller/odom
/sim/husky_beta/imu/data
/sim/husky_beta/joint_states
/sim/husky_beta/navsat/fix
/sim/husky_beta/navsat/vel
/sim/husky_beta/scan
/sim/husky_gamma/husky_velocity_controller/cmd_vel
/sim/husky_gamma/husky_velocity_controller/odom
/sim/husky_gamma/imu/data
/sim/husky_gamma/joint_states
/sim/husky_gamma/navsat/fix
/sim/husky_gamma/navsat/vel
/sim/husky_gamma/scan

multi_husky_playpen.launch, for reference:
    <?xml version="1.0"?>
<!--
Software License Agreement (BSD)

\file      multi_husky_playpen.launch
\authors   Paul Bovbel <pbovbel@clearpathrobotics.com
\copyright Copyright (c) 2015, Clearpath Robotics, Inc., All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that
the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the
   following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
   following disclaimer in the documentation and/or other materials provided with the distribution.
 * Neither the name of Clearpath Robotics nor the names of its contributors may be used to endorse or promote
   products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WAR-
RANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, IN-
DIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<launch>

  <arg name="laser_enabled" default="true"/>
  <arg name="ur5_enabled" default="false"/>

 <include file="$(find multimaster_launch)/launch/multimaster_gazebo.launch"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find husky_gazebo)/launch/playpen.launch" />

  <include file="$(find husky_gazebo)/launch/spawn_husky.launch">
    <arg name="laser_enabled" value="$(arg laser_enabled)"/>
    <arg name="robot_namespace" value="husky_alpha"/>
    <arg name="multimaster" value="true"/>
  </include>

  <include file="$(find husky_gazebo)/launch/spawn_husky.launch">
    <arg name="laser_enabled" value="$(arg laser_enabled)"/>
    <arg name="robot_namespace" value="husky_beta"/>
    <arg name="multimaster" value="true"/>
    <arg name="x" value="1.0"/>
    <arg name="y" value="3.0"/>
    <arg name="yaw" value="30.0"/>
  </include>

  <include file="$(find husky_gazebo)/launch/spawn_husky.launch">
    <arg name="laser_enabled" value="$(arg laser_enabled)"/>
    <arg name="robot_namespace" value="husky_gamma"/>
    <arg name="multimaster" value="true"/>
    <arg name="x" value="-3.0"/>
    <arg name="y" value="-1.0"/>
    <arg name="yaw" value="45.0"/>
  </include>

</launch>

Originally posted by anonymous73904 on ROS Answers with karma: 1 on 2021-04-29
Post score: 0

A:

I suggest you look at this repo to give you a start how to work with multiple robots: https://github.com/Shilpaj1994/TurtleSim-Sketch/tree/master/dynamic_reconfigure-noetic-devel

Originally posted by osilva with karma: 1650 on 2021-09-12
This answer was ACCEPTED on the original site
Post score: 0

