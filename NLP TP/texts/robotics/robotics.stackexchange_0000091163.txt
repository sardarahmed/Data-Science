Q:

ros c++ pause unpause gazebo

Hi,
I want to control the gazebo simulation by c++.
My core code is below:
        ros::ServiceClient pauseGazebo = n_.serviceClient<std_srvs::Empty>("/gazebo/pause_physics");
        std_srvs::Empty pauseSrv;
        pauseGazebo.call(pauseSrv);
        std::cout<<"enter q to continue"<<std::endl;
        char key;
        std::cin>>key;
        if('q' == key)
        {
            pauseGazebo.shutdown();
            ros::ServiceClient unpauseGazebo = n_.serviceClient<std_srvs::Empty>("/gazebo/unpause_physics");
            std_srvs::Empty unpauseSrv;
            pauseGazebo.call(unpauseSrv);
            std::cout<<"q is pushed"<<std::endl;
        }

The puase work well, after I enter q, the "q is pushed" output, but the gazebo is still in the state of pasue.
Can you provide some tip?

Originally posted by TouchDeeper on ROS Answers with karma: 57 on 2019-03-28
Post score: 0

A:

You have a typo in your code. The second service call should be
unpauseGazebo.call(unpauseSrv);

whereas you have
pauseGazebo.call(unpauseSrv);

which you have already shutdown.
A couple of more suggestions / information (as I have OCD)
You don't need to explicitly call shutdown as per documentation. When the service client goes out of scope, it will be automatically shutdown.
Also, declaring everything on the top makes the code more readable, like this
    ros::ServiceClient pauseGazebo = n_.serviceClient<std_srvs::Empty>("/gazebo/pause_physics");
    ros::ServiceClient unpauseGazebo = n_.serviceClient<std_srvs::Empty>("/gazebo/unpause_physics");
    std_srvs::Empty pauseSrv;
    std_srvs::Empty unpauseSrv;
    char key;

    pauseGazebo.call(pauseSrv);

    std::cout<<"enter q to continue"<<std::endl;
    
    std::cin>>key;
    if('q' == key)
    {           
        unpauseGazebo.call(unpauseSrv);
        std::cout<<"q is pushed"<<std::endl;
    }

Originally posted by janindu with karma: 849 on 2019-03-28
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by TouchDeeper on 2019-03-28:
Hi,@janindu
Thanks for your point. You are right. Iâ€˜m too careless.

