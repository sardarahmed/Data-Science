Q:

moving mobile robot in zigzag way

Hello,
I want to move the husky robot using a code that publishes the command velocities. the movement should be like zigzag. here is the code that I am trying but it is not working.. I did not knew how to do it. Any help please ?
//const double M_PI=3.14159265359 ;
 const double deg_to_rad = M_PI / 180.0 ;
class test_pf
 {
 public:
test_pf(ros::NodeHandle & n_) : n(n_)
{
    vel_pub = n.advertise<geometry_msgs::Twist>("/husky_ns/husky/cmd_vel", 100);
};

void move(double val)
{
    geometry_msgs::Twist msg;
            msg.linear.x = val;
            msg.linear.y =  0.0 ;
            msg.linear.z =  0.0;
            msg.angular.x = 0 ;
            msg.angular.y = 0 ;
            msg.angular.z = 0 ;
        vel_pub.publish(msg);
}

void turn(double val)
{
    geometry_msgs::Twist msg;
            msg.linear.x = 0.0;
            msg.linear.y =  0.0 ;
            msg.linear.z =  0.0;
            msg.angular.x = 0.0 ;
            msg.angular.y = 0.0 ;
            msg.angular.z = val ;
        vel_pub.publish(msg);
}

  private:
  // ROS
  ros::NodeHandle n;
  ros::Publisher vel_pub ;
 } ;

int main(int argc, char **argv)
{

// ROS node
std:: cout << " MAIN " << std::endl ;
ros::init(argc, argv, "move_robot");
ros::NodeHandle n;
ros::NodeHandle n_priv("~");
ros::Rate loop_rate(50);

// create an object
test_pf move_robot_obj(n);

while(ros::ok())
{
    move_robot_obj.move(1.0);
    loop_rate.sleep();
    move_robot_obj.turn(4.0);
    loop_rate.sleep();
    move_robot_obj.move(1.0);
    loop_rate.sleep();
    move_robot_obj.turn(-4.0);
    loop_rate.sleep();
    }
  return 0;
 }

Originally posted by RSA_kustar on ROS Answers with karma: 275 on 2014-09-25
Post score: 0

Original comments
Comment by Morgan on 2014-09-25:
What behavior do you see when you try it? Does anything interesting (e.g., a warning or error) show up in the console?
Comment by RSA_kustar on 2014-09-25:
no error in console.. it keeps moving forward and I cant notice the turns but eventually the track is changing slowly downward in un-noticable way

A:

I solved it using a dummy way of pulling the CPU by using a for loop
  for (int i=0 ;i <99999; i++)
        {
            std::cout << "turn left" << std::endl ;
            move_robot_obj_1.turn(0.780);
        }
        loop_rate.sleep();

        for (int i=0 ;i <99999; i++)
        {
            std::cout << "move forward" << std::endl ;
              move_robot_obj_1.move(1.0);
        }
        loop_rate.sleep();
        for (int i=0 ;i <99999; i++)
        {
            std::cout << "turn right" << std::endl ;
            move_robot_obj_1.turn(-1.2);
        }
        loop_rate.sleep();

        for (int i=0 ;i <99999; i++)
        {
            std::cout << "move forward" << std::endl ;
            move_robot_obj_1.move(1.0);
        }

in the turn you should specify the angle in radian not degree and send it to function that define a         geometry_msgs::Twist msg  and fill it with the required information and publish it. Also while turning, I send a velocity in the forward direction, so the robot will move in a wave form as the following:
  void turn(double val)
  {
      geometry_msgs::Twist msg;
     msg.linear.x = 1.0;
     msg.linear.y =  0.0 ;
     msg.linear.z =  0.0;
     msg.angular.x = 0.0 ;
     msg.angular.y = 0.0 ;
     msg.angular.z = val ;
     vel_pub.publish(msg);
 }

The robot moved in a wave form. I know that it is not the best way to do it. So, if you have another way please let me know.

Originally posted by RSA_kustar with karma: 275 on 2014-10-09
This answer was ACCEPTED on the original site
Post score: 0

