Q:

trigger recompilation of installed msgs

Related to my question about triggering a new language generator: https://answers.ros.org/question/291808/how-to-hook-a-new-idl-generator/
I currently have a workspace (from source) with the official ROS2 repositories. This is "installed", so to say, so it is not recompiled. My Ada-related packages are in an overlay workspace, which is recompiled often.
My generator for Ada is correctly triggered when a new .msg is defined in my packages. However, messages already in the official sources (std_msgs, etc) are obviously left alone.
My question is if there is some sanctioned way of regenerating the messages in "parent" overlays.
Looking at ros2_java I see that it basically brings in a lot of ros2 repositories to its workspace during the compilation of ros2_java. I see some problems with this:

Compilation times are higher.
It seems a waste to recompile things that have been compiled during the "official" installation.
If I were working with a "stable" ROS2 source (e.g. Ubuntu packages) it would feel very strange to have to recompile from sources core packages that are installed via package manager (I'm thinking here on the long term for users of those client libraries that don't come in the base ROS2).

I'm leaning toward identifying the installation tree of rosidl_generator_c and search all messages in there, but it seems inelegant, and it would miss other hypothetical overlays' messages.

Originally posted by amosteo on ROS Answers with karma: 43 on 2018-06-05
Post score: 0

A:

My question is if there is some sanctioned way of regenerating the messages in "parent" overlays.

No, currently there is no such way.

I'm leaning toward identifying the installation tree of rosidl_generator_c and search all messages in there, but it seems inelegant, and it would miss other hypothetical overlays' messages.

There is certainly a better approach for this. All message packages already register themselves at the resource index (see the directory <install>/share/ament_index/resource_index/rosidl_interfaces). Each mesage package only exports all messages / services using a CMake config file (e.g. <install>/share/std_msgs/cmake/rosidl_cmake-extras.cmake). It should be easily doable to provide that information through the resource index to make it available in non-CMake context.

Originally posted by Dirk Thomas with karma: 16276 on 2018-07-05
This answer was ACCEPTED on the original site
Post score: 0

