Q:

ROS and Kinect data without callbacks

I'd like to get rgb and depth data from a kinect, and I found a little tutorial here: http://wiki.ros.org/cv_bridge/Tutorials/ConvertingBetweenROSImagesAndOpenCVImagesPython. It's fine, but what I'd like is to be able to get the data on demand, and not as whenever the callback is triggered, assuming I won't try to get the data faster than it can be available. I'd appreciate any help - do go easy on the ROS jargon, I'm still learning...Thanks.

A:

You should simply use the callback method since you can have an object in your code that is always updated with the latest measurement. Then you can simply poll the measurement in that object whenever you want (say in some while loop running at a given rate). I notice you are linking to help related to using Python, whereas I am more familiar with coding ROS nodes in C++. If you were doing that then your code might look something like:
#include...

class KinectSubscriber {
 ...
}

int main(...) {
 ...
 KinectSubscriber MyKinectSub;
 ...
 while (ros::ok()) {
  ...
  data = MyKinectSub.data;
  ...
 }
}

Of course you don't have to access the data at each iteration of the loop, you could use some conditional statements so that the data is polled only under certain circumstances.

