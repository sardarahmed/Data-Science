Q:

Linking camera_info_manager fails on OSX

Hello,
following the installation instructions for hydro on OSX I encounter this linking error.
How can I fix this?
==============
cd /Users/tatsch/ros_catkin_ws/build_isolated/camera_info_manager && /Users/tatsch/ros_catkin_ws/install_isolated/env.sh make  
    Linking CXX shared library /Users/tatsch/ros_catkin_ws/devel_isolated/camera_info_manager/lib/libcamera_info_manager.dylib
    Undefined symbols for architecture x86_64:
      "ros::console::print(ros::console::FilterBase*, log4cxx::Logger*, ros::console::levels::Level, char const*, int, char const*, char const*, ...)", referenced from:
          camera_info_manager::CameraInfoManager::setCameraInfoService(sensor_msgs::SetCameraInfoRequest_<std::__1::allocator<void> >&, sensor_msgs::SetCameraInfoResponse_<std::__1::allocator<void> >&) in camera_info_manager.cpp.o
          camera_info_manager::CameraInfoManager::loadCalibration(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) in camera_info_manager.cpp.o
      "ros::console::print(ros::console::FilterBase*, log4cxx::Logger*, ros::console::levels::Level, std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*, int, char const*)", referenced from:
          camera_info_manager::CameraInfoManager::loadCalibration(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) in camera_info_manager.cpp.o
          camera_info_manager::CameraInfoManager::getPackageFileName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) in camera_info_manager.cpp.o
          camera_info_manager::CameraInfoManager::resolveURL(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) in camera_info_manager.cpp.o
          camera_info_manager::CameraInfoManager::loadCalibrationFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) in camera_info_manager.cpp.o
          camera_info_manager::CameraInfoManager::saveCalibration(sensor_msgs::CameraInfo_<std::__1::allocator<void> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) in camera_info_manager.cpp.o
          camera_info_manager::CameraInfoManager::saveCalibrationFile(sensor_msgs::CameraInfo_<std::__1::allocator<void> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) in camera_info_manager.cpp.o
    ld: symbol(s) not found for architecture x86_64
    clang: error: linker command failed with exit code 1 (use -v to see invocation)
    make[2]: *** [/Users/tatsch/ros_catkin_ws/devel_isolated/camera_info_manager/lib/libcamera_info_manager.dylib] Error 1
    make[1]: *** [CMakeFiles/camera_info_manager.dir/all] Error 2
    make: *** [all] Error 2

Originally posted by J.M.T. on ROS Answers with karma: 266 on 2014-06-29
Post score: 0

A:

Apparently it tried to link against the old libraries in /opt/ros/hydro.
Once I cleared them from the path and cleaned the already built stuff everything worked just fine.

Originally posted by J.M.T. with karma: 266 on 2014-06-30
This answer was ACCEPTED on the original site
Post score: 1

