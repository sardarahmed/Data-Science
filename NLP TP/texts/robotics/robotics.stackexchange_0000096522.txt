Q:

Which ROS package dependencies are redundant/implicitly included?

Hi all,
I am wondering the following: when adding a dependency to roscpp, what are the packages that are implicitly included ?
Here is a concrete example:
find_package(catkin REQUIRED COMPONENTS
  rosconsole
  roscpp
  )

In this case, would rosconsole be considered redundant? Is it included in roscpp? If yes, what are the packages that are implicitly included in roscpp?
In summary, how would one find which ROS packages are implicitly included for any package?
Thank you!

Originally posted by Pinknoise2077 on ROS Answers with karma: 69 on 2020-07-13
Post score: 0

A:

While a package A might bring in dependencies B and C you should always explicitly declare dependencies on all packages which you use directly.
So if you e.g. include headers from A and B you should also declared both explicitly and not rely on the fact that A brings in B implicitly.

how would one find which ROS packages are implicitly included for any package?

rospack depends <pkgname> lists all recursive dependencies of a given package.

Originally posted by Dirk Thomas with karma: 16276 on 2020-07-13
This answer was ACCEPTED on the original site
Post score: 2

