Q:

what is the purpose of zeroconf and avahi?

Recently, I discovered a process on my ubuntu that was eating away at both processor time and memory, 18% and 10% respectively.  Avahi-daemon and I got rid of it along with pulseaudio. It seems to me that there is no need for avahi-daemon which is a zeroconf derivative in itself. If this process caused issues, isn't well maintained, and eats up precious resources then why is it being utilized in ROS? All the way to Hydro, I see zeroconf. I read the discription provided by the ROS wiki, and checked Archlinux for zeroconf and avahi. I still don't see what purpose it serves because I don't see it being a dependency for anything other than ros-hydro-turtlebot-bringup.
What purpose does zeroconf and avahi serve when the amount of resources it consumes is detrimental in a resource scarce scenario such as most robot systems, e.g. 7-DOF manipulators, vision-based path planning/navigation, etc?
I am trying to understand what, why, and how of this package/stack. I feel like it should be deprecated.

Originally posted by paresh471 on ROS Answers with karma: 86 on 2014-03-09
Post score: 2

A:

Later versions of Ubuntu include support for Zeroconf, a technique that allows machines on the same subnet to reference each other using local hostnames instead of IP addresses. So you can use this method if your desktop computer and robot are connected to the same router on a home or office networkâ€”a common scenario for both hobby and research robots.
You can use zeroconf to communicate between two systems (say, robot and desktop) to ssh into using just their hostnames.
For eg. If you type $hostname and you get something like "my_robot" you can use this instead of the IP address to communicate between the two pcs. Instead of IP address of both PC just using "my_robot.local" will be helpful.

Originally posted by Vegeta with karma: 340 on 2014-08-13
This answer was ACCEPTED on the original site
Post score: 0

