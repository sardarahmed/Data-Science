Q:

Why can't catkin depend on rosbuild?

This is more a philosophical than technical question. I would assume that if someone wants to introduce a new tool and make people to use it, he would make the switch as easy as possible. I think that opposite is the case.
Assume I'm a developer of a ROS package. My package depends on some third party packages. Now, catkin comes and I want to keep up with the ROS development, so I decide to switch. However, Groovy where catkin is introduces is full of rosbuild packages (OK I know about one, but thats enough), so I'm going back to rosbuild.
The package which stop me from using catkin was SMACH, which is dry in groovy on Ubuntu 12.4.
Maybe I'm not getting something or have wrong catkin workflow, so please correct me if there is a way how to use catkin in groovy.

Originally posted by liborw on ROS Answers with karma: 801 on 2013-06-24
Post score: 2

A:

As @dornhege mentioned we provided backwards compatibility such that rosbuild packages can depend on catkin packages.  To do this a lot of effort went into catkin to emulate what rosbuild expects.
catkin has been designed from the ground up with cleaner dependencies and have capabilities which were missing in rosbuild.  As such catkin tracks a lot more information than rosbuild does and as such you cannot cleanly build catkin packages on top of rosbuild packages. Furthermore to enable catkin to build on top of rosbuild packages you would need to depend on rosbuild and it's entire infrastructure, which was part of the reason for the redesign. This leads to a circular dependency. With catkin at the bottom we can have the cleaner system at the core and it can work it's way up through the dependency tree. As we progress through the system rosbuild will be phased out and once you have transitioned across the boundary rosbuild will no longer effect your development.
The other approach would be to work from the leafs inward, but that's much worse as it would require the leaf nodes to work in lockstep instead of the core. Where leaf packages are potentially unreleased and unlisted.

Originally posted by tfoote with karma: 58457 on 2013-08-12
This answer was ACCEPTED on the original site
Post score: 3

