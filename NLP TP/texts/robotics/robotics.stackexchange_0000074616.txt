Q:

Confused about coordinate frames. Can someone please explain?

I've read:

http://wiki.ros.org/navigation/Tutorials/RobotSetup/Odom
http://www.ros.org/reps/rep-0105.html
http://ros.org/wiki/tf
http://wiki.ros.org/tf/Design

However I'm still quite confused about the different coordinate frames map, odom, and base_link. Below I'll explain what my current understanding of these frames is, along with some questions.
map

I think this one makes the most sense conceptually.
I consider this the "ground truth" which is the real world.
REP-0105 calls this a "world fixed frame", which makes sense, because it's tied to the real world.

odom

REP-0105 calls this a "world fixed frame". What? How is this fixed? Isn't this supposed to represent the movement of a mobile robot?
This frame is computed from an odemetry source like wheels or an IMU. Makes sense.

base_link

Why is base_link a separate frame? Shouldn't odom and base_link be the same thing? Doesn't odom represent the robot base and its movement?

I feel like I partially understand frames and tf. For example if you have sonar sensors mounted on a robot, you may want to know what the sensor value is from the base_link frame instead of the sonar sensor frame. I get that.
But the odom and base_link frames confuse me. Can someone please explain what the difference is?

Originally posted by triantatwo on ROS Answers with karma: 237 on 2016-06-16
Post score: 10

A:

Adding to the previous answer, odom frame is called so because it is the frame where the odometry is used to update the pose of the robot. In this frame, there is no correction or jumps in the robot's pose, it is continually updated based on the data coming from the motor's encoders (sometimes fused with accelerometer and gyro).
Map frame is the frame representing the world, where your map (mostly occupancy grid map with black areas represent obstacles and walls) is defined.
Now in order to run robot localization and model the drifts of the robot while it is navigating, a transform between the frame map and the frame odom was introduced. At the beginning map and odom frame are overlapping. While the robot navigates  and localizes (using amcl for example) it will correct its drift but it will not do this correction by changing its pose in the odom frame (this pose published under the topic /odom). It will update the transform between map and odom frames such that when you chain the transforms to get the pose of the robot in the map frame, you will get the corrected pose (thus the transform between map and odom frames represents the offset in the robot's pose that is given in the odom frame).
Do not confuse the frame odom with the robot's pose published under the topic /odom. The frame odom is just a coordinate system where the robot has to be located. This location of the robot would then be the coordinates of base_link in the odom frame. These coordinates are published in the /odom topic. If you do a rosrun tf_echo odom base_link you will get exactly the same thing as in rostopic echo /odom (here the topic odom might change depending on the robot model and on your software). So when you turn on the robot, base_link and odom are overlapping as the robot's pose is zero at the beginning. But once the robot's wheels start rotating, base_link will get away from odom. So base_link is a mobile frame and odom a fixed one.

Originally posted by Mehdi. with karma: 3339 on 2016-06-17
This answer was ACCEPTED on the original site
Post score: 18

Original comments
Comment by triantatwo on 2016-06-17:
So if I understand correctly, the dynamic/mobile base_link frame "lives" in the static/fixed odom frame? And the transform between the map frame and odom frame serves to correct for drift?
Comment by Mehdi. on 2016-06-20:
yes exactly

