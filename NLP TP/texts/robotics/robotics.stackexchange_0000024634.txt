Q:

Deprecating a ROS 2 parameter name

ros-perception/image_transport_plugins was ported across from ROS 1 to ROS 2 a while back. During the port, some parameters were given the wrong parameter name. We are trying to revert the parameter names to what they were in ROS 1, and want to deprecate the current parameter names. This is tracked in this issue.
To give an example, we have a node with the parameter name foo, but we want this parameter to be named bar instead. Other packages may depend on calling get/set on the foo parameter, so we can't simply rename it and break other packages. We want to notify these callers that they should be calling get/set on bar instead in the new version.
Is there a graceful deprecation strategy here? I believe this is possible for the setting of parameters, but is there a way to give a warning when another node tries to get a deprecated parameter in rclcpp?

A:

I don't believe that there is a way to warn the caller specifically.
We can't always provide full notifications of deprecations. Compile time or build time are optimal, but runtime ones are helpful but can be annoying sometimes if to verbose. The main thing to provide is good strong documentation with ample verbosity in changelogs and release notes. As well the callers can remap relatively quickly when they discover the mismatch. And if you're clear when setting, that will hopefully inform most of the applications that are getting the parameters too. We could extend the getParameter API to be able to register a callback but that's potentially a lot of overhead and complexity to trade off against.

