Q:

Difference between installing ROS from source and already-built one

Hi,
I would like to know what is the difference between installing ROS from source and "already-built" one. Despite knowing that as mentioned in the web page that the one that "already-built" is more efficient over the other, what is its limitation. I have also once heard from somebody telling that the best practice if we are developing something (not only using it) is to use the one built from source. Is that one right?
Thanks in advance.
-alfa-

Originally posted by alfa_80 on ROS Answers with karma: 1053 on 2011-09-27
Post score: 0

A:

By taking the pre-built packages from the repositories, they're by default read-only. This means that if you want to modify them, you'd need to change the permissions on every file.
The reason that they're read-only, however, is because the packages downloaded from the repositories (the pre-built packages) are the stable, maintained versions of the code. Occasionally, updates will be released. These updates will overwrite any local modifications to the packages, but will provide you with the latest stable builds.
Building from source, on the other hand, always gives you the most up-to-date version of each package. Checking out the source code also gives the code default read/write permissions, and it won't ever be updated, unless you do it manually. Checking out from source gives you more control over versions, modifications, etc.
The choice is really up to you. It really depends what you intend to do with the code. I hope this helps to clarify it a bit. I can't guarantee that this is a comprehensive list, but this is just my 2 cents.

Originally posted by DimitriProsser with karma: 11163 on 2011-09-28
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by alfa_80 on 2011-09-28:
Thanks a lot for sharing your experience..
Comment by DimitriProsser on 2011-09-28:
I use the pre-build binaries for most applications. I have my own code that I've written for my specific application, and then I use ROS packages for navigation, msgs, visualization, plugins, simulator, etc. I've created a few forks of ROS packages as well.
Comment by alfa_80 on 2011-09-28:
@DimitriProsser: Just want to know, are using the pre-built binaries?

