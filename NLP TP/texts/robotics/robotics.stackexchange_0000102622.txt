Q:

Read data from ROS2 topic when I want to instead of callback

Hi,
Currently, if a topic is published, in order to listen to the message, I create a subscriber and a callback function which gets called whenever there is a new message on the topic. Instead of this approach, is it possible to read data from a topic only when I want to? Or to call a function which can read data from topic only when I want it?
Thanks,
Dev

Originally posted by dvy on ROS Answers with karma: 52 on 2022-10-26
Post score: 0

A:

No, you can not. Both ros1 and ros2 use publish/subscribe style for topics.
However, you could easily mimic what you are asking for by using the subscribe callback to save the message in a variable (using an appropriate mutex if needed.) Then your code can "read" this variable any time you want to.

Originally posted by Mike Scheutzow with karma: 4903 on 2022-10-26
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by gvdhoorn on 2022-10-27:
What about wait_for_message(..)?
That exists in both ROS 1 and ROS 2.
Technically, it still creates a subscription and just waits for a single msg, so conceptually that's no different from creating your own subscription, but it's essentially what the OP asks for.
See #q270298 and #q292582 for previous Q&As about this.
Comment by Mike Scheutzow on 2022-10-27:
@gvdhoorn That would be quite inefficient for repeat use; it still uses a standard subscribe callback, and each "read" would take much longer as the ros node now has to communicate with the master plus has to wait for the next message to arrive.
Comment by gvdhoorn on 2022-10-27:
For everything more than incidental use I would not recommend using it no. But that's also not the intended use-case. It's intended for things like capturing a single message from a topic in a service or action callback, or for initialising a "current state" kind of thing.
message_filters/Cache would be something you'd use to implement a proper version of "save the message in a variable [..] and read this [..] any time you want to".

