Q:

Laser_ortho_projector transformation problem

I'm currently using ROS Hydro. I've been trying without success to run laser_ortho_projector without a base/world tf. According to the wiki (http://wiki.ros.org/laser_ortho_projector#Required_tf_Transforms), this is fine so long as an IMU topic is provided, since the node can determine the attitude of the laser frame relative to the fixed frame.
(Note that while the wiki article referenced is for Fuerte, I used the Hydro package: https://github.com/ccny-ros-pkg/scan_tools/tree/hydro)
Currently, I have a laser topic (/scan) and IMU topic (/imu/data) successfully publishing. Also, I have a laser > base_link static transformation being broadcast (included in launch file below).
I continue to get the following error:
[ WARN] [ros timestamp]: Skipping scan Could not find a connection between 'world' and 'base_link' because they are not part of the same tree.Tf has two or more unconnected trees.

Here is my launch file:
<launch>

<!-- Static TF Publication -->
<node pkg="tf" type="static_transform_publisher" name="base_to_laser" 
        args="0 0 0 0 0 0 /base_link /laser 40" />

<!-- Laser Ortho Projector-->
<node pkg="laser_ortho_projector" type="laser_ortho_projector_node" name="laser_ortho_projector" output="screen">
    
<param name="use_imu" type="bool" value="true"/>
<param name="use_pose" type="bool" value="false"/>
<param name="publish_tf" type="bool" value="true"/>
<remap from= "cloud_ortho" to="cloud"/>
    
</node>

</launch>

Thanks for any assistance!

Originally posted by crzx5 on ROS Answers with karma: 31 on 2015-02-06
Post score: 2

Original comments
Comment by locustcox on 2015-02-06:
I'm dealing with the same problem! Any help here would be appreciated.

A:

Instead I recommend you to work "pose mode" instead on "imu mode". You can use the demo.launch file provided in the package. You will have to generate your base_frame using the imu data you already have. The http://wiki.ros.org/hector_imu_attitude_to_tf may help you in this task.
If you still want to continue working in the imu mode you will need to provide another extra transformation that defines the position of the base_frame in the world.
Some thoughts about the imu-mode
I agree that this is counter-intuitive: You have to provide the orientation of the link twice (in the imu message and in the transform). Why? IMHO it is not needed, just implementation reasons. For the imu-mode the ortho_frame transform could have been directly broadcasted as child of base_frame (ignoring the yaw field). However the implementation broadcasts the ortho_frame as child of world.

Originally posted by Pablo IÃ±igo Blasco with karma: 2982 on 2016-04-26
This answer was ACCEPTED on the original site
Post score: 0

