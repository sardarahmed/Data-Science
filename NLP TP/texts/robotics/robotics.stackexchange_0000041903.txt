Q:

pylint & pychecker

Have you tried to use pylint or pychecker to improve/check your python code?
I've tried with pylint but it can't import rospy and srv or msg packages:

No config file found, using default configuration
F:  6: Unable to import 'rospy'
F:  8: Unable to import 'my_package.srv'
F:  9: Unable to import 'my_package.msg'
F: 10: Unable to import 'std_srvs.srv'
F: 11: Unable to import 'std_msgs.msg'
...

With PyChecker I've a similar problem:

Processing module my_node (my_node.py)...
ImportError: No module named srv

Warnings...

my_node:1: NOT PROCESSED UNABLE TO IMPORT

Any idea? I found this ticket related with this topic, but it was not very useful for me.
Thank you!

Originally posted by narcispr on ROS Answers with karma: 307 on 2012-07-03
Post score: 5

A:

It should be sufficient to have your ros environment set up. Meaning if you create your own ros package, make sure it is on the ROS_PACKAGE_PATH.
In your case the python file that has
import rospy

need to to have before that
import roslib
roslib.load_manifest('...')

with .. being either rospy or your package, but for the latter your package also needs to declare rospy in it's manifest.xml.
pychecker seems to be unable to check scripts that do not end with .py. The solution is to remove most of the code from such files like "my_node" and put the code inside the src folder. Then my_node can import the module from src, and pychecker can check the code in src.
EDIT: This should work in fuerte, and without roslib.load_manifest.
In electric and earlier, load_manifest is required for pychecker. pylint ignores that, so pylint cannot find libraries in electric and before.

Originally posted by KruseT with karma: 7848 on 2012-07-03
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by narcispr on 2012-07-03:
My node starts with:
import roslib
roslib.load_manifest('my_package')
import rospy
and the manisfest contains  but I've the problem previously mentioned.
Comment by Lorenz on 2012-07-03:
Just a note: in Fuerte, roslib.load_manifest should not be required anymore and there is a pretty good chance that pychecker will work.
Comment by narcispr on 2012-07-03:
pylint --version
No config file found, using default configuration
pylint 0.23.0,
astng 0.21.1, common 0.55.2
Python 2.7.2+ (default, Oct  4 2011, 20:03:08)
[GCC 4.6.1]
I'm using Ubuntu 11.10 & ROS Electric
Comment by narcispr on 2012-07-03:
$ pylint safety_g500.py | grep 'F:'
No config file found, using default configuration
F:  6: Unable to import 'rospy'
F:  8: Unable to import 'safety_g500.srv'
F:  9: Unable to import 'safety_g500.msg'
F: 10: Unable to import 'std_srvs.srv'
...
Comment by KruseT on 2012-07-03:
ok, in electric, it is still required to run load_manifest. pylint however ignores load_manifest, so it will never be able to find rospy, unless you manually put it onto your PYTHONPATH before manually.
Comment by KruseT on 2012-07-03:
However pychecker should work, as long as you put your code into files named xyz.py. You can also name your nodes like that, to start with.

