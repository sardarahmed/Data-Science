Q:

Issues calling registerCallback()

Hello,
I want to synchronise two topics by using Time_synchronizer. The first one is Is a sensor_msgs and the second one is a custom message containing an int32. I followed the tutorial and read some post on various pages, but it does not build properly.
class Controller
{
    public:
        ros::NodeHandle node;
        ros::ServiceClient service_client;
        std::vector<NumberAndPicture> storage;
        message_filters::Subscriber<sensor_msgs::Image> img_subscriber; 
        message_filters::Subscriber<imagineer::Number> int_subscriber;
        message_filters::TimeSynchronizer<sensor_msgs::Image, imagineer::Number> sync;

        Controller() : sync(img_subscriber, int_subscriber, 10)
        {
            service_client = node.serviceClient<imagineer::ImageAck>("ImageAck");
            img_subscriber.subscribe(node, "processor/image", 1);
            int_subscriber.subscribe(node, "camera/integer", 1); 
            sync.registerCallback(boost::bind(&Controller::callback, this, _1, _2));
        }

        void callback(const sensor_msgs::ImageConstPtr& image, const imagineer::Number& digit)
        {
            try
            {
                imagineer::ImageAck ack_service;
                add_to_list(digit, image);
                ROS_INFO("Int and image are saved");
                send_image(image, ack_service);
            }
            catch (cv_bridge::Exception& e)
            {
                ROS_ERROR("Error: %s", e.what());
            }
        }
};

The error message I get when I execute catkin_make:
[ 95%] Building CXX object imagineer/CMakeFiles/controller.dir/src/controller.cpp.o
In file included from /usr/include/boost/bind.hpp:22,
                 from /opt/ros/noetic/include/ros/publisher.h:35,
                 from /opt/ros/noetic/include/ros/node_handle.h:32,
                 from /opt/ros/noetic/include/ros/ros.h:45,
                 from /home/marta/catkin_ws/src/imagineer/src/controller.cpp:1:
/usr/include/boost/bind/bind.hpp: In instantiation of ‘void boost::_bi::list3<A1, A2, A3>::operator()(boost::_bi::type<void>, F&, A&, int) [with F = boost::_mfi::mf2<void, Controller, const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&, const imagineer::Number_<std::allocator<void> >&>; A = boost::_bi::rrlist9<const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&, const boost::shared_ptr<const imagineer::Number_<std::allocator<void> > >&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&>; A1 = boost::_bi::value<Controller*>; A2 = boost::arg<1>; A3 = boost::arg<2>]’:
/usr/include/boost/bind/bind.hpp:1402:50:   required from ‘boost::_bi::bind_t<R, F, L>::result_type boost::_bi::bind_t<R, F, L>::operator()(A1&&, A2&&, A3&&, A4&&, A5&&, A6&&, A7&&, A8&&, A9&&) [with A1 = const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&; A2 = const boost::shared_ptr<const imagineer::Number_<std::allocator<void> > >&; A3 = const boost::shared_ptr<const message_filters::NullType>&; A4 = const boost::shared_ptr<const message_filters::NullType>&; A5 = const boost::shared_ptr<const message_filters::NullType>&; A6 = const boost::shared_ptr<const message_filters::NullType>&; A7 = const boost::shared_ptr<const message_filters::NullType>&; A8 = const boost::shared_ptr<const message_filters::NullType>&; A9 = const boost::shared_ptr<const message_filters::NullType>&; R = void; F = boost::_mfi::mf2<void, Controller, const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&, const imagineer::Number_<std::allocator<void> >&>; L = boost::_bi::list3<boost::_bi::value<Controller*>, boost::arg<1>, boost::arg<2> >; boost::_bi::bind_t<R, F, L>::result_type = void]’
/usr/include/boost/bind/bind.hpp:833:35:   required from ‘void boost::_bi::list9<A1, A2, A3, A4, A5, A6, A7, A8, A9>::operator()(boost::_bi::type<void>, F&, A&, int) [with F = boost::_bi::bind_t<void, boost::_mfi::mf2<void, Controller, const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&, const imagineer::Number_<std::allocator<void> >&>, boost::_bi::list3<boost::_bi::value<Controller*>, boost::arg<1>, boost::arg<2> > >; A = boost::_bi::rrlist9<const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&, const boost::shared_ptr<const imagineer::Number_<std::allocator<void> > >&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&>; A1 = boost::arg<1>; A2 = boost::arg<2>; A3 = boost::arg<3>; A4 = boost::arg<4>; A5 = boost::arg<5>; A6 = boost::arg<6>; A7 = boost::arg<7>; A8 = boost::arg<8>; A9 = boost::arg<9>]’
/usr/include/boost/bind/bind.hpp:1402:50:   required from ‘boost::_bi::bind_t<R, F, L>::result_type boost::_bi::bind_t<R, F, L>::operator()(A1&&, A2&&, A3&&, A4&&, A5&&, A6&&, A7&&, A8&&, A9&&) [with A1 = const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&; A2 = const boost::shared_ptr<const imagineer::Number_<std::allocator<void> > >&; A3 = const boost::shared_ptr<const message_filters::NullType>&; A4 = const boost::shared_ptr<const message_filters::NullType>&; A5 = const boost::shared_ptr<const message_filters::NullType>&; A6 = const boost::shared_ptr<const message_filters::NullType>&; A7 = const boost::shared_ptr<const message_filters::NullType>&; A8 = const boost::shared_ptr<const message_filters::NullType>&; A9 = const boost::shared_ptr<const message_filters::NullType>&; R = boost::_bi::unspecified; F = boost::_bi::bind_t<void, boost::_mfi::mf2<void, Controller, const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&, const imagineer::Number_<std::allocator<void> >&>, boost::_bi::list3<boost::_bi::value<Controller*>, boost::arg<1>, boost::arg<2> > >; L = boost::_bi::list9<boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4>, boost::arg<5>, boost::arg<6>, boost::arg<7>, boost::arg<8>, boost::arg<9> >; boost::_bi::bind_t<R, F, L>::result_type = void]’
/usr/include/boost/function/function_template.hpp:158:11:   required from ‘static void boost::detail::function::void_function_obj_invoker9<FunctionObj, R, T0, T1, T2, T3, T4, T5, T6, T7, T8>::invoke(boost::detail::function::function_buffer&, T0, T1, T2, T3, T4, T5, T6, T7, T8) [with FunctionObj = boost::_bi::bind_t<boost::_bi::unspecified, boost::_bi::bind_t<void, boost::_mfi::mf2<void, Controller, const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&, const imagineer::Number_<std::allocator<void> >&>, boost::_bi::list3<boost::_bi::value<Controller*>, boost::arg<1>, boost::arg<2> > >, boost::_bi::list9<boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4>, boost::arg<5>, boost::arg<6>, boost::arg<7>, boost::arg<8>, boost::arg<9> > >; R = void; T0 = const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&; T1 = const boost::shared_ptr<const imagineer::Number_<std::allocator<void> > >&; T2 = const boost::shared_ptr<const message_filters::NullType>&; T3 = const boost::shared_ptr<const message_filters::NullType>&; T4 = const boost::shared_ptr<const message_filters::NullType>&; T5 = const boost::shared_ptr<const message_filters::NullType>&; T6 = const boost::shared_ptr<const message_filters::NullType>&; T7 = const boost::shared_ptr<const message_filters::NullType>&; T8 = const boost::shared_ptr<const message_filters::NullType>&]’
/usr/include/boost/function/function_template.hpp:931:38:   required from ‘void boost::function9<R, T1, T2, T3, T4, T5, T6, T7, T8, T9>::assign_to(Functor) [with Functor = boost::_bi::bind_t<boost::_bi::unspecified, boost::_bi::bind_t<void, boost::_mfi::mf2<void, Controller, const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&, const imagineer::Number_<std::allocator<void> >&>, boost::_bi::list3<boost::_bi::value<Controller*>, boost::arg<1>, boost::arg<2> > >, boost::_bi::list9<boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4>, boost::arg<5>, boost::arg<6>, boost::arg<7>, boost::arg<8>, boost::arg<9> > >; R = void; T0 = const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&; T1 = const boost::shared_ptr<const imagineer::Number_<std::allocator<void> > >&; T2 = const boost::shared_ptr<const message_filters::NullType>&; T3 = const boost::shared_ptr<const message_filters::NullType>&; T4 = const boost::shared_ptr<const message_filters::NullType>&; T5 = const boost::shared_ptr<const message_filters::NullType>&; T6 = const boost::shared_ptr<const message_filters::NullType>&; T7 = const boost::shared_ptr<const message_filters::NullType>&; T8 = const boost::shared_ptr<const message_filters::NullType>&]’
/usr/include/boost/function/function_template.hpp:720:7:   required from ‘boost::function9<R, T1, T2, T3, T4, T5, T6, T7, T8, T9>::function9(Functor, typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type) [with Functor = boost::_bi::bind_t<boost::_bi::unspecified, boost::_bi::bind_t<void, boost::_mfi::mf2<void, Controller, const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&, const imagineer::Number_<std::allocator<void> >&>, boost::_bi::list3<boost::_bi::value<Controller*>, boost::arg<1>, boost::arg<2> > >, boost::_bi::list9<boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4>, boost::arg<5>, boost::arg<6>, boost::arg<7>, boost::arg<8>, boost::arg<9> > >; R = void; T0 = const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&; T1 = const boost::shared_ptr<const imagineer::Number_<std::allocator<void> > >&; T2 = const boost::shared_ptr<const message_filters::NullType>&; T3 = const boost::shared_ptr<const message_filters::NullType>&; T4 = const boost::shared_ptr<const message_filters::NullType>&; T5 = const boost::shared_ptr<const message_filters::NullType>&; T6 = const boost::shared_ptr<const message_filters::NullType>&; T7 = const boost::shared_ptr<const message_filters::NullType>&; T8 = const boost::shared_ptr<const message_filters::NullType>&; typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type = int]’
/usr/include/boost/function/function_template.hpp:1068:16:   required from ‘boost::function<R(T0, T1, T2, T3, T4, T5, T6, T7, T8)>::function(Functor, typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type) [with Functor = boost::_bi::bind_t<boost::_bi::unspecified, boost::_bi::bind_t<void, boost::_mfi::mf2<void, Controller, const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&, const imagineer::Number_<std::allocator<void> >&>, boost::_bi::list3<boost::_bi::value<Controller*>, boost::arg<1>, boost::arg<2> > >, boost::_bi::list9<boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4>, boost::arg<5>, boost::arg<6>, boost::arg<7>, boost::arg<8>, boost::arg<9> > >; R = void; T0 = const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&; T1 = const boost::shared_ptr<const imagineer::Number_<std::allocator<void> > >&; T2 = const boost::shared_ptr<const message_filters::NullType>&; T3 = const boost::shared_ptr<const message_filters::NullType>&; T4 = const boost::shared_ptr<const message_filters::NullType>&; T5 = const boost::shared_ptr<const message_filters::NullType>&; T6 = const boost::shared_ptr<const message_filters::NullType>&; T7 = const boost::shared_ptr<const message_filters::NullType>&; T8 = const boost::shared_ptr<const message_filters::NullType>&; typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type = int]’
/opt/ros/noetic/include/message_filters/signal9.h:281:266:   required from ‘message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(C&) [with C = const boost::_bi::bind_t<void, boost::_mfi::mf2<void, Controller, const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&, const imagineer::Number_<std::allocator<void> >&>, boost::_bi::list3<boost::_bi::value<Controller*>, boost::arg<1>, boost::arg<2> > >; M0 = sensor_msgs::Image_<std::allocator<void> >; M1 = imagineer::Number_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]’
/opt/ros/noetic/include/message_filters/synchronizer.h:310:40:   required from ‘message_filters::Connection message_filters::Synchronizer<Policy>::registerCallback(const C&) [with C = boost::_bi::bind_t<void, boost::_mfi::mf2<void, Controller, const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&, const imagineer::Number_<std::allocator<void> >&>, boost::_bi::list3<boost::_bi::value<Controller*>, boost::arg<1>, boost::arg<2> > >; Policy = message_filters::sync_policies::ExactTime<sensor_msgs::Image_<std::allocator<void> >, imagineer::Number_<std::allocator<void> >, message_filters::NullType, message_filters::NullType, message_filters::NullType, message_filters::NullType, message_filters::NullType, message_filters::NullType, message_filters::NullType>]’
/home/marta/catkin_ws/src/imagineer/src/controller.cpp:56:83:   required from here
/usr/include/boost/bind/bind.hpp:398:35: error: no match for call to ‘(boost::_mfi::mf2<void, Controller, const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&, const imagineer::Number_<std::allocator<void> >&>) (Controller*&, const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&, const boost::shared_ptr<const imagineer::Number_<std::allocator<void> > >&)’
  398 |         unwrapper<F>::unwrap(f, 0)(a[base_type::a1_], a[base_type::a2_], a[base_type::a3_]);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/boost/bind/mem_fn.hpp:215,
                 from /usr/include/boost/mem_fn.hpp:22,
                 from /usr/include/boost/function/detail/prologue.hpp:18,
                 from /usr/include/boost/function.hpp:30,
                 from /opt/ros/noetic/include/ros/forwards.h:40,
                 from /opt/ros/noetic/include/ros/common.h:37,
                 from /opt/ros/noetic/include/ros/ros.h:43,
                 from /home/marta/catkin_ws/src/imagineer/src/controller.cpp:1:
/usr/include/boost/bind/mem_fn_template.hpp:278:7: note: candidate: ‘R boost::_mfi::mf2<R, T, A1, A2>::operator()(T*, A1, A2) const [with R = void; T = Controller; A1 = const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&; A2 = const imagineer::Number_<std::allocator<void> >&]’
  278 |     R operator()(T * p, A1 a1, A2 a2) const
      |       ^~~~~~~~
/usr/include/boost/bind/mem_fn_template.hpp:278:35: note:   no known conversion for argument 3 from ‘const boost::shared_ptr<const imagineer::Number_<std::allocator<void> > >’ to ‘const imagineer::Number_<std::allocator<void> >&’
  278 |     R operator()(T * p, A1 a1, A2 a2) const
      |                                ~~~^~
/usr/include/boost/bind/mem_fn_template.hpp:283:25: note: candidate: ‘template<class U> R boost::_mfi::mf2<R, T, A1, A2>::operator()(U&, A1, A2) const [with U = U; R = void; T = Controller; A1 = const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&; A2 = const imagineer::Number_<std::allocator<void> >&]’
  283 |     template<class U> R operator()(U & u, A1 a1, A2 a2) const
      |                         ^~~~~~~~
/usr/include/boost/bind/mem_fn_template.hpp:283:25: note:   template argument deduction/substitution failed:
In file included from /usr/include/boost/bind.hpp:22,
                 from /opt/ros/noetic/include/ros/publisher.h:35,
                 from /opt/ros/noetic/include/ros/node_handle.h:32,
                 from /opt/ros/noetic/include/ros/ros.h:45,
                 from /home/marta/catkin_ws/src/imagineer/src/controller.cpp:1:
/usr/include/boost/bind/bind.hpp:398:35: note:   cannot convert ‘(& a)->boost::_bi::rrlist9<const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&, const boost::shared_ptr<const imagineer::Number_<std::allocator<void> > >&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&>::operator[](boost::_bi::storage3<boost::_bi::value<Controller*>, boost::arg<1>, boost::arg<2> >::a3_)’ (type ‘const boost::shared_ptr<const imagineer::Number_<std::allocator<void> > >’) to type ‘const imagineer::Number_<std::allocator<void> >&’
  398 |         unwrapper<F>::unwrap(f, 0)(a[base_type::a1_], a[base_type::a2_], a[base_type::a3_]);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/boost/bind/mem_fn.hpp:215,
                 from /usr/include/boost/mem_fn.hpp:22,
                 from /usr/include/boost/function/detail/prologue.hpp:18,
                 from /usr/include/boost/function.hpp:30,
                 from /opt/ros/noetic/include/ros/forwards.h:40,
                 from /opt/ros/noetic/include/ros/common.h:37,
                 from /opt/ros/noetic/include/ros/ros.h:43,
                 from /home/marta/catkin_ws/src/imagineer/src/controller.cpp:1:
/usr/include/boost/bind/mem_fn_template.hpp:291:25: note: candidate: ‘template<class U> R boost::_mfi::mf2<R, T, A1, A2>::operator()(const U&, A1, A2) const [with U = U; R = void; T = Controller; A1 = const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&; A2 = const imagineer::Number_<std::allocator<void> >&]’
  291 |     template<class U> R operator()(U const & u, A1 a1, A2 a2) const
      |                         ^~~~~~~~
/usr/include/boost/bind/mem_fn_template.hpp:291:25: note:   template argument deduction/substitution failed:
In file included from /usr/include/boost/bind.hpp:22,
                 from /opt/ros/noetic/include/ros/publisher.h:35,
                 from /opt/ros/noetic/include/ros/node_handle.h:32,
                 from /opt/ros/noetic/include/ros/ros.h:45,
                 from /home/marta/catkin_ws/src/imagineer/src/controller.cpp:1:
/usr/include/boost/bind/bind.hpp:398:35: note:   cannot convert ‘(& a)->boost::_bi::rrlist9<const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&, const boost::shared_ptr<const imagineer::Number_<std::allocator<void> > >&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&>::operator[](boost::_bi::storage3<boost::_bi::value<Controller*>, boost::arg<1>, boost::arg<2> >::a3_)’ (type ‘const boost::shared_ptr<const imagineer::Number_<std::allocator<void> > >’) to type ‘const imagineer::Number_<std::allocator<void> >&’
  398 |         unwrapper<F>::unwrap(f, 0)(a[base_type::a1_], a[base_type::a2_], a[base_type::a3_]);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/boost/bind/mem_fn.hpp:215,
                 from /usr/include/boost/mem_fn.hpp:22,
                 from /usr/include/boost/function/detail/prologue.hpp:18,
                 from /usr/include/boost/function.hpp:30,
                 from /opt/ros/noetic/include/ros/forwards.h:40,
                 from /opt/ros/noetic/include/ros/common.h:37,
                 from /opt/ros/noetic/include/ros/ros.h:43,
                 from /home/marta/catkin_ws/src/imagineer/src/controller.cpp:1:
/usr/include/boost/bind/mem_fn_template.hpp:299:7: note: candidate: ‘R boost::_mfi::mf2<R, T, A1, A2>::operator()(T&, A1, A2) const [with R = void; T = Controller; A1 = const boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >&; A2 = const imagineer::Number_<std::allocator<void> >&]’
  299 |     R operator()(T & t, A1 a1, A2 a2) const
      |       ^~~~~~~~
/usr/include/boost/bind/mem_fn_template.hpp:299:22: note:   no known conversion for argument 1 from ‘Controller*’ to ‘Controller&’
  299 |     R operator()(T & t, A1 a1, A2 a2) const
      |                  ~~~~^
make[2]: *** [imagineer/CMakeFiles/controller.dir/build.make:63: imagineer/CMakeFiles/controller.dir/src/controller.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:1304: imagineer/CMakeFiles/controller.dir/all] Error 2
make: *** [Makefile:141: all] Error 2

Originally posted by anonymous74063 on ROS Answers with karma: 16 on 2021-05-04
Post score: 0

Original comments
Comment by gvdhoorn on 2021-05-05:
This is the main error:
no known conversion for argument 1 from ‘Controller*’ to ‘Controller&’

The arguments you pass to boost::bind(..) are apparently incorrect.
I haven't checked the rest of your code, but does it start to compile when you pass *this* instead of this`?
Note also: time synchronisation can only happen when all messages carry std_msgs/Headers. Does your custom message have such a field? If not, you'll end up with another long compiler error.
Comment by anonymous74063 on 2021-05-05:
Yes, thanks for mentioning it I already added the std_msgs/Header line to my custom message. If I pass *this I end up with another huge compiler error. I am not exactly sure what error: use of deleted function ‘Controller::Controller(const Controller&)’ means.

A:

I solved it. The solution is to add a shared_ptr to TimeSynchronizer without boost::bind()
class Controller
{
    public:    
        /* Contructor
        */ 
        Controller() 
        {
            img_subscriber.subscribe(node, "processor/image", 1);
            int_subscriber.subscribe(node, "camera/integer", 1); 
            cv::namedWindow("view");
            sync.reset(new message_filters::TimeSynchronizer<sensor_msgs::Image, imagineer::Number>(img_subscriber, int_subscriber, 10));
            service_client = node.serviceClient<imagineer::ImageAck>("ImageAck");
            sync->registerCallback(&Controller::callback, this);   
        }

        void callback(const sensor_msgs::ImageConstPtr& image, const imagineer::Number& digit)
        {

            try
            {
                cv::imshow("view", cv_bridge::toCvCopy(image)->image);
                cv::waitKey(30);
                imagineer::ImageAck ack_service;
                add_to_list(digit, image);
                ROS_INFO("Int and image are saved");
               // send_image(image, ack_service);
               // ROS_INFO("Image sent");
            }
            catch (cv_bridge::Exception& e)
            {
                ROS_ERROR("Error: %s", e.what());
            }
        }
        
        private:
            ros::NodeHandle node;
            ros::ServiceClient service_client;
            std::vector<NumberAndPicture> storage;
            message_filters::Subscriber<sensor_msgs::Image> img_subscriber; 
            message_filters::Subscriber<imagineer::Number> int_subscriber;
            boost::shared_ptr<message_filters::TimeSynchronizer<sensor_msgs::Image, imagineer::Number>> sync;
};

Originally posted by anonymous74063 with karma: 16 on 2021-05-06
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by shafeeq on 2022-12-06:
Thanks, run into similar issue and solved by looking a your code. You can also use std::shared_ptr or std::unique_ptr instead of boost ptr.

