Q:

code explanation

hi guys. I need help understanding this code. What does it do?
00802   private void publishVelocity(double linearVelocityX, double linearVelocityY,
00803       double angularVelocityZ) {
00804     currentVelocityCommand.getLinear().setX(linearVelocityX);
00805     currentVelocityCommand.getLinear().setY(-linearVelocityY);
00806     currentVelocityCommand.getLinear().setZ(0);
00807     currentVelocityCommand.getAngular().setX(0);
00808     currentVelocityCommand.getAngular().setY(0);
00809     currentVelocityCommand.getAngular().setZ(-angularVelocityZ);
00810   }

Publish the velocity as a ROS Twist message.
Parameters:â€¨
linearVelocityX The normalized linear velocity (-1 to 1).
angularVelocityZ The normalized angular velocity (-1 to 1).

currentVelocityCommand declaration:
   private geometry_msgs.Twist currentVelocityCommand;

Originally posted by syaz nyp fyp on ROS Answers with karma: 167 on 2014-08-15
Post score: 2

Original comments
Comment by dornhege on 2014-08-15:
It seems to me that the actual publish code is missing here.
Comment by atp on 2014-08-15:
Right, apart from that the code modifies an existing velocity command with respect to linear and angular velocity (http://people.wku.edu/david.neal/117/Unit2/AngVel.pdf). You can see the layout of the command using rosmsg show geometry_msgs/Twist.

A:

It modifies currentVelocityCommand accordingly to the parameters passed to the function, but it doesn't actually publish anything, it just modifies the content of currentVelocityCommand. In my opinion, there must be somewhere else some code that really publishes currentVelocityCommand to some rostopic: you could publish currentVelocityCommand at a publishing rate suitable for your goal and modify from time to time its content with this function.

Originally posted by lucaluca with karma: 74 on 2014-08-15
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by lucaluca on 2014-08-21:
@syaz nyp fyp could you solve that?

