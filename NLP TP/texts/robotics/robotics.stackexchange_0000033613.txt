Q:

When move_base rotates instead of going straight ahead

I am facing a peculiar problem with move_base. I am having it read scan input from a hokuyo node laser. When there are no obstacles close by (seen by rviz), I send it a goal of 10m straight ahead, this is within the costmap. In this case, I expect move base to move smoothly ahead; instead, it causes my (physical) robot to rotate continuously in place. I have not enabled rotate recovery. Instead, I find move_base publishes a constant vz velocity.
Can I know the circumstances when this occurs? I can include my yaml files if this is not specific enough.
Update:
When I give the robot a goal that requires it to turn (say 90 degrees) and then move ahead, the robot turns, and keeps turning continuously  forever without moving ahead. This seems to occur when I make a slight change in params.
Please see my config files here for a config that reproduces this on my robot
http://pastebin.com/RriDYkS4

Originally posted by PKG on ROS Answers with karma: 365 on 2011-08-12
Post score: 5

Original comments
Comment by mjcarroll on 2011-09-07:
Possibly a duplicate: http://answers.ros.org/question/1060/base_local_planner-generates-rotations-away-from
Comment by Mac on 2011-09-02:
This is not specific enough. Please provide some more details.

A:

Just a guess but how does your odometry look like? It is important that linear and angular velocities are as accurate as possible, in particular, the velocities must be in the robot's base frame, not in the (global) odometry frame. Otherwise, the local planner has problems to follow a path.

Originally posted by Lorenz with karma: 22731 on 2011-10-21
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by PT on 2015-06-02:
how do I check which frame my velocity is on?  thanks
Comment by Proc√≥pio on 2015-06-03:
do: rostopic echo /cmd_vel
Comment by PT on 2015-06-03:
hmmm...I couldn't find frame_id in /cmd_vel, as it has the following structure
geometry_msgs/Vector3 linear
float64 x
float64 y
float64 z
geometry_msgs/Vector3 angular
float64 x
float64 y
float64 z

