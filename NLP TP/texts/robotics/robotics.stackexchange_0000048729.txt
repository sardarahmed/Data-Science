Q:

Synchronizing between a message and a tf

I am writing an application, where I subscribe to large messages (such as images or point clouds) and I use them in conjunction with a tf transform. The message arrives, I query the tf server for the transform, and if the transform satisfies a certain criteria, I do something with the message. Otherwise, I ignore the message.
If the message publisher and message subscriber are on different computers over a network, this generates a lot of wasted traffic for all the discarded messages. Is there an elegant way to resolve this? For example, subscribe to a specific tf, process it, and if it meets the criteria, request a single message?

Originally posted by Ivan Dryanovski on ROS Answers with karma: 4954 on 2013-02-26
Post score: 0

A:

Of course there are the message filters for that. But I don't think they solve your problem. I don't think that you can resemble the "transmit only the necessary stuff" mechanic through topics, because AFAIK if you subscribe to a topic, ros will transmit all the messages on that topic to your node (and if you can't process them fast enough and run out of buffer space, old ones are discarded).
I think you should look into the service mechanism that ros offers. Of course time delays are a problem here... you could implement, for example, a service request to the node that has the data (and should buffer some of that) with a timestamp as parameter of the TF you received and then transmit back the most fitting data available. Something like that.
In any case the service mechanism allows you to transmit data only when you request it. That's what you need, right?

Originally posted by Achim with karma: 390 on 2013-02-26
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Ivan Dryanovski on 2013-02-27:
Services are an option. I would like to stick with topics, because it already works with topics, and works fine when the pub/sub are on the same machine. I was hoping to get the netweork case without chaning the infrastructure too much. Is there a subscirber option to request a single message, instead of a continuous asynchronous callback?
Comment by Philip on 2013-02-27:
To my knowledge, the proposed solution for receiving single messages is to register a subscriber and withdraw as soon as a message was received.
Comment by Ivan Dryanovski on 2013-02-27:
@Philip: Do you know if there a cost / delay associated with the re-subscription?
Comment by Philip on 2013-03-05:
I'll use it soon, but haven't done so yet. Some cost will arise (informing the roscore of the new subscriber, contacting the publisher (if any), ...), but I've got no clue about the timing details, i.e. real cost.

