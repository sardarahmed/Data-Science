Q:

rviz setViewController doesn't hook up mouse events?

I have an librviz application https://github.com/lucasw/visualization_tutorials/tree/set-view-controller-test which works fine with the default view controller, but I would like to use a different controller.
It seems like this should be done with setViewController(), it renders the view from a default zero starting point but the mouse doesn't rotate or translate the view.
This is in my constructor:
  ...
  manager_->initialize();
  manager_->startUpdate();

  rviz::ViewController* view = new rviz::OrbitViewController();
  if (view)
  {
    view->initialize(manager_);
    render_panel_->setViewController(view);
  }

Is something missing that will cause the view controller handleMouseEvents() to get called?
Some additional comments are here:
https://github.com/ros-visualization/rviz/issues/997
And a visualization_tutorial issue here https://github.com/ros-visualization/visualization_tutorials/issues/36

Originally posted by lucasw on ROS Answers with karma: 8729 on 2017-03-03
Post score: 1

Original comments
Comment by kramer on 2017-03-05:
Is this a straight-up rviz or rqt plugin? I ask 'cuz your link is to a librviz question and my experience with rqt is minimal. Can you post more information (and code/links) to better describe your situation?
Comment by lucasw on 2017-03-06:
It is an rqt plugin that uses librviz.  Do you have any code that uses setViewController?  I can try to duplicate the problem with visualization_tutorials/librviz_tutorial independent of rqt.
Comment by lucasw on 2017-03-06:
I've added a link to a setViewController version of librviz_tutorial and rqt is no longer part of the issue.

A:

The solution is to use view manager setCurrentViewControllerType
  manager_ = new rviz::VisualizationManager( render_panel_ );
  render_panel_->initialize( manager_->getSceneManager(), manager_ );
  manager_->initialize();
  manager_->startUpdate();

  QString class_id = "rviz/Orbit";
  manager_->getViewManager()->setCurrentViewControllerType(class_id);

Using setViewController leaves the view manager still holding on to the default view controller which gets updated, but is no longer getting rendered.

Originally posted by lucasw with karma: 8729 on 2017-03-06
This answer was ACCEPTED on the original site
Post score: 0

