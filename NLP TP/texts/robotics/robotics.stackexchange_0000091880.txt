Q:

Error: For frame [Laser]: Frame does not exist

Hi!,
I am trying to build a map using roslaunch turtlebot3_slam turtlebot3_slam.launch slam_methods:=gmapping on a turtlebot3. Unfortunately I have issues with the LIDAR.
I wrote my own publisher following the tutorial  Publishing Sensor Streams Over ROS, to see if gmapping works with "fake" data.
However I am getting the error "Fixed Frame [laser] does not exist" both with this method and running roslaunch rplidar_ros rplidar.launch (I am using a RPLIDAR instead of the stock LIDAR coming with the turtlebot) . I cannot upload a file since I do not have enough points.
Thanks for any help

Originally posted by vincent_m on ROS Answers with karma: 3 on 2019-06-03
Post score: 0

Original comments
Comment by gvdhoorn on 2019-06-03:\

I cannot upload a file since I do not have enough points.

what would you want to show us?

A:

This error indicates that even though your LaserScan messages are being received (by "a" consumer, you don't tell us which), there are no TF transform broadcasts to backup the laser frame that has been specified as value for frame_id in your messages (in the Header).
You'll have to make sure that you either:

use a static_transform_broadcaster to provide a transform between something and laser
use a URDF with a link named laser to the scene with a joint
make the laser frame the root of everything

if you already have a turtlebot URDF, I would suggest to use either option 1 or 2, preferably option 2.

Originally posted by gvdhoorn with karma: 86574 on 2019-06-03
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by vincent_m on 2019-06-10:
Thank you, your 2. suggestion worked!
Comment by gvdhoorn on 2019-06-11:
I saw this in the previous response you posted:

Our consumer should be rviz, as we are trying to build in map there.

pedantic, but important: RViz is just a simulator. It does not do any mapping, nor is it involved in the process, other than letting you observe the progress that some other node(s) publish.
So although RViz is "a consumer" of the data, and it does need a correct TF tree, it only needs it to be able to visualise your sensor data for you.

