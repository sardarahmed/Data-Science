Q:

Multiple ROS 2 Composable Nodes in a single launch file

I have multiple composable nodes that I need to run in parallel using a single launch file, as it is a pipeline consisting of various components. Is it possible to do that in ROS 2? or should I use normal nodes?

A:

Welcome to Robotics Stack Exchange!

Is it possible to launch multiple ros2 Composable Nodes in a single launch file so that they run in parallel?

Yes, there seem to be the following two ways:

Multiple containers: The LaunchDescription takes a list of containers. So you can create more than one such container. Please see below a sample code:
def generate_launch_description():
    """Generate launch description with multiple components."""
    container1 = ComposableNodeContainer(
            name='my_container1',
            namespace='',
            package='rclcpp_components',
            executable='component_container',
            composable_node_descriptions=[
                ComposableNode(
                    package='composition',
                    plugin='composition::Talker1',
                    name='talker1'),
                ComposableNode(
                    package='composition',
                    plugin='composition::Listener1',
                    name='listener1')
            ],
            output='screen',
    )
    container2 = ComposableNodeContainer(
            name='my_container2',
            namespace='',
            package='rclcpp_components',
            executable='component_container',
            composable_node_descriptions=[
                ComposableNode(
                    package='composition',
                    plugin='composition::Talker2',
                    name='talker2'),
                ComposableNode(
                    package='composition',
                    plugin='composition::Listener2',
                    name='listener2')
            ],
            output='screen',
    )
    return launch.LaunchDescription([container1, container2])

One container with multiple nodes: A container supports multiple nodes. Similar to containers, you can create more than one node. Please see below a sample code:
def generate_launch_description():
   """Generate launch description with multiple components."""
   container = ComposableNodeContainer(
           name='my_container',
           namespace='',
           package='rclcpp_components',
           executable='component_container',
           composable_node_descriptions=[
               ComposableNode(
                   package='composition',
                   plugin='composition::Talker',
                   name='talker'),
               ComposableNode(
                   package='composition',
                   plugin='composition::Listener',
                   name='listener')
           ],
           output='screen',
   )
   return launch.LaunchDescription([container])

Please see an official demonstration here.

