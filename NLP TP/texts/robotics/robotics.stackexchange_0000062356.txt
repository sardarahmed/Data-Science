Q:

Cannot export nodelet plugins in package.xml format 2

Hi,
When using the new package.xml format 2 (http://docs.ros.org/indigo/api/catkin/html/howto/format2/), I am not able to export any nodelet plugins from my package. The relevant parts of the package.xml are:
<depend>roscpp</depend>
<depend>nodelet</depend>

Trying to launch my nodelet gives me a

Failed to load nodelet [...] According to the loaded plugin descriptions the class [...] with base class type nodelet::Nodelet does not exist.

error. On running
rospack plugins --attrib=plugin nodelet

it does not list my package. But now if I add a
<run_depend>nodelet</run_depend>

in the package.xml which is invalid according to the new format, rospack lists it in the plugins list but of course I'm not able to run the nodelet since the package.xml is invalid.
If I go back to package.xml format 1, everything works fine. So, is this due to some incomplete implementation of package.xml format 2?

Originally posted by kartikmohta on ROS Answers with karma: 308 on 2014-09-04
Post score: 1

Original comments
Comment by ahendrix on 2014-09-04:
Please include your full package.xml in your question.
Comment by William on 2014-09-04:
@Dirk Thomas FYI.
Comment by William on 2014-09-04:
@kartikmohta as you describe the problem, it sounds like a bug. I believe rospack prunes the list of packages to only include ones that run_depend on the target package, in this case nodelet. It could be that this code path is not aware of the aggregate nature of the  tag.

A:

This is actually not yet implemented in rospack. I created a ticket to track it: https://github.com/ros/rospack/issues/43
Update: A patch version has just been released into Indigo (2.2.5), Hydro and Groovy (2.1.24). It will take a while for rebuilding all packages and actually syncing the new packages to public.

Originally posted by Dirk Thomas with karma: 16276 on 2014-09-04
This answer was ACCEPTED on the original site
Post score: 0

