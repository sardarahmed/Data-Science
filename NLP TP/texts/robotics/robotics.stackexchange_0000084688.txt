Q:

individualMarkersNoKinect does not publish in ar_pose_marker

hello, I use ros kinetic and I downloaded the ar-track-alvar module, to read AR codes, and I want to determine how far they are.
I use a usb camera of logitech and I have written the following launch file.
<launch>
    <node name="usb_cam" pkg="usb_cam" type="usb_cam_node">
        <param name="video_device" value="/dev/video0"/>
    </node>
    <node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen">
        <param name="marker_size" value="18"/>
        <param name="max_new_marker_error" value="0.08"/>
        <param name="max_track_error" value="0.2"/>
        <param name="camera_image" value="usb_cam/image_raw"/>
        <param name="camera_info"  value="usb_cam/camera_info"/>
        <param name="output_frame" value="head_camera"/>
    </node>
</launch>

The fact is that I show an image to the camera with an AR code and in the topic ar_pose_marker nothing is published.
Thanks for any help you can give me.

Originally posted by mag.rod on ROS Answers with karma: 58 on 2018-01-13
Post score: 0

Original comments
Comment by mag.rod on 2018-01-19:
My launch file:
Comment by mag.rod on 2018-01-19:

Comment by mag.rod on 2018-01-19:\
Comment by PeteBlackerThe3rd on 2018-01-19:
I recommend designing your launch file on the example here. You have to specify the cam_image_topic and cam_info_topic names. Or the node doesn't receive any images.

A:

Hi There,
I have set this node up a few times. I think the problem you're having is that your camera doesn't have any calibration information associated with it. This will mean that the ar_track_alvar node has no lens model for your camera and therefore cannot determine the pose estimates of the AR tags.
If you have a look at the camera calibration node it will guide you through the process of calibrating your camera and getting the camera info messages published alongside the camera images.
When this is setup and working the ar_track_alvar node should start working as you expect.
update now that your camera calibration information is in the system there are two more things I think you need to check. The frame_id for your camera is still the default head_camera there needs to be a TF connection between this frame and the detection frame set in the launch file for ar_track_alvar or you can set them to the same frame_id to keep it simple. The other thing to double check is that the camera image and info topic names are set correctly in the launch file too.
You're very close now.

Originally posted by PeteBlackerThe3rd with karma: 9529 on 2018-01-14
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by mag.rod on 2018-01-15:
I will investigate in this regard, thank you very much.
Comment by PeteBlackerThe3rd on 2018-01-15:
No problem, let us know how you get on.
Comment by mag.rod on 2018-01-19:
I have calibrated the camera and it still does not publish ar_pose_marker.
Results after calibration:
Comment by mag.rod on 2018-01-19:
miguel@miguel-desktop:~$ rosrun camera_calibration cameracalibrator.py --size 11x7 --square 0.03 image:=usb_cam/image_raw camera:=usb_cam
('Waiting for service', '/usb_cam/set_camera_info', '...')
OK
QXcbConnection: Failed to initialize XRandr
Qt: XKEYBOARD extension not present on the X server.
Comment by mag.rod on 2018-01-19:
libEGL warning: DRI2: failed to create any config
Comment by mag.rod on 2018-01-19:
raceback (most recent call last):
File "/opt/ros/kinetic/lib/python2.7/dist-packages/camera_calibration/camera_calibrator.py", line 247, in on_mouse.
if self.do_upload():
File "/opt/ros/kinetic/lib/python2.7/dist-packages/camera_calibration/camera_calibrator.py", line 204, in do_upload
Comment by mag.rod on 2018-01-19:
response = self.set_camera_info_service(info)
File "/opt/ros/kinetic/lib/python2.7/dist-packages/rospy/impl/tcpros_service.py", line 435, in call
Comment by mag.rod on 2018-01-19:
return self.call(*args, **kwds)
File "/opt/ros/kinetic/lib/python2.7/dist-packages/rospy/impl/tcpros_service.py", line 495, in call
Comment by mag.rod on 2018-01-19:
service_uri = self._get_service_uri(request)
File "/opt/ros/kinetic/lib/python2.7/dist-packages/rospy/impl/tcpros_service.py", line 463, in _get_service_uri
Comment by mag.rod on 2018-01-19:
raise ServiceException("service [%s] unavailable"%self.resolved_name)
rospy.service.ServiceException: service [/usb_cam/set_camera_info] unavailable
Comment by mag.rod on 2018-01-19:
If I run "rostopic echo usb_cam / camera_info" the result is:
Comment by mag.rod on 2018-01-19:
header:
seq: 975
stamp:
secs: 1515791269
nsecs: 604799264
frame_id: "head_camera"
height: 480
width: 640
distortion_model: "plumb_bob"
D: [0.05735496858713088, -0.5268749253600791, -0.00178863581762347, 0.01630569377650278, 0.0]
Comment by mag.rod on 2018-01-19:
K: [719.4932215129019, 0.0, 380.8344451914442, 0.0, 723.8834521935598, 279.7711594016876, 0.0, 0.0, 1.0]
R: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]
P: [695.9738159179688, 0.0, 393.3349275889486, 0.0, 0.0, 725.7437744140625, 280.0919628779666, 0.0, 0.0, 0.0, 1.0, 0.0]
binning_x: 0
binning_y: 0
Comment by mag.rod on 2018-01-19:
roi:
x_offset: 0
y_offset: 0
height: 0
width: 0
do_rectify: False
Comment by PeteBlackerThe3rd on 2018-01-19:
Could you please at these comments to your original question. It's almost impossible to follow like this!
Comment by mag.rod on 2018-01-19:
I'm sorry I can not include more content in the original question.
Comment by mag.rod on 2018-01-19:\

