Q:

link ncurses ROS kinetic

Hello everyone !
I know there are already posts about this subject but after many tries I don't know how to resolve this problem.
This is my code "test_ncurses.cpp":
// test_ncurses.cpp
#include <ncurses.h>
int main(int argc, char **argv) 
{   
   initscr();    
   printw("Hello world");  
   refresh();    
   getch();    
   endwin();   
   return 0; 
}

In the manifest I added these lines :
<build_depend>ncurses++</build_depend>
<run_depend>ncurses++</run_depend>

And in my CMakeLists.txt :
find_package( PkgConfig REQUIRED )
pkg_check_modules ( ncurses++ REQUIRED ncurses++ )
add_executable(test_ncurses src/test_ncurses.cpp )
target_link_libraries(test_ncurses ${catkin_LIBRARIES}  ${ncurses++_LIBRARIES})

And when I want to catkin_make my project I get errors :
undefined reference to "initscr"
undefined reference to "printw"
undefined reference to "refresh"
undefined reference to "stdscr"
undefined reference to "wgetch"
undefined reference to "endwin"

Do you have any ideas ?
Thank you in advance !

Originally posted by matt27110 on ROS Answers with karma: 98 on 2017-02-20
Post score: 1

Original comments
Comment by gvdhoorn on 2017-02-21:
I'm not sure, but I can imagine that a + is not a valid character in a CMake identifier. See cmake-language - Syntax.
Can you try using pkg_check_modules ( ncurses++ REQUIRED ncursespp) and see if that changes anything?
Comment by matt27110 on 2017-02-21:
Not working :/
CMake Error at /usr/share/cmake-3.5/Modules/FindPkgConfig.cmake:367 (message):
  A required package was not found

A:

Eureka !!
I removed the 2 lines in the manifest and the pkg_check_modules in the CMakeLIsts.
Then I replaced ncurses++ by Curses and it works !
find_package(Curses REQUIRED)
add_executable(test_ncurses src/test_ncurses.cpp )
target_link_libraries(test_ncurses ${catkin_LIBRARIES}  ${Curses_LIBRARIES})

Originally posted by matt27110 with karma: 98 on 2017-02-21
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by gvdhoorn on 2017-02-21:
Curses is indeed the name of the find script that CMake uses with ncurses. See also cmake-modules(7) - Curses.
Comment by Avio on 2018-07-06:
On Ubuntu 16.04 with Kinetic, it's ${CURSES_LIBRARIES} (all uppercase). You can see it in the heading of /usr/share/cmake-3.5/Modules/FindCurses.cmake.

