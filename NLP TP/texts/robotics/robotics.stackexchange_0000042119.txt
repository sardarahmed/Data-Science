Q:

Subscriber node not working for topic at 50Hz

Hello all,
So I have a topic published by a publisher node, at 50 Hz. The topic publishes a message 'loadMsg' which consists of the following data types

string unit

float64 load

Now I have my subscriber node, which is the following piece of code
#include <ros/ros.h>
#include <robot_comm/robot_comm.h>
#include "std_msgs/String.h"
#include "cell_node/loadMsg.h"

void loadSensor(const cell_node::loadMsg &d)
{
  ROS_INFO("Load Unit = [%s] , Value = [%lf] ", d.unit.c_str(),d.load);
}

int main(int argc, char** argv)
{
  ros::init(argc, argv, "demo");
  //FILE * pFile;
  
  ros::NodeHandle n;

  ros::Subscriber sub = n.subscribe("loadSensor", 1000, loadSensor);
  //ros::Rate loop_rate(50);
int i = 0;
while(i<10)
{
  usleep(20000);
  ros::spinOnce();
  i++;
}
  //pFile = fopen ( "myfile.txt" , "w+" );
  //fwrite (buffer , 1 , sizeof(buffer) , pFile );
  //fclose (pFile);

return 0;
}

So what this should do is basically sample from the stream of 'loadMsg' data being published at 50Hz. And the sampling should happen again at 50Hz (1/20000usec).
However, I am not getting any output! rosmake/make work perfectly, without any errors. When I run the node however, I get nothing.
What may be going wrong? In an earlier post, I asked a similar question. But it worked then, it refuses to work now. Here is the link to that:
http://answers.ros.org/question/38131/rosspinonce-not-functioning-properly/
Also, if I replace ros::spinOnce() by ros::spin() and remove the while loop, then it does sample from the topic, but seemingly at a lesser frequency.
All help is greatly appreciated!

Originally posted by Nishant on ROS Answers with karma: 143 on 2012-07-09
Post score: 0

Original comments
Comment by Nishant on 2012-07-09:
Hey ipso, thanks for the hint to topic_tools. However, I don't get one thing. When I did sleep(N) in my while loop here
http://answers.ros.org/question/38131/rosspinonce-not-functioning-properly/
why did polling work here?
Comment by Nishant on 2012-07-09:
Also, what do you think about the ros::Timer library? Can I use that instead of this method where I poll every time I want data from the topic stream?
Comment by ipso on 2012-07-09:
@Nishant: read my answer: you're not polling from the topic 'stream' (actually: events). You either receive the publications or you don't. AFAIK there is currently no support for polled topics in ROS. You could use ros::Timer in your publisher yes, your subscriber does not need it.
Comment by ipso on 2012-07-09:
@Nishant: the only thing you change by running your own while loop (as in the answer you linked) is the rate at which ROS looks at the queue of incoming events. @PerkinsJames also describes this in the accepted answer. As you publisher is @10Hz, so is your subscriber's callback.

A:

I'm not sure of your issue, but your WHILE loop will only last for approximately 1/10th of a second, meaning there must be a message waiting for you from your publisher within that 1/10th of a second or before.
I am not sure if output from a publisher will even buffer if nothing on your system is listening to it (since ROS core somehow makes direct connections between ROS nodes once they subscribe).
Try this.  Change while(i<10) to while(ros::ok()) and see if you then ever get those messages through.  If you do, it probably has something to do with your timing of when the publisher sends and the the subscriber checks for it.
Also, if you are starting your publisher after the receiver, it surely wont get anything (although it seems you're not doing this).

Originally posted by PerkinsJames with karma: 506 on 2012-07-09
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by ipso on 2012-07-09:
"Also, if you are starting your publisher after the receiver, it surely wont get anything": why do you say this? Cause AFAIK there is no temporal binding between publishers and subscribers?
Comment by PerkinsJames on 2012-07-09:
That sentence was specific to code @Nishant posted.  He/she just checks for messages 10 times very quickly, which would finish and then exit more quickly than he/she could type rosrun on the publisher.
Comment by ipso on 2012-07-09:
Ah ok, I understand. In that case you're right of course. I was referring to the general case.
Comment by Lorenz on 2012-07-09:
Also, it takes a while until the connection between a publisher and a subscriber is established and 1/10th of a second might not be enough for that. Although a publisher might be up and running, no message might be received in this short time window.
Comment by Nishant on 2012-07-10:
Hey PerkinJames, so I tried doing what you told me to do (substitute i<10 with ros::ok()) and it worked! That does mean that it might happen that maybe my subscriber is starting to look for readings in between two readings that are actually being published by the publisher.
Comment by Lorenz on 2012-07-10:
@Nishant, look at my previous comment. That's what probably is happening. After subscribing to a topic, you need to give ROS some time to actually establish the connection. 0.1 seconds might not be enough for that. More info: http://www.ros.org/wiki/ROS/Technical%20Overview
Comment by PerkinsJames on 2012-07-10:
@Nishant, and to expand on @Lorenz answer, spinOnce may not wait for the connection to be fully ready to use.  Hence, you could still call spinOnce when the connection is not fully set, burning through that while() loop

