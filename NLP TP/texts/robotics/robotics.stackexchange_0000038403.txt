Q:

costmap clearing

Hello!
I'm working with the navigation stack and I found some issues in the costmap clearing. I have one laser and some sonars and I use all of them to build the costmap. With the laser all works fine (the marking and clearing is done ok) with my sonars instead some of the obstacles remains in the costmap even if the sonar is publishing max_range. Each sonar is referenced to base link while the laser is refereced to base_laser_link in the costmap_common_params.yaml:
    transform_tolerance: 0.2
    obstacle_range: 2.0
    raytrace_range: 2.5
    
    observation_sources:  base_scan  sonar_cloud 
    
    base_scan: {sensor_frame: base_laser_link, data_type: LaserScan, topic:/base_scan_throttle , expected_update_rate: 0.3,
 observation_persistence: 0.0, marking: true, clearing: true, min_obstacle_height: -0.08, max_obstalce_height: 2.0}
    
    sonar_cloud: {sensor_frame: base_link, data_type: PointCloud, topic: /sonar_cloud, expected_update_rate: 0.3, 
observation_persistence: 0.4, marking: true, clearing: true, min_obstacle_height: 0.0, max_obstalce_height: 2.0}

Originally posted by jrcapriles on ROS Answers with karma: 370 on 2012-03-01
Post score: 0

A:

I think you have to override the marking and clearing parameters for each sensor.
base_scan: {sensor_frame: front_laser,
        data_type: LaserScan,
        topic: /scan,
        expected_update_rate: 0.4,
        observation_persistence: 0.0,
        marking: true,
        clearing: true,
        min_obstacle_height: -0.10,
        max_obstacle_height: 2.0,
        obstacle_range: 15.0,
        raytrace_range: 15.0}

Originally posted by DimitriProsser with karma: 11163 on 2012-03-02
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by jrcapriles on 2012-03-02:
Ohh good idea, I hadn't thought about it!!! I will try it and let you know the results! thanks!

