Q:

Separate Package for Messages?

I have recently begun migrating from ROS fuerte to hydro which means I am making the leap from rosbuild to catkin. With rosbuild, I never experienced any issues where during the build process message .h files could not be located. (similar to an issue posted here http://answers.ros.org/question/62092/catkin_make-started-failing-to-generate-h-from-msg/). While searching the web for solutions to this problem I have run into a few comments that suggest making a separate package containing your messages is a good idea (which I never really heard of while using fuerte and rosbuild). I was wondering what the pros and cons are of making a message package. Is it considered good practice? Should I make one package containing all the messages for my system, or several small message packages to make the code more modular?
Thanks for any help and insight you might be able to offer.

Originally posted by pnyholm on ROS Answers with karma: 97 on 2013-09-24
Post score: 1

A:

This is independent from the build system. The main reason for that suggestion is dependencies.
Cons:

Extra package

Pros:

Extra package makes it clear where your ROS interface lies (named ..._msgs)
Any package can depend on this msgs package! Otherwise you'd need to decide, where the messages are. This easily leads to trouble, due to interpackage dependencies, e.g. a library used by another one.
A message-only package can be built independently of any other code. Any external package can depend easily on this.

Originally posted by dornhege with karma: 31395 on 2013-09-24
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by Thomas on 2013-09-24:
You are forgetting one essential interest: you can make compile messages only packages very easily and once this is done you can use the introspection tool (rostopic, rosservice) with these types automagically! You don't always want to to build the whole stack in these cases...
Comment by dornhege on 2013-09-24:
My third point was supposed to mean that. I'll reformulate it to be more clear.

