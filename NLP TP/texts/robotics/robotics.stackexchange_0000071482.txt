Q:

working with Markers

The solution of my problem is beneath.
Hi guys,
before I posted this question, I did this tutorial about markers:
http://wiki.ros.org/rviz/Tutorials/Markers%3A%20Points%20and%20Lines
(Thank you for this tutorial!)
It worked pretty well!
I understood how to change the value of the coordinates x,y, and z and how to publish points.
Publishing points is no problem anymore.
Now, I would like to program a "listener", which receives exactly these points and print them out.
Unfortunately, I "only" found this tutorial:
http://wiki.ros.org/ROS/Tutorials/WritingPublisherSubscriber%28c%2B%2B%29#roscpp_tutorials.2BAC8-Tutorials.2BAC8-WritingPublisherSubscriber.The_Code-1
Therefore, I began with writing this "listener":
#include "ros/ros.h"
#include "std_msgs/String.h"
#include "std_msgs/Int8.h"

#include <algorithm>
#include <iostream> 
#include <string> 
#include <unistd.h>  
#include <termios.h>
#include <cmath>

#include <visualization_msgs/Marker.h>

void chatterCallback(const visualization_msgs::Marker::ConstPtr& msg)
{
   std::cout << "I received: " << msg->p.x << std::endl;
}

int main(int argc, char **argv)
{

  ros::init(argc, argv, "listener");
  ros::NodeHandle n;
  ros::Subscriber sub = n.subscribe("visualization_marker", 1000, chatterCallback); 
               
  ros::spin();   

  return 0;
}

Unfortunately, it didn't work out at all.
Can someone please help me solving the problem?
I would like to know how I can receive the coordinates and work with them.
For instance:
sum = x+y+z;
ROS_INFO("The sum of a point with the coordinates x: [%d], y: [%d] and z: [%d] is : [%d]", p.x, p.y, p.z, sum);

With best regards
Commander Data
SOLUTION:
The chatterCallback function needs to look like this:
void chatterCallback(const visualization_msgs::Marker::ConstPtr& msg)
{
    for (int i = 0; i <= number_of_points; i=i+1) {
         std::cout << "I received: " << msg->points[i].x << std::endl;
    }
}

Moreover, I changed in points_and_lines.cpp the line 93 for (uint32_t i = 0; i < 100; ++i) to for (int i = 0; i < 100; ++i).
I hope that this will help some researches in receiving points!
For everyone, who participate in finding the solution: THANK YOU A LOT!!!
With best regards,
Commander Data

Originally posted by Commander Data on ROS Answers with karma: 11 on 2016-01-20
Post score: 1

A:

Hello!!
I was trying to implement my task that is similar to yours and I got the output of x coordinate..
int sum;
for (uint32_t i=0; i<2; ++i)
{
geometry_msgs::Point p;

p.x = i;
p.y = 0.5;
p.z = 0.5;

line.points.push_back(p);
point.points.push_back(p);
p.z += 1.0;
point.points.push_back(p);
//std::cout<<"The coordinates: "<<p<<std::endl;
sum = p.x + p.y + p.z;
std::cout<<"The coordinates: "<<sum<<std::endl;
}

The output is:
The coordinates: 2
The coordinates: 3
The coordinates: 2
The coordinates: 3

Originally posted by dyupleks with karma: 200 on 2016-01-26
This answer was ACCEPTED on the original site
Post score: 1

