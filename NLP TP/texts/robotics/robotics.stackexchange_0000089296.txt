Q:

Publishing 3D centroid and min-max values

Hey everyone,
I'm using
  pcl::compute3DCentroid (*cloud_cluster, centroid);
  pcl::getMinMax3D (*cloud_cluster, min, max);

to create box markers for cloud clusters using the  euclidean cluster extraction.
Additionally I wanna publish the  values of the cluster centroid and the min and max values of each cluster, but can't figure out what message type to use (and how).
Essentially I can't figure out how the publisher would look like.
I want a rostopic with simple (float?) values, so I can use those values to make calculations afterwards.
Thanks in advance everyone!

Originally posted by th6262 on ROS Answers with karma: 50 on 2018-10-16
Post score: 0

Original comments
Comment by Delb on 2018-10-16:
You want to publish data with rostopic pub or you want to publish the value of your centroid ? Since compute3DCentroid assign only a value to centroid[0] to centroid[2] (x,y and z) you can use a geometry_msgs/Point.
Comment by Delb on 2018-10-16:
But if you want to have the centroid values and the min and max in the same message you can create a custom message like that :
geometry_msgs/Point centroid
float min
float max

Comment by th6262 on 2018-10-31:
thanks a  ton!

A:

You'd want a custom message type which looks something like this:
# My custom cluster message
geometry_msgs/Point centroid
geometry_msgs/Point min
geometry_msgs/Point max

Each value in this custom message is a structure of 3 floats so you can access the individual values very easily like this:
myCustomMessage.centroid.x

If you want to view this messages in RVIZ, I'd recommend also generating a line list marker message showing the geometry.
Hope this helps.
UPDATE:
You can't append arbitrary values to the marker messages, but there is still a less elegant way of doing it. The marker message would define the visuals as an array of 3D points which define the lines. If the order of these lines is always the same then index in this list of the min/centroid/max x/y/z values will always be the same. If you had a static list of indices you could lookup the values you needed directly from the points vector of the marker message. This way you wouldn't need a custom message and would only need to publish a single message each time not two.

Originally posted by PeteBlackerThe3rd with karma: 9529 on 2018-10-16
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by th6262 on 2018-10-31:
Sorry for the late reply, and thanks for the help.
So suppose I've had five clusters, and want the maximum x value of each cluster published  (so some other program can pick it up by subscribing, my approach would be to generate a geometry message for each cluster, with the "max.x" appended?
Comment by PeteBlackerThe3rd on 2018-11-01:
Not quite, but there is a solution. I've updated my answer.
Comment by gvdhoorn on 2018-11-01:
I would suggest to take a look at vision_msgs. If it doesn't support the use-case of the OP, then a discussion about extending that package could be a nice contribution.
Comment by gvdhoorn on 2018-11-01:
If min and max are the same value, then BoundingBox3D seems like it could work.
Comment by th6262 on 2018-11-15:
thanks everyone!
Comment by th6262 on 2018-11-16:
maybe as a followup, if it's not too complicated. Suppose I would want to calcualte the Volume for example, by multiplying lenght, width, and height of a computed bounding box,  how would I approach that, to get a result as double or float? my ideas become way too complicated and not very elegant
Comment by PeteBlackerThe3rd on 2018-11-16:
This should really be a new question. In it could you explain the problem you're having, what are you trying to do with this volume value?
Comment by th6262 on 2018-11-16:
I've actually got it working, i took the min and max distances from each x,y,z of the
pcl::getMinMax3D (*cloud_cluster, min, max);  

and just multiplied them by each other.
The idea was to associate clusters with certain objects based on their dimensions :)
thanks !

