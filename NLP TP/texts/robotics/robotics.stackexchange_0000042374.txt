Q:

Gazebo 1.0.x and CUDA in Furete

We are currently running a relatively intense simulation for some work we are doing, and we noticed that the physics engine seems to be slowing us down the most. We don't want to decrease the precision of the physics engine too much (i.e., changing parameters in the  tag in the .world file) as this can cause models to "explode" -- as discussed here and here.
I know in previous version of ROS/Gazebo, parallel quick step could be used in conjunction with CUDA to help the physics engine. However, I cannot seem to find out how to get this to work in Fuerte. Previous posts (e.g., here have discussed how to configure this in Electric. With Gazebo 1.0.x used in Fuerte and the new sdf world model syntax, I see no place to force Gazebo to use CUDA to speed itself up. Even the documentation for the physics parameters show that "world" and "quick" are the only two valid solver types (i.e., no parallel_quick/cuda). Furthermore, the example launch files that use CUDA in the Ubuntu Fuerte parallel_quickstep package use out-of-date world-file syntax/don't run. Is it no longer possible to use CUDA to speed up simulations? We have a relatively powerful Nvida GPU in our Ubuntu 12.04 machine and it would be a shame not to utilize it in the simulations.

Originally posted by rtoris288 on ROS Answers with karma: 1173 on 2012-07-17
Post score: 4

A:

I'm going to hazard a guess that it is no longer supported/maintained. In $(rosfind gazebo)/build/gazebo-r22f33a2ed71a/deps/parallel_quickstep/ there is some code that references CUDA, but I can't find anywhere where it connects to the main gazebo program (renaming the folder seems to have no ill effects on compilation).  The patch files in the main directory don't look like they have been updated since before fuerte.

Originally posted by dearl with karma: 96 on 2012-09-05
This answer was ACCEPTED on the original site
Post score: 1

