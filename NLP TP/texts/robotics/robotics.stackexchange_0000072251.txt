Q:

What is the status of rosgo?

I'm interested in replacing our Python components with Go for efficiency and also to leverage capabilities such as channels and coroutines.
Is rosgo being actively developed? What are the future plans for it?

Originally posted by calvinjcheng on ROS Answers with karma: 51 on 2016-02-22
Post score: 5

Original comments
Comment by nickcking on 2017-11-16:
I'm also trying to find a golang version of ROS. the Go language is designed well nad python is really slow...Thanks for this info.
Comment by 130s on 2018-10-01:
There's a ticket where original developer responded and said he's back to the development of rosgo.

A:

I have examined state of rosgo further and decided at this point, it cannot be used. The key reason is that it does not have a message generator like with roscpp and rospy to generate .msg and .srv files into Go code. This is the same problem as with efforts to use Javascript.

Originally posted by cxcheng with karma: 26 on 2016-05-15
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by gvdhoorn on 2016-05-16:
What about gengo & rosgo_messages?
Comment by cxcheng on 2016-05-16:
I missed rosgo_messages and gengo. I realize it must have been necessary for that to run the demo.
Unfortunately, it seems that not all the files may have been checked in. For example, gen_go.py is referencing a template_tools package that is not found.
Comment by gvdhoorn on 2016-05-16:
template_tools is a module in the genmsg package. See ros/genmsg. It's not gengo specific. gengo could still have other issues, but template_tools is not meant to be part of it.
Comment by andreykyz on 2018-09-20:
I don't see the problem generate message by go generate. I think it is more clear then with catkin cmake based system. (Yes I don't like cmake)

