Q:

How to correctly declare a Polygon message

Hellow,
Easy question, I'm not able to declare a Polygone message that does not core dump. Here is my code for now :
geometry_msgs::Point32 tl;
polyStamp.polygon.points[0]=tl;

I have the doc of the Polygon Stamped and the Polygon but I guess I'm reading it really badly.
I tried declaring a table of Point32 as well and directly passing it to polygon.points but it wont compile then.
Thanks a lot for any answer.

Originally posted by Maya on ROS Answers with karma: 1172 on 2014-03-26
Post score: 0

A:

You need to pre-allocate the points array before you assign members into it, or use a function that does the appropriate bounds-checking and resize for you. In particular, arrays in ROS messages in C++ are implemented as std::vectors, and std::vector::operator[] doesn't do any bounds checking.
If you just want to append items to your array, try:
geometry_msgs::Point32 tl;
polyStamp.polygon.points.push_back(tl);

If you already know how big your array is going to be, and you want to assign to specific indicies, try:
geometry_msgs::Point32 tl;
polyStamp.polygon.points.reserve(10); // ensure that there will be space for at least 10 points
polyStamp.polygon.points[0]=tl;

Originally posted by ahendrix with karma: 47576 on 2014-03-26
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Maya on 2014-03-26:
Thanks a lot ! I didn't realize they were implemented as vectors !

