Q:

rospy: node namespace is empty

I got the impression that a node per default has a namespace matching the node name.
Mini example, I run this node:
import rospy

rospy.init_node('tester')
rospy.set_param('foo', 1)
rospy.spin()

I then run rosparam list, I get:
/foo
/rosdistro
/roslaunch/uris/host_knxps13_local__35409
/rosversion /run_id

Why don't I get:
 /tester/foo

Why is the namespace of the node / and not /tester?

Originally posted by knxa on ROS Answers with karma: 811 on 2018-02-16
Post score: 0

A:

Short answer. rospy nodes do not have a direct equivalent to roscpp ros::NodeHandle.
See (almost) duplicate question and answer - including way to resolve names relative to a rospy node's name - here.

Edit:
Yes, for rospy, in order to have rosparam list generate this:
/tester/foo     
/rosdistro     
/roslaunch/uris/host_knxps13_local__35409     
/rosversion   
/run_id    

You will need to set the foo as a private parameter of the tester rospy node:
import rospy

rospy.init_node('tester')
rospy.set_param('~foo', 1)
rospy.spin()

Additional info:
http://wiki.ros.org/rospy/Overview/Parameter%20Server
http://wiki.ros.org/rospy_tutorials/Tutorials/Parameters
http://wiki.ros.org/Names#Resolving

Originally posted by josephcoombe with karma: 697 on 2018-02-16
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by knxa on 2018-02-16:
Thanks for a quick reply!
The resolve_name seems to work only for private parameters:
value = rospy.set_param('~bar', 'zzz')
rospy.loginfo('%s has value %s', rospy.resolve_name('~bar'), value)

... but does not work without the ~.
Comment by josephcoombe on 2018-02-16:
@knxa That is correct. When you call rospy.resolve_name('~bar'), you are telling ROS, "Give me the global name of relative name ~bar" - in this case /tester/bar. If you were to call
rospy.set_param('foo', 1), then rospy.resolve_name('foo') would return /foo...
Comment by josephcoombe on 2018-02-16:
since / is the namespace in which the relative parameter name foo was declared. If you were to launch tester in another namespace ns1 (via roslaunch), then rospy.resolve_name('~bar') would return /ns1/tester/bar and rospy.resolve_name('food') would return /ns1/foo
Comment by josephcoombe on 2018-02-16:
The ROS Wiki has a pretty thorough explanation of ROS name resolution

