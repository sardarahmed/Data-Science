Q:

Cascading PID DC Motor Position & Velocity Controllers

I'm trying to build a robot with a differential drive powered by two DC Motors. First I implemented a PID Controller to control the velocity of each motor independently. Estimated the TF using the MATLAB's System Identification Toolbox, of the open loop system by the acquiring the velocity of each wheels encoder in function of the PWM signal applied by an Arduino microcontroller. All went well and i successfully dimensioned the PID gains for this controller.
What I'm trying to accomplish now is to control the exact (angular) position of the DC Motor. I thought in cascading a PID controller in the input of the other already implemented. So this way, I can give a position to the first controller, which will be capable of generate an output reference to the second (velocity) controller so it generates the appropriate PWM value signal to drive the DC Motor accordingly.
Will it work? Is that a good approach? Or should I try to implement a different controller which outputs the PWM signal in response to a position reference signal?
Many thanks for your attention and I hope somebody can help me with these doubts.

A:

I have done this myself, controlling the exact position of a brushless DC motor as its velocity ramps up and down. And I did it using a position controller only. Sounds obvious, but it worked extremely well.
The integral term of the controller is key to this. Since you want the position error to be as close to zero as possible the whole time, but you need a large output from the controller to drive the motor, most of this comes from the I term.
The other thing you need to add is a feed forward term, which feeds some of the demanded acceleration to the output. This will give the controller the extra power it needs to track rapid velocity changes. We could call this an FPID controller. 

