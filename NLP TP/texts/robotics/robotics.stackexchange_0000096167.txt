Q:

How can i bridge and display images from realsense d435 camera?

I am a beginner in ros. I am looking to get image frames from an Intel Realsense D435 camera, bridge and show the image (with opencv) . At the same time, I look to print/ log out the information from the camera. After running code, the program continuously runs (due to rospy.spin() function) but does not print out anything.
Where could I be going wrong with the code?
Could someone please explain a bit on how to use the ros messages in a  python code. I am writing a subscriber node.'
class Depth_Retriever():
    def __init__(self):
 
        self.bridge = CvBridge()

        self.sub = rospy.Subscriber('/camera/depth/image_rect_raw',Image,callback)

    def callback(self,ros_pics):
        try: 
            my_image = self.bridge.imgmsg_to_cv2(ros_pics, encoding = "passthrough")

        except CvBridgeError as e:
            print("CvBridge could not convert images from realsense to opencv")
        height,width, channels = my_image.shape
        my_height = my_image.shape[0]
        print(my_height)
         
        self.vert_len = ros_pics.height # retrieve height information from Image msg
        print(self.vert_len)

def main():
    rospy.init_node("Depth",anonymous = True)
 
    rospy.spin()
    

if __name__ == '__main__':

    main()

Thank you for help in advance.

Originally posted by Anonymous on ROS Answers with karma: 1 on 2020-06-11
Post score: 0

A:

The callback is never accessed. Change
self.sub = rospy.Subscriber('/camera/depth/image_rect_raw',Image,callback)
to
self.sub = rospy.Subscriber('/camera/depth/image_rect_raw', Image, self.callback)
Some additional comments:

If you just want to view images, use rqt_image_view instead
use ROS logging instead of prints, that way you can use all the tools associated with it
consider using a linter, I see several PEP8 violations ;)

Originally posted by achille with karma: 464 on 2020-06-12
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Anonymous on 2020-06-16:
Thank you so much for the response. I was able to get the code to work. However, when I use cv2.imshow() to display the image, I receive a black image. If I change the datatype from "passthrough" ,when bridging, to other datatype such as "bgr8" it fails to convert.  What could be the cause of this black image?
Comment by achille on 2020-06-16:
Don't forget to accept the answer then so the question shows as resolved. What do you see when you run rqt_image_view? And what is the actual encoding (what you call datatype)? It has to be an encoding supported by cv. And what is the actual error you're getting?
Comment by Anonymous on 2020-06-18:
After running the rqt_image_view I realized I was subscribing to the wrong topic. The data encoding was "passthrough". It currently works. Thank you.
Comment by danielcjacobs on 2020-11-03:
I'm having the same problem, how did you fix it?

