Q:

cloud_tpc empty in OpenNI listener in RGBDSLAM

Hello, I was stepping through the RGBDSLAM code, and I found that even though I have a Kinect connected to my PC, noCloudCallback() is called instead of kinectCallback() because the cloud_tpc string is always empty.
ParameterServer* params = ParameterServer::instance();
...
std::string cloud_tpc = params->get<std::string>("topic_points");
...
//All information from Kinect
if(!visua_tpc.empty() && !depth_tpc.empty() && !cloud_tpc.empty())
{   
    ...
    kinect_sync_->registerCallback(boost::bind(&OpenNIListener::kinectCallback, this, _1, _2, _3));
    ...
} 
//No cloud, but visual image and depth
else if(!visua_tpc.empty() && !depth_tpc.empty() && !cinfo_tpc.empty() && cloud_tpc.empty())
{   
    ...
    no_cloud_sync_->registerCallback(boost::bind(&OpenNIListener::noCloudCallback, this, _1, _2, _3));
    ...
}

Can anyone help me understand why this is the case and why I have to do to call the kinectCallback()?

Originally posted by DonaldV on ROS Answers with karma: 13 on 2013-02-06
Post score: 0

A:

You need to set the corresponding parameter in the launch file, e.g:
<param name="config/topic_points" value="/camera/depth_registered/points"/>

Originally posted by Felix Endres with karma: 6468 on 2013-02-07
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by DonaldV on 2013-02-07:
Can you please specify which launch file? Do you mean the openni launch file? I am running RGBDSLAM like this
roslaunch openni_launch openni.launch
rosrun rgbdslam rgbdslam
Comment by Felix Endres on 2013-02-07:
just running rgbdslam with rosrun will use the default parameters. You best use a launchfile e.g.  rgbdslam/launch/rgbdslam.launch and modify the parameters to your needs (add the line in my answer, if not already contained). then launch it as "roslaunch rgbdslam rgbdslam.launch"

