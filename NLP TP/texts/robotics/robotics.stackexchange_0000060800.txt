Q:

Where is the Joint State information in a Create Turtlebot supposed to come from?

I am hacking at the Create based TurtleBot code to operate my own robot using ROS Hydro.
I have created my own URDF modifications and some code changes.
If I run:
roslaunch turtlebot_rviz_launchers view_model.launch

my Robot looks perfect and there are no problems in RVIZ.
However, when I bring up the robot and run:
roslaunch turtlebot_rviz_launchers view_robot.launch

RVIZ says that there is no transform connecting my left_wheel_link and right_wheel_link to the base_footprint. Also, it shows both wheels of my robot originating at 0,0,0 instead of being at the location specified by the joint in the URDF file.
Where is this transform supposed to come from?
My suspicion is that it is supposed to be from /joint_states, published by turtlebot_node.py.
When I run a gazebo simulation of the TurtleBot create model, /joint_states displays what appears to be appropriate information.
However, the turtlebot_node.py code is hard coded to always publish "0, 0, 0":
    js = JointState(name = ["left_wheel_joint", "right_wheel_joint", "front_castor_joint", "back_castor_joint"],
                    position=[0,0,0,0], velocity=[0,0,0,0], effort=[0,0,0,0])

which is exactly what I see from /joint_states
So why does the gazebo simulation show real /joint_states data, but not the real Create Turtlebot?
Or is there some other piece of the puzzle that I am missing here?
Or am I on the wrong path looking at the /joint_states to try to solve my left/right_wheel_link issues in RVIZ?

Originally posted by ChrisL8 on ROS Answers with karma: 241 on 2014-07-13
Post score: 0

A:

The problem was a lack of a timestamp in the header on the JointState. I introduced this error when I was modifying the code.
Here is a full explanation in case it helps someone else:
This is the broken code that causes these symptoms in RVIZ:

The wheels are "white" instead of the given color or the default red
The wheels originate at 0, 0, 0 instead of the place the joint in URDF says they should
RVIZ lists this error for the transforms in the robot model:

No transform from [left_wheel_link] to [base_footprint]
and
No transform from [right_wheel_link to [base_footprint]
BAD CODE:
    js = JointState(name = ["left_wheel_joint", "right_wheel_joint", "front_castor_joint", "back_castor_joint"],
                    position=[0,0,0,0], velocity=[0,0,0,0], effort=[0,0,0,0])
    self.joint_states_pub.publish(js)

ROS Bad Wheels.png
And here is the code that works fine:
    js = JointState(name = ["left_wheel_joint", "right_wheel_joint", "front_castor_joint", "back_castor_joint"],
                    position=[0,0,0,0], velocity=[0,0,0,0], effort=[0,0,0,0])
    js.header.stamp = rosNow
    self.joint_states_pub.publish(js)

ROS Happy Wheels.png
The difference is this line:
js.header.stamp = rosNow

Without the timestamp the joint_states message was not working.
Please note that publishing this static transform from a python script may be a bad idea, especially if you are in a tight loop publishing rapidly. I think a better solution may be to just make the wheel joint fixed in the URDF if it is not accomplishing anything for you. Another option would be to put a static transform for this joint into a launch file.
But I wanted to explain what the cause of this error was.

Originally posted by ChrisL8 with karma: 241 on 2014-07-14
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by jfabry on 2015-10-07:
Thanks for giving the information about a fix! I have the same problem and I am trying to apply the fix you propose but apparently my turtlebot_node.py is different, so I cannot. Could you post the entire file here so that I can compare the 2 in more detail?
Comment by npa on 2015-11-29:
where is  turtlebot_node.py file located.I searched my whole system,but i couldn't find it...pls help
Comment by jfabry on 2015-12-01:
You can find it by doing the following at the command line:
find /opt/ros/indigo -name turtlebot_node.py
in my case it returns /opt/ros/indigo/lib/create_node/turtlebot_node.py

