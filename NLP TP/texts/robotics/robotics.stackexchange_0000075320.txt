Q:

Hokuyo laser - Turtlebot costmap updation error

Hello people,
We have a turtlebot(kobuki base) and have connected Hokuyo laser to it following the instructions from these links.

http://wiki.ros.org/turtlebot/Tutorials/hydro/Adding%20a%20Hokuyo%20laser%20to%20your%20Turtlebot
https://github.com/hcrlab/wiki/blob/master/turtlebot/adding_hokuyo_laser.md

Previously when we tested AMCL with Kinect (as available with the turtlebot), the indoor navigation was fine and the map was updated with dynamic obstacles(like person walking in front of it, sudden obstacle not available in map) introduced then and there, and the turtlebot was able to avoid them and reach the goal.
When we tried the same with Hokuyo laser, we were able to map the area using gmapping, do AMCL as well with it and the robot was able to reach the goal. But the robot was not able to update itself with dynamic obstacles introduced. It was able to see only the static mapped obstacles and couldn't avoid dynamic obstacles while reaching its goal. Not sure if any navigation parameters are to be modified. Could anyone please help on the same???

Originally posted by R@m on ROS Answers with karma: 98 on 2016-07-20
Post score: 1

Original comments
Comment by medjo on 2017-05-12:
A solution that worked for me was to play with the "max_obstacle_height", "min_obstacle_height" and "z_origin" parameters
Comment by R@m on 2017-05-25:
Will try out and let you know @medjo. And may i know the values you had assigned for those parameters?
Comment by medjo on 2017-07-25:
In my costmap_common_params.yaml file, here are the values I assigned:
max_obstacle_height:    0.6 (in the folowing fields: gobal, obstacle layer, and scan)
min_obstacle_height:     0.40 (in scan)
origin_z: 0.1 (in obstacle_layer)
z_resolution: 0.2 (in obstacle_layer)
z_voxels: 2 (in obstacle_layer)

A:

Since the Hokuyo's positioning and orientation do not match those of the Kinect, you will need to modify those parameters accordingly. If tweaking values for "max_obstacle_height", "min_obstacle_height" and "z_origin" don't work, increase the number of voxels the costmap uses.
Your default z_voxels value of 2 is like saying your map should only be 40 cm high (for z_resolution = 0.2), so if your Hokuyo origin is higher than that, it will be reported as out of bounds and the ray trace will not complete. Simply increasing z_voxels will fix the issue.
You could measure the height of your Hokuyo origin and set z_voxels accordingly, or just set it to 5 which tells the costmap to accept sensor origins within a 1 meter height.

Originally posted by dionysius07 with karma: 16 on 2018-03-15
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by R@m on 2018-03-15:
Awesome, it worked 

