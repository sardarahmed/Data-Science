Q:

Teleop and Network disconnections

I apologise if I've missed this on the way through, but is there a standard or conventional method for dealing with disconnections between the network and a tele-operator ?
My platform was chosen for it's off-road ability, so when I had a brief wifi hiccup the robot had climbed a mound of papers, mounted a nearby Pioneer 3 and had paused to contemplate the location of the nearest small child before I could hit the physical stop button.
I've contemplated sending a simple keep-alive message every 500ms or so, but it doesn't look like other people are doing this. How do people ensure they are in control of their robot in teleop ?

Originally posted by Tim S on ROS Answers with karma: 13 on 2012-02-17
Post score: 1

A:

Not sure there is a established standard best practice for ROS, but IÂ´ve had good success with sending geometry_msgs/Twist messages at a fixed rate (say 10Hz) during teleop and stopping the robot as soon as no message has been received for a parametrizable time (say 300ms). An example of this scheme was implemented directly on the Arduino microcontroller of this robot and it works well so far.

Originally posted by Stefan Kohlbrecher with karma: 24361 on 2012-02-17
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Tim S on 2012-02-17:
Thanks, that looks like the go, It looks like the joy node has an autorepeat_rate parameter which will work nicely. Until the device is a little more tested I think I'll use a deadman switch, and the  autorepeat will make it easy to keep track of my deadman button. Cheers
Comment by joq on 2012-02-18:
Some kind of fail-safe heartbeat is essential when controlling a robot remotely. If communication is lost, the robot should do an immediate emergency stop.

