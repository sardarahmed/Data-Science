Q:

Need advice regarding setup of a new robot platform

Greetings!
I am soon starting up my new hobby project: a SLAM-robot with no clear goal yet (part from navigation). All the parts have arrived but I need some advice regarding what stack to start with, as I do not want to assemble all software components from scratch. I will start of by presenting the list of hardware.

CPU-board: Hardkernel ODROID-U3
Controller board: Arduino plug-in board for ODROID-U3
Motors: Two pretty fat stepper motors
Stepper motor drivers: Two L298N based stepper motor driver boards
Sensor: Microsoft Kinect

The robot will be assembled on a frame built of sheet aluminium together with a 360ยบ turning nosewheel and airplane wheels for the stepper motors. The Kinect sensor will be mounted on the top of the aluframe.
Now there are several issues that I need to address and I hope that the ROS community can help me with some of them or at leaste provide som useful suggestions.

The ODROID officially supports releases of ubuntu 13.10 and up. As I understand the latest Ubuntu officially supported by ROS is 13.04. Obviously there is a gap here and I have the options of installing a non-supported OS on the ODROID, or compiling ROS from source - I am not very impressed by any of those two solutions. Another option is to run Android but I have a bad feeling about that since it seems very experimental.
I do not want to build my application from scratch as this is a waste of time imho. What I need to figure out is which pre-assembled stack to use in order to get as close as possible to my particular setup. I'd be happy if the only thing I'd actually need to implement in code is the stepper motor interface on the arduino.
What is the recommended workflow for developing the robot application? SSH in and have the build environment located on the ODROID? Cross compile on a PC?

Finally, I am interested in some cool applications for the robot. I.e. vacuum cleaner, spy etc.
Let's get this discussion started!
/Simon

Originally posted by aerkenemesis on ROS Answers with karma: 21 on 2014-03-07
Post score: 2

Original comments
Comment by demmeln on 2014-03-07:
Please don't open duplicates.

A:

I have had no trouble at all running the ARM debs on top of the LUbuntu 13.05 U2 image; particularly since the Odroid U2 and U3 are nearly identical CPUs and boards. I know a few people that are even running the ROS navigation stack using these tools.

For basic navigation, the ROS navigation stack is a good starting point and is available as pre-built debs for ARM. You won't have to write the complex algorithms, but you will still have to understand them at a basic level so that you can tune them to run well on your particular hardware. Expect this tuning to take at least a week of full-time work, once your base drivers are up and running well. The RobotSetup guide is a good place to start.

Personally, I like to SSH to my robot and do everything on-board. A number of other ARM users like to set up a cross-compilation toolchain, edit and build off-board, and then copy the final binaries to their boards. I recommend that you try both approaches and see which approach works better for you.

Originally posted by ahendrix with karma: 47576 on 2014-03-07
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by nckswt on 2014-07-09:
I'm working with a similar setup as aerkenemesis - how do you configure your sources.list for XUbuntu 13.10? Or would I have to install a new version of Ubuntu?

