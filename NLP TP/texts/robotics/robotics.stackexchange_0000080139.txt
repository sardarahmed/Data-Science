Q:

Problems to set build.gradle files in my demo that built based on official example android_tutorial_pubsub?

Hello, guys. I'm new to ros, and recently I have trouble to following the official example android_tutorial_pubsub to built my demo. I have been spent a lots of time to set my ros environment in my computer, and it seems good. However, when I'm trying to run the demo there's come the error:
 Information:Gradle tasks [:app:assembleDebug]
Error:trouble processing "javax/xml/parsers/DocumentBuilder.class":
Error:Ill-advised or mistaken usage of a core class (java.* or javax.*)
Error:when not building a core library.
Error:This is often due to inadvertently including a core library file
Error:in your application's project, when using an IDE (such as
Error:Eclipse). If you are sure you're not intentionally defining a
Error:core class, then this is the most likely explanation of what's
Error:going on.
Error:However, you might actually be trying to define a class in a core
Error:namespace, the source of which you may have taken, for example,
Error:from a non-Android virtual machine project. This will most
Error:assuredly not work. At a minimum, it jeopardizes the
Error:compatibility of your app with future versions of the platform.
Error:It is also often of questionable legality.
Error:If you really intend to build a core library -- which is only
Error:appropriate as part of creating a full virtual machine
Error:distribution, as opposed to compiling an application -- then use
Error:the "--core-library" option to suppress this error message.
Error:If you go ahead and use "--core-library" but are in fact
Error:building an application, then be forewarned that your application
Error:will still fail to build or run, at some point. Please be
Error:prepared for angry customers who find, for example, that your
Error:application ceases to function once they upgrade their operating
Error:system. You will be to blame for this problem.
Error:If you are legitimately using some code that happens to be in a
Error:core package, then the easiest safe alternative you have is to
Error:repackage that code. That is, move the classes in question into
Error:your own package namespace. This means that they will never be in
Error:conflict with core system classes. JarJar is a tool that may help
Error:you in this endeavor. If you find that you cannot do this, then
Error:that is an indication that the path you are on will ultimately
Error:lead to pain, suffering, grief, and lamentation.

Error:1 error; aborting
Error:Execution failed for task ':app:transformClassesWithDexForDebug'.
> com.android.build.api.transform.TransformException: java.lang.RuntimeException: java.lang.RuntimeException: Unable to pre-dex '/home/toor/.gradle/caches/modules-2/files-2.1/xml-apis/xml-apis/1.0.b2/3136ca936f64c9d68529f048c2618bd356bf85c9/xml-apis-1.0.b2.jar' to '/home/toor/AndroidStudioProjects/RosTest/app/build/intermediates/transforms/dex/debug/folders/1000/10/xml-apis-1.0.b2_dcead7c64ba2045a1ed89659ff2a64684198f1b0'
Information:BUILD FAILED
Information:Total time: 13.683 secs
Information:34 errors
Information:0 warnings
Information:See complete output in console

After checked the error messages, I know there's some problems with the core-library to apply to the demo. I mean I know my build.gradle files went wrong, although they're seems right with no error when sycn. And I had modified them many many times to solve this problem according to the official example build.gradle files, sadly nothing going right. Here is my build.gradle files:
buildscript {
    repositories {
        maven {
            url 'https://github.com/rosjava/rosjava_mvn_repo/raw/master'
        }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.1'
    }
}

allprojects {
    repositories {
        maven {
            url 'https://github.com/rosjava/rosjava_mvn_repo/raw/master'
        }
        mavenCentral()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

build.gradle file in app directory:
apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.ros.rosTest"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
        resolutionStrategy.force 'com.android.support:support-annotations:25.3.1'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'junit'
    })

    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'org.ros.android_core:android_gingerbread_mr1:[0.1,0.2)'
    compile 'org.ros.android_core:android_honeycomb_mr2:[0.1,0.2)'
    compile 'org.ros.rosjava_core:rosjava:[0.1,0.2)'
    compile 'org.ros.rosjava_core:rosjava_tutorial_pubsub:[0.2,0.3)'

    compile('org.ros.android_core:android_10:[0.3, 0.4)') {
        exclude group: 'junit'
        exclude group: 'xml-apis'
    }
}

I'm tired to follow the official guiding to have a check in settings again. I'm only want to build a demo to apply the pubsub function just can work in a single application. By the way, my IDE is Android Studio. So, is there anyone have a good experience in this to give some suggestions? Thanks in advance!

Originally posted by Zorcs on ROS Answers with karma: 16 on 2017-04-11
Post score: 0

A:

After a lots of check in many ways, finally I think it's maybe the bad network caused the problem. And at last, I had made a configuration for the build.gradle files, and seems good. Anyway, my demo finally works. Here is the settings of the files:
buildscript {
    apply from: "https://github.com/rosjava/android_core/raw/kinetic/buildscript.gradle"
}

allprojects {
    repositories {
        jcenter()
    }
}

subprojects {
    apply plugin: 'ros-android'

    afterEvaluate { project ->
        android {
            packagingOptions {
                exclude 'META-INF/LICENSE.txt'
                exclude 'META-INF/NOTICE.txt'
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

in app directory:
apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.ros.rosAndroidTest"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    //ros dependencies
    compile 'org.ros.rosjava_core:rosjava_tutorial_pubsub:[0.2,0.3)'
    compile('org.ros.android_core:android_10:[0.3, 0.4)') {
        exclude group: 'junit'
        exclude group: 'xml-apis'
    }

    testCompile 'junit:junit:4.12'
}

Hope this could be a good suggestion for beginners like me!

Originally posted by Zorcs with karma: 16 on 2017-04-13
This answer was ACCEPTED on the original site
Post score: 0

