Q:

Making rosnode_cleanup() not wait for y/n from user

I arrived at rosnode_cleanup() after looking at #q9521 and #q285530.
I need to use rosnode.rosnode_cleanup() in my Python script, but it is blocking because it waits for yes/no confirmation from user. While I understand this was put there for good reasons, for my purposes I need to make it non-blocking.
Is there a way to achieve that?
Looking at the source code, probably not? Is there another way to get the equivalent functionality without re-implementing most of rosnode myself?

Originally posted by abhishek47 on ROS Answers with karma: 228 on 2022-05-19
Post score: 0

A:

Technically, you could probably hack around this by injecting characters into stdin in some way.
But I would not recommend you do that.
The main thing is: rosnode_cleanup() implements a TUI (text-bsed user interface). It's not meant to be reused as a vanilla function in a library.
If you want to reuse the main functionality, you'd have to call cleanup_master_blacklist(..) with the required arguments directly.

Is there another way to get the equivalent functionality without re-implementing most of rosnode myself?

I'm not sure what you're asking here.
rosnode_cleanup() essentially does this:
pinged, unpinged = rosnode_ping_all()
if unpinged:
    master = rosgraph.Master(ID)
    cleanup_master_blacklist(master, unpinged)

the rest is all just handling user input + output.

Originally posted by gvdhoorn with karma: 86574 on 2022-05-20
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by abhishek47 on 2022-05-21:
Thanks for the answer.

Is there another way to get the equivalent functionality without re-implementing most of rosnode myself?

Yeah I realize now simply importing rosnode_ping_all() and cleanup_master_blacklist() should be all I need.

