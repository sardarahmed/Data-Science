Q:

Cannot install ros-melodic-rostime on Archlinux

In the instalation guide for Arch, the first thing you are told to do is execute pikaur -S ros-melodic-desktop-full but this ended in an error when installing ros-melodic-rostime package.
I tried to install just that package and this was the given error.
Project 'rostime' tried to find library '-lpthread'. The library is neither a target nor built/installed properly.
It uses /usr/bin/cc and /usr/bin/c++, I changed them to /usr/bin/gcc and /usr/bin/g++ but is still giving the same error.
And the output of find /usr/lib -name "*libpthread*" is:
/usr/lib/libpthread.so
/usr/lib/libpthread.a
/usr/lib/libpthread-2.28.so
/usr/lib/libpthread.so.0

So I have libpthread installed
Y have already solved one error like this yesterday, it was just downgrading cmake, so now I have
cmake --version
cmake version 3.12.4

And just with that I was able to install the package ros-melodic-class-loader that gave me the same error before downgrading cmake, but now I don't know what to do, I have been searching for hours but found nothing.
If someone has any idea I appreciate so much.

Originally posted by NelsonCandela on ROS Answers with karma: 36 on 2019-01-01
Post score: 0

Original comments
Comment by gvdhoorn on 2019-01-01:
This is probably related to #q311685 if not a duplicate.
Comment by NelsonCandela on 2019-01-01:
I had already read it, its why I downgraded cmake from 3.13 to 3.12 as it says, and with that I was able to install ros-melodic-class-loader and probably another bunch of packages that were going to fail with 3.13 but rostime gives me the exact same error that it did class-loader but with cmake<3.13
Comment by gvdhoorn on 2019-01-02:
@Allenh1 already mentions in #q311685 that his patching/work is probably incomplete. See also ros/ros-overlay#711.
Comment by NelsonCandela on 2019-01-02:
I didn't read enough, so sorry for wasting your time, it was just rebuild the package ros-melodic-cpp-common and I could successfully install rso-melodic-rostime
Comment by gvdhoorn on 2019-01-02:
No need to apologise.
Please post your last comment as an answer (extend it a little) and perhaps refer to the relevant comments by @allenh1 or in the issue on ros/ros-overlay I linked to so future readers have an easier time to solve it themselves.

A:

Solved, for me was a quite simple solution.

Install the version 3.12.3 of cmake, it's the one that I used, it might also work with 3.12.4 or other versions, but I can't confirm it.

Rebuild the package ros-melodic-cpp-common. As I don't know how to just rebuild something, I first removed it with pikaur -Rs ros-melodic-cpp-common and then reinstalled it with pikaur -S ros-melodic-cpp-common.

Now you should be able to install ros-melodic-rostime with pikaur -S ros-melodic-rostime.

I used pikaur as AUR helper, but it should work with any other, like yay for example.
Here was were I obtained all the information.

Originally posted by NelsonCandela with karma: 36 on 2019-01-02
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by gvdhoorn on 2019-01-02:
Final comment: I would consider all of this a work-around, not a solution. IIUC, upstream CMake changed something in a find..(..) script which adds -lpthread to the LIBRARIES variable, instead of making it a proper compiler flag. That is why things break, and it should be fixed there. ..
Comment by gvdhoorn on 2019-01-02:
.. This is not a ROS or Catkin problem.
See the Debian bug report for more background.
Comment by jwhendy on 2019-01-17:
Ran into this same issue. I also ended up needing to downgrade to boost and boost-libs 1.68.0-2 instead of the current 1.69.0. A few packages were looking for libboost_signal.so, which appears gone in 1.69.0?
Comment by jwhendy on 2019-01-17:
While maybe not a ROS bug, others are wrestling with this here too.
Comment by gvdhoorn on 2019-01-17:
@jwhendy: the boost downgrade sounds like a separate issue. Let's not conflate them.

others are wrestling with this here too.

Yes, that is ros/ros-overlay#711 that was referred to earlier.
Comment by jwhendy on 2019-01-20:
Agreed. I now think that since I downgraded cmake via arch archive binaries, it was likely compiled against previous versions of boost at that time.

