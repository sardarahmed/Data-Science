Q:

Make ROS2 use zero-copy

Hello, I would want an intra-process communication without copying of messages. Does it work by default?
For now, the publisher code is:
auto message = make_unique<std_msgs::msg::String>();
message.get()->data = someString;
cout << "INPUT " << (void*)&(message.get()->data) << "\n";
native.get()->publish(message);

which calls publish(std::unique_ptr<MessageT, MessageDeleter> & msg).
The subscriber code is:
    ...subscriberMethod(const std_msgs::msg::String::UniquePtr message) {
    cout << "OUTPUT " << (void*)&message.get()->data << "\n";
    string text = message.get()->data.c_str();
    ...
}

This subscriber method is directly registered with create_subscription. I get an output like
INPUT 0x7fab70000b60
OUTPUT 0x7fab64000b60

that is, there is some copying in between, even if both the publisher and the subscriber are within the same process. I tried the above with shared_ptr, but the addresses were also different.

Originally posted by uthinu on ROS Answers with karma: 118 on 2018-12-10
Post score: 0

A:

Hello, I would want an inter-process communication without copying of messages. Does it work by default?

No, not right now, see:
https://github.com/ros2/rclcpp/blob/9da1b95ece1f13aba1b7c1e4be832094f99e74c5/rclcpp/include/rclcpp/node.hpp#L106

Originally posted by William with karma: 17335 on 2018-12-10
This answer was ACCEPTED on the original site
Post score: 1

