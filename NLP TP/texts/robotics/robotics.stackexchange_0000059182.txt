Q:

How to find a node type during runtime

I'd like to be able to find a node type (not user-defined name) of a currently running node. Basically, what file was actually being executed.
"Nodes also have a node type, that simplifies the process of referring to a node executable on the fileystem." -Wiki
This is relatively easy if the node is launched from a roslaunch command, I can simply look at the logging. From a rosrun command, I can't seem to find equivalent logging. Watching the loggers are a bit of a hack, and I'm sure there is a proper API to do this, but I can't seem to find it. Rosnode gets close.
The ideal solution is to use a getter to access elements of the Node class, a part of the roslaunch.core package. If this is not possible, is there a work-around?

Originally posted by curranw on ROS Answers with karma: 211 on 2014-05-06
Post score: 3

Original comments
Comment by Bill Smart on 2014-05-08:
A bit of background: we're trying to automatically record which nodes are being run.  We've instrumented roslaunch (minimally) to do this, but we're looking for a similarly minimal way to do this with rosrun.
Comment by Bill Smart on 2014-05-08:
A related thought: what are the ramifications of rewriting rosrun to use the roslaunch machinery, rather than just exec'ing the node (other then automatically starting up a core if one isn't already running)?

A:

psutil can get you what you want in many instances.
import xmlrpclib, rosnode, rospy, psutil

def get_exe_path(node_name):
    ID = '/NODEINFO'
    node_api = rosnode.get_api_uri(rospy.get_master(), node_name)
    code, msg, pid = xmlrpclib.ServerProxy(node_api[2]).getPid(ID)
    p = psutil.Process(pid)
    return p.exe

As long as the node is running on the same machine, this will give you the path to the executable (this is how rqt_top gets info about running nodes).

Originally posted by Dan Lazewatsky with karma: 9115 on 2014-05-08
This answer was ACCEPTED on the original site
Post score: 4

