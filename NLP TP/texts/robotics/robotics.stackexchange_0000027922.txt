Q:

Running a Camera Sensor Headless

Hello,
We are looking to run a camera sensor headless on a VM, however when we do so several of the camera's image topic (notably, camera/image_raw) are not published.  At ROSCon, I spoke briefly with Jose, who indicated that this could be done fairly painlessly, and is actually used for Gazebo's CI tests.  How would I go about enabling that capability?
To clarify, we already have a camera plugin that runs just fine on a display-enabled machine.  Our robot is defined in a URDF and launched using roslaunch.  However, note that the "headless" option exposed by gazebo_ros_pkgs doesn't actually work - see https://github.com/ros-simulation/gazebo_ros_pkgs/issues/491
I also don't see an explicit "headless" option list in the Gazebo code.  The Gazebo devs did mention that such a mode was possible, I just can't figure out how.
(Running Gazebo 7 and ROS Indigo)

Originally posted by JLiviero on Gazebo Answers with karma: 94 on 2016-10-19
Post score: 0

A:

Thanks guys.  I've got a solution, which I'll post here for the benefit of anyone else who comes searching for such a thing later.
Because our VMs aren't running NVidia drivers as a rule, I wanted to explore some other options before attempting Jose's solution.  Based on Nate and Jose's comments, I went digging into virtual xservers and found
this old comment, which led me to Xvfb.  With Xvfb, I was able to do the following:
$ Xvfb :1 -screen 0 1600x1200x16  &
$ export DISPLAY=:1.0
$ roslaunch etc etc.launch

...which let me run the camera plugin headlessly on a VM with no problems.  Here's a screen grab from the camera, taken remotely by connecting RQT to the robot on the VM:

(This timely Gazebo fix was also helpful.)
Thanks again!

Originally posted by JLiviero with karma: 94 on 2016-10-31
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by GL on 2017-01-12:
This solution worked with my launch file. Thank you for sharing your fix!

