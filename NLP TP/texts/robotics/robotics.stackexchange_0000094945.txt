Q:

connect real kuka to moveit

Hey there,
I successfully connected my 30HA-KUKA robot using kuka_eki_hw_interface to my Ubuntu 18.04 melodic ROS PC.
I am now able to control the robot using
 rosrun rqt_joint_trajectory_controller rqt_joint_trajectory_controller
Goal
I would like to control the EE of the real Robot using MoveIt Plugin in Rviz.
Progress

I created a moveit_config package
If I start the moveit config package I can use the interactive markers to plan a trajectory
My moveit robot subscribes to the published joints of the real robot!
If I press execute in moveIt (to execute the plan), nothing happens with the real robot.

How do I tell moveIt to use my action server of the real robot(position_trajectory_controller) to execute a plan?
I have an action server running to control the real robot (that works!)
/joint_states
/position_trajectory_controller/command
/position_trajectory_controller/follow_joint_trajectory/cancel
/position_trajectory_controller/follow_joint_trajectory/feedback
/position_trajectory_controller/follow_joint_trajectory/goal
/position_trajectory_controller/follow_joint_trajectory/result
/position_trajectory_controller/follow_joint_trajectory/status
/position_trajectory_controller/state
/rosout
/rosout_agg
/tf

To start moveit_it  I use:
<launch>

<!-- set to false otherwise robot not visible in gazbeo!!! -->
<include file="$(find kuka_30HA_moveit_config)/launch/planning_context.launch">
  <arg name="load_robot_description" value="true"/>
</include>

<include file="$(find kuka_30HA_moveit_config)/launch/move_group_mine.launch">
  <arg name="allow_trajectory_execution" value="true"/>
  <arg name="fake_execution" value="false"/>
  <arg name="info" value="true"/>
  <arg name="debug" value="false"/>
</include>

<include file="$(find kuka_30HA_moveit_config)/launch/kuka_30ha_moveit_controller_manager_mine.launch.xml"/>

<node name="rviz" pkg="rviz" type="rviz" args="-d $(find kuka_30HA_moveit_config)/config/moveit_real.rviz" required="true" />

</launch>

Originally posted by Markus on ROS Answers with karma: 311 on 2020-03-03
Post score: 1

A:

If you can control your robot with rqt_joint_trajectory_controller, you need to make sure that MoveIt also knows to talk to those topics and to use the same joint names.
Look in the config folder of your robot's moveit_config package. Are the joints listed in ros_controllers.yaml the same that you see if you rostopic echo /joint_states topic, and when you control the robot at the moment? Does the topic of the controller near the bottom of the file match what you see in rqt_joint_trajectory_controller?
Please add the correct file/s to your question if that helps you sort it out.

Originally posted by fvd with karma: 2180 on 2020-03-03
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Markus on 2020-03-10:
Thanks that helped me. I had to look in ros_controllers.yaml and check that.
Comment by fvd on 2020-03-10:
Great. Please add the corrected lines (and maybe the original ones) to the question for future readers.

