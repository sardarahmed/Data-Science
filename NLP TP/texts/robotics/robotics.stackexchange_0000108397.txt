Q:

Flickering OccupancyGrid data in RViz2

I'm implementing my own custom message of type nav_msgs/msg/OccupancyGrid to visualize grid-based quantities in a local map (namely virtual pheromones).
Back in ROS Noetic, my implementation worked very smoothly in RViz. Now that the QoS policy has replaced some TCP-based topic logic, I had to make some changes to be able to view my map. Before you redirect me to other links regarding QoS, I have made sure myself to read the recent proposal REP 2003, the REP 2003 page and this RQt issue.
I can currently see the map in RViz, even though it has a flickering problem with some delays. I've made sure to call QoSProfile in my map publisher, as below, per Steve Macenski's TL;DR instructions:
from rclpy.qos import QoSProfile, DurabilityPolicy, HistoryPolicy, ReliabilityPolicy
from nav_msgs.msg import OccupancyGrid
...
qos_policy = QoSProfile(reliability= ReliabilityPolicy.RELIABLE,
      history= HistoryPolicy.KEEP_LAST,
      durability= DurabilityPolicy.TRANSIENT_LOCAL,
      depth= 3)
pheromone_grid_pub = self.create_publisher(
        topic="/pheromone/grid",
        msg_type= OccupancyGrid,
        qos_profile= qos_policy)

The problem is mitigated with these settings, but not completely solved. There is still some delaying, and major flickering issues persist.

What would be the best course of action in this case to improve RViz2 performance? Do I need to raise the topic depth? There also is a new "update topic" field that doesn't make a lot of sense to me, and I couldn't find any documentation related to it. Or, is there a better alternative message type altogether to publish this information?

A:

That looks like - to my eye - one of two things:

You have two publishers publishing to the same topic containing different data. So the most recent one is being shown and you're seeing the race condition of which was published last

In your software, you have a bug resulting in the publication of two different states.

If you stop your nodes, does it stop flickering? Then its your nodes :-)

