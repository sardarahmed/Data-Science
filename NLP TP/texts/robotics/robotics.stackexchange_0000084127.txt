Q:

RVIZ: Efficient way to display large, incremental 2D images in 3D space

Hey guys,
as the title states, I am looking for an efficient way to display a large, incrementally growing, high resolution image in 3d space in RVIZ. Any suggestions?
My project partner are currently rendering every image on a seperate rectangle, which seems to be working. However it is eating the RAM for breakfast, which is not ideal.
Best regards,
Alex

Originally posted by Laxnpander on ROS Answers with karma: 31 on 2017-11-29
Post score: 0

A:

Take a look at https://github.com/lucasw/rviz_textured_quads (See also #q22730).
How high is your resolution and frame rate?
When you say incrementally growing do you mean that you'd like to transmit smaller images that update a larger image (like costmap updates) rather than retransmitting the entire image every frame?  It probably wouldn't be too hard to make a version of rviz_textured_quads that can work like that.

Originally posted by lucasw with karma: 8729 on 2017-11-29
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Laxnpander on 2017-11-29:
Yes, that is what I mean! Resolution can be up to several megapixels I guess, but framerate is quite low. Maybe round about ~1 Hz. Graphics card is available.
Comment by lucasw on 2017-11-29:
Several megapixels at 1 fps doesn't sound too bad for rebroadcasting the full image, inefficient as it may be.
Comment by Laxnpander on 2017-11-29:
Ah, no that was a little misguiding. I have a stream of images that are mapped into a common reference plane. Every single image has 1 Mpix and comes with 1 FPS. The total map however is therefore at least 1 Mpix but can grow up to way beyond that.
Comment by lucasw on 2017-11-29:
I see- even with a costmap update style approach the rviz end might break down with such a huge texture.  It would maybe need to be turned into tiles.

