Q:

Industrial Controllers - Why not adaptive control and robust control

This is a question I have thinked about under a very long time. What are industrial controllers?
From research I found that PID is the most used in the industry. PID controllers are included in classical control. Then Model Predictive Control(MPC) are used as well. MPC controllers are included in predictive control. LQG controllers are used too and LQG controllers are included in optimal control. For nonlinear systems Fuzzy controller are used and Fuzzy controllers are included in nonlinear control.
Then we have two type of controllers left. They are Model reference adaptive control(MRAC) which are included in adaptive control and H-infinity control which are included in robust control.
So my questions for you are:
Why are Robust Control and Adaptive Control not used in the industry? Are them both still in a developement stage?
Please. Correct me if I'm wrong. Because I really like Robust Control but I not going to learn it if there is not chance for me to use it in industrial work.

A:

In short, adaptive control and robust control (Hinf) are the difficult combination of computationally expensive and complicated to understand. Even if you do an excellent job of implementing one of these controllers, after you have move on to another project (or job) the company still needs someone capable of understanding the controller.
There are applications though; for example robust control is common harddrive servos. But most industrial control problems are quite simple so will try make PID (with variations) work if possible because it's fast and many people know  how to tune them.

A:

If I had to guess, I would say that, in an industrial setting, you have a relatively high degree of certainty about the process you're controlling, and/or there isn't much emphasis on transient performance. 
Arguably, transient performance should be where a more complex controller shines. However, in an industrial setting, once the process is running, all running parameters should stabilize and the entire process should reach steady state.
Once in steady state, the integrator term in the PI or PID controller should drive steady state error to zero. Generally speaking, as long as you're not starting or stopping the process, then any controller that can drive steady-state error to zero is probably acceptable. At that point, as ryan0270 pointed out, it comes down to the controller that is easiest to implement, troubleshoot, and maintain. 
Further, as I mentioned above, a manufacturer should have a relatively high degree of certainty about the process they're controlling. Another place that robust control shines, in particular, is where the parameters are uncertain. However, the components being used shouldn't be a mystery. Inlet fluids have a routine viscosity, temperature, etc. - once you tune a PID controller, it should be fine as long as the inlet fluid doesn't change from water to something more or less viscous, or the metal doesn't change from steel to aluminum, etc. 
And then, where more precise control is required, as you stated in the question, many industries will attempt to model the process to include feed-forward (predictive) control. You model how you think the system will respond and can take proactive control instead of reactive control.
Even with model-based control, you might use the model to establish a "base" (feed-forward) control signal and then a "dumb" PID loop to drive any subsequent errors to zero. This would be how I've seen model-based control.
So, to state again for emphasis - industries typically operate at steady-state.

