Q:

Building ROS on OSX 10.9 (solution)

Building octomap, orocos_kdl and other packages on OSX 10.9 produces the following compilation errors
    /Users/artemlenskiy/ros/hydro/src/octomap/src/Pointcloud.cpp:37:12: fatal error: 'ext/algorithm' file not found
      #include <ext/algorithm>
               ^
    [ 29%] Building CXX object src/CMakeFiles/octomap.dir/AbstractOcTree.cpp.o
    In file included from /Users/artemlenskiy/ros/hydro/src/octomap/src/OcTreeLUT.cpp:37:
    In file included from /Users/artemlenskiy/ros/hydro/src/octomap/include/octomap/OcTreeLUT.h:40:
    /Users/artemlenskiy/ros/hydro/src/octomap/include/octomap/OcTreeKey.h:40:12: fatal error: 'tr1/unordered_set' file not found
      #include <tr1/unordered_set>
...

In the case of orocos_kdl
In file included from /Users/artemlenskiy/ros/hydro/src/orocos_kdl/src/kinfam_io.cpp:22:
In file included from /Users/artemlenskiy/ros/hydro/src/orocos_kdl/src/kinfam_io.hpp:25:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/iostream:38:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/ios:216:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/__locale:15:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/string:434:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/algorithm:593:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/utility:221:9: error: field has incomplete type 'KDL::TreeElement'
    _T2 second;

Originally posted by Artem on ROS Answers with karma: 709 on 2013-10-27
Post score: 8

Original comments
Comment by Bruno Normande on 2013-11-18:
Did you find an answer to the orocos_kdl problem? I've built latest version of octomap/devel branch without problem, but I don't know yet how to solve this orocos_kdl error

A:

Edit 5: These workarounds are no longer required. They are kept here purely for reference.
Some of the workarounds listed in this answer are no longer required as the changes have been merged into hydro. Below are the current workarounds still required to get ROS hydro working on Mavericks, suitable to both git and tar based rosinstall distributions.
OROCOS KDL Fix
There is a problem with OROCOS KDL API that is incompatible with libc++ and clang, discussed in more detail in PR 4 and PR 19. You will need to patch KDL source using both of these pull requests.
cd <ROS WORKSPACE DIR>/src/orocos_kinematics_dynamics
curl https://github.com/orocos/orocos_kinematics_dynamics/pull/4.patch | patch -p1
curl https://github.com/orocos/orocos_kinematics_dynamics/pull/19.patch | patch -p1
# it is not a problem if the following step fails
cd .. && rm -r build_isolated/orocos_kdl

You will also need to patch several dependent ROS packages. For the necessary robot model changes:
cd <ROS WORKSPACE DIR>/src/robot_model
curl https://github.com/ros/robot_model/pull/43.patch | patch -p1
# it is not a problem if the following step fails
cd .. && rm -r build_isolated/kdl_parser

for the necessary robot_state_publisher changes:
cd <ROS WORKSPACE DIR>/src/robot_state_publisher
curl https://github.com/ros/robot_state_publisher/pull/5.patch | patch -p1
# it is not a problem if the following step fails
cd ../.. && rm -r build_isolated /robot_state_publisher

OpenCV and Cuda
Currently OpenCV has issues when building with Cuda enabled, so you will have to disable it:
cd build_isolated/opencv/install
ccmake
# turn off the 'WITH_CUDA' flag and generate

Outdated  workarounds no longer necessary
These workarounds are no longer necessary but I am keeping them here for historical reasons in case someone has an older workspace and doesn't want to update.
Prerequisite for any of the following steps is understanding how to checkout Github pull requests locally. The rest of these fixes are currently involve API breaking changes and are under review. I make no guarantees about their correctness, only that they should at least build on Mavericks. For all of the commands below I always your current working directory is your ROS workspace root (NOT src subdirectory).
Octomap Fix
For this particular octomap problem there is a fix committed upstream that should allow compilation with libc++ with Mavericks: https://github.com/OctoMap/octomap/pull/55. Due to the way ROS packages things, mergeing this change in to the ROS octomap source in your hydro workspace involves a bit of hand work on the command line:
cd <path to your hydro workspace>/src/octomap
git remote upstream git@github.com:OctoMap/octomap.git
git fetch upstream
git checkout release/hydro/octomap/1.6.1-0
git cherry-pick b7aec9182e102da32f0f210197a55b827e0ae894
git cherry-pick 8a9722d0f479dcde680dc689e0d071e48bb32e99

Rebuild your catkin workspace and the octomap errors should go away.
ROSCPP Message Traits
There is a problem with the roscpp message forward declarations that is discussed in more detail here. The workaround:
cd src/roscpp_traits
curl -o include/ros/message_forward.h https://raw.github.com/ros/roscpp_core/e4dff32c8847f7e9e16b3aecebbbbaf7d84daf5a/roscpp_traits/include/ros/message_forward.h

Edit 1: Completed the required workarounds
Edit 2: Corrected the robot_state_publisher github URL and clarified some of the build steps.
Edit 3: Update the currently required workarounds and switch to patch based package updates suitable for both the git and tar rosinstall distribution methods.
Edit 4: Updated steps.

Originally posted by jensenb with karma: 316 on 2013-11-14
This answer was ACCEPTED on the original site
Post score: 10

Original comments
Comment by Artem on 2013-11-21:
I had also troubles compiling rqt_image_view and rviz, although Hans did not have this problem. I had to add opencv_libs into CMakeLists.txt.  BTW, I deleted opencv from src, because I prefer to have it installed through homebrew.
Comment by iRunner on 2013-12-02:
how did you add opencv_libs into rqt_image_view CMakeLists.txt ?
Comment by Artem on 2013-12-03:
After adding opencv_libs to CMakeLists.txt the modified line looks like this target_link_libraries(${PROJECT_NAME} ${catkin_LIBRARIES} ${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY} ${OPENCV_LIBRARY} ${OpenCV_LIBS})
Comment by iRunner on 2013-12-03:
I'm still getting:
Undefined symbols for architecture x86_64:
after
Linking CXX shared library /Users/miRunner/ros_catkin_ws/devel_isolated/rqt_image_view/lib/librqt_image_view.dylib
Comment by Artem on 2013-12-03:
Do you have find_package(OpenCV REQUIRED) in your CMakeLists.txt?
Comment by Artem on 2013-12-03:
It should by default use c++11 but try adding set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -v -std=c++11 -stdlib=libc++ ")
Comment by iRunner on 2013-12-03:
nvm i got it to work after adding
find_package(OpenCV required)
Comment by jensenb on 2013-12-04:
libc++ is used by default, but c++11 support is only active is your set the flag, not be default.
Comment by aslan on 2014-01-29:
I follow the instructions and i get the next error
Linking CXX shared library /Users/aslan/ros_catkin_ws/devel_isolated/robot_state_publisher/lib/librobot_state_publisher_solver.dylib
Undefined symbols for architecture x86_64:
"KDL::Tree::Tree(KDL::Tree const&)", referenced from:
KDL::TreeFkSolverPosFull_recursive::TreeFkSolverPosFull_recursive(KDL::Tree const&) in treefksolverposfull_recursive.cpp.o
Comment by William on 2014-02-24:
It might be easier to use curl and patch, for instance this is how I patched robot_model: cd src && curl https://github.com/ros/robot_model/pull/43.diff | patch -p1; cd -
Comment by JetForMe on 2014-02-24:
When I cd src/orocos_kdl and then git remote add upstream git@github.com:orocos/orocos_kinematics_dynamics.git, I get "fatal: Not a git repository (or any of the parent directories): .git". Am I doing something wrong?
Comment by jensenb on 2014-02-24:
How did you create your hydro workspace? The error message indicates orocos_kdl was not checked out from source with wstool.
Comment by JetForMe on 2014-02-24:
I used the instructions here: http://wiki.ros.org/hydro/Installation/OSX/Homebrew/Source
Comment by William on 2014-02-25:
@jensenb you cannot assume that the src folder was created by checking out git repositories, it can also be extracted tarballs, that is why you should use the patch method, it works regardless.
Comment by jensenb on 2014-02-25:
@William I Understand, my mistake. But in general if you follow the installation guide on the wiki wstool will checkout git repositories released using bloom, right?
Comment by William on 2014-02-25:
I don't think so, that was recently changed, because tar balls are much more efficient as a means of distribution. It has nothing to do with wstool, but instead is the --tar option to rosinstall_generator.
Comment by rchapman on 2014-02-25:
I'm having trouble with the roscpp fix, it returns
-bash: syntax error near unexpected token `newline'
Can someone double check the command?
Comment by DevLan on 2014-03-08:
I am having trouble with the OROCOS  fix. When I run 'git fetch upstream' I get the following:
"Permission denied (publickey).
fatal: Could not read from remote repository.
Please make sure you have the correct access rights
and the repository exists."
What could be going wrong here?
Comment by DevLan on 2014-03-09:
Ah ok, I had to make an RSA key for GitHub. Looks like I'm just bad at GitHub.
Comment by Artem on 2014-03-12:
Thanks for the update!
Comment by Artem on 2014-03-12:
I believe instead of cd /src it should be cd /src/orocos_kdl in the case of patching orocos_kdl and the same for robot_model.
Comment by jensenb on 2014-03-12:
No I am pretty sure the instructions are correct. The pull request patches are relative to the host repository, and since both orocos_kdl and robot_model are split so that each subdir becomes a new repository root, the patches have to be applied to WS_DIR/src and not one level deeper.
Comment by jensenb on 2014-03-12:
Take a look at the patch files in your browser and you will see what I mean.
Comment by demmeln on 2014-03-12:
Big thumbs up for the updated instructions. Thanks!
Comment by JetForMe on 2014-03-12:
I, too, have to cd to workspace/src/orocos_kdl. My install is some part of the way through, and I don't remember where I left off. CDing into the orocos_kdl directory and applying the patch, it warns it's already been applied. Not sure how to proceed.
Comment by JetForMe on 2014-03-12:
Huh. I don't seem to have a kdl_parser at all. Perhaps I should start over. Can someone point me at the correct set of instructions to start with? I'm seen so many different things, I'm not sure any more.
Comment by jensenb on 2014-03-12:
The warning means you already applied the first change, meaning you have the orocos_kdl upstream version per the previous instructions. If you delete this directory from WS_DIR/src and do 'wstool update -t WD_DIR/src', you should get a clean copy and so that you can apply the steps from the answer.
Comment by jensenb on 2014-03-12:
You can also do the same thing for the WS_DIR/src/robot_model directory. If all else fails, simply create a new separate ROS workspace and follow the current Hydro installation instructions again, and the steps above should cover all the current build issues.
Comment by JetForMe on 2014-03-12:
So, I deleted the WS_DIR/src/orocos_kdl directory, ran wstool, and I still get a WS_DIR/src/orocos_kdl/orocos_kdl, and can't apply the patch from WS_DIR/src ("can't find file to patch at input line 30").
Comment by demmeln on 2014-03-15:
@jensenb: I suspect you havent updated rosinstall_generator recently. There has been a change to group the packages by repository. So for the current rosinstall_generator you have to go in the corrsponding subfolder for robot_model and orocos_kdl.
Comment by demmeln on 2014-03-15:
@JetForMe: See above comment about updated rosinstall_generator. Start over and either use the --flat option for rosinstall_generator (this will go back to the old behaviour of not putting the repos in a subfolder, for which the above instructions should work) or go into the subfolders for patching.
Comment by demmeln on 2014-03-15:
Lastly, there has recently been a patch to boost to fix issues with the new clang version that recently came as an apple update. You might need to brew reinstall boost.
Comment by jensenb on 2014-03-16:
@demmeln, @Artem: You are right after all, I had not updated my rosinstall_generator for a while and so I didn't see the package regrouping, my mistake. I have updated the answer accordingly.
Comment by demmeln on 2014-04-08:
I tweaked the answer slightly for current state of things.
Comment by JetForMe on 2014-04-08:
Trying from scratch with the latest, I get boost errors while building class_loader: http://pastebin.com/isZS3LAb
I also had one issue with the first patch: http://pastebin.com/HYkZiMiL
Comment by demmeln on 2014-04-08:
For the class_loader issue I believe you have to reinstall boost: brew update && brew upgrade boost. And issue I see as well, but it doesn't stop you from building.
Comment by JetForMe on 2014-04-08:
orocos_kinematics_dynamics still fails "ImportError: No module named sipconfig": http://pastebin.com/NvhVmgZ4
Comment by jensenb on 2014-04-08:
@JetForMe your pastebin links are invalid, can you update them?
Comment by JetForMe on 2014-04-08:
Strange. It's converting them when I paste. Another try: http://pastebin.com/NvhVmgZ4
I'm doing something wrong, but perhaps you can copy and paste the text as it appears?
Comment by JetForMe on 2014-04-08:
Seems to be a bug in AskBot. A link (http://pastebin.com/NvhVmgZ4) in the middle is implied to work. The link (http://pastebin.com/HYkZiMiL) to my earlier pastebin, for ease. Sorry for all the noise.
Comment by demmeln on 2014-04-08:
The python error is related to a cmake issue with you using brewed python, rather than system python. See https://github.com/Homebrew/homebrew/issues/25118 . Either switch to system python, or as a temporary fix, you can try: brew remove cmake && brew install nikolausdemmel/devel/cmake.
Comment by demmeln on 2014-04-08:
Yes, askbot screws up links. You can always remove the excess </p> in your browser address bar.
Comment by demmeln on 2014-04-08:
Actually, I misread this sipconfig issue. Can you do a brew update && brew upgrade sip? What does brew info sip output?
Comment by JetForMe on 2014-04-08:
Huh. I removed the brew python, as recommended in the instructions. Actually, it said it removed 0 links, so I assumed I already wasn't using brew's python. Here (http://pastebin.com/dvBiV1na) are the sip results. Shall I also do the cmake workaround?
Comment by JetForMe on 2014-04-08:
Meant to ask, how do I switch to system python other than removing it from brew?
Comment by jensenb on 2014-04-08:
Just out of curiosity, can you run "python -c 'import sipconfig' " from the command line and check if you also get an error? In general looks like you have PYTHONPATH issues. I also suggest you open a new question for the issue, since it's not intrinsic to OS X 10.9 support
Comment by demmeln on 2014-04-09:
@JetForMe: Your's was not the brewed python issue I though of. I misread your paste (it was late :-/), sorry. Switching python versions from brewed to system is tricky business. You need to reinstall all formulae that have python bindings (like sip) and all pip packages afterwards.
Comment by demmeln on 2014-04-09:
If problems persist, I suggest opening a new question as @jensenb suggest. This comment thread is getting too long.
Comment by demmeln on 2014-04-09:
One last thing: If you use system python there is no need for mucking with the cmake install.
Comment by JetForMe on 2014-04-09:
Well, the forum made it very difficult, but I've opened a new question (http://answers.ros.org/question/151276/python-problems-installing-ros-on-os-x-109/). Appreciate the help!
Comment by demmeln on 2014-08-05:
Finally, none of these fixes are necessary any more. OpenCV has been patched to not build with CUDA for a while, and recently the last patch related to the orocos fix has been released. (I'm tracking general OS X issues for building/using hydro here: https://github.com/ros/rosdistro/issues/4663)
Comment by jensenb on 2014-08-05:
Should I make another edit of the post for clarity?
Comment by demmeln on 2014-08-05:
Yeah, maybe just a note at the top. Thanks

