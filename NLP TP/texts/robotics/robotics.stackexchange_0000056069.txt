Q:

Turtlebot gmapping demo not generating map, any help?

I am using the turtlebot packages for groovy on an iRobot Create.
If I just run the gmapping_demo, there is no boundary being generated when I point the robot to a wall. Just in case, I save this "map" and attempt to navigate it autonomously. When I run the amcl.demo with this map and try to set a navigation goal, I get the following -
[ WARN] [1386874801.296779658]: Unable to get starting pose of robot, unable to create global plan
[ERROR] [1386874801.296936591]: Aborting because a valid plan could not be found. Even after executing all recovery behaviors
[ERROR] [1386874801.382994043]: Extrapolation Error looking up robot pose: Unable to lookup transform, cache is empty, when looking up transform from frame [/base_footprint] to frame [/map]

[ WARN] [1386874801.983458460]: Could not get robot pose, cancelling reconfiguration
[ERROR] [1386874802.383747282]: Extrapolation Error looking up robot pose: Unable to lookup transform, cache is empty, when looking up transform from frame [/base_footprint] to frame [/map]

So, I then tried to callibrate the iRobot Create that I have but it gave me the error "Please point me at a wall" repeatedly.
So I tried to check if my Kinect is working or not.
When I enter the following command, after running openni_launch
rosrun image_view disparity_view image:=/camera/depthegistered/disparity 

I don't get any output in the screen that pops up. And I get the following messages in the commandline,
[ WARN] [1386873729.750409802]: TF exception:
The tf tree is invalid because it contains a loop.
Frame /base_footprint exists with parent /odom.
Frame /odom exists with parent NO_PARENT.
Frame /camera_rgb_optical_frame exists with parent /camera_rgb_frame.
Frame /camera_rgb_frame exists with parent /base_link.
Frame /camera_depth_optical_frame exists with parent /camera_depth_frame.
Frame /camera_depth_frame exists with parent /camera_rgb_frame.
Frame /camera_link exists with parent /camera_rgb_frame.
Frame /base_link exists with parent /base_footprint.
Frame /left_cliff_sensor_link exists with parent /base_link.
Frame /leftfront_cliff_sensor_link exists with parent /base_link.
Frame /right_cliff_sensor_link exists with parent /base_link.
Frame /rightfront_cliff_sensor_link exists with parent /base_link.
Frame /wall_sensor_link exists with parent /base_link.
Frame /front_wheel_link exists with parent /base_link.
Frame /gyro_link exists with parent /base_link.
Frame /laser exists with parent /base_link.
Frame /plate_0_link exists with parent /base_link.
Frame /plate_1_link exists with parent /plate_0_link.
Frame /plate_2_link exists with parent /plate_1_link.
Frame /plate_3_link exists with parent /plate_2_link.
Frame /rear_wheel_link exists with parent /base_link.
Frame /spacer_0_link exists with parent /base_link.
Frame /spacer_1_link exists with parent /base_link.
Frame /spacer_2_link exists with parent /base_link.
Frame /spacer_3_link exists with parent /base_link.
Frame /standoff_2in_0_link exists with parent /base_link.
Frame /standoff_2in_1_link exists with parent /base_link.
Frame /standoff_2in_2_link exists with parent /base_link.
Frame /standoff_2in_3_link exists with parent /base_link.
Frame /standoff_2in_4_link exists with parent /standoff_2in_0_link.
Frame /standoff_2in_5_link exists with parent /standoff_2in_1_link.
Frame /standoff_2in_6_link exists with parent /standoff_2in_2_link.
Frame /standoff_2in_7_link exists with parent /standoff_2in_3_link.
Frame /standoff_8in_0_link exists with parent /standoff_2in_4_link.
Frame /standoff_8in_1_link exists with parent /standoff_2in_5_link.
Frame /standoff_8in_2_link exists with parent /standoff_2in_6_link.
Frame /standoff_8in_3_link exists with parent /standoff_2in_7_link.
Frame /standoff_kinect_0_link exists with parent /plate_2_link.
Frame /standoff_kinect_1_link exists with parent /plate_2_link.
Frame /left_wheel_link exists with parent /base_link.
Frame /right_wheel_link exists with parent /base_link.

I tried it again after that and the Kinect did return me the depth image. But still I don't get anything from the gmapping demo. What should I do next?

Originally posted by nemesis on ROS Answers with karma: 237 on 2013-12-12
Post score: 0

Original comments
Comment by Phelipe on 2015-01-27:
@nemesis I'm facing the same loop problem... Did you solve this?

A:

There is a problem with depth_registration topic. For using kinect as a laser for autonomous exploration application, you just need depth data.
To solve the above problem, you need to change the parameter depth_registration to false in the openni.launch file.
I use ROS fuerte, in my system this file "openni.launch" is found at /opt/ros/fuerte/stacks/openni_launch/launch$. Check correspondingly for your system.
If this is not working for you. Change the parameter depth_registration to false in the kinect.launch file also and launch kinect.launch separately.
Thank you

Originally posted by sudhanshu_mittal with karma: 311 on 2013-12-12
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by nemesis on 2013-12-12:
It is already set to "false"...
Comment by sudhanshu_mittal on 2013-12-12:
when you launch gmapping_demo, do you get anything on rviz from kinect. Is it just a boundary problem or you are getting nothing from kinect ?
hope you already checked the topics published in rviz

