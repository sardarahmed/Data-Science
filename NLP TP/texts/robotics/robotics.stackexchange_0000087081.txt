Q:

Reading vector from launch file does not work in Indigo

Hi to all,
I'm facing an issue while reading a vector parameter from launch file in ROS Indigo. I set the parameter in my launch file in the private namespace of my node as;
<param name="x0" value="[0.0, 0.0]"/>

And I'm trying to read it as described here or in this previous answer:
ros::NodeHandle nh("~");
std::vector<double> x0;
nh.getParam("x0", x0);

but if I try to print the size of the vector it tells me 0. From the roslaunch param documentation it seems that parameters which are not scalar numbers or literal booleans are interpreted as strings.
Why is there such inconsistency between the types that I can read from the parameter server and the parameters that I can set from a launch file? How can I solve this problem?
Thanks to all in advance.

Originally posted by d.fenucci on ROS Answers with karma: 114 on 2018-05-23
Post score: 1

Original comments
Comment by gvdhoorn on 2018-05-23:
So just to clarify: does this work if you use:
<rosparam param="x0">[0.0, 0.0]</rosparam>

Comment by d.fenucci on 2018-05-23:
Yes, in this way it works. Thanks, I didn't notice the comment in the previous answer. Still, is there any reason for this inconsistency?

A:

Arrays need to be passed using rosparam instead of the normal param which is only able to accept scalar values or strings.
The normal param has no way to tell the difference between a string and an array so it is always interpreted as a string.
Since rosparam expects YAML syntax it is able to handle arrays. It can also handle dictionaries and others things specifiable in YAML syntax.
In your case it would look like this:
<rosparam param="x0">[0.0, 0.0]</rosparam>

Thanks to @gvdhoorn for answering this in a comment. I tried to expand on it and explain why rosparam was needed.

Originally posted by Link with karma: 228 on 2018-09-17
This answer was ACCEPTED on the original site
Post score: 1

