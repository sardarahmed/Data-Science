Q:

How to send 'hexadecimal' message packets over tcp/ip network?

Hello,
I am using ros indigo and ubuntu 14.04. I have a sensor that is connected through tcp/ip network. Its a querry response type of device. So basically I need to send meaningful data packets to get back meaningful data packets that would indicate various status.
So I have created a rosnode, and published a write topic that will be publishing my message into the respective tcp address and port. However the msg needs to be in Hexadecimal.
Sample data packet:
00 84 00 00 00 06 54 03 00 01 00 04

How can I send such a packet in a meaningful? Could it be sent over as a string? I think not. Any assistance will be greatly appreciated.

Originally posted by arunavanag on ROS Answers with karma: 277 on 2017-04-07
Post score: 0

Original comments
Comment by ahendrix on 2017-04-10:
I don't know anything about your E84 sensor, but in general it sounds like you're on the right path. You'll probably need to write the sockets code for communicating with the E84 yourself, and then publish ROS messages representing your sensor data.
Comment by arunavanag on 2017-04-10:
thanks @ahendrix
Comment by arunavanag on 2017-04-12:
@ahendrix I have edited my question, you might have an answer. its more generic now.

A:

What you're asking isn't really ROS-related. Go read a systems programming textbook or find a sockets tutorial online if you want more details.
Use the socket() and connect() system calls to set up your socket. Once you have a file descriptor, you can use the write() system call to send data on that socket. Data is data; it doesn't matter if you represent it as decimal, binary, hex, or ascii; to the computer it's all just data.
A very short snippet to construct a buffer and write it to a socket is:
uint8_t buffer[] = { 0x00, 0x84, 0x00, 0x00, 0x00, 0x06, 0x54, 0x03, 0x00, 0x01, 0x00, 0x04 };
int err = write(socket_file_descriptor, buffer, 12);

and don't forget to check the return code! The return code from write will tell you if you've lost the network connection to your device, and a variety of other useful things that will help you debug future issues.

Originally posted by ahendrix with karma: 47576 on 2017-04-12
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by arunavanag on 2017-04-12:
I am already using socket and I have created TCP ros wrapper over that. I need to send the right packet. Right now I am sending in a string which is returning me illegal data value from my device which means I have established a connection. However, I need to publish the correct packet as a ros msg.
Comment by arunavanag on 2017-04-12:
The ros msg needs to go into my subscribed topic. @ahendrix
Comment by ahendrix on 2017-04-12:
You probably shouldn't be writing a ROS node that translates ROS messages directly into TCP; it's usually much better to keep the packet formatting logic within your code, and publish ROS messages that actually represent the received sensor data.
Comment by arunavanag on 2017-04-13:
Ok, presently I have successfully done a query and received a  response message. However, I am sending a set of decimals in a char array and converting it into a string and sending out and sniffing the network and verifying the messages in hex. Need to get it more readable and do some conversions.
Comment by arunavanag on 2017-04-19:
@ahendrix
Do you know how to send this { 0x00, 0x84, 0x00, 0x00, 0x00, 0x06, 0x54, 0x03, 0x00, 0x01, 0x00, 0x04 } as a ros msg which is of type const std_msgs::StringConstPtr
Comment by ahendrix on 2017-04-19:
Why not convert it into a more meaningful form first?
Comment by arunavanag on 2017-04-19:
@ahendrix like what? That is the packet I need to send.
Comment by ahendrix on 2017-04-19:
Presumably this packet represents some action that you want the sensor to take, or or some sensor reading. You should convert it to a request message or a sensor reading message. Otherwise you're just building a leaky abstraction and adding latency.
Comment by arunavanag on 2017-04-19:
Good Suggestion. However, there are a series of packets for me that leads to one process. So I am thinking what could be a good way to send it.
For the time being I am sending it as a ros msg to my subscribed topic.
Comment by ahendrix on 2017-04-20:
It might be easier if your TCP/IP node sends the entire series of packets in response to a single incoming ROS message. You might need a separate thread to handle the socket communication and a queue of actions for it to process.
Comment by arunavanag on 2017-04-20:
I cannot send all the packets, as each sequence has lets say x number of packet. Before sending and after sending i need to check for robot status. Depending on my signal the robot acts. I am planning to divide my sequence into y number of actions, each actions containing series of packets and check
Comment by arunavanag on 2017-04-20:
My another thread in much details: http://answers.ros.org/question/259682/what-is-the-best-way-to-perform-query-and-response-over-tcpip-network/

