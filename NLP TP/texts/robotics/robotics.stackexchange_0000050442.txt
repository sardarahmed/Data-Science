Q:

programatically create subscribers

I am trying to make a simple logger that given a list of topics via a service or an action, subscribes to and logs the data from these topics. This requires me to initiate subscribers on the fly and the callback data handlers are proving not easy to get around. Any ideas?

Originally posted by makokal on ROS Answers with karma: 1295 on 2013-04-17
Post score: 1

Original comments
Comment by joq on 2013-04-17:
Have you looked at rosbag?
Comment by makokal on 2013-04-21:
Yes, but what we need goes beyond rosbag, we need to be able to process the data independent of ROS

A:

I'm doing a similar thing at the moment. So far, it only seems possible in rospy, not roscpp. I'm using the services:
rosapi/topics
rosapi/topic_type

to get a full list of topics and msg types, then a little (lots) of dodgy string manipulation getting the correct format of topic  to use with:
__import__(pkg,globals(),locals(),[topictype],-1)

(this dynamically creates a from pkg import topictype C++ doesn't seem to have an equivalent)
once you have the topic name and type, it's easy to subscribe to it. You can filter the full list by comparing against your provided list to only subscribe to topics you are interested in.

Originally posted by Chengarda with karma: 156 on 2013-12-12
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by McMurdo on 2014-05-31:
_type_name = import('std_msgs.msg', globals(), locals(), ['String'], -1)
and then
rospy.Subscriber("/some_topic", _type_name.String, callback)
works for me. However is there a way to eliminate having to type String? I want to invoke the above import and be able to use _type_name directly.

