Q:

sensor_msgs::Image to sensor_msgs::ImagePtr

Hi, it might be simple so apologies for this post... but I can't find the solution.
I would like to get the sensor_msgs::Image::Ptr of a sensor_msgs::Image. Basically I would like to do the conversion of a sensor_msgs::Image to an cv IplImage using:
sensor_msgs::CvBridge bridge_;
bridge_.imgMsgToCv

which takes actually
sensor_msgs::Image::ConstPtr

as found in CvBridge.h (diamondback)
IplImage* imgMsgToCv(sensor_msgs::Image::ConstPtr rosimg, std::string desired_encoding = "passthrough")

and hence my failing.
Basically, I would like to do the following:
sensor_msgs::CvBridge bridge_;
sensor_msgs::Image image_msg = <to a sensor_msgs::Image>;
sensor_msgs::Image::Ptr rosimg;
missing statement??
bridge_.imgMsgToCv(rosimg, "bgr8");

Many thanks.

Originally posted by Yianni on ROS Answers with karma: 123 on 2011-05-19
Post score: 3

A:

It looks like you might misunderstand the way smart pointers work. You can look hear for an intro: http://www.boost.org/doc/libs/1_46_1/libs/smart_ptr/smart_ptr.htm
But in the mean time smart pointers can only be safely used to represent heap allocations (things created with new) If you try to get image_msg from your example into a smart pointer rosimg it will cause a segfault because it will be deleted twice: Once from going out of scope, and second by the smart pointer when ever it goes out of scope or is otherwise destroyed.
If you write your message callback to use const sensor_msgs::Image::Ptr & image_msg, ros will pass you the message wrapped in a smart pointer already , and you won't have to worry about it.

Originally posted by Asomerville with karma: 2743 on 2011-05-19
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Yianni on 2011-05-19:
Thanks. Your answer helped.

