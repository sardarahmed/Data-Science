Q:

OpenRTM-ROS Build Errors

I'm trying to set up the humanoid simulations provided by OpenRTM-ROS.
When following the instructions I execute:
rosmake --rosdep-install --rosdep-yes hrpsys_ros_bridge

but the make ultimately fails and I have no clue how to fix it. I'd really like to see the RTM stuff (humanoid HRP-4c simulation) work with ROS
Here's my result:
sam@Mecha:~$ rosmake --rosdep-install --rosdep-yes hrpsys_ros_bridge
[ rosmake ] Packages requested are: ['hrpsys_ros_bridge']                                                                                                
[ rosmake ] Logging to directory/home/sam/.ros/rosmake/rosmake_output-20120519-225832                                                                    
[ rosmake ] Expanded args ['hrpsys_ros_bridge'] to:
['hrpsys_ros_bridge']                                                                                
[ rosmake ] Generating Install Script using rosdep then executing. This may take a minute, you will be prompted for permissions. . .                     
Executing script below with cwd=/tmp
{{{
#!/usr/bin/env bash
#!/bin/sh
if [ ! -d /usr/share/doc/ttf-mscorefonts-installer ] ; then
  echo "ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true" | sudo debconf-set-selections 
  sudo apt-get -y --force-yes install ttf-mscorefonts-installer
  sudo fc-cache
fi

}}}

Executing script below with cwd=/tmp
{{{
#!/usr/bin/env bash
if [ ! -f /usr/local/bin/xdotool ]; then
  sudo aptitude install checkinstall libxtst-dev
  wget http://semicomplete.googlecode.com/files/xdotool-2.20110530.1.tar.gz -O /tmp/xdotool-2.2-$$.tar.gz
  mkdir /tmp/xdotool-2.2-$$; tar -C /tmp/xdotool-2.2-$$ -xvzf /tmp/xdotool-2.2-$$.tar.gz; cd /tmp/xdotool-2.2-$$/xdotool-2.20110530.1; ./configure; make; sudo mkdir -p /usr/local/man/man1; sudo mkdir -p /usr/local/lib; sudo mkdir -p /usr/local/include; sudo checkinstall -y
fi

}}}

Executing script below with cwd=/tmp
{{{
#!/usr/bin/env bash
#!/bin/bash
if [ ! -f /etc/apt/sources.list.d/openrave-release*.list ] ; then
  echo "deb http://ppa.launchpad.net/openrave/release/ubuntu `lsb_release -cs` main" |  sudo tee /etc/apt/sources.list.d/openrave-release.list
  sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 58E6B835EDC85D09
  sudo apt-get -y update
fi
sudo apt-get -y --force-yes install libcollada15dom-dev

}}}

Reading package lists... Done
Building dependency tree       
Reading state information... Done
libcollada15dom-dev is already the newest version.
0 upgraded, 0 newly installed, 0 to remove and 152 not upgraded.
Executing script below with cwd=/tmp
{{{
#!/usr/bin/env bash
#!/bin/bash
codename=`lsb_release -cs`
if [ ! -f /usr/bin/glc-capture ] ; then
  if [ $codename = "lucid" -o $codename = "maverick" -o $codename = "natty" ] ; then
    sudo apt-get install -y build-essential cmake libx11-dev libxxf86vm-dev libgl1-mesa-dev libasound2-dev libpng12-dev
    sudo apt-get install -y ia32-libs
    sudo apt-get install -y gcc-multilib
    sudo ln -s /usr/lib32/libGL.so.1 /usr/lib32/libGL.so
    sudo ln -s /usr/lib32/libasound.so.2 /usr/lib32/libasound.so
    sudo ln -s /usr/lib32/libXxf86vm.so.1 /usr/lib32/libXxf86vm.so
    sudo ln -s /usr/lib32/libX11.so.6 /usr/lib32/libX11.so
    sudo ln -s /usr/lib32/libpng12.so.0 /usr/lib32/libpng.so
    wget https://raw.github.com/ienorand/glc/ppa/scripts/glc-build.sh
    chmod a+x glc-build.sh
    printf "/usr\n\ny\n" | sudo ./glc-build.sh
  else
    yes | sudo apt-add-repository ppa:arand
    sudo apt-get update
    sudo apt-get install -y glc
  fi
fi

}}}

Reading package lists... Done
Building dependency tree       
Reading state information... Done
build-essential is already the newest version.
cmake is already the newest version.
libx11-dev is already the newest version.
libxxf86vm-dev is already the newest version.
libgl1-mesa-dev is already the newest version.
libasound2-dev is already the newest version.
libpng12-dev is already the newest version.
0 upgraded, 0 newly installed, 0 to remove and 152 not upgraded.
Reading package lists... Done
Building dependency tree       
Reading state information... Done
ia32-libs is already the newest version.
0 upgraded, 0 newly installed, 0 to remove and 152 not upgraded.
Reading package lists... Done
Building dependency tree       
Reading state information... Done
gcc-multilib is already the newest version.
0 upgraded, 0 newly installed, 0 to remove and 152 not upgraded.
ln: creating symbolic link `/usr/lib32/libGL.so': File exists
ln: creating symbolic link `/usr/lib32/libasound.so': File exists
ln: creating symbolic link `/usr/lib32/libXxf86vm.so': File exists
ln: creating symbolic link `/usr/lib32/libX11.so': File exists
ln: creating symbolic link `/usr/lib32/libpng.so': File exists
--2012-05-19 22:58:38--  https://raw.github.com/ienorand/glc/ppa/scripts/glc-build.sh
Resolving raw.github.com... 207.97.227.243
Connecting to raw.github.com|207.97.227.243|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 8729 (8.5K) [text/plain]
Saving to: `glc-build.sh.3'

100%[===============================================================================================================>] 8,729       --.-K/s   in 0s      

2012-05-19 22:58:38 (737 MB/s) - `glc-build.sh.3' saved [8729/8729]

info  : Welcome to glc install script!
        Enter path where glc will be installed.
          (leave blank to install to root directory)
      >         Enter compiler optimizations.
          (-O2 -msse -mmmx -fomit-frame-pointer)
      >         Use git (y/n)
          (git contains latest unstable development version)
      > Already up-to-date.
Already up-to-date.
Already up-to-date.
Already up-to-date.
info  : Building elfhacks...
info  : Building packetstream...
info  : Building glc...
CMake Warning (dev) at src/CMakeLists.txt:28 (ADD_EXECUTABLE):
  Policy CMP0003 should be set before this line.  Add code such as

    if(COMMAND cmake_policy)
      cmake_policy(SET CMP0003 NEW)
    endif(COMMAND cmake_policy)

  as early as possible but after the most recent call to
  cmake_minimum_required or cmake_policy(VERSION).  This warning appears
  because target "play" links to some libraries for which the linker must
  search:

    GL, asound, X11, m, png

  and other libraries with known full path:

    /tmp/packetstream/build/src/libpacketstream.so

  CMake is adding directories in the second list to the linker search path in
  case they are needed to find libraries from the first list (for backwards
  compatibility with CMake 2.4).  Set policy CMP0003 to OLD or NEW to enable
  or disable this behavior explicitly.  Run "cmake --help-policy CMP0003" for
  more information.
This warning is for project developers.  Use -Wno-dev to suppress it.

/usr/bin/ld: cannot find -lGL
collect2: ld returned 1 exit status
make[2]: *** [src/glc/libglc-play.so.0.5.8] Error 1
make[1]: *** [src/glc/CMakeFiles/glc-play.dir/all] Error 2
make: *** [all] Error 2
error : Can't compile glc
Executing script below with cwd=/tmp
{{{
#!/usr/bin/env bash
#!/bin/bash
if [ ! -f /etc/apt/sources.list.d/ferramroberto-java-`lsb_release -cs`.list ] ; then
  yes | sudo add-apt-repository ppa:ferramroberto/java
  sudo aptitude update
fi
echo "sun-java6-jdk shared/accepted-sun-dlj-v1-1 select true" | sudo debconf-set-selections
echo "sun-java6-jre shared/accepted-sun-dlj-v1-1 select true" | sudo debconf-set-selections
DEBIAN_FRONTEND=noninteractive sudo apt-get -y --force-yes install sun-java6-jdk sun-java6-fonts sun-java6-plugin

}}}

Reading package lists... Done
Building dependency tree       
Reading state information... Done
sun-java6-jdk is already the newest version.
sun-java6-fonts is already the newest version.
sun-java6-plugin is already the newest version.
0 upgraded, 0 newly installed, 0 to remove and 152 not upgraded.
[ rosmake ] rosdep install failed: Rosdep install failed                                                                                                 
sam@Mecha:~$ ^C
sam@Mecha:~$ 

The errors are:
/usr/bin/ld: cannot find -lGL
collect2: ld returned 1 exit status
make[2]: *** [src/glc/libglc-play.so.0.5.8] Error 1
make[1]: *** [src/glc/CMakeFiles/glc-play.dir/all] Error 2
make: *** [all] Error 2
error : Can't compile glc

What should I do?!  (using 64 bit Ubuntu Lucid 10.04 and ROS Electric)

Originally posted by TurtleBot_Fan on ROS Answers with karma: 287 on 2012-05-19
Post score: 1

A:

Basically, glc is just used for documentation process and you can ignore by uncommenting
<rosdep name="glc" />
from jsk_tools/manifest.xml.
It would help me to fix the problem if you can send me following information
lucid-amd64 $ echo $PATH
/opt/ros/electric/ros/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
lucid-amd64 $ echo $LD_LIBRARY_PATH

lucid-amd64 $ ls -al /usr/lib32/libGL.so 
lrwxrwxrwx 1 root root 15 2012-02-01 17:46 /usr/lib32/libGL.so -> mesa/libGL.so.1
lucid-amd64 $ locate libGL.so
/usr/lib/libGL.so
/usr/lib/mesa/libGL.so
/usr/lib/mesa/libGL.so.1
/usr/lib/mesa/libGL.so.1.2
/usr/lib32/libGL.so
/usr/lib32/mesa/libGL.so.1
/usr/lib32/mesa/libGL.so.1.2

Originally posted by Kei Okada with karma: 1186 on 2012-05-20
This answer was ACCEPTED on the original site
Post score: 0

