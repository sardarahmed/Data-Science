Q:

how is rosh's ok() different from rospy.is_shutdown()?

Specifically, what's the difference with how they handle a KeyboardInterrupt/SIGINT?
I would expect these two snippets to act the same, but they don't:
#!/usr/bin/env python
import rospy
r = rospy.Rate(10)
while not rospy.is_shutdown():
    print 'ok...'
    r.sleep()

and
#!/usr/bin/env rosh
r = Rate(10)
while ok():
    print "ok..."
    r.sleep()

The first example exits on Ctrl+C, but the second does not. What am I missing?

Originally posted by Dan Lazewatsky on ROS Answers with karma: 9115 on 2011-07-08
Post score: 0

A:

Most likely this is a bug in rosh. Can you file a ticket here with exact details on how you run your rosh sample?
https://code.ros.org/trac/ros/newticket
In general, rosh tries to handle SIGINT differently so that it can be used in an interactive interpreter.  rosh is not as tested when running outside of iteractive mode.

Originally posted by kwc with karma: 12244 on 2011-07-08
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Dan Lazewatsky on 2011-07-12:
https://code.ros.org/trac/ros/ticket/3581

