Q:

Ubuntu Xenial 16.04 Source Install

I am doing a clean install of ROS Kinetic on Ubuntu 16.04
Running the following command from the installation page:

./src/catkin/bin/catkin_make_isolated --install -DCMAKE_BUILD_TYPE=Release

CMakes some packages correctly, but as soon as Boost gets involved I get compilation errors.
==> Processing catkin package: 'class_loader'
==> Building with env: '/home/dh/install_isolated/env.sh'
==> cmake /home/dh/src/class_loader -DCATKIN_DEVEL_PREFIX=/home/dh/devel_isolated/class_loader
-DCMAKE_INSTALL_PREFIX=/home/dh/install_isolated
-DCMAKE_BUILD_TYPE=Release -G Unix Makefiles in '/home/dh/build_isolated/class_loader' CMake Warning at /usr/share/cmake-3.5/Modules/FindBoost.cmake:725 (message):   Imported targets not available for Boost version Call Stack (most recent call first):   /usr/share/cmake-3.5/Modules/FindBoost.cmake:763 (_Boost_COMPONENT_DEPENDENCIES)   /usr/share/cmake-3.5/Modules/FindBoost.cmake:1332 (_Boost_MISSING_DEPENDENCIES)   CMakeLists.txt:4 (find_package)

CMake Warning at /usr/share/cmake-3.5/Modules/FindBoost.cmake:725 (message):   Imported targets not available for Boost version Call Stack (most recent call first):   /usr/share/cmake-3.5/Modules/FindBoost.cmake:763 (_Boost_COMPONENT_DEPENDENCIES)   /usr/share/cmake-3.5/Modules/FindBoost.cmake:1332 (_Boost_MISSING_DEPENDENCIES)   CMakeLists.txt:4 (find_package)

CMake Error at /usr/share/cmake-3.5/Modules/FindBoost.cmake:1677 (message):   Unable to find the requested Boost libraries.

  Unable to find the Boost header files.  Please set BOOST_ROOT to the root   directory containing Boost or BOOST_INCLUDEDIR to the directory containing   Boost's headers. Call Stack (most recent call first):   CMakeLists.txt:4 (find_package)

-- Using CATKIN_DEVEL_PREFIX: /home/dh/devel_isolated/class_loader
-- Using CMAKE_PREFIX_PATH: /home/dh/install_isolated
-- This workspace overlays: /home/dh/install_isolated
-- Using PYTHON_EXECUTABLE: /usr/bin/python
-- Using Debian Python package layout
-- Using empy: /usr/bin/empy
-- Using CATKIN_ENABLE_TESTING: ON
-- Call enable_testing()
-- Using CATKIN_TEST_RESULTS_DIR: /home/dh/build_isolated/class_loader/test_results
-- Found gtest sources under '/usr/src/gtest': gtests will be built
-- nosetests not found, Python tests can not be run (try installing package 'python-nose')
-- catkin 0.7.6 CMake Error at CMakeLists.txt:11 (find_package):   By not providing "Findconsole_bridge.cmake" in CMAKE_MODULE_PATH this   project has asked CMake to find a package configuration file provided by   "console_bridge", but CMake did not find one.

  Could not find a package configuration file provided by "console_bridge"   with any of the following names:

    console_bridgeConfig.cmake
    console_bridge-config.cmake

  Add the installation prefix of "console_bridge" to CMAKE_PREFIX_PATH or set   "console_bridge_DIR" to a directory containing one of the above files.  If   "console_bridge" provides a separate development package or SDK, be sure it   has been installed.

-- Configuring incomplete, errors occurred! See also "/home/dh/build_isolated/class_loader/CMakeFiles/CMakeOutput.log". See also "/home/dh/build_isolated/class_loader/CMakeFiles/CMakeError.log". <== Failed to process package 'class_loader':    Command '['/home/dh/install_isolated/env.sh', 'cmake', '/home/dh/src/class_loader', '-DCATKIN_DEVEL_PREFIX=/home/dh/devel_isolated/class_loader', '-DCMAKE_INSTALL_PREFIX=/home/dh/install_isolated', '-DCMAKE_BUILD_TYPE=Release', '-G', 'Unix Makefiles']' returned non-zero exit status 1

Reproduce this error by running:
==> cd /home/dh/build_isolated/class_loader && /home/dh/install_isolated/env.sh cmake /home/dh/src/class_loader
-DCATKIN_DEVEL_PREFIX=/home/dh/devel_isolated/class_loader
-DCMAKE_INSTALL_PREFIX=/home/dh/install_isolated
-DCMAKE_BUILD_TYPE=Release -G 'Unix Makefiles'

Command failed, exiting.

One would think this would be easy to fix since I am installing on a clean system. However, I don't have any clue what is happening and how to resolve this error.

Originally posted by Chrizzl on ROS Answers with karma: 48 on 2017-09-26
Post score: 0

Original comments
Comment by gvdhoorn on 2017-09-26:
Can you please include the exact steps that you followed to get to this stage? A link to a tutorial (and a mention of the section) would also be ok.
Also: do you need to build things from sources? Binary installs are almost always preferred.
Comment by gvdhoorn on 2017-09-26:
Finally: please use the Preformatted Text button (the one with 101010 on it) for console copy-pastes in the future. It makes things easier to read. Thanks.

A:

I solved the problem by doing a regular install instead of source install. ROS didn't work there because I did not write

source /opt/ros/kinetic/setup.bash

to the .bashrc
In conclusion: the problem and the solution are totally unrelated in this case.

Originally posted by Chrizzl with karma: 48 on 2017-09-26
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by gvdhoorn on 2017-09-26:
So the from-source install was because running binaries from the binary installation didn't seem to work?
Comment by Chrizzl on 2017-09-26:
Yes, you understand that correctly. Because ROS wasn't working as I expected I thought I had the wrong installation or something. Hence I tried to install from source.

