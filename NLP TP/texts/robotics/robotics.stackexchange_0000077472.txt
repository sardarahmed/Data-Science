Q:

Questions about API

Link to ros API
Q1:
Why does API split into 3 parts, ROS, C++, Python respectively?
Q2:
Why some of them are identical in the same row, while others different?

Originally posted by shawnysh on ROS Answers with karma: 339 on 2016-11-23
Post score: 0

A:

Actually, you basically copied the answer in here as well :-)

ROS: functionality available via ROS
topics and services
C++:
functionality available in C++
libraries
Python: functionality
available in Python modules/packages

ROS has client libraries, roscpp and rospy that allow you to use ROS functionalities in C++ and Python code, respectively.
So, you have a C++ API, to e.g. use Publishers and Subscribers, as well as a Python API. Those two are obviously different.
From the outside, a topic looks, however, the same, wether it comes from a python or a C++ node. You can manipulate this e.g. using the topic_tools package, which are just ROS nodes written in either C++ or python.
However, this is only a very rough overview, don't get stuck too much on this list.

Originally posted by mgruhler with karma: 12390 on 2016-11-23
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by shawnysh on 2016-11-23:
I thought those 3 lines roughly are my answer, yet I confused, so I post it to look for a clear explanation.
Thanks for your patient and clear reply, it helps!

