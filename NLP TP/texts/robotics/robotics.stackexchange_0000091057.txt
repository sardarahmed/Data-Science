Q:

How do I debug ld error linking tf2 transform of geometry_msgs::Point32

Hello ROS Answers,
I'm out of ideas for debugging an linking error on my machine.  I need help solving the problem below or advice on how to debug further.
Platform:

Distro: Indigo
OS: Ubuntu 14.04
Kernel: 4.4.0-142-generic
gcc: Ubuntu 4.8.5-4ubuntu8~14.04.2

Problem:
Everything was working and building fine until last Monday.
I'm using catkin_make to build a forked version of the pointcloud_to_laserscan package in perception_pcl.  Although the The build fails with some linking error while trying to link the pointcloud_to_laserscan_node executable.
The exact command I use is catkin_make --pkg pointcloud_to_laserscan -DCMAKE_CXX_FLAGS:STRING="" -j1. See the error below:
[  0%] Built target _roscpp_generate_messages_check_deps_GetLoggers
[  0%] Built target _roscpp_generate_messages_check_deps_Logger
[  0%] Built target _roscpp_generate_messages_check_deps_Empty
[  0%] Built target _roscpp_generate_messages_check_deps_SetLoggerLevel
[  0%] Built target roscpp_generate_messages_cpp
[  0%] Built target roscpp_gencpp
[100%] Built target roscpp
[100%] Built target pointcloud_to_laserscan
Linking CXX executable /my_catkinws/devel/lib/pointcloud_to_laserscan/pointcloud_to_laserscan_node
/my_catkinws/devel/lib/libpointcloud_to_laserscan.so: error: undefined reference to 'ros::Time const& tf2::getTimestamp<geometry_msgs::Point32_<std::allocator<void> > >(geometry_msgs::Point32_<std::allocator<void> > const&)'
/my_catkinws/devel/lib/libpointcloud_to_laserscan.so: error: undefined reference to 'std::string const& tf2::getFrameId<geometry_msgs::Point32_<std::allocator<void> > >(geometry_msgs::Point32_<std::allocator<void> > const&)'
/my_catkinws/devel/lib/libpointcloud_to_laserscan.so: error: undefined reference to 'void tf2::doTransform<geometry_msgs::Point32_<std::allocator<void> > >(geometry_msgs::Point32_<std::allocator<void> > const&, geometry_msgs::Point32_<std::allocator<void> >&, geometry_msgs::TransformStamped_<std::allocator<void> > const&)'
collect2: error: ld returned 1 exit status
make[2]: *** [/my_catkinws/devel/lib/pointcloud_to_laserscan/pointcloud_to_laserscan_node] Error 1
make[1]: *** [forked/perception_pcl/pointcloud_to_laserscan/CMakeFiles/pointcloud_to_laserscan_node.dir/all] Error 2
make: *** [all] Error 2
Invoking "make -j1" failed

Debuging Notes:
If have tried rolling back to previous commits across my workspace, but all previously building commits fail in the same way above.
If I comment out line 158 (161 with the headers I added), the package builds:
155  for(; iter_x != iter_x.end(); ++iter_x, ++iter_y, ++iter_z){
156  
157    point.x = *iter_x;
158    point.y = *iter_y;
159    point.z = *iter_z;
160    if(!(output.header.frame_id == cloud_msg->header.frame_id)){
161>     //point = tf2_.transform(point, output.header.frame_id, output.header.stamp, cloud_msg->header.frame_id);
162    }

Additionally, I spammed the package with more dependencies and headers.  I added tf2_msgs, tf2_sensor_msgs, tf2_geometry_msgs, geometry_msgs, sensor_msgs, and message_generation as build and run dependencies, and I added them to CMakeLists.txt.  Below I have the headers for the pointcloud_to_laserscan_nodelet.cpp/h marked with the headers I added to the respective files.
Package Details:

pointcloud_to_laserscan 1.2.4
tf2_ros 0.5.12
geometry_msgs 1.11.8
nodelet 1.9.3

Headers in pointcloud_to_laserscan_nodelet.cpp:
41 #include <pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h>
42 #include <sensor_msgs/LaserScan.h>
43 #include <pluginlib/class_list_macros.h>
44 #include <sensor_msgs/point_cloud2_iterator.h>
45> #include <tf2_geometry_msgs/tf2_geometry_msgs.h>
46 #include <geometry_msgs/Point32.h>
47> #include <geometry_msgs/TransformStamped.h>
48> #include <geometry_msgs/PointStamped.h>

Headers in pointcloud_to_laserscan_nodelet.h:
44 #include <ros/ros.h>
45 #include <boost/thread/mutex.hpp>
46 
47 #include <nodelet/nodelet.h>
48 #include <tf2/buffer_core.h>
49 #include <tf2_ros/transform_listener.h>
50 #include <tf2_ros/message_filter.h>
51 #include <message_filters/subscriber.h>
52 #include <sensor_msgs/PointCloud2.h>
53> #include <tf2_geometry_msgs/tf2_geometry_msgs.h>
54> #include <geometry_msgs/TransformStamped.h>
55> #include <geometry_msgs/PointStamped.h>
56> #include <geometry_msgs/Point32.h>

Below are the dependencies I have defined in the package.xml:
<build_depend>message_filters</build_depend>
<run_depend>message_filters</run_depend>

<build_depend>nodelet</build_depend>
<run_depend>nodelet</run_depend>

<build_depend>roscpp</build_depend>
<run_depend>roscpp</run_depend>

<build_depend>sensor_msgs</build_depend>
<run_depend>sensor_msgs</run_depend>

<build_depend>tf2</build_depend>
<run_depend>tf2</run_depend>

<build_depend>tf2_ros</build_depend>
<run_depend>tf2_ros</run_depend>

<build_depend>tf2_msgs</build_depend>
<run_depend>tf2_msgs</run_depend>

<build_depend>tf2_sensor_msgs</build_depend>
<run_depend>tf2_sensor_msgs</run_depend>

<build_depend>tf2_geometry_msgs</build_depend>
<run_depend>tf2_geometry_msgs</run_depend>

<build_depend>geometry_msgs</build_depend>
<run_depend>geometry_msgs</run_depend>

<build_depend>sensor_msgs</build_depend>
<run_depend>sensor_msgs</run_depend>

<build_depend>message_generation</build_depend>
<run_depend>message_generation</run_depend>

Below is the CMakeList.txt file:
cmake_minimum_required(VERSION 2.8.3)
project(pointcloud_to_laserscan)

find_package(catkin REQUIRED COMPONENTS
  message_filters
  nodelet
  roscpp
  sensor_msgs
  tf2
  tf2_ros
  tf2_msgs
  tf2_sensor_msgs
  tf2_geometry_msgs
  geometry_msgs
  sensor_msgs
  message_generation
)

catkin_package(
  INCLUDE_DIRS include
  LIBRARIES pointcloud_to_laserscan
  CATKIN_DEPENDS roscpp message_filters nodelet sensor_msgs tf2 tf2_ros tf2_msgs tf2_sensor_msgs tf2_geometry_msgs     geometry_msgs sensor_msgs message_generation
)

include_directories(
  include
  ${catkin_INCLUDE_DIRS}
)

add_library(pointcloud_to_laserscan src/pointcloud_to_laserscan_nodelet.cpp)
target_link_libraries(pointcloud_to_laserscan ${catkin_LIBRARIES})

add_executable(pointcloud_to_laserscan_node src/pointcloud_to_laserscan_node.cpp)
target_link_libraries(pointcloud_to_laserscan_node pointcloud_to_laserscan ${catkin_LIBRARIES})

install(TARGETS pointcloud_to_laserscan pointcloud_to_laserscan_node
  RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
  LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION})

install(DIRECTORY include/${PROJECT_NAME}/
  DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
)
install(FILES nodelets.xml
  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
)

install(DIRECTORY launch
  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
)

Environment:
/my_catkinws dirs:

/my_catkinws/src/forked
/my_catkinws/build
/my_catkinws/devel
/my_catkinws/rosjava_mvn_repo

env | grep ROS variables:
ROS_ROOT=/opt/ros/indigo/share/ros
ROS_PACKAGE_PATH=/my_catkinws/src:/opt/ros/indigo/share:/opt/ros/indigo/stacks
ROS_MASTER_URI=http://localhost:11311
ROS_LOG_DIR=~/.ros/log
ROS_WORKSPACE=/my_catkinws
ROS_TEST_RESULTS_DIR=/my_catkinws/build/test_results
ROSJAVA_MAVEN_REPO_COPY=/my_catkinws/rosjava_mvn_repo
ROS_MAVEN_DEPLOYMENT_REPOSITORY=/my_mavenRepository
ROS_MAVEN_PATH=/my_mavenRepository:/my_catkinws/devel/share/maven:/opt/ros/indigo/share/maven:/my_catkinws/rosjava_mvn_repo
ROS_MAVEN_REPOSITORY=http://my.remote.maven.repo/releases
ROSLISP_PACKAGE_DIRECTORIES=/my_catkinws/devel/share/common-lisp
ROS_DISTRO=indigo
ROS_SHARE_PATH=/my_catkinws/devel/share
ROS_ETC_DIR=/opt/ros/indigo/etc/ros

other environment variables:
CPLUS_INCLUDE_PATH=/usr/include/eigen3:/usr/include/eigen3:/usr/include/eigen3:
OLDPWD=/opt/ros/indigo/lib/pkgconfig
INCLUDE_PATH=/usr/include/eigen3
LD_LIBRARY_PATH=/opt/ros/indigo/share/euslisp/jskeus/eus//Linux64/lib:/my_catkinws/devel/lib/x86_64-linux-gnu:/opt/ros/indigo/lib/x86_64-linux-gnu:/opt/ros/indigo/share/euslisp/jskeus/eus//Linux64/lib:/opt/ros/indigo/share/euslisp/jskeus/eus//Linux64/lib:/my_catkinws/devel/lib:/opt/ros/indigo/lib
C_INCLUDE_PATH=/usr/include/eigen3:/usr/include/eigen3:/usr/include/eigen3:
PKG_CONFIG_PATH=/my_catkinws/devel/lib/x86_64-linux-gnu/pkgconfig:/opt/ros/indigo/lib/x86_64-linux-gnu/pkgconfig:/my_catkinws/devel/lib/pkgconfig:/opt/ros/indigo/lib/pkgconfig
CMAKE_PREFIX_PATH=/my_catkinws/devel:/opt/ros/indigo

Thank you for looking through any/all of this information.

Originally posted by blakejwc on ROS Answers with karma: 33 on 2019-03-22
Post score: 0

A:

The linker error says that the explicit template specialization of doTransform for geometry_msgs/Point32 does not exist.
I cannot find it in https://github.com/ros/geometry2/blob/melodic-devel/tf2_geometry_msgs/include/tf2_geometry_msgs/tf2_geometry_msgs.h either, so it seems quite likely that it doesn't exist.
If this code compiled at some point in the past, you may want to go back and figure out if the previous version had some dependency that provided that doTransform.
If you're not able to find it, you may need to implement it yourself. You can just put the template specialization in one of your headers, or near the top of the source file that uses it.

Originally posted by ahendrix with karma: 47576 on 2019-03-22
This answer was ACCEPTED on the original site
Post score: 0

