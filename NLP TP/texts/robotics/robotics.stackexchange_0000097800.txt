Q:

Default callback group?

http://docs.ros2.org/latest/api/rclpy/api/actions.html
I saw in the definition for action clients that if no callback group was defined that the node's default callback group is used. How can I find what this is?

Originally posted by galaxee on ROS Answers with karma: 17 on 2020-12-09
Post score: 0

A:

The default callback group is just an internal, MutuallyExclusive callback group.  That means that one, and only one of the callbacks within the group can run simultaneously.  This is the safest configuration to run in, though it may not be the highest performance.
To directly answer your question, I don't think we have a way to access the default callback group.  What are you trying to do that you need it?

Originally posted by clalancette with karma: 256 on 2020-12-11
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by galaxee on 2020-12-11:
Thanks! I don't need to access the default callback group, I just didn't know where to look to see what the default callback group was.
Just to make sure I understand, does this mean that if for one node, you use a MultiThreadedExecutor but a MutuallyExclusiveCallbackGroup, it's not different from using a SingleThreadedExecutor?
Comment by clalancette on 2020-12-11:
Ah, no worries.  I had to go grubbing through the source to find it, but it is created here: https://github.com/ros2/rclcpp/blob/9c62c1c9463cd2accee57fe157125950df50f957/rclcpp/src/rclcpp/node_interfaces/node_base.cpp#L151
Comment by galaxee on 2020-12-11:
Thanks! Sorry I edited my comment but not sure if you saw the edit. Does this mean that if for one node, you use a MultiThreadedExecutor but a MutuallyExclusiveCallbackGroup, it's not different from using a SingleThreadedExecutor?

