Q:

ROS2 generating 'core' file on error, how to disable?

I'm running a simple talker/listener demo, using a Docker image based on ros:galactic-ros-core  w/ros-galactic-desktop installed. I'm getting an error about half the time when I run the demo, but my question is not about the error, but about the core dump. When I get the error, a large file "core" is created in the current directory which I really don't want. Is this standard behavior? Is there any supported method to stop this from happening by default, either within ROS2 or linux?
Following a cryptic comment from https://www.oreilly.com/library/view/ros-programming-building/9781788627436/fa252378-8d64-4c42-ad20-e8a5374549a5.xhtml "... there is already a core directory to prevent core dumps" I can prevent the 'core' file from being created by creating an empty 'core' directory in the current working directory, but this is a workaround.
Not necessarily relevant, but here's the script creating the error:
# start talker and listener in background
ros2 run demo_nodes_cpp talker &
ros2 run demo_nodes_cpp listener &
sleep 10
kill %+
kill %-

and the error is "Failed to create log directory: /root/.ros/log"

Originally posted by rkent on ROS Answers with karma: 20 on 2021-10-14
Post score: 0

Original comments
Comment by gvdhoorn on 2021-10-15:
off-topic for your question, but

I'm running a simple talker/listener demo [..] I'm getting an error about half the time when I run the demo

is this an unaltered demo package part of the default ROS 2 set?
If it is, I would encourage you to report the crashes you're seeing, as they should not happen.
Comment by rkent on 2021-10-15:
This can be duplicated, though intermittently,  with the standard components from package demo_nodes_cpp and osrf:/ros:galactic-desktop. Where would I file the bug? The demo files it is based on a pretty simple, the issue is probably in roscpp.
Comment by gvdhoorn on 2021-10-16:
The issue tracker for the demos packages is ros2/demos/issues.

A:

Core dumps are not specific to ROS (1 or 2), managed by it or created by any of the client libraries, but a feature of your OS. See #q260977 for a previous Q&A about them.
They're actually a very useful thing to have after a crash, as they allow a developer to debug a process post-mortem (ie: after it has already crashed and been terminated by the OS).
As to disabling their generation, you could take a look at the Arch documentation on Core dumps.
The Docker image you mention (ros:galactic-ros-core) is based on Ubuntu Focal. Canonical doesn't appear to have any documentation specifically about the configuration of core dumps (that I can find). The ulimit section in the Arch documentation should work however, as it's for Bash in general. This SO post also has some information.

Edit: I'm hesitant to duplicate information that's so easily found already, but to make this answer more self-contained:
To disable core dumps in the current Bash session: ulimit -c 0.
Or edit /etc/security/limits.conf and set soft core for * (ie: all users) to 0 (see again the Arch documentation linked earlier).
And just to reiterate: this is OS-level configuration. Not ROS.

Originally posted by gvdhoorn with karma: 86574 on 2021-10-15
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by rkent on 2021-10-15:
I tried the fix in /etc/security/limits.conf earlier and it did not prevent the core file from appearing. But ulimit -c 0 seems to work when I do it in the current session. Thanks!

