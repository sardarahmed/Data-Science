Q:

roslaunch command does not run when put in crontab

I am setting crontab to let my computer to launch certain ros package when it starts up or reboots.
here is the content I put in crontab -e,
@reboot bash -c '/home/user/launch.sh'
while the launch.sh file simply contains a single roslaunch command,
#!/bin/bash
roslaunch socket_server socket.launch
The above .sh file confirms running fine in terminal, but every time when the pc (re)boots, the roslaunch commmand doesn't run as expected; and I can't even find any records in the sys log file.
Can anybody with experience on cron + ros configuring help?
thanks
clark

Originally posted by clark on ROS Answers with karma: 393 on 2012-05-07
Post score: 3

A:

You need to set up the ROS environment in the shell script.

Originally posted by joq with karma: 25443 on 2012-05-07
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by clark on 2012-05-07:
Thanks for the quick help. You are totally right. After adding "source /opt/ros/electric/setup.bash" into the sh script, it works now
Comment by clark on 2012-05-07:
plus two points for other users who might be interested. First, the @reboot command need to be keyed in via crontab -e rather than sudo crontab -e; Secondly, using !/bin/bash rather !/bin/sh inside the shell script, or else commands like source won't work
Comment by cordic45 on 2023-04-22:
I use crontab to execute "roscore" when the system is started, but crontab -e does not work, and sduo must be added to work normally.
startUp.bash
#!/bin/bash
source /opt/ros/noetic/setup.bash
roscore 

sudo crontab -e
# m h  dom mon dow   commandi
# ┌───────────── minute (0 - 59)
# │ ┌───────────── hour (0 - 23)
# │ │ ┌───────────── day of month (1 - 31)
# │ │ │ ┌───────────── month (1 - 12)
# │ │ │ │ ┌───────────── day of week (0 - 6) (Sunday to Saturday;
# │ │ │ │ │                                       7 is also Sunday on some systems)
# │ │ │ │ │
# │ │ │ │ │
# * * * * *  command_to_execute

@reboot  bash /home/dodo/Desktop/startUp.bash >> /var/log/myjob.log 2>&1

