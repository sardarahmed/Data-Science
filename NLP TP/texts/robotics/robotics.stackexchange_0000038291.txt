Q:

ROS subscriber integration

Hi,
I have a 32-bit C program that sends data over UDP to a windows GUI. I need to integrate a simple ros subscriber node into the program to subscribe to a node publishing a joy message. I've had no luck following the tutorials or methods I've been able to find. What is the normal method for doing such a task?
I've checked a couple of Q/A already, such as: http://answers.ros.org/question/3277/wrap-existing-crrcsim-project-in-ros with no luck.
EDIT:
After making a new project, adding the file to the CMakeLists.txt, and adding ros.h to the c program, I get the following error:
In file included from
/opt/ros/electric/stacks/ros_comm/utilities/rostime/include/ros/time.h:53:0,
from /opt/ros/electric/stacks/ros_comm/clients/cpp/roscpp/include/ros/ros.h:38,
from .../ros_workspace/project_1/src/project_1.c:26:
/opt/ros/electric/stacks/ros_comm/utilities/cpp_common/include/ros/platform.h:55:18:
fatal error: string: No such file or directory

Originally posted by bzt on ROS Answers with karma: 15 on 2012-02-27
Post score: 1

A:

When porting code to ROS you can try to port the software fully or to just write a ROS interface that translates ROS request and calls some interface functions in the software.
When I port code to ROS, what I usually do is:

Create a ROS package using roscreate-pkg.
Copy the source code to the package and make it compile (without any ROS interfacing). This should result in the same program as before.
Add ros stuff, i.e. ros::init, spinning, subscribers/publishers, maybe switch in some ROS features, i.e. using ros::Time, ROS_INFO, etc.

Originally posted by dornhege with karma: 31395 on 2012-02-27
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by bzt on 2012-02-27:
Gotcha, the program works up to step 3, where I need to include ros/ros.h right? How do I include ros.h? Will i make the program with "gcc progam.c -m32" or with a "rosmake program" command ?
Comment by joq on 2012-02-27:
In step 3, you'll need to use rosmake.
Comment by bzt on 2012-02-27:
I've edited my original post to reflect the error I'm now getting after attempting this method.
Comment by dornhege on 2012-02-27:
This is only a suspicion, but you are using a C program in a .c file. This will automatically run gcc (not g++) and thus there is no string (c++) only. Do you need the program to be C or can it be compiled as c++ (using C only code) - then just rename the file to end in .cpp and see.
Comment by bzt on 2012-02-28:
Fixing the headers with "extern "C" {(headers here)}" and converting some data types to c++ solved the issue! (Changing the extension to .cpp) Thanks!

