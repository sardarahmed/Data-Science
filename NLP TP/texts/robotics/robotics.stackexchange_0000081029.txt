Q:

Xacro Error: NoneType object has no attribute getitem

I'm trying to convert my tortoisebot.urdf.xacro file to a tortoisebot.urdf file by running rosrun xacro xacro tortoisebot.urdf.xacro > tortoisebot.urdf When I run this command I get this error:
~/tortoisebot_ws/src/tortoisebot_description/robots$ rosrun xacro xacro tortoisebot.urdf.xacro > tortoisebot.urdf
Traceback (most recent call last):
  File "/opt/ros/indigo/lib/xacro/xacro", line 55, in <module>
    xacro.main()
  File "/opt/ros/indigo/lib/python2.7/dist-packages/xacro/__init__.py", line 696, in main
    eval_self_contained(doc)
  File "/opt/ros/indigo/lib/python2.7/dist-packages/xacro/__init__.py", line 626, in eval_self_contained
    eval_all(doc.documentElement, macros, symbols)
  File "/opt/ros/indigo/lib/python2.7/dist-packages/xacro/__init__.py", line 553, in eval_all
    eval_all(body, macros, scoped)
  File "/opt/ros/indigo/lib/python2.7/dist-packages/xacro/__init__.py", line 609, in eval_all
    result = eval_text(at[1], symbols)
  File "/opt/ros/indigo/lib/python2.7/dist-packages/xacro/__init__.py", line 483, in eval_text
    results.append(handle_expr(lex.next()[1][2:-1]))
  File "/opt/ros/indigo/lib/python2.7/dist-packages/xacro/__init__.py", line 470, in handle_expr
    return eval_expr(lex, symbols)
  File "/opt/ros/indigo/lib/python2.7/dist-packages/xacro/__init__.py", line 444, in eval_expr
    result = eval_term(lex, symbols)
  File "/opt/ros/indigo/lib/python2.7/dist-packages/xacro/__init__.py", line 418, in eval_term
    result = eval_factor(lex, symbols)
  File "/opt/ros/indigo/lib/python2.7/dist-packages/xacro/__init__.py", line 402, in eval_factor
    result = eval_expr(lex, symbols)
  File "/opt/ros/indigo/lib/python2.7/dist-packages/xacro/__init__.py", line 439, in eval_expr
    if lex.peek()[0] == lex.OP:
TypeError: 'NoneType' object has no attribute '__getitem__'

Here is my Xacro file:
<?xml version="1.0"?>

<robot name="tortoisebot" xmlns:xacro="http://www.ros.org/wiki/xacro" >
    <xacro:property name="pi" value="3.14159265" />
    <xacro:property name="body_radius" value="0.17" />
    <xacro:property name="body_height" value="0.2" />
    <xacro:property name="body_mass" value="2.0" />

    <xacro:property name="rear_caster_radius" value="0.01" />
    <xacro:property name="rear_caster_mass" value="0.1" />

    <xacro:property name="wheel_radius" value="0.036" />
    <xacro:property name="wheel_height" value="0.025" />
    <xacro:property name="wheel_mass" value="0.1" />

    <xacro:property name="right_wheel_color" value="${red}" />
    <xacro:property name="left_wheel_color" value="${white}" />
    
    <xacro:macro name="inertia_cylinder" params="mass radius height">
        <inertial>
            <mass value="${mass}"/>
            <inertia ixx="${(${mass} / 12)*((3 * ${radius} * ${radius}) + (${height} * ${height}))}"
                ixy="0.0" ixz="0.0" iyy="${(${mass} / 12)*((3 * ${radius} * ${radius}) + (${height} * ${height}))}"
                iyz="0.0" izz="${(${mass} * ${radius} * ${radius}) / 2}"/>
        </inertial>
    </xacro:macro>

    <xacro:macro name="inertia_sphere" params="mass radius">
        <inertial>
            <mass value="${mass}"/>
            <inertia ixx="${2 * ${mass} * ${radius} * ${radius} / 5}"
                ixy="0.0" ixz="0.0" iyy="${2 * ${mass} * ${radius} * ${radius} / 5}"
                iyz="0.0" izz="${2 * ${mass} * ${radius} * ${radius} / 5}"/>
        </inertial>
    </xacro:macro>

    <xacro:property name="white">
        <material name="white">
            <color rgba="1, 1, 1, 1"/>
        </material>
    </xacro:property>

    <xacro:property name="green">
        <material name="green">
            <color rgba="0.05 0.75 0.05 1"/>
        </material>
    </xacro:property>

    <xacro:property name="black">
        <material name="black">
            <color rgba="1, 1, 1, 1"/>
        </material>
    </xacro:property>

    <xacro:property name="red">
        <material name="red">
            <color rgba="0.75, 0.05, 0.05, 1"/>
        </material>
    </xacro:property>

    <link name="base_link">
        <visual>
            <geometry>
                <cylinder length="${body_height}" radius="${body_radius}"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <cylinder length="${body_height}" radius="${body_radius}"/>
            </geometry>
        </collision>
        
        <xacro:inertia_cylinder mass="${body_mass}" radius="${body_radius}" height="${body_height}" />
        
    </link>

    <link name="rear_caster">
        <visual>
            <geometry>  
                <sphere radius="${rear_caster_radius}"/>
            </geometry>
            
        </visual>

        <collision>
            <geometry>
                <sphere radius="${rear_caster_radius}"/>
            </geometry>
        </collision>

        
        <xacro:inertia_sphere mass="${rear_caster_mass}" radius="${rear_caster_radius}" />
        
    </link>

    <joint name="rear_caster_joint" type="continuous">
        <axis xyz="0 1 0"/>
        <parent link="base_link"/>
        <child link="rear_caster"/>
        <origin rpy="0 0 0" xyz="-0.1 0 -0.1"/>
    </joint>
    <xacro:macro name="wheel" params="prefix reflect">
        <link name="${prefix}_wheel">
            <visual>
                <geometry>  
                    <cylinder length="${wheel_height}" radius="${wheel_radius}"/>
                </geometry>
                <material name="${${prefix}_wheel_color}"/>
            </visual>
            <collision>
                <geometry>
                    <cylinder length="${wheel_height}" radius="${wheel_radius}"/>
                </geometry>
            </collision>

            <xacro:inertia_cylinder mass="${wheel_mass}" radius="${wheel_radius}" height="${wheel_height}" />
        </link>

        <joint name="${prefix}_wheel_joint" type="continuous">
            <axis xyz="0 0 1"/>
            <parent link="base_link"/>
            <child link="${prefix}_wheel"/>

            <origin rpy="${${pi} / 2 * -1} 0 0" xyz="0 ${${reflect} * 0.1175} -0.074"/>
        </joint>
    </xacro:macro>
    <xacro:wheel prefix="right" reflect="-1" />
    <xacro:wheel prefix="left" reflect="1" />

</robot>

{Update}
I removed the portion from my Xacro file above that I'm pretty sure was SDF, so now the entire file should be only URDF/Xacro. I tried rerunning it, but I got the same error as above.
All help is appreciated!
Thanks,
L

Originally posted by luketheduke on ROS Answers with karma: 285 on 2017-05-26
Post score: 0

Original comments
Comment by gvdhoorn on 2017-05-27:\

When I run this command I get this error: I couldn't get it to format correctly

for error text, console copy-pastes, code and urdf/xacros: please use the Preformatted Text button. It's the one with 101010 on it.
Could you please move the contents of the gists to your question body? Thanks.
Comment by gvdhoorn on 2017-05-27:
A quick look at your xacro shows that you are trying to mix urdf and sdf. That is not supported. I wouldn't be surprised if that is the cause of your error.
Comment by luketheduke on 2017-05-27:
I've updated my question with the code inserted. Thanks for your input on sdf I removed the section of the file that I think was SDF and tried rerunning the code with the same error. Any idea as to what is causing this?

A:

Xacro evaluates everything that is inside ${} so the variables inside an expression will be evaluated automatically. As a result xacro doesn't support nested ${}.
For example:
this fails:
<origin rpy="${${pi} / 2 * -1} 0 0" xyz="0 ${${reflect} * 0.1175} -0.074"/>
but this succeeds with the expected result:
<origin rpy="${pi / 2 * -1} 0 0" xyz="0 ${reflect * 0.1175} -0.074"/>
Hope this helps

Originally posted by marguedas with karma: 3606 on 2017-05-27
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by luketheduke on 2017-05-27:
Thanks that fixed the issue!

