Q:

On the second argument of ros::NodeHandle::serviceClient

When do you use ros::NodeHandle::serviceClient with the second argument "persistent" set to "false" ?
I think that when "persistent" is set to "true", ros service performs better(faster)
because there is no disconnection and reconnection between server and client.
So basically, I use ros service client with "persistent == true".
However, this parameter's default value is "false".
I wonder that "persistent == false" performs better in some cases.
What kind of case is it ?
Thanks in advance.

Originally posted by moyashi on ROS Answers with karma: 721 on 2013-12-08
Post score: 0

A:

However, this parameter's default value is "false". I wonder that "persistent == false" performs better in some cases. What kind of case is it ?

This is actually pretty well described on wiki/roscpp/Overview/Services - Persistent Connections:

ROS also allows for persistent connections to services. With a persistent connection, a client stays connected to a service. Otherwise, a client normally does a lookup and reconnects to a service each time. This potentially allows for a client to connect to a different node each time it does a service call, assuming the lookup returns a different node.

Persistent connections should be used carefully. They greatly improve performance for repeated requests, but they also make your client more fragile to service failures. Clients using persistent connections should implement their own reconnection logic in the event that the persistent connection fails.

Originally posted by gvdhoorn with karma: 86574 on 2016-09-28
This answer was ACCEPTED on the original site
Post score: 0

