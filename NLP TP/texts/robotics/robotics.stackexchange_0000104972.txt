Q:

How can I disable all logging to files under ~/.ros but still log to stderr?

I read https://docs.ros.org/en/humble/Concepts/Intermediate/About-Logging.html but that didn't really explain how one would go about it. Is it even possible? I am on Ubuntu 22.04 and I'm on a source build ros_humble.

A:

You can disable node log output with cli argument --disable-external-lib-logs, e.g.:
ros2 run <package> <executable> --ros-args --disable-external-lib-logs`

Similar arguments exist for stdout and rosout:
--disable-stdout-logs
--disable-rosout-logs
When using launch files, the launch script also generates a log file.
By default, the node stdout log is also written to that launch log file.
This can be disabled with output='screen' in the launch file, e.g.:
#!/usr/bin/env python3 
from launch import LaunchDescription
from launch_ros.actions import Node

def generate_launch_description():
    return LaunchDescription([
        Node(
            package='package_name',
            executable='executable_name',
            output='screen',
            arguments=[
              "--ros-args",
              "--disable-external-lib-logs"]
        ),
    ])

However, even then a folder and a launch log file is created in ~/.ros/log.
I found this related question on the ROS Answers site.
I tried the answer by WhatTheActual01 but I didn't succeed to not generate log files that way.
The answer by hsaito works fine though:

Clone and compile nullfs:
sudo apt update
sudo apt install -y git libfuse-dev build-essential
git clone https://github.com/xrgtn/nullfs
cd nullfs/
make nullfs

Make directory for, and run nullfs
mkdir /tmp/empty_log_dir
./nullfs /tmp/empty_log_dir

Set environment variable and run ROS 2:
export ROS_LOG_DIR=/tmp/empty_log_dir
ros2 launch launch_file.launch.py

