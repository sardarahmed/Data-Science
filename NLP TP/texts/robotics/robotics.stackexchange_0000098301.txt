Q:

How to install package from source as system package?

I am trying to set up a docker image which includes some custom source built ROS packages.  Of course, the user of this image should not need to care where these custom ROS packages were built, and should be able to use them by simply running source /opt/ros/foxy/setup.bash, i.e. they behave no different from system packages installed with apt install ros-foxy-....  How should I run my build command (colcon build) such that these custom built packages get installed in a path that can be found by sourcing /opt/ros/foxy/setup.bash?
I've read this answer, however, that requires user to source multiple workspaces which is not ideal.

Originally posted by Rufus on ROS Answers with karma: 1083 on 2021-02-15
Post score: 0

A:

Hello,
If you run colcon build -h you will see all the available options. In this case you should use:
  --install-base INSTALL_BASE
                    The base path for all install prefixes (default:
                    install)

Your command should look like: colcon build --install-base /opt/ros/foxy/ ...

Originally posted by ahcorde with karma: 421 on 2021-02-15
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by gvdhoorn on 2021-02-15:
And of course run colcon with the required permissions once it gets to the install step.
In a Docker build that'll probably not be a problem, as you typically run everything as root there, but for regular use this is important, as otherwise CMake/Python/whatever_builds_the_pkgs will not be able to copy files to the /opt/ros prefix.
Comment by Rufus on 2021-02-15:
Seems --merge-install is also required or else /opt/ros/foxy will be littered with package directories instead of them being placed nicely in the existing lib, include, share directories

