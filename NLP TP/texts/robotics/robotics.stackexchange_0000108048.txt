Q:

Why does URDF use Euler angle to represent rotation?

To describe the rotation between tow links, why does URDF use Euler Angle instead of quaternion or axis-angle to describe the rotation? Since there might be singularity issue or gimbal lock in the Euler Angle rotation.

A:

Euler angles are easier and more intuitive as a human input and the singularity/gimbal lock issues aren't really a concern for static rigid transforms.
It would be an issue for a moving joint with a 3-degree-of-freedom rotation, like if you had a spherical ball joint or free-floating joint that was actuated. I don't think URDF supports spherical joints at all. It does support a floating 6DOF joint. If that were actuated and controlled then gimbal lock could be an issue, but resolution of that would be delegated to whatever library controls the joint and provides the interfaces to the user.
Libraries that do support actuated control of such joints do use quaternions or similar under the hood. See, for example:
https://rbdl.github.io/df/dbe/joint_description.html#joint_singularities

