Q:

How to debug plugins with GDB in ROS

Hi, all !
I am still a novice in debugging. I ran into the problem of writing my own global planner plugin and keeps popping out error, such as the one found on my other question, or the one below not even giving any explicit complain upon crashing:

[move_base-1] process has died [pid 10503, exit code -11 (...)]

I managed to open an external GDB window for debugging following the instruction on this tutorial. At this point it is pretty clear how to debug a certain node, but then my question is, since what I want is to debug a plugin (not the way presented with this question ,duh !!), what should the proper way to do so with GDB? Or do I need to make the plugin as a certain node to better debug it ? Thanks !

Originally posted by Megacephalo on ROS Answers with karma: 106 on 2016-01-30
Post score: 1

A:

You can't run a plugin by itself in gdb; you need to run it as part of a node.
The easiest way to go about this is to run the node which loads your plugin in gdb; in this case that would be move_base. Just edit the launch file which runs move_base to run it inside of gdb.
Depending on the node and the failure case, you may get more output by adding the output="screen" option in your launch file as well.
As a side node, negative exit codes (like -11) indicate the signal that caused your program to exit; signal 11 is segfault. The signal numbers are standardized for all Linux, OSX and POSIX systems, and are widely documented; for example: http://man7.org/linux/man-pages/man7/signal.7.html

Originally posted by ahendrix with karma: 47576 on 2016-01-30
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Megacephalo on 2016-02-15:
Hi ahendrix,
Your answer is truly awesome! I've never heard of such a documentation on Linux signal and it is very useful!
I already added output="screen" before posting this question, so I guess the best way to debug is using ROS_DEBUG_STREAM or write an extra int main to run it as a node. Agree?
Comment by ahendrix on 2016-02-15:
If you already have output="screen", the next step is to run your node in a debugger: http://wiki.ros.org/roslaunch/Tutorials/Roslaunch%20Nodes%20in%20Valgrind%20or%20GDB
Comment by Megacephalo on 2016-04-09:
Hi, ahendrix!
Thank you ! I will try debugging this way. Thank you :) !
Comment by MartinS on 2018-01-09:
Sure, but how do you actually step into the source code of a plugin once you are running the node?  GDB won't follow the pointer.
Comment by ahendrix on 2018-01-10:
@MartinS: that is better asked in a new question, and it looks like you've already done it: https://answers.ros.org/question/279324/how-do-you-step-into-plugins-with-gdb/

