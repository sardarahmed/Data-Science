Q:

Subscribing and Publishing with generic type of message

Hello,
This question is subsequent to this one.
I'm still working on the connexion between Neural Network Simulator (Prométhé) and ROS. Now I know how to retrieve my publisher and subscriber pointers in the Prométhé comunicating functions. But the issue is the following :
When going from Prométhé to ROS, I have Groups of Neurons (i.e. a certain number of activity level <=> a table of floating values between 0 and 1) that I want to put them in  a message to send them through a topic. But I can't know before execution what type of topic will be required because it depends on the link that is drawn in the network (ad the simulator will be compiled for a while).
The problem is equivalent from ROS to Prométhé : to subscribe to a topic, I have to know which type it is to define the callback function.
So is there a way to be transparent from the type of topic (and compatible with C, meaning that I can't use templates) like a function that dynamically determines type or a "generic" type that gathers every other types (a "common_message" type) ?
Or must I define a look-up table / switch case to use the right message depending on the input/output data (considering that I can get a user specified option giving the wanted type) ?

Originally posted by Erwan R. on ROS Answers with karma: 697 on 2012-07-17
Post score: 1

A:

For me that sounds like a design issue, where you don't need such a generic message. Something like an unknown number of activity levels and an unknown number of groups of that can easily be defined as a generic ROS message. Can you give a more concrete example of your data? I think we'll be able to come up with a generic message.

Originally posted by dornhege with karma: 31395 on 2012-07-17
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by joq on 2012-07-17:
I agree. Much better to define a standard ROS message that is flexible enough for your application.
Comment by Erwan R. on 2012-07-19:
Thanks for answering. I think I wasn't precise enough. The problem is not to define an ad-hoc message for the neural activity. The problem is, in the compiled code of the NN simulator, not to know the type of message that will be defined at execution (by user input). A solution is to have a ...
Comment by Erwan R. on 2012-07-19:
switch case on each know ROS type but it's not a robust solution. For example, if in Prométhé I define a link from the simulator to ROS on the /base_controller/command topic with geometry_msgs::Twist type, I want my simulator box to advertise with this type. But if I change my mind and I want to ...
Comment by Erwan R. on 2012-07-19:
publish a TwistWithCovariance message (because it finally fits better), I just want to change the link "msgtype" field (during execution) and not to recompile the whole simulator.
Comment by dornhege on 2012-07-19:
In that case the only way out I see is to use something like @Lorenz' suggestion. With python you might be able to do it cleaner.
Comment by joq on 2012-07-19:
Still seems like a bad idea to me. Type safety for ROS messages is an important feature. It should not be given up lightly.
Comment by Erwan R. on 2012-07-19:
So does it means that any third-party software that want to communicate with ROS and being technically independent from the solution implements a look-up function with hard-coded message type list, to ensure that what's injected is secure ? It sounds quite static to evolutions ...
Comment by joq on 2012-07-19:
I clearly do not understand your question.
Comment by dornhege on 2012-07-19:
I have to admit, I'm not sure, where you need this absolute versatility. You will definitely need to come of with some mapping from your data types to ROS, but usually there is some mapping from the interface types for third-party software that doesn't need to be that generic.
Comment by Erwan R. on 2012-07-19:
@joq : What I'm wondering more generally is : how can ROS interfaces with a third-party software without explicitly using a technical solution ? I know that two programs can communicate through sockets for example, but it means explicitly choosing TCP or UDP protocol, what has been rejected to ...
Comment by Erwan R. on 2012-07-19:
... preserve the transparency to the solution. That's why we choose to insert a tool in the NN simulator that uses ROS publishing and subscribing system. But there are some hidden design issues that address the question of type.
@dornhedge : you're right and I think my solution have to be ...
Comment by Erwan R. on 2012-07-19:
... redesigned to be more specific (the idea was to find the highest common pattern to avoid a ad-hoc solution, but I think it's just impossible regarding the way the two systems are built).
Anyway, many thanks to both of you for taking time to try to help me.
Comment by joq on 2012-07-19:
I think what @dornhege is suggesting is to create a custom ROS message that encapsulates your NN output, perhaps using variable-sized arrays of floats. One or more simple ROS nodes (perhaps in Python) could easily convert the NN output into any specific ROS message you want.

