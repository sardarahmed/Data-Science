Q:

Hydro kinect fake laser for slam

Dear All:
I have a fake laser based on the Xtion Pro. I was running Groovy and it worked perfectly.
I updated to Hydro and I can not see the topic of 2D fake laser.
The code in my launch file is:
<include file="$(find openni_launch)/launch/openni.launch"/> 
<node pkg="nodelet" type="nodelet" name="kinect_laser" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet camera_nodelet_manager"> 
 <param name="scan_height" value="290"/> <!-- height in pixels -->
    <param name="scan_time" value="0.125"/>
    <param name="range_min" value="0.80"/>
    <param name="range_max" value="3.0"/>
    <param name="min_height" value=".10"/>
    <param name="max_height" value="2.0"/>
<remap from="image" to="/camera/depth/image_raw"/> 

<remap from="scan" to="/scan_xtion"/>   
</node>

The topic /scan_xtion shall have the 2D Xtion data, but I can not visualize anything with rostopic echo /scan_xtion.
Do you have any clue.
In advance thank you

Originally posted by acp on ROS Answers with karma: 556 on 2014-01-23
Post score: 0

Original comments
Comment by Athoesen on 2014-01-23:
Can you include the error output?
Comment by acp on 2014-01-23:
Well, there are no errors, it compile quite well, however I cant read the /scan_xtion topic

A:

Well I solved it like this:
1.- cd to the /sandbox directory that has been created by rosws
2.- Add the repository to the overlay, e.g. it is added to ~/working_space/sandbox/.rosinstall
    
    rosws set  -y depthimage_to_laserscan  --git https://github.com/ros-perception/depthimage_to_laserscan.git 

3.- update the rosws
    rosws update depthimage_to_laserscan
4.- source ~/.bashrc 
5.- cd to depthimage_to_laserscan and run cmake . and make

The launch file may look like this:
  <launch>
<include file="$(find openni_launch)/launch/openni.launch"/> 
    <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan" args="image:=/camera/depth/image_raw" respawn="true"> 
       <!--param name="output_frame_id" value="/camera_depth_frame"/-->
       <param name="scan_height" value="290"/> 
        <param name="scan_time" value="0.125"/>
        <param name="range_min" value="0.80"/>
        <param name="range_max" value="3.0"/>
        <param name="min_height" value=".10"/>
        <param name="max_height" value="2.0"/>
        <remap from="/scan" to="/scan_xtion"/>  
    </node>
    </launch>

Then run:
rosrun rviz rviz and the fake kinect can be seen under the topic /scan_xtion

Cheers

Originally posted by acp with karma: 556 on 2014-01-24
This answer was ACCEPTED on the original site
Post score: 0

