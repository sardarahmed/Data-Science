Q:

message_filters::sync_policies::ApproximateTime with PointCloud and custom message not working

Hi,
I want to sync and process a topic with PointCloud messages together with a self created message type called IntList, which contains a Header field with timestamps and a data field (int32[ ]) with RGB image coordinates from which I want to extract PointCloud information) published by another topic ().
For this I want to use the message_filters package with the ApproximateTime policy.
Here is my node (which I created based on the instructions here):
#include <ros/ros.h>
#include <pcl_ros/point_cloud.h>
#include <pcl/point_types.h>
#include <image_processing/IntList.h>
#include <message_filters/subscriber.h>
#include <message_filters/synchronizer.h>
#include <message_filters/sync_policies/approximate_time.h>

typedef pcl::PointCloud<pcl::PointXYZ> PointCloud;
typedef image_processing::IntList IntList;

using namespace message_filters;

void callback(const PointCloud::ConstPtr& pclMsg, const image_processing::IntList::ConstPtr& coordsMsg)
{
 //Do something with the coordinates 
 ROS_INFO("Recieved coordinates: (%d,%d) ", coordsMsg->data[0], coordsMsg->data[1]);

 //Do something with the point cloud
 ROS_INFO("Cloud width: %d, cloud height: %d", pclMsg->width, pclMsg-->height);

 //Do something more
}

int main(int argc, char** argv)
{
 printf("sync node main started");
 ros::init(argc, argv, "world_coords_extraction");
 ros::NodeHandle nh;

 message_filters::Subscriber<PointCloud> pcl_sub(nh, "/camera/depth_registered/points", 1);
 message_filters::Subscriber<IntList> coords_sub(nh, "/detected_coordinates", 1);

 typedef sync_policies::ApproximateTime<PointCloud, IntList> MySyncPolicy;

 Synchronizer<MySyncPolicy> sync(MySyncPolicy(100), pcl_sub, coords_sub);

 sync.registerCallback(boost::bind(&callback, _1, _2));
 
 ros::spin();

 return 0;
}

I have tested this scenario with topics published by a rosbag file. I looked at the timestamps and they are more than a bit apart, so I increased the queue size parameter of the synchronizer (sync(MySyncPolicy(100), ... )).
But --> as you can see, I added a simple printf at the beginning of the main. When starting the node, not even this printf is displayed on the console, so there must be another problem before the message_filter code is reached, right?
Just to ensure the  the general functionality of the published topics and the subscription to these topics, I created single subscribers and callbacks for each of those topics, like this:
ros::Subscriber sub_coords = nh.subscribe("/detected_coordinates", 10, callback);
ros::Subscriber sub_pc = nh.subscribe<PointCloud>("/camera/depth_registered/points", 1, callback);

This is working fine.
Does anyone know what I am doing wrong with the message_filters::sync_policies::ApproximateTime code?
Thanks in advace.

Originally posted by UllusParvus on ROS Answers with karma: 56 on 2017-04-11
Post score: 1

Original comments
Comment by aihanbing on 2019-01-08:
hello, I also met the same situation, would you mind to share the solution? thx

A:

(Although I've not yet personally confirmed) This thread seems to be talking about exactly the same issue and the solution is to use the right message type.

Originally posted by 130s with karma: 10937 on 2017-10-03
This answer was ACCEPTED on the original site
Post score: 0

