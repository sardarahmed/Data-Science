Q:

How to make tagged union (aka sum type) in ROS message?

I would like the equivalent of protobuf's Oneof in my ROS messages. Is there a pattern for how to replicate this functionality in a ROS message?

A:

rosidl doesn't have a native way to support that. The pattern most commonly used is to do variable length arrays of each data type. It doesn't enforce the one part but you can gather a few different types.
TypeA[] field_one
TypeB[] field_two
TypeC[] firld_three

Then you code which would have done a switch based on which type is in the OneOf now will do if field_one ... else if field_two ... else ...
You should define behavior for multiple elements and if none are populated.
This works without needing to define a whole new construct, and let's us keep direct member based access for all the fields.

