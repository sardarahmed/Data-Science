Q:

Unusual Robot Behavior in RViz when Launching Multiple Robots in Gazebo and ROS 2

I am currently facing an issue when attempting to launch two robots simultaneously in Gazebo Classic using ROS 2. In my setup, the first robot (Frank's Emika) is successfully launched in a Gazebo world and operates smoothly with MoveIt. Additionally, there is a second custom robot that functions correctly when launched on its own.
The problem arises when I attempt to launch the second robot in the same Gazebo world where the panda robot is already running.I placed the second robot under the namespace /r1. In this scenario, the panda robot starts exhibiting an unusual twitching behavior in RViz (not in Gazebo itself), shown by an oscillating motion of the joints returning to their initial positions. Although both robots function properly and can be controlled independently when placed in the same world.
Observation in RViz:

This graph output displays the position of joint 2 of the Panda robot. In this graph, -1.5 represents the current position, and 0 corresponds to the initial position when I launched the Panda robot. The plot is similar for all the other joints.
Here is the console output on the panda robots terminal when i launch the second robot:
[gzserver-1] [INFO] [1706790610.766430316] [gazebo_ros2_control]: Loading gazebo_ros2_control plugin
[gzserver-1] [INFO] [1706790610.822027052] [r1.gazebo_ros2_control]: Starting gazebo_ros2_control plugin in namespace: /r1
[gzserver-1] [INFO] [1706790610.823049610] [r1.gazebo_ros2_control]: Starting gazebo_ros2_control plugin in ros 2 node: gazebo_ros2_control
[gzserver-1] [INFO] [1706790610.823101325] [r1.gazebo_ros2_control]: Loading parameter files /home/vishalhridwin/temp_ws/install/catcher_description/share/catcher_description/config/mel_controller.yaml
[gzserver-1] [INFO] [1706790610.864285255] [r1.gazebo_ros2_control]: connected to service!! robot_state_publisher
[gzserver-1] [INFO] [1706790610.866664274] [r1.gazebo_ros2_control]: Received urdf from param server, parsing...
[gzserver-1] [INFO] [1706790610.886319189] [r1.gazebo_ros2_control]: Loading joint: catch_arm1
[gzserver-1] [INFO] [1706790610.886392803] [r1.gazebo_ros2_control]:    State:
[gzserver-1] [INFO] [1706790610.886421568] [r1.gazebo_ros2_control]:         position
[gzserver-1] [INFO] [1706790610.886445826] [r1.gazebo_ros2_control]:         velocity
[gzserver-1] [INFO] [1706790610.886465964] [r1.gazebo_ros2_control]:         effort
[gzserver-1] [INFO] [1706790610.886486585] [r1.gazebo_ros2_control]:    Command:
[gzserver-1] [INFO] [1706790610.886505581] [r1.gazebo_ros2_control]:         position
[gzserver-1] [INFO] [1706790610.886551886] [r1.gazebo_ros2_control]:         velocity
[gzserver-1] [INFO] [1706790610.886589954] [r1.gazebo_ros2_control]: Loading joint: catch_arm2
[gzserver-1] [INFO] [1706790610.886614122] [r1.gazebo_ros2_control]:    State:
[gzserver-1] [INFO] [1706790610.886634775] [r1.gazebo_ros2_control]:         position
[gzserver-1] [INFO] [1706790610.886670389] [r1.gazebo_ros2_control]:         velocity
[gzserver-1] [INFO] [1706790610.886703765] [r1.gazebo_ros2_control]:         effort
[gzserver-1] [INFO] [1706790610.886728126] [r1.gazebo_ros2_control]:    Command:
[gzserver-1] [INFO] [1706790610.886747158] [r1.gazebo_ros2_control]:         position
[gzserver-1] [INFO] [1706790610.886779746] [r1.gazebo_ros2_control]:         velocity
[gzserver-1] [INFO] [1706790610.886805900] [resource_manager]: Initialize hardware 'GazeboSystem' 
[gzserver-1] [INFO] [1706790610.886848819] [resource_manager]: Successful initialization of hardware 'GazeboSystem'
[gzserver-1] [INFO] [1706790610.886887136] [resource_manager]: 'configure' hardware 'GazeboSystem' 
[gzserver-1] [INFO] [1706790610.886906218] [resource_manager]: Successful 'configure' of hardware 'GazeboSystem'
[gzserver-1] [INFO] [1706790610.886924245] [resource_manager]: 'activate' hardware 'GazeboSystem' 
[gzserver-1] [INFO] [1706790610.886941041] [resource_manager]: Successful 'activate' of hardware 'GazeboSystem'
[gzserver-1] [INFO] [1706790610.887021263] [r1.gazebo_ros2_control]: Loading controller_manager

[gzserver-1] [WARN] [1706790611.019279699] [r1.gazebo_ros2_control]:  Desired controller update period (0.00769231 s) is slower than the gazebo simulation period (0.001 s).
[gzserver-1] [INFO] [1706790611.022298827] [r1.gazebo_ros2_control]: Loaded gazebo_ros2_control.
[gzserver-1] [INFO] [1706790611.163636897] [r1.diff_drive]: Wheel pair 1 separation set to [0.800000m]
[gzserver-1] [INFO] [1706790611.163792415] [r1.diff_drive]: Wheel pair 1 diameter set to [0.261000m]
[gzserver-1] [INFO] [1706790611.203814186] [r1.diff_drive]: Subscribed to [/r1/cmd_vel]
[gzserver-1] [INFO] [1706790611.240743795] [r1.diff_drive]: Advertise odometry on [/r1/odom]
[gzserver-1] [INFO] [1706790611.302695382] [r1.diff_drive]: Publishing odom transforms between [odom] and [base_link]
[gzserver-1] [INFO] [1706790611.303161972] [r1.diff_drive]: Publishing wheel transforms between [base_link], [wheel1j] and [wheel4j]
[gzserver-1] [INFO] [1706790611.303193262] [r1.diff_drive]: Publishing wheel transforms between [base_link], [wheel3j] and [wheel2j]
[gzserver-1] [INFO] [1706790611.833345190] [r1.controller_manager]: Loading controller 'joint_state_broadcaster'
[gzserver-1] [INFO] [1706790611.981875822] [r1.controller_manager]: Setting use_sim_time=True for joint_state_broadcaster to match controller manager (see ros2_control#325 for details)
[gzserver-1] [INFO] [1706790612.056728698] [r1.controller_manager]: Configuring controller 'joint_state_broadcaster'
[gzserver-1] [INFO] [1706790612.056936313] [r1.joint_state_broadcaster]: 'joints' or 'interfaces' para
meter is empty. All available state interfaces will be published
[gzserver-1] [INFO] [1706790614.947369212] [r1.controller_manager]: Loading controller 'mel_catcher_controller'
[gzserver-1] [WARN] [1706790615.110404934] [r1.mel_catcher_controller]: [Deprecated]: "allow_nonzero_velocity_at_trajectory_end" is set to true. The default behavior will change to false.
[gzserver-1] [INFO] [1706790615.110914849] [r1.controller_manager]: Setting use_sim_time=True for mel_catcher_controller to match controller manager (see ros2_control#325 for details)
[gzserver-1] [INFO] [1706790615.183666240] [r1.controller_manager]: Configuring controller 'mel_catcher_controller'
[gzserver-1] [INFO] [1706790615.193009128] [r1.mel_catcher_controller]: No specific joint names are used for command interfaces. Using 'joints' parameter.
[gzserver-1] [INFO] [1706790615.193091370] [r1.mel_catcher_controller]: Command interfaces are [position velocity] and state interfaces are [position velocity].
[gzserver-1] [INFO] [1706790615.193130146] [r1.mel_catcher_controller]: Using 'splines' interpolation method.
[gzserver-1] [INFO] [1706790615.199339760] [r1.mel_catcher_controller]: Controller state will be published at 50.00 Hz.
[gzserver-1] [INFO] [1706790615.223281978] [r1.mel_catcher_controller]: Action status changes will be monitored at 20.00 Hz.

Let me know if I could provide any other info. My guess is, it has something to do with the time synchronization b/w the two robot's controllers, but not sure what to do.

A:

I have finally realised the problem, which lies within the diff drive plugin, specifically <publish_odom_tf> parameter (odom is still published with the<publish_odom> parameter). I've now set it to false since it was also publishing to the /tf topic. This publication was interfering with the robot state publisher's data to /tf causing RViz to continuously switch between two conflicting TF data sets, resulting in twitching behaviour.
<gazebo>
  <plugin name="diff_drive" filename="libgazebo_ros_diff_drive.so">
      <ros>
        <namespace>$(arg robot_namespace)</namespace>
        <remapping>cmd_vel:=cmd_vel</remapping>
        <remapping>odom:=odom</remapping>
      </ros>
      <legacy_mode>false</legacy_mode>
      <update_rate>200.0</update_rate>
      <num_wheel_pairs>2</num_wheel_pairs>
      <left_joint>wheel4j</left_joint>
      <left_joint>wheel2j</left_joint>
      <right_joint>wheel3j</right_joint>
      <right_joint>wheel1j</right_joint>
      <wheel_separation>0.8</wheel_separation>
      <wheel_diameter>0.261</wheel_diameter>
      <robot_base_frame>base_link</robot_base_frame>
      <max_wheel_torque>50</max_wheel_torque>
      <command_topic>cmd_vel</command_topic>
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <publish_odom_tf>false</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>
      <publish_odom>true</publish_odom>
      <max_wheel_acceleration>2.0</max_wheel_acceleration>
       <!-- 0 for Encoder, 1 for world :odom source-->
      <odometry_source>0</odometry_source>
  </plugin>
</gazebo>

Alternate solution, changing the odometry source from encoder to world, solved the issue as well.

