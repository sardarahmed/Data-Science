Q:

Nodehandle destroyed and shutdown the ros node

Hi all
I was wondering what would happen to the previously created subscriptions and publications and services after the nodehandle is destroyed? I have experieced such case: create a nodehandle in the constructor of the class and in my main() I just create a object of the class. The constructor will be called when the object is created and the nodehandle will experience starting the node, subscribe and publish, and shutting down the node as the life of circle of the nodehande is within the constructor and after that the nodehandle (lets assume it is the only one nodehandle in this example) will be destroyed and the shutdown() will be invoked.
Will this work? Will the publish and subcribe work in this way below? Thank you all.
Class A {
A
{
ros::NodeHandle private_nh("~");
pub = private_nh.advertise...
sub_ = private_nh.subscribe...
}
}
int main()
{
ros::init(...);
A a;
ros::spin();
}

Originally posted by dalishi on ROS Answers with karma: 89 on 2014-03-19
Post score: 1

Original comments
Comment by dalishi on 2014-03-19:
The nodehandle declared in the constructor should end its life cycle (destroyed) after the constructor function has been successfully executed, which according to the http://wiki.ros.org/roscpp/Overview/Initialization%20and%20Shutdown, the destroy of last nodehandle instance will kill all open subscriptions, publications, service calls, and service servers. Please correct me if I am wrong.

A:

You can always make sure there exists another NodeHandle outside of your class, e.g. in the main function, which is initialized before you create the object and lives as long as you want the node to live. However, as @Wolf points out, I see no benefit in not rather storing a node handle as a (private) member of your class and avoid potential bugs of your class depending on the existance of an external node handle.

Originally posted by demmeln with karma: 4306 on 2014-03-20
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by dalishi on 2014-03-20:
Hi demmeln, thanks for your reply. The reason I raised this problem is I have seen NavfnRos as in navfn_ros.cpp of the navigation stack, it declared temporary NodeHandle in the constructor and no other member NodeHandle nor external NodeHandle in the main(), which confused me. I will take your advice.

