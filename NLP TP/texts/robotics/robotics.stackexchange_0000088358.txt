Q:

Get raw network data of a ros topic

Hey guys,
I try to get the raw data of a topic in ros for some days now. My Problem is, that I receive a complex Message Type from a topic and I have to serialize its data to a <uint8_t>vector to fill the payload of a network package and send it to another application.
If I subscribe the topic, I only get a ConstPtr& to the specific message type and because it's a complex type which change it's size at runtime I can't use simply memcpy() to serialize the data. Of course I can serialize the data with some for loops, but this isn't a smart way to do it.
Instead of deserializing the data by the subscriber, is it possible to get the serialized raw frames directly from the topic?
So I have my subscriber:
ros::NodeHandle n;

ros::Subscriber sub = n.subscribe("topic", 1000, &callback);

and my callnack function:

void
Listener::callback(SpecialDataType::ConstPtr&
msg)
{ //should serialize data and forward it }

If it is possible to just get the raw eth frame of the topic, I'll only need copy the raw frame in my new payload and send it.
Do you have an idea how to achieve a good solution to such a problem?

Originally posted by Felix394 on ROS Answers with karma: 5 on 2018-08-06
Post score: 0

A:

It's still unclear to me why you want to do this (but then again, perhaps that is not important): but if I understand you correctly, you could take a look at ShapeShifter to create a generic subscriber. That subscriber has access to the raw data bytes.
See also the ros_type_introspection package for some examples (such as How to create a generic Topic Subscriber) and convenience classes that make this sort of thing somewhat easier to do.

Edit:

If it is possible to just get the raw eth frame of the topic [..]

You're probably aware that TCP streams != ethernet frames, so what you suggest is not directly possible without some knowledge of how the network stack on the publishing side fragmented the stream.

Originally posted by gvdhoorn with karma: 86574 on 2018-08-07
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by gvdhoorn on 2018-08-07:
Note also that this question has been asked multiple times. Using google fi: generic subscriber site:answers.ros.org.
Comment by Felix394 on 2018-08-08:
It looks like a solution, which will fix my problem! Thanks a lot! :)

