Q:

Cannot control 2x UR10 at once with ur_robot_driver

I am using the Universal Robot Driver for ROS to control independently two UR10 robots (with their own teach pendant), and it works fine.
However, I have tried to control them both at the same time with a launch file derived from this thread, and the launch aborts when the terminal complains a port is already used.
I traced it back to PORT and RT_PORT being hard-coded in driver.py of fmauch's ur_driver package.
How are we supposed to control several arms at once if some ports cannot be changed?
Here is the launch file:
<?xml version="1.0"?>
<launch>

 <group ns="astro">
   <arg name="prefix" default="astro_" />
   <arg name="limited" default="false"/>
   <arg name="robot_ip" default="192.168.1.77"/>
   <arg name="kinematics_config" default="$(find ur_description)/config/ur10_default.yaml"/>
   <arg name="reverse_port" default="50001"/>
   <arg name="script_sender_port" default="50003"/>
   <arg name="controllers" default="joint_state_controller scaled_pos_joint_traj_controller speed_scaling_state_controller force_torque_sensor_controller" doc="Controllers that are activated by default."/>
   <arg name="stopped_controllers" default="pos_joint_traj_controller joint_group_vel_controller"/>
  <arg name="controller_config_file" default="$(find ur_robot_driver)/config/ur10_controllers.yaml"/>
   <arg name="headless_mode" default="false"/>

  <include file="$(find ur_bringup)/launch/ur10_bringup.launch">
   <arg name="limited" value="$(arg limited)"/>
   <arg name="robot_ip" value="$(arg robot_ip)"/>
  </include>
</group>

<group ns="nono">
   <arg name="prefix" default="nono_" />
   <arg name="limited" default="false"/>
   <arg name="robot_ip" default="192.168.1.2"/>
   <arg name="kinematics_config" default="$(find ur_description)/config/ur10_default.yaml"/>
   <arg name="reverse_port" default="50002"/>
   <arg name="script_sender_port" default="50004"/>
   <arg name="controllers" default="joint_state_controller scaled_pos_joint_traj_controller speed_scaling_state_controller force_torque_sensor_controller"/>
   <arg name="stopped_controllers" default="pos_joint_traj_controller joint_group_vel_controller"/>
  <arg name="controller_config_file" default="$(find ur_robot_driver)/config/ur10_controllers.yaml"/>
   <arg name="headless_mode" default="false"/>

  <include file="$(find ur_robot_driver)/launch/ur10_bringup.launch">
   <arg name="limited" value="$(arg limited)"/>
   <arg name="robot_ip" value="$(arg robot_ip)"/>
  </include>
</group>

</launch>

Edit: Found by gvdhoorn: $(find ur_robot_driver) instead of $(find ur_bringup). Updated above and the log file below as well.
And here is the log output:

This code block was moved to the following github gist:
https://gist.github.com/answers-se-migration-openrobotics/96abed04c520cd2926b445df1d9fbf00

In this case, astro is running external control with a port set to 50003 and nono is running with the port set to 50004.
Updated launch file which works:
<?xml version="1.0"?>
<launch>

 <group ns="astro">
   <arg name="prefix" default="astro_" />
   <arg name="limited" default="false" doc="Use the description in limited mode (Every axis rotates from -PI to PI)"/>
   <arg name="robot_ip" default="192.168.1.77" doc="IP address by which the robot can be reached."/>
   <arg name="kinematics_config" default="$(find ur_description)/config/ur10_default.yaml" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>
   <arg name="reverse_port" default="50001" doc="Port that will be opened by the driver to allow direct communication between the driver and the robot controller."/>
   <arg name="script_sender_port" default="50003" doc="The driver will offer an interface to receive the program's URScript on this port. If the robot cannot connect to this port, `External Control` will stop immediately."/>
   <arg name="controllers" default="joint_state_controller scaled_pos_joint_traj_controller speed_scaling_state_controller force_torque_sensor_controller" doc="Controllers that are activated by default."/>
   <arg name="stopped_controllers" default="pos_joint_traj_controller joint_group_vel_controller" doc="Controllers that are initally loaded, but not started."/>
  <arg name="controller_config_file" default="$(find ur_robot_driver)/config/ur10_controllers.yaml" doc="Config file used for defining the ROS-Control controllers."/>
   <arg name="headless_mode" default="false" doc="Automatically send URScript to robot to execute. On e-Series this does require the robot to be in 'remote-control' mode. With this, the URCap is not needed on the robot."/>
   <arg name="robot_description_file" default="$(find ur_description)/launch/ur10_upload.launch" doc="Robot description launch file."/>

  <include file="$(find ur_robot_driver)/launch/ur_common.launch" pass_all_args="true">
   <arg name="use_tool_communication" value="false"/>
  </include>
</group>

<group ns="nono">
   <arg name="prefix" default="nono_" />
   <arg name="limited" default="false" doc="Use the description in limited mode (Every axis rotates from -PI to PI)"/>
   <arg name="robot_ip" default="192.168.1.2" doc="IP address by which the robot can be reached."/>
   <arg name="kinematics_config" default="$(find ur_description)/config/ur10_default.yaml" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>
   <arg name="reverse_port" default="50002" doc="Port that will be opened by the driver to allow direct communication between the driver and the robot controller."/>
   <arg name="script_sender_port" default="50004" doc="The driver will offer an interface to receive the program's URScript on this port. If the robot cannot connect to this port, `External Control` will stop immediately."/>
   <arg name="controllers" default="joint_state_controller scaled_pos_joint_traj_controller speed_scaling_state_controller force_torque_sensor_controller" doc="Controllers that are activated by default."/>
   <arg name="stopped_controllers" default="pos_joint_traj_controller joint_group_vel_controller" doc="Controllers that are initally loaded, but not started."/>
  <arg name="controller_config_file" default="$(find ur_robot_driver)/config/ur10_controllers.yaml" doc="Config file used for defining the ROS-Control controllers."/>
   <arg name="headless_mode" default="false" doc="Automatically send URScript to robot to execute. On e-Series this does require the robot to be in 'remote-control' mode. With this, the URCap is not needed on the robot."/>
   <arg name="robot_description_file" default="$(find ur_description)/launch/ur10_upload.launch" doc="Robot description launch file."/>

  <include file="$(find ur_robot_driver)/launch/ur_common.launch" pass_all_args="true">
   <arg name="use_tool_communication" value="false"/>
  </include>
</group>

</launch>

Many thanks for your help!

Originally posted by argargreg on ROS Answers with karma: 15 on 2020-11-05
Post score: 0

A:

I traced it back to PORT and RT_PORT being hard-coded in driver.py of fmauch's ur_driver package.

You are using a deprecated driver (ie: ur_driver). You should not do that.
Note how you include the wrong file:

<include file="$(find ur_bringup)/launch/ur10_bringup.launch">

the Q&A you refer to (#q339076) does not use that file, it includes a file from a different package (ie: the new driver):

<include file="$(find ur_robot_driver)/launch/ur5_bringup.launch"> 

Note the difference: ur_bringup (wrong) versus ur_robot_driver. (correct)

Edit:

NODES

  /astro/
    [..]
    ur_driver (ur_driver/driver.py)

you are still starting the wrong driver. ur_driver does not work with CB3 nor e-Series controllers, and is deprecated.

Originally posted by gvdhoorn with karma: 86574 on 2020-11-05
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by argargreg on 2020-11-06:
Thanks for your answer. You were right, but the launch still fails unfortunately. I have updated my post with the new log file. Any idea?
Comment by gvdhoorn on 2020-11-06:
Please review your .launch file: you are still includeing the wrong file from ur_bringup.
Comment by argargreg on 2020-11-06:
Apologies, I had updated one of the robots and not the other one... Silly me! I've also taken the opportunity to change the included file from ur10_bringup.launch to ur_common.launch which is what my original independent launch files were invoking - with pass_all_arguments set to true. It did the trick - I simply had to prefix all the topics and service names with /astro/ and /nono/ and it worked first try after this mod. Cheers!

