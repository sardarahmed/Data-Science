Q:

How can I pass a system plugin in my launch file?

How can I pass a system plugin in my launch file?
-s libgazebo_ros_api_plugin.so

<launch>

  <!-- roslaunch arguments -->
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>  

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rrbot_gazebo)/worlds/MyWorldfile.world" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="false"/>
  </include>

  <!--node pkg="turtlebot_teleop" type="turtlebot_teleop_key" name="turtlebot_teleop_keyboard"  output="screen">
    <remap from="turtlebot_teleop_keyboard/cmd_vel" to="cmd_vel"/>
  </node-->

</launch>

Originally posted by rnunziata on Gazebo Answers with karma: 107 on 2013-11-12
Post score: 0

A:

ROS can't directly run gazebo because gazebo is a stand alone package. The gazebo_ros package works around this limitation by wrapping the gazebo executable inside a shell script. Only a few command line arguments are exposed if you use the empty_world.launch file.
You can pass in your own command line arguments using:
<node name="gazebo" pkg="gazebo_ros" type="gazebo" respawn="false" output="screen"
        args="-s <put_your_system_plugin_here.so>" />

To completely replace your example, you'd need:
<param name="/use_sim_time" value="true" />
<node name="gazebo" pkg="gazebo_ros" type="debug" respawn="false" output="screen" args="-u $(find rrbot_gazebo)/worlds/MyWorldfile.world"/>

Originally posted by nkoenig with karma: 7676 on 2013-11-13
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by rnunziata on 2013-11-14:
I think you are saying I can use  args="-u $(find rrbot_gazebo)/worlds/MyWorldfile.world -s <plugin.so>"
Comment by rnunziata on 2013-11-14:
Are you saying I can pass

