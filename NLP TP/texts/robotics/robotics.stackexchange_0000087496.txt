Q:

How can I install ROS Melodic with Python3?

I need to use ROS with a library that does not support Python 2, which is over a decade old at this point.
I'm finding mixed information about Python 3 support in ROS Melodic.
I'm installing from source using the instructions on the wiki.
I used Python 3 to install the initial packages
sudo pip3 install -U rosdep rosinstall_generator wstool rosinstall

After setting up my locale correctly, I got up to the point where wstool has initialised the standalone workspace.
But after that I run rosdep to install all the dependencies, and I see a lot of Python 2 packages scrolling by.
rosdep install --os=debian:stretch --from-paths src --ignore-src --rosdistro melodic --skip-keys=sbcl -y

Is there a way ROS Melodic can run on Python 3?
It might be worth mentioning that I could not care less about what the whole system runs on, as long as I can have a single Python 3 node to receive some messages and use this particular Python library. So if I can install rospy on Python 3 that should be enough I think?

Originally posted by pepijndevos on ROS Answers with karma: 57 on 2018-06-22
Post score: 3

A:

The rosdep install step would install python 2 versions of the package since that's how the dependencies are defined. Instead of hunting down the list of dependencies and installing python 3 version of each, it might be easier to just start building and install the missing python 3 package if there is an error. You will need to set the env variable ROS_PYTHON_VERSION to 3 when building to force python 3 otherwise by default it picks python 2.
Also if you just want basic functionality, you probably want to use the ROS-Comm build as described on the Installation page.

Originally posted by kartikmohta with karma: 308 on 2018-06-22
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by pepijndevos on 2018-06-23:
The installation worked after installing empy, but it seems messages are not properly generated. On python 3 there is no module named geometry_msgs, and in Python 2 the module geometry_msgs has no msg submodule.
Comment by kartikmohta on 2018-06-23:
The ROS-Comm meta-package does not contain the geometry_msgs package. You can add the extra packages you want to the rosinstall_generator line when generating your workspace, for example use rosinstall_generator ros_comm geometry_msgs --rosdistro melodic --deps --tar for adding geometry_msgs

