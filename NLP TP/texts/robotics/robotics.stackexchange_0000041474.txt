Q:

How to install a stack and package manually in Fuerte?

Hi.
I'm trying to install the rosbridge package from the brown_remotelab stack. The tutorials and answers that I've found on the web give more-or-less the following procedure for doing this:
# Enter directory where my stacks are kept
roscd
# Checkout repository
svn co http://brown-ros-pkg.googlecode.com/svn/trunk/distribution/brown_remotelab
# Enter directory of package
cd brown_remotelab/rosbridge
# Build package and it's dependencies
rosmake --rosdep-install

This doesn't work for me.
For starters when I try to run rosmake --rosdep-install I get the error message:
rosmake: error: no such option: --rosdep-install

So it looks like the --rosdep-install option is deprecated. Also if I try running without that option I get:
[ rosmake ] rosmake starting...
[ rosmake ] No package or stack specified.  And current directory 'rosbridge' is not a package name or stack name.
[ rosmake ] Packages requested are: []
[ rosmake ] Logging to directory /root/.ros/rosmake/rosmake_output-20120619-160854
[ rosmake ] Expanded args [] to:
[]
[ rosmake ] ERROR: No arguments could be parsed into valid package or stack names.

Similarly, if I try to use roscd, rospackage or rosstack on the newly downloaded stack and packages I get errors like
roscd: No such package/stack 'rosbridge'

or
[rosstack] Error: stack/package brown_remotelab not found

So it looks like ROS doesn't know where to find them. This is after re-sourcing my setup.bash.
In short: What is the complete procedure for downloading and installing a ROS stack and package from source in ROS Fuerte?

Originally posted by Shum on ROS Answers with karma: 1 on 2012-06-18
Post score: 1

Original comments
Comment by Erwan R. on 2012-06-18:
In my opinion, you should first "roscreate-pkg" with the corresponding name and then svn checkout in this folder. This way the package will be known by ros and rosmake can work (not tested on fuerte).
Comment by Lorenz on 2012-06-18:
You only call roscreate-pkg when you really want to create a new package, not when you check something out. It wouldn't help anyway since it seems like the checkout was simply not in the ROS_PACKAGE_PATH.
Comment by Erwan R. on 2012-06-19:
Ok, right, thanks for bringing some light on that.

A:

You didn't put the checkout into your ros workspace. The cleanest way of managing your workspace is probably by using rosws. You can install it with
sudo apt-get install python-pip
sudo pip install -U rosinstall

Now you can set up a ros workspace:
rosws init ~/ros_workspace /opt/ros/fuerte

Now source the newly generated setup.bash:
source ~/ros_workspace/setup.bash

You can also replace the line source /opt/ros/fuerte/setup.bash by the line above to always use your workspace. Just don't forget to remove setting of the variable ROS_WORKSPACE if you do so in your .bashrc since that is done by rosws' setup.bash.
Now add the repository you want to check out:
rosws set brown_remotelab "http://brown-ros-pkg.googlecode.com/svn/trunk/distribution/brown_remotelab" --svn
rosws update brown_remotelab

Source ~/ros_workspace/setup.bash again or open a new terminal to make sure that your ROS_PACKAGE_PATH is updated and try running
rosmake brown_remotelab

rosmake --rosdep-install is not supported in Fuerte anymore. See this question.

Originally posted by Lorenz with karma: 22731 on 2012-06-18
This answer was ACCEPTED on the original site
Post score: 7

