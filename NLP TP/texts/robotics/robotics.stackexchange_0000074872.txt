Q:

Message definition namespaces

In message definition naming is the syntax always:
package/messagedef.msg
Suppose one wants to have sets of messages for different vehicles (perhaps the hardware is sufficiently different that this makes sense). Is this possible?
package/vehicle1/messagedef.msg
package/vehicle2/messagedef.msg
Or even
package/vehicle1/status/electrical/messagedef.msg
package/vehicle2/status/electrical/messagedef.msg
Or does message naming not work in this way?
Thanks,
-Val

Originally posted by vschmidt on ROS Answers with karma: 242 on 2016-06-28
Post score: 0

A:

According to the ROS Messages page:

Message types use standard ROS naming
conventions: the name of the package +
/ + name of the .msg file. For
example, std_msgs/msg/String.msg has
the message type std_msgs/String.

In your example, it could make sense to make a generic vehicle message say pkgname/GenericVehicle.msg and then create vehicle specific messages for vehicle1 and vehicle2. These specific messages could then have a field entry that is the pkgname/GenericVehicle.msg. In this way you could compose messages that hierarchically depend on each other such that, when used in a client library, could become something like:
msg = pkgname.msg.Vehicle2()
msg.status.electrical.core_electrical_value = 1.0

Originally posted by jarvisschultz with karma: 9031 on 2016-06-28
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by vschmidt on 2016-06-29:
Ooo. I didn't see that in the ROS Messages page. And your idea makes sense to me I think. Thanks!

