Q:

ROS2 add parameter to c++ and launch file

So I'm a novice when it comes to ROS2, but have some experience with ROS1. I've been trying to convert an existing project from ROS kinetic to ROS eloquent. In this project I've made a node in c++ that I would like to add a parameter to. In ROS1 this could be done using:
ros::param::param<bool>("/use_simulation_mode", simulation_mode_, false);

And then simply adding it to the launch file like so:
<param name="/use_simulation_mode" type="bool" value="true"/>

(and yes, it's a global parameter. I have learned this is no longer possible in ROS2, so I'll have to find another way there)
This no longer works with ROS2. As I've said, I'm quite the novice when it comes to ROS2 and am struggling to find information out there on how I can accomplish this. If anybody knows how to accomplish this and could show me, or point me in the direction of a tutorial or something the like, that would be much appreciated.

Originally posted by Joe28965 on ROS Answers with karma: 1124 on 2020-03-26
Post score: 0

A:

The steps that I have taken generally are:
Steps:

Create yaml file with params and place in appropriate directory.
Load yaml file in the launch file, and pass params to parameters argument in ComposableNode constructor.
Declare the parameters in the class constructor of your node object.
Get the parameters before using in your program.

You can use a ROS 2 (eloquent) package, ros2_ipcamera, I created as a specific working example:
The numbering below is associated with the steps above.

see /config/ipcamera.yaml
see /launch/ipcamera.launch.py
and 4. see /src/ipcamera_component.cpp

Reading through the discussion associated with issue #715 was informational as well.

Originally posted by surfertas with karma: 265 on 2020-03-28
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Joe28965 on 2020-03-31:
Thanks, I got it working with the help of your example!
Comment by surfertas on 2020-03-31:
Great to hear!
Comment by MrCheesecake on 2020-07-15:
Thanks from my side too!  Is there a way I can change the parameters and use it without building the package again? Afaik that's how it works in ros1
Comment by Joe28965 on 2020-07-15:
@MrCheesecake perhaps this tutorial answers your question?

