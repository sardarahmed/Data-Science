Q:

Multiple Threads in Single ROS Node

What is the preferred threading library to use when trying to write a ROS node with multiple threads? Boost::Thread ? Posix ? Pthreads ?
Are there any issues with callback functions when multiple threads are used?
The reason I want to use multiple threads in a single node instead of writing multiple nodes is that I am trying to integrated ROS with another publish and subscribe system called MOOS, which is used heavily in the underwater robotics community. (Found here: http://oceanai.mit.edu/moos-ivp/pmwiki/pmwiki.php).  Unfortunately, the MOOS architecture relies upon the user calling a blocking function that sits and spins in a loop (similar to ROS, but all the initial logic is tied up in that one function as well).  I want to run that blocking function in its own separate loop, grabbing data from the MOOS system and then publishing it to the ROS side.
Any tips?

Originally posted by SyllogismRXS on ROS Answers with karma: 51 on 2011-06-20
Post score: 3

Original comments
Comment by Julius on 2011-06-21:
ROS package posest in vslam uses Intel TBB, but from my experience TBB aims at parallelization of computationally expensive tasks, so you're probably looking for sth. else here.

A:

Boost::threads is commonly used, but the others should work as well.  Info on callbacks in roscpp is at http://www.ros.org/wiki/roscpp/Overview/Callbacks%20and%20Spinning.  For your case, spinning off a thread that calls the moos loop, then calling ros::spin in the main thread, sounds like it will work.

Originally posted by bhaskara with karma: 1479 on 2011-06-21
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by SyllogismRXS on 2011-06-24:
This is how I ended up implementing my MOOS / ROS node and it worked well.
Comment by zzzZuo on 2015-12-30:
Hello,I run spin() in boost::thread,but it's also block my GUI?Thanks for your help.

