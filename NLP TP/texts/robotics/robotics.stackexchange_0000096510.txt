Q:

Debugging techniques for robot_localization?

Hi All,
I've managed to put together a typical setup for robot_localization using wheel encoders, IMU and GPS, as described in the documentation and in many answers here. It works more or less reasonably well. But sometimes it doesn't. My question would be about debugging techniques for the case when it doesn't. I'm wondering how you guys do this tuning / debugging thing? There are literally hundreds of messages generated when the system is running, most of them with loads of numbers in them. Are there any magic tools, clever tricks, methods, best practices, etc. to find out what's going wrong when something is going wrong? I use rviz and rostopic. Are these really the only weapons I have?
I hope this question is not too generic for this forum. But I would be really interested to hear how people with more experience deal with this phase of development.

Originally posted by tbondar on ROS Answers with karma: 29 on 2020-07-12
Post score: 0

A:

rviz, plotjuggler and rosbag are your friends. Record a bag file using rosbag of an occasion when it doesn't work well, then replay that through rviz and plotjuggler, looking at what the various different sensors and calculated values are doing.
https://github.com/facontidavide/PlotJuggler

Originally posted by Geoff with karma: 4203 on 2020-07-12
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by tbondar on 2020-07-13:
plotjuggler looks awesome. Thank you.

