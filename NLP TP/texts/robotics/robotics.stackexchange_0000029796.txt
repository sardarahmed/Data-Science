Q:

Adding a dependency after roscreate-pkg

If I use roscreate-pkg to create my package, but then later decide to add another dependency (in this case, rospy), is there a simple way to get things setup correctly? Or do I now have to do those steps by hand?

Originally posted by Murph on ROS Answers with karma: 1033 on 2011-02-23
Post score: 10

A:

In order to add a new dependency to an existing package, just edit the package's manifest.xml file.
You'll have to add a line like <depend package="package_name" />.
For example, to add a dependency to rospy, you would add the line <depend package="rospy" />.

Originally posted by Eric Perko with karma: 8406 on 2011-02-23
This answer was ACCEPTED on the original site
Post score: 9

Original comments
Comment by kwc on 2011-02-24:
Those directory structures are for convenience, e.g. 'src', 'include'.  They are not required.
Comment by Murph on 2011-02-24:
According to: http://www.ros.org/wiki/roscreate "For common dependencies like roscpp and rospy, roscreate-pkg may create some additional common directory structures." - Do I need to create these?
Comment by nbro on 2018-04-07:
So, e.g. rosdep is useless here?!
Comment by morann on 2018-08-19:
There is no need to change the file "CMakeLists.txt"? (adding the new dependency to the find_package()?
Comment by gvdhoorn on 2018-08-19:
@morann: note the date of the answer: 2011. Things have changed since then, and rosmake worked differently from how Catkin works.
Please refer to the catkin documentation for up-to-date information.
Comment by tsbertalan on 2019-02-25:
@gvdhoorn Your link doesn't directly answer the question, though. Could you write a new answer?
Comment by gvdhoorn on 2019-02-25:
I would say it actually does: see C++ catkin library dependencies fi, and all the other pages.
Comment by tsbertalan on 2019-02-25:
@gvdhoorn "See all the pages in the documentation" is not an answer (and I suppose you didn't try to make it one). Yes, OP could look through the documentation, and your link is helpful for that; thanks. But if the tl;dr is "there's no easy tool, so add to CMakeLists.txt and package.xml", say so!
Comment by gvdhoorn on 2019-02-26:
The documentation I linked to clearly explains how to update CMakeLists.txt and package.xml to add/edit/remove dependency information.
I'm not sure where the hostility comes from.
For once we have documentation about something in ROS, I link to it and still it's not good enough.
Comment by tsbertalan on 2019-02-26:
@gvdhoorn I apologize; I came off a little strong. I only meant that your comment could easily be transformed into a full, and perhaps more up-to-date answer. Upon more careful inspection, I think that your second link is, as you say, almost an (overcomplete) answer itself.
Comment by tsbertalan on 2019-02-26:
@gvdhoorn Also, I may be inappropriately carrying over standards from the other stackexchange sites to ROS answers. Since this is really a tightly-coupled sister site to the ROS documentation, pure-link responses are, I imagine, more appropriate here than on e.g. stackoverflow.
Comment by tsbertalan on 2019-02-26:
@gvdhoorn I guess the things from this question  that the docs don't address are: (1) Are those to files the only things that need be edited? (2) Is there any tool like catkin_create_pkg that will update our package in-place?
Comment by gvdhoorn on 2019-02-27:\

Since this is really a tightly-coupled sister site to the ROS documentation, pure-link responses are, I imagine, more appropriate here than on e.g. stackoverflow.

I would say so, yes. We can keep duplicating content all over the various site(s), but that will go stale very quickly.
Comment by gvdhoorn on 2019-02-27:
re: your questions: first a question by me: have you done the introductory tutorials? Looked at the general catkin wiki page? The Catkin docs I linked to (not the wiki) link to a nr of REPs that explain what is going on.
I realise that it's a lot, but fi the ..
Comment by gvdhoorn on 2019-02-27:
.. introductory tutorial on creating a package should shed quite a bit of light on things.
But to summarise:

yes
I don't know of anything that will update your pkg manifest & build script

Comment by tsbertalan on 2019-02-28:
@gvdhoorn I have, yes, and I suspected your answers to my 1&2 would be as they were. But they seems like the motivation for the OP. ROS is nothing if not full of boilerplate, and multiple "right" ways to do things, as (not) here. I don't have any suggestions for how things could be different, though
Comment by tsbertalan on 2019-02-28:
@gvdhoorn In this case, the problem is something about mixed messaging--how "should" we update our list of deps? There are lots of these little helper programs (as nbro mentions, why is rosdep not involved here?) and lots of conflicting info is available (e.g. roscreate vs catkin_create...)
Comment by tsbertalan on 2019-02-28:
@gvdhoorn I've been using ROS on and off for a few years now, and, in that short time, some things have changed (I've used indigo, kinetic, and melodic). Though melodic is "recommended", some packages aren't available yet. It feels very python2/python3-circa-2012; might scare some users off.
Comment by tsbertalan on 2019-02-28:
@gvdhoorn There's, I think, only a small expectation that the existence of catkin_create_pkg should imply a catkin_modify_pkg, and I'm sure that the OP, as I did, quickly found on their own that they could make the updates manually.
Comment by gvdhoorn on 2019-02-28:
I can't make things (much) prettier than they are I'm afraid. I'm "just a user", as you are. In my experience though: no matter how well things are documented, with such a fast moving target as ROS is/has been, there will always be docs / wikis out-of-date and confusing info will always be ..
Comment by gvdhoorn on 2019-02-28:
.. around.
re: pkgs missing: again, it's a community thing. This is not really that different from a Debian, Ubuntu or Fedora release: some stuff is "core" enough that core maintainers will always make sure it's available, but the rest really comes down to "the community".
Comment by gvdhoorn on 2019-02-28:
What we could do to make this more actionable: if you can't find a question that answers the "Catkin era" version of this one, please post a new one, refer to this one as one that answered the rosbuild era question and post a link here.
I'll see if I can answer your question then.

