Q:

Is there a standard way to transform a pose between coordinate frames?

I have a pose message that I want to transform between two (non-static) coordinate frames. Currently I am doing the following in python:
   def rotate_orientation(ori, q):
    rot_mat = tf.transformations.quaternion_matrix(q)
    pose_rot = rot_mat.dot([ori.x, ori.y, ori.z, ori.w])
    ori.x = pose_rot[0]
    ori.y = pose_rot[1]
    ori.z = pose_rot[2]
    ori.w = pose_rot[3]

  def translate_position(pos, t):
    pos.x += t[0]
    pos.y += t[1]
    pos.z += t[2]

  def odom_to_utm(odom):
    global utm_pub

    trans,rot = listener.lookupTransform('utm', 'odom', rospy.Time(0))

    translate_position(odom.pose.pose.position, trans)
    rotate_orientation(odom.pose.pose.orientation, rot)

    utm_pub.publish(utm)

But it feels a bit clunky. Is there a more standard way to switch between coordinates frames? Something like a tf.transformPose(pose, frame1, frame2) that returns pose in frame 2.

Originally posted by linusnie on ROS Answers with karma: 98 on 2017-07-26
Post score: 3

A:

There is something like that, and you almost guessed it!
listener.transformPose(target_frame, pose_msg) -> pose_msg

You don't need to enter the frame1 because it is listed inside the pose_msg.
You can find more information here. And here is the function in the API.

Originally posted by Airuno2L with karma: 3460 on 2017-07-26
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by jayess on 2017-07-26:
Are you using -> to say that function returns pose_msg?
Comment by linusnie on 2017-07-26:
thanks! this is exactly what I was looking for
Comment by Airuno2L on 2017-07-26:
Yes, it returns a new pose_msg

