Q:

Boundary Estimation Error

I am trying to extract boundary points from point cloud,and want to print the boundary points.Unfortunately, I got error like error C2248: 'pcl::BoundaryEstimation<PointInT,PointNT,PointOutT>::computeFeature' : cannot access protected member declared in class 'pcl::BoundaryEstimation<PointInT,PointNT,PointOutT>'. Did anybody experience this? Thanx in advance.
Here is my sample code.
int main (..) 
{ 
//Load point cloud 

pcl::PointCloud<pcl::Normal>::Ptr normals (new pcl::PointCloud<pcl::Normal>); 
pcl::NormalEstimation<pcl::PointXYZ, pcl::Normal> ne; 
ne.setInputCloud (cloud.makeShared()); 
pcl::search::KdTree<pcl::PointXYZ>::Ptr tree (new pcl::search::KdTree<pcl::PointXYZ> ()); 
ne.setSearchMethod (tree); 
ne.setRadiusSearch (0.03); 
ne.compute (*normals); 

pcl::PointCloud<pcl::Boundary> boundaries; 
pcl::BoundaryEstimation<pcl::PointXYZ, pcl::Normal, pcl::Boundary> est; 
est.setInputCloud (cloud.makeShared()); 
est.setInputNormals (normals); 
est.setRadiusSearch (0.03); 
est.setSearchMethod (pcl::search::KdTree<pcl::PointXYZ>::Ptr (new pcl::search::KdTree<pcl::PointXYZ>)); 
est.compute (boundaries); 

pcl::PointCloud<pcl::Boundary>::Ptr boundary_cloud (new pcl::PointCloud<pcl::Boundary> ()); 
est.computeFeature(*boundary_cloud); /// Error Here 
                
cout<<"Boundary Size:"<<boundaries.points.size()<<endl; 
}

Originally posted by Nihad on ROS Answers with karma: 22 on 2013-05-02
Post score: 0

A:

As shown here, the computeFeature call is a protected member of the BoundaryEstimation class, so you are not able to call this method from your code.  You can see in the source for compute that computeFeature is called by the publicly-accessible compute method.  So, it should be sufficient to just call compute.
Try just removing these lines:
pcl::PointCloud<pcl::Boundary>::Ptr boundary_cloud (new pcl::PointCloud<pcl::Boundary> ()); 
est.computeFeature(*boundary_cloud); /// Error Here

Edit:
I believe that pcl::BoundaryEstimation only returns a boolean flag for whether or not a given point is on the boundary.  You'll need to access the original point cloud to get the XYZ coordinates of matching points:
for (int i=0; i<cloud.size(); i++)
  if (boundaries.points[i].boundary_point == 1)
    cout << cloud.points[i];

If you are seeing garbage values when printing out boundary_point values, it may be because BoundaryEstimation can't find the nearest-neighbors in your point cloud.  In this case, it sets boundary_point to NaN (which may look like "garbage" when printed.

Originally posted by Jeremy Zoss with karma: 4976 on 2013-05-02
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Nihad on 2013-05-02:
Thank you. But how can I access boundary point`s x, y and z coordinate information? I use following line  but it gave garbage value.
for (size_t i = 0; i < boundaries.points.size (); ++i)
std::cerr << "    " << boundaries.points[i].boundary_point<<endl;

