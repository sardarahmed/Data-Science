Q:

Get HZ & BW from Rostopic Programatically

Hi everyone,
I want to write a program in python and I need the value of HZ and BW (on specific topic).
How can I do it (Using rostopic or something else)?
thanks in advance!

Originally posted by matansar on ROS Answers with karma: 43 on 2017-04-20
Post score: 2

A:

You can use the same classes that the rostopic tool does to do this. If you import rostopic, you will find in that package several classes that gather statistics about topics. For example, the ROSTopicHz class is used to get the publishing rate. You can see how to use these classes by mimicking the functions that call them, such as _rostopic_hz. Basically, the statistics-gathering class instance is created, the topic of interest is subscribed to, and the callback on the instance of the statistics class is passed to the subscription. Then, after giving some time for messages to be processed, you can call a method of the stats class to get the current result.
Here's an example:
> import rospy, rostopic
> rospy.init_node('blurglesplort')
> r = rostopic.ROSTopicHz(-1)
> s = rospy.Subscriber('/joint_states', rospy.AnyMsg, r.callback_hz, callback_args='/joint_states')
> rospy.sleep(1)
> r.print_hz(['/joint_states'])
average rate: 46.186
        min: 0.000s max: 0.103s std dev: 0.03928s window: 643

Note that this is probably not a public API. If so, the API may change without notice.

Originally posted by Geoff with karma: 4203 on 2017-04-20
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by matansar on 2017-04-22:
thank you very much!
but need a change: r.print_hz does not get param.
Comment by Geoff on 2017-04-23:
Yes, it looks like the print_hz function changed between Jade and Kinetic, and I was testing on Kinetic.
Comment by Redhwan on 2021-02-22:
Could you help me, please? @geoff
here is my question.
Comment by Sj-Amani on 2021-11-04:
If you want to get the param, use the get_hz method instead of print_hz Ref:
r.get_hz('/joint_states')[0]

get_hz method returns a tuple of stat results: rate, min_delta, max_delta, std_dev, n+1.
The rate represents the hz i.e. [0].

