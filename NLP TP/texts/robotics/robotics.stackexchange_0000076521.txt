Q:

Use gtest to catch segfaults

I'm not sure how to get catkin to catch segfaults during testing. I've setup a ROS gtest using the following line in my CMakeLists:
if(CATKIN_ENABLE_TESTING)
  catkin_add_gtest(moveit_bolt_test test/moveit_bolt_test.cpp)
  target_link_libraries(moveit_bolt_test ${PROJECT_NAME} ${catkin_LIBRARIES} )
endif()

I run the test using catkin run_tests --no-deps --this -iv
When the test segfaults, however, there is not reporting of test failures:
[bolt_moveit:make] Segmentation fault (core dumped)
[bolt_moveit:make] Cannot find results, writing failure results to '/home/dave/ros/current/ws_swri/build_release/bolt_moveit/test_results/bolt_moveit/MISSING-gtest-moveit_bolt_test.xml'
[bolt_moveit:make] -- run_tests.py: verify result "/home/dave/ros/current/ws_swri/build_release/bolt_moveit/test_results/bolt_moveit/gtest-moveit_bolt_test.xml"

How do I get gtest to report a failure instead?

Originally posted by Dave Coleman on ROS Answers with karma: 1396 on 2016-09-29
Post score: 2

A:

Since the test segfaulted it didn't write the expected result file. Therefore the script wrapping the test invocation generated MISSING-gtest-moveit_bolt_test.xml which should contain a failed test. How do you expect the test failure to be reported? Did you run catkin_test_results afterwards?

Originally posted by Dirk Thomas with karma: 16276 on 2016-09-29
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Dave Coleman on 2016-09-29:
I'm not running this in a CI currently, so didn't use catkin_test_results. I guess that is the tool that I'm missing, thanks.

