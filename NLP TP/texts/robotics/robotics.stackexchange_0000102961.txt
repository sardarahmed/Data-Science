Q:

Use bloom to generate a deb and a -dev.deb packages

I have implemented a library with some functionalities. As an example, let's say this is my library. Whenever I compile with:
mkdir build
cmake ..
make

and install this library:
sudo make install

another package can find it and use it.
Now I want to create Debian packages for this library. If I use the ROS approach (bloom) with:
bloom-generate debian --os-name ubuntu --os-version jammy
fakeroot debian/rules binary

A binary package is created and if I install it everything looks ok. However, I want to create instead of one package, two, one for the runtime library and one for the development tools, in this way, clients that are not developing new apps on top of the library do not need to install all the headers, cmakes, etc.
Is there any way of doing such a thing? I would like to stick to ROS bloom as it simplifies a lot the packaging dependency (both runtime and build time).

Originally posted by apalomer on ROS Answers with karma: 318 on 2023-01-24
Post score: 0

A:

No, this is not supported by Bloom at this time.
See Generating ‘dev’ and runtime artefacts from ROS packages on ROS Discourse for a related discussion.

Originally posted by gvdhoorn with karma: 86574 on 2023-01-25
This answer was ACCEPTED on the original site
Post score: 0

