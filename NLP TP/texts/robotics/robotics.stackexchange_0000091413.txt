Q:

rosdep get list of packages for dependencies

tl;dr: How do I get the list of packages that would be installed by rosdep install without actually installing them?
I want to create a rootfs that can be used to (cross-)compile ROS2. Instead of setting up the ROS repo and running rosdep within the rootfs, I want to gather the dependencies as a list of deb packages outside of the rootfs and only install the list of deb packages that are returned by rosdep.
I.e. I do not want to run rosdep install inside the rootfs, but rather want it to return the list of packages it would install and use this list in apt install <list>
Running:
rosdep keys --from-path src --ignore-packages-from-source --os debian:stretch --rosdistro=crystal

seems to include dependencies that are part of the workspace, although --ignore-packages-from-source is provided. E.g. in a ROS2 base workspace from https://raw.githubusercontent.com/ros2/ros2/release-latest/ros2.repos, rosdep keys will provide a list that contains rclcpp, rclpy, launch, std_msgs. Hence, piping this into rosdep resolve:
rosdep keys --from-path src -i --os debian:stretch --rosdistro=crystal | xargs rosdep resolve

will not provide the correct list because of  ERROR: no rosdep rule for 'std_msgs'

Originally posted by Christian Rauch on ROS Answers with karma: 214 on 2019-04-18
Post score: 0

A:

You want --reinstall to avoid having to uninstall the packages first.
You just need to tell the second instance of rosdep that it's also resolving for your rosdistro of choice.
rosdep keys --rosdistro crystal --from-path ~/workspace --ignore-src | xargs rosdep resolve --rosdistro crystal

Another approach is
rosdep install --reinstall --simulate --from-path ~/work/diux/sitl_gazebo/ --ignore-src | awk '{print $5 }'

Originally posted by tfoote with karma: 58457 on 2019-04-18
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Christian Rauch on 2019-04-18:
The second option (via --simulate) solved my problem:
rosdep install --reinstall --simulate --from-path src --ignore-src --os debian:stretch --rosdistro=crystal --skip-keys "console_bridge fastcdr fastrtps libopensplice67 libopensplice69 rti-connext-dds-5.3.1 urdfdom_headers python3-lark-parser" | awk '{print $5 }'

gives me a list of packages.
The first option via rosdep keys still tries to resolve packages that are part of the workspace, even after setting the target OS and ROS distro for fetching the keys and resolving them. E.g.:
rosdep keys --from-path src --ignore-packages-from-source --os debian:stretch --rosdistro=crystal | xargs rosdep resolve --os debian:stretch --rosdistro=crystal

still results in: ERROR: No definition of [ament_lint_common] for OS [debian], which is part of ament_lint.

