Q:

Confusing tf transforms

I have been working a lot with transform matrices these days and the tf nomenclature doesn't make things easier.
For tf_echo, the input frames are defined as such:
tf_echo <source_frame> <target_frame> 

When using Python and looking up for a transform it is as follows:
 lookupTransform(target_frame, source_frame, time) -> position, quaternion 

But what I get are two inverse transforms even though I use the same source_frame and target_frame. Why is that?

Originally posted by Mehdi. on ROS Answers with karma: 3339 on 2016-03-18
Post score: 5

A:

Agreed. This was quite confusing to me also. This has been asked before, but it was hard for me to find the previous question and your question's title is much more likely to be found in future searches methinks.
http://answers.ros.org/question/194046/the-problem-of-transformerlookuptransform/
to Quote tully,

The lookup API is named with respect
to transforming data from the source
frame into the target frame.
When referring to transform between
coordinate frames (transforming the
frames, it is the inverse of the
transform of data between the two
frames)
Depending on the documentation if
you're referring to the transform
value for the data, or the transform
value of the coordinate frames you get
the inverse value.

Originally posted by thebyohazard with karma: 3562 on 2016-03-18
This answer was ACCEPTED on the original site
Post score: 5

Original comments
Comment by Airuno2L on 2016-03-18:
Ah, I see what he is saying. Transform can be a verb and a noun - you transform the data using a transform, err confusing. Oh well, it's not a big problem, we just gotta be careful and make sure to test in simulation first!

