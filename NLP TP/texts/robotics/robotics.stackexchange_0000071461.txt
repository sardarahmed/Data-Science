Q:

Problems integrating OpenCV with ROS Indigo

I am trying to build a simple program to start working with OpenCV with ROS Indigo; however, whenever I try to build the code (catkin_make) the build fails and returns
" undefined reference to 'cv::imread(cv::String const&, int)' "
and so on for all the other OpenCV functions. This makes it impossible for me to build and run my test program for ROS and I'm at a loss for how to continue. I've quoted the program and CMakeLists.txt below.
OpenCV 3.1 is installed and has been successfully compiled using g++ in the terminal. The OS is LinuxMint 17.3
Program imgloader.cpp:
#include <ros/ros.h>
#include <cv_bridge/cv_bridge.h>
#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/core/core.hpp>
#include <opencv2/opencv.hpp>
#include <iostream>

using namespace cv; using namespace std;

int main(int argc, const char** argv){  
Mat img = imread("img.jpeg", CV_LOAD_IMAGE_UNCHANGED);
if(img.empty()){
       cout << "Image cannot be found or opened..." << endl;
       return -1;
}
namedWindow("MyWindow", CV_WINDOW_AUTOSIZE);
imshow("MyWindow", img);
waitKey(0);
destroyWind("MyWindow");
return 0;
}

The following has been added to the CMakeLists.txt file for the package "opencvtest"
find_package(OpenCV REQUIRED) 
include_directories(include ${catkin_INCLUDE_DIRS} ${OpenCV_INCLUDE_DIRS}) 
add_executable(imgloader src/imgloader.cpp)
target_link_libraries(imgloader ${catkin_LIBRARIES} ${OpenCV_LIBRARIES}) 
add_dependencies(imgloader opencvtest)

And the following dependency has been added:
<build_depend>opencv2</build_depend>
<run_depend>opencv2</run_depend>

What do I need to add or do to make my package build?

Originally posted by Raiden on ROS Answers with karma: 31 on 2016-01-19
Post score: 3

Original comments
Comment by ahendrix on 2016-01-19:
Please use the "Preformatted Text" button (marked "101010") to format your code sample so that it is readable.
Comment by Raiden on 2016-01-19:
First post, it's been edited now.

A:

If you really want opencv 3 see http://answers.ros.org/question/214043/use-ros-indigo-opencv3-alongside-248
Otherwise uninstall your opencv 3 and use http://wiki.ros.org/cv_bridge which comes with opencv 2.4- it probably is already on your system.  Just have build/run_depends on cv_bridge and catkin will bring in the headers and libraries, you won't need a find_package for opencv.

Originally posted by lucasw with karma: 8729 on 2016-01-19
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by ahendrix on 2016-01-19:
If you use OpenCV directly, you should directly find_pacakge() it. Do not rely on transitive dependencies; the upstream package may change.
Comment by Raiden on 2016-01-19:
I uninstalled my OpenCV 3 and ran catkin_make afterwards (I did not change any of the code/dependencies). The code built and ran. Thank you for your answer.
Comment by lucasw on 2016-01-19:
cv_bridge package.xml has <build_depend>libopencv-dev</build_depend> - and a few other image processing packages use it, so that could be used without transitivity and without a find_package.
Comment by ahendrix on 2016-01-19:
I just said that relying on the dependency through cv_bridge is not a good idea. If your package uses a library, you should depend on it directly. (just because it works another way doesn't make it a good idea).
Comment by ahendrix on 2016-01-19:
Looking through the rosdep database, it looks like a <build_depend> on opencv2 is deprecated or wrong. The dependency in the package.xml should be <build_depend>libopencv-dev</build_depend> .
Comment by lucasw on 2016-01-19:
According to http://answers.ros.org/question/185105/add-opencv-to-indigo/ cv_bridge is the the right dependency, though http://wiki.ros.org/vision_opencv doesn't really back that up.
Comment by ahendrix on 2016-01-19:
Hrm... yeah. It looks like the dependency through cv_bridge is the only option that is backwards-compatible with Hydro.
Comment by joq on 2016-01-19:
Yes, I remember having to do that to maintain common source between Hydro and Indigo.

