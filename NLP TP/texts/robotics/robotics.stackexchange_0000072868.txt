Q:

Multiple subscriber queue allocation using the same callback

I am creating multiple subscribers using the same callback function as in this post, the code is here.
Basically is this:
for ( int i = 0; i<topics.size(); i++ )  
    sub[i] = n_.subscribe( topics[i], queue_size, &MyClass::callback, this );

In this case to whom is assigned queue_size? How does it work?
I would like to think that queue_size is assigned to the subscriber sub[i] and that it doesn't matter that all the subscribers use the same callback. I mean:
Is the queue_size independent of the callback function?

Originally posted by Luis Ruiz on ROS Answers with karma: 114 on 2016-03-18
Post score: 0

A:

The queue_size is specific to each subscriber. It only controls the 'number of incoming messages to queue up for processing (messages in excess of this queue capacity will be discarded).' (http://docs.ros.org/api/roscpp/html/classros_1_1NodeHandle.html).
You can have multiple subscribers using the same callback function but with different queue sizes.
e.g sub1 and sub2 both use myCallBack() and subscribe to "/mytopic1" and "/mytopic2" respectively, sub1 has queue_size=1, sub2 has queue_size=10
If I publish 15 identical messages "instantaneously" on both topics (faster than the time it takes to complete myCallBack()), you should see 2 calls to myCallBack() corresponding to sub1 for messages 1 (assuming sub1's callback is processed first) and 15, and 10 calls to myCallBack() corresponding to sub2 for messages 6-15.
Also remember that by default, all the callbacks within a node are invoked from a single global callback queue. You can assign separate callback queues for each of your subscribers if that is what you are looking for, but it takes a bit more work (http://wiki.ros.org/roscpp/Overview/Callbacks%20and%20Spinning).

Originally posted by al-dev with karma: 883 on 2016-03-18
This answer was ACCEPTED on the original site
Post score: 3

