Q:

SimpleActionClient callback for pre-empted goals

Given a simple action client and server pair, working in callback mode, I dont think it's possible to get the client to be aware of when goals are pre-empted. It would seem a fairly 'simple' thing to want to be aware of. Goals when they're preempted in the server, trigger the server's callback, but once you're inside that callback nothing can get through to the action client's callbacks (not setSucceeded, setFeedback or setCanceled). Nothing turns up at the client's end I think because it is triggering on transitions, and it isn't set up for these particular transitions.
Or is there a way to do this that I've missed? Right now I'm looking at having to set up a specific subscriber to the action server's result topic, which works around the client/server mechanisms. Either that or go the full action server. A bit overkill for what I'm trying.
I wrote a simplified package to demonstrate. To compile, download the tarball, or just to view the source:

server.cpp
client.cpp

Is there something awry in the server handling?

Originally posted by Daniel Stonier on ROS Answers with karma: 3170 on 2011-05-19
Post score: 1

Original comments
Comment by Daniel Stonier on 2011-06-23:
Tried a simple server/full client with callbacks. It gave full feedback on current/past goals with a callback that could act on any transition. I'd recommend not being shy to go past the simple server/simple client pair if you need some extra functionality as it is also surprisingly 'simple'.
Comment by TheMilkman92 on 2021-03-24:
I know this was a long time ago, but any chance you could repost your code? I think it'll be very helpful for something I'm trying to put together. Thanks!

A:

Hi Daniel,
After running your client and server programs (and triggering the counting on the /update topic), it looks like the doneCallback is being triggered correctly upon successful goal completion.
However, you are concerned about the fact that the doneCallback is not being triggered upon goal preemption.  Your server app is actually dealing with the preemption correctly.  However, it is the client which is ignoring the pre-emption.  This is not a bug.  As soon as you send a new goal with the SimpleActionClient, it disables the callbacks associated with the previous goal. Thus, you never hear about when the old goal got preempted.
This behavior is described deep in the actionlib docs at:
http://www.ros.org/wiki/actionlib/DetailedDescription#Simple_Action_Client

Originally posted by vpradeep with karma: 760 on 2011-05-24
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Daniel Stonier on 2011-05-25:
Of course! I just tried running the client twice in parallel (which is partially my use case) and it successfully calls the done callback on a goal pre-empted by a goal sent by another process. I feel a bit naive now :P Thanks for the clarification.

