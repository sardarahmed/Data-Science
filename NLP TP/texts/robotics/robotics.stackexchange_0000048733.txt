Q:

ccny_rgbd is unable to detect features

Hi everyone,
Consider these pioneer datasets: http://vision.in.tum.de/data/datasets/rgbd-dataset/download#freiburg2_pioneer_slam2
They represent the specialties of my target application nicely, so I'm keen on testing some VO engines with them.
I've had a problem with CCNY RGBD: it works well with Kinect, but when I try to run it with Pioneer dataset it produces the following errors for each input frame:
[VO 147] Fr: 0.0 GFT[400][0]: 15.0 ICPProbModel[1]  0.1 TOTAL 15.2
[ WARN] [1361918845.707617958]: No features detected.
[ WARN] [1361918845.707702069]: Could not estimate motion from RGBD data, using Identity transform.
[VO 148] Fr: 0.0 GFT[400][0]: 13.9 ICPProbModel[1]  0.2 TOTAL 14.1
[ WARN] [1361918845.752454258]: [ICP] Not enough correspondences (0 of 15 minimum). Leacing ICP loop
[ WARN] [1361918845.752498383]: Could not estimate motion from RGBD data, using Identity transform.

I'm using the default settings. Color images are in BGR8 format, depth in 32FC1 or MONO16 (have tried both of them).
It is really strange that ccny_rgbd is unable to find any features on these images, I suppose there is some general issue, wrong image format maybe?

Originally posted by Spym on ROS Answers with karma: 32 on 2013-02-26
Post score: 1

A:

ccny_rgbd currently requires depth images in 16UC1 format, in mm. A ticket was opened today to allow 32FC1 support.
Can you post the output of when you feed in the MONO16 depth topic?
This might be an issue with the depth image. Features that fall on a depth value of 0 are discarded as invalid. To test this, you can try running feature_viewer on your dataset. Set the show_keypoints flag to true. It should show you the keypoints detected on the RGB image, before the invalid ones are discarded.
Also maybe post your launch file so I can take a look how the topics are getting remapped.
Edit:
I just added support for 32FC1, and also clearer instructions in all launch files how to remap topics coming directly from OpenNI when rgbd_image_proc is not used. Passing in 16UC1 is still (slightly) more efficient. See ticket.

Originally posted by Ivan Dryanovski with karma: 4954 on 2013-02-26
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Spym on 2013-02-26:
Ivan, thanks it's working now, I converted the depth images into 16UC1 in millimeters. But anyway, in some parts of these datasets VO is unable to find enough features to track [http://pastebin.com/xFRg1V4c]. Maybe I need to switch to another kind of features?
Comment by Ivan Dryanovski on 2013-02-27:
Is MONO16 different from 16UC1? I'm not clear on this. I'm working on 32FC1 support so the datasets can be used directly.
Comment by Ivan Dryanovski on 2013-02-27:
As for the features, try changing the type of feature detector. If you use SURF, you might need to switch to QVGA, depending on your machine. If it still doesnt work well, let me know which dataset it is, and I'll see if I can implement some fallback strategies when features arent present
Comment by Spym on 2013-02-27:
I suppose MONO16 is just alias for 16UC1. When I tried MONO16, I used it with resolution of 0.2mm per LSB, thereby VO discarded almost entire frame because depth values were above max_range threshold. I just changed the scale to 1mm/LSB and it that's it.
Comment by Spym on 2013-02-27:
About features: thanks, I'll give it a try a bit later today, stay tuned.
Comment by Ivan Dryanovski on 2013-02-27:
See edit - added 32FC1 support. What's LSB?
Comment by Spym on 2013-02-27:
Yep, I already started following your repository on github, so I've seen an update on that issue. LSB stands for Least Significant Bit, i.e. amount of depth per one bit in our case.
Comment by Spym on 2013-02-27:
Ivan, sorry for the offtopic, but I have a minor suggestion: it would be great to avoid direct stdout access from rgbd applications. Consider this: http://goo.gl/Kj39y, I suggest to replace printf() with ROS_DEBUG() here and everywhere else, to avoid the log pollution.
Comment by Spym on 2013-02-27:
Well, I did some benchmarking with pioneer_slam2 and pioneer_slam3: http://pastebin.com/28ewdVM4. I used native resolution 640x480, hence the poor performance of SURF detector. Images were published in real time, according to their timestamps.
Comment by Spym on 2013-02-27:
It is easy to see that I shouldn't use anything but GFT. Also note that I used default parameters for each detector, except for max_range which I set to 15 meters. P.S. is there any mailing list or forum for the relevant discussions on ccny_rgbd?
Comment by Ivan Dryanovski on 2013-02-27:
Spym - thanks for the feedback, im interested to discuss more. Feel free to send me an email and we can continue from there

