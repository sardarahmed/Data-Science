Q:

How to subcribe both Image topic and Text topic in the same time?

Hi buddy,
I am newbie in ROS. And this is the first time i'm trying to subcribe 2 topics type, 1 for Image topic and 1 for  Array of ints topic. And i have a problem on it.
This is my source code:
#!/usr/bin/env python
import sys
import rospy
import cv2
import math
import message_filters
from sensor_msgs.msg import Image
from cv_bridge import CvBridge, CvBridgeError
from std_msgs.msg import String,Int32,Int32MultiArray,MultiArrayLayout,MultiArrayDimension

class image_converter:
  def __init__(self):
    self.bridge = CvBridge()
    self.image_sub = message_filters.Subscriber("/laptop/camera",Image)
    self.array_sub = message_filters.Subscriber("Arduino_Publish", Int32MultiArray)
  def callback(image,data):
    cv_image = bridge.imgmsg_to_cv2(image, "bgr8")

    def draw(img):
       cv2.circle(cv_image,(100,100),50,(0,0,255),2)
       return img
    data_receive = value.data
    rospy.logwarn(value.data)
    frame = draw(cv_image)
    cv2.imshow("Frame", frame)
    cv2.waitKey(3)

def main():
  img_cvt = image_converter()
  rospy.init_node('Sub_2_Topic', anonymous=True)
  try:
    ts = message_filters.ApproximateTimeSynchronizer([img_cvt.image_sub,img_cvt.array_sub],10,0.1)
    ts.registerCallback(img_cvt.callback)
    rospy.spin()
  except KeyboardInterrupt:
    print("Shutting down")
if __name__ == '__main__':
    main()

And i sent Image message and Text message successfully and receive them individual. Then i try using message filter to receive both of them, and i got error:
[ERROR] [WallTime: 1548902849.013077] bad callback: <bound method Subscriber.callback of <message_filters.Subscriber object at 0x7fd39b1628d0>>
Traceback (most recent call last):
  File "/opt/ros/indigo/lib/python2.7/dist-packages/rospy/topics.py", line 720, in _invoke_callback
    cb(msg)
  File "/opt/ros/indigo/lib/python2.7/dist-packages/message_filters/__init__.py", line 74, in callback
    self.signalMessage(msg)
  File "/opt/ros/indigo/lib/python2.7/dist-packages/message_filters/__init__.py", line 56, in signalMessage
    cb(*(msg + args))
  File "/opt/ros/indigo/lib/python2.7/dist-packages/message_filters/__init__.py", line 221, in add
    my_queue[msg.header.stamp] = msg
AttributeError: 'Int32MultiArray' object has no attribute 'header'

So, what should i do to fix this, now ?
Thank you !

Originally posted by ToanJunifer on ROS Answers with karma: 7 on 2019-01-30
Post score: 0

A:

Int32MultiArray of pacakge std_msgs is a primitive data type and as such does not contain a header. This is what your error message is telling you.
Typcially, the timestamp in the headers are used to synchronize the messages.
There is a "workaround", however. To quote the wiki

If some messages are of a type that doesn't contain the header field, ApproximateTimeSynchronizer refuses by default adding such messages. However, its Python version can be constructed with allow_headerless=True, which uses current ROS time in place of any missing header.stamp field

See the relevant section of the message_filters ROS wiki.
(Nitpicking: Your question is asking about syncing image and text, but it is actually image and array of ints...)

Originally posted by mgruhler with karma: 12390 on 2019-01-31
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by ToanJunifer on 2019-01-31:
I going to fix follow your guide. Thank you for your advise
Comment by ToanJunifer on 2019-01-31:
I added:
ts = message_filters.ApproximateTimeSynchronizer([image_sub,array_sub],10,0.1,allow_headerless=True)

I get:
TypeError: __init__() got an unexpected keyword argument 'allow_headerless'

Comment by mgruhler on 2019-01-31:
which ROS version? You selected indigo. If this is true, you might be out of luck. This seems to be only in kinetic onwards...
Comment by ToanJunifer on 2019-01-31:
Oh god. May be i need another solution for my case.
Thank you so much for your support. I very respect it.
Comment by mgruhler on 2019-02-01:
I'd recommend updating to a newer version of Ubuntu/ROS. Indigo is still supported, but will be EOL'd in April.
Check http://wiki.ros.org/Distributions for the supported ROS distros and how long they will be supported.
Comment by ToanJunifer on 2019-02-01:
Thank you, @mgruhler. That would be helpful info

