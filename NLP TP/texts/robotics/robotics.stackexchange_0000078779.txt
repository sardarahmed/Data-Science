Q:

how does KDL ChainDynParam and its JntToGravity actually work?

Hello!
Could anyone share some tips and tricks? I've found that gravity should be 0, 0, -2 * 9.81 and this is strange.
Another problem is that JntToGravity doesn't account for last chain link. I'm very confused with that and don't know where to look.

Originally posted by eugene.katsevman on ROS Answers with karma: 115 on 2017-02-05
Post score: 0

Original comments
Comment by gvdhoorn on 2017-02-05:
KDL is actually not written / maintained by ROS / the OSRF, but is a library that is part of the OROCOS infrastructure. I think you'll have a better chance at getting good answers over at the KDL mailing list.
Comment by eugene.katsevman on 2017-02-05:
thanks. In a while, could you tell me if there is a KDL alternative inside of ROS?
Comment by gvdhoorn on 2017-02-06:
For some of the minor functionality (frames, etc), perhaps Eigen could be an alternative. For all the other functionality (kinematics, solvers, dynamics, etc), there are probably alternatives, but I have none to recommend.
Note that KDL is very much used in ROS, just not developed / maintained.

A:

Ok, so there is a bug in kdl_parser_py. You have to specify xyz AND rpy for link origins, otherwise they're be set to 0 both, ruining your model.
UPD: Here is the link to the pull request, which fixes the bug: https://github.com/ros/robot_model/pull/187

Originally posted by eugene.katsevman with karma: 115 on 2017-04-11
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by gvdhoorn on 2017-04-11:
Thanks for reporting this. Have you opened an issue on a tracker somewhere? If so, could you include a link to that issue? That would help future readers find it.
Thanks.
Comment by eugene.katsevman on 2017-04-11:
Here is my pull request https://github.com/ros/robot_model/pull/187
The discussion has stopped for whatever reason.

