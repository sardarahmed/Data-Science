Q:

How to read msg from /odom at time series n and (n-1)

Hi there, I hope to compare the message from the consecutive time series n and (n-1) from /odom in python. I am  confused about how to store the msg at time n-1 and time n at the same time, especially for the time sequence t=1.
def listener():
    rospy.init_node('listener', anonymous=True)
    rospy.Subscriber("/odom", Odometry, simple_callback)
    rospy.spin()
def simple_callback():
    
if __name__== '__main__':
    listener()

The problem which confused me is that: I was thinking to use some variables to store the msg at sequence n-1 and n like : current_odom=[ ] and last_odom=[ ].  However, I don't how to store the msg at time t=1, because listener() and simple_callback are in loop, I don't know when to pass the data in current_odom=[ ] and last_odom=[ ]. Could you please give me any hints?
Thank you.

Originally posted by Pujie on ROS Answers with karma: 106 on 2019-02-16
Post score: 0

A:

The quick and dirty way to do this would be to create a global variable for last and current odom. You could save this variable at the end of every loop. It would look something like this
last_odom = Odometry()
current_odom = Odometry()

def listener():
    rospy.init_node('listener', anonymous=True)
    rospy.Subscriber("/odom", Odometry, simple_callback)
    rospy.spin()

def simple_callback(data):
    global last_odom 
    global current_odom
    last_odom = current_odom
    current_odom = data

if __name__== '__main__':
    listener()

Originally posted by humanoid3 with karma: 26 on 2019-02-16
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Pujie on 2019-02-16:
Does last_odom = Odometry() mean generate an "object of Odometry" ?
Comment by humanoid3 on 2019-02-16:
Yes, it will create an empty Odometry type object.
Comment by jayess on 2019-02-16:
Instantiate an Odometry object
Comment by Pujie on 2019-02-16:
Thank you very much!
Comment by Pujie on 2019-02-16:
Learn a new word "Instantiate", thank you!
Comment by PeteBlackerThe3rd on 2019-02-17:
It should be noted that the odometry messages are not time stamped so if you want to know the delta t in seconds you'll also have to record the times the messages are received.
Comment by Pujie on 2019-02-17:
Thank you! They said that I can check something like time in msg.header.stamp to get the msg time

