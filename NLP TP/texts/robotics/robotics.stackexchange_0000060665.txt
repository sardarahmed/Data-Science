Q:

Breakpoint in ROS_ASSERT

Is it possible to set a debug breakpoint in ROS_ASSERT (gdb, Eclipse..) which only stops the program execution if the assertion fails so I can inspect the stack when the assertion fails?
It would work, if it would be like this:
if ( !( cond ) )
{
 ROS_ASSERT( cond );  // set breakpoint here
}

But without the surrounding if statement, the ROS_ASSERT is only in one line, and if I set a breakpoint there it will stop always, not only if the assertion fails.....
Any ideas on this? Thank you!

Originally posted by Wolf on ROS Answers with karma: 7555 on 2014-07-07
Post score: 1

Original comments
Comment by dornhege on 2014-07-07:
ROS_ASSERT calls abort(). You might be able to trap that directly.
Comment by Wolf on 2014-07-07:
+1 Works! Thank you!

A:

As @dornhege stated ROS_ASSERT calls abort. The SIGABRT can be trapped directly using gdb (in my case it even did by default;) ).  Note that the thereby the SIGABRT is handled, so the process 'survives' the ROS_ASSERT. You still need to kill it via gbd....

Originally posted by Wolf with karma: 7555 on 2014-07-08
This answer was ACCEPTED on the original site
Post score: 0

