Q:

How does catkin tell if a dependency is a system or ROS dependency?

I'm trying to get dependency tracking in our package.xml files squared away, but ROS seems to be trying to treat libeigen3-dev as a ROS package rather than a system dependency.
Specifically, I've got a package that depends on Eigen, the well-known header-only linear algebra library.  Sounds like a build dependency, so:
<build_depend>libeigen3-dev</build_depend>
<export_build_depend>libeigen3-dev</export_build_depend>

Here's what happens when I run rosdep check:

    ~/sentry_dev_ws$ rosdep check --from-paths src --ignore-src
All system dependencies have been satisified
ERROR[ds_sim]: Cannot locate rosdep definition for [libeigen3-dev]
    rosdep key : libeigen3-dev
    OS name    : ubuntu
    OS version : xenial
    Data: no data

Changing the dependency name to "eigen" fixes this, but eigen isn't an ubuntu apt package name.  I have the same issue with google protobuf, and will probably have it again in the future.
I have a suspician catkin's packaging tools will prove very poweful.  Just gotta figure them out first.
Thanks!

Originally posted by ivaughn on ROS Answers with karma: 76 on 2018-02-22
Post score: 0

A:

The rosdep key for Eigen is: eigen. Put that in the build depend.
On Ubuntu it resolves to the libeigen3-dev package. On other operating systems it may resolve to some different package name.
Similarly, protobuf resolves to libprotobuf9v5 on Ubuntu Xenial.
For a general introduction to rosdep: http://wiki.ros.org/ROS/Tutorials/rosdep

Originally posted by joq with karma: 25443 on 2018-02-22
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by gvdhoorn on 2018-02-23:
A bit of a 'plug', but some more info on rosdep, keys and why we use those: #q215059 (and perhaps #q217475).
Comment by ivaughn on 2018-02-27:
That's all great, the logic makes sense, etc.  But the rosdep tutorial linked does not solve the problem I have.
If I have a library key, with an apt package name, how do I find the rosdep key to put there?  And if it doesn't exist, how do I create it.  For my local system, that ships next week.
Comment by gvdhoorn on 2018-02-27:
I'm not sure a reverse rosdep lookup tool exists, but I could just have missed it.
As a work-around, open ros/rosdistro/rosdep/base.yaml, ctrl+f and type in the name of your deb pkg. If there are no hits, follow the procedure ..
Comment by gvdhoorn on 2018-02-27:
.. to submit new rules here.
Personally I skip the Make sure that your rules work section most of the time.

