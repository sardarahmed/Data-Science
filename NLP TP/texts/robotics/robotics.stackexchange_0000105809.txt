Q:

Mapping servo motor angles to 3d link angles

I have been programming for a 6DOF robot arm with forward and inverse kinematics functionality. The problem I am facing in my head is to how to correctly set different servo motor values to specific link angles. These are basically 6 MG996R servo motors which i have soldered from the pots inside to read the value to calculate the internal servo angles returned so far. The problem is, should I just set the servo angles in such a way to obtain a default robot positioning and then calculate the boundaries each motor may face for forward or inverse kinematics. I had Industrial robotics lessons back in my bachelors program but for the first time I am building something by myself.
in terms of the angles, I read values from the terminal with UART communication and move the specific servos with the given angle. The problem is the servo rotation angle and the link or frame angle for forward and inverse kinematics seems to be apart in my project. For example the default starting orientation for my base frame is 90 degrees counter clockwise rotation from the default positioning. Should I just set the angles and the robots specific starting apart or should i do something more generic ?

A:

The problem is the servo rotation angle and the link or frame angle
for forward and inverse kinematics seems to be apart in my project.

This is normal. You need a kinematic description (usually called robot_description) which describes the physical characteristics of your robot arm (e.g. link lengths and the 3d-orientation of the 'zero-position' of each joint.)
The Forward Kinematics (FK) can then use this description, plus the current-joint-angle values, to calculate the current Transform Frame (TF) of a link.

