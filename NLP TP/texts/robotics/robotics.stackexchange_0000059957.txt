Q:

RGBDSLAM Indigo support

Hi to all,
Well after having some conversations with @FelixEndres, and since I need RGBDSlam working on ROS Indigo so to implement it in a Odroid running Ubuntu 13.10, I decided to try to make the migration of the source code to Indigo, which will certainly be useful to others to come.
Some of the initial problems wore corrected by downloading and compiling g2o and OpenCV-2.4.9 from source, so to rgbdslam can detect them and then use them. But then, I got some errors on the code that should be resolved by adapting the code to the OpenCV architecture, but I will need some help on those, since Felix is busy with is PhD and I need this to my MSc thesis. So a help from someone with knowledge on OpenCV functions and headers will be great.
So, when doing catkin_make on my ws I get the following list of errors:

This code block was moved to the following github gist:
https://gist.github.com/answers-se-migration-openrobotics/b8f0064e06e8fca5bf09560a0a934930

Any tips on what substitutions on the headers should be done? I believe this is a include problem and not function problems, as it seems that there must be some kind of conflict with the namespace cv.
Thanks in advance!
Originally posted by TSC on ROS Answers with karma: 180 on 2014-06-09
Post score: 2

A:

It works fine on the odroid running Hydro. The only real issue is QT4. We haven't tried migrating to Indigo but I think that might be a task for the summer. Anyways I have found that your initial error comes from the make file. You need to turn off sift but you will get other issues.
Also I think the best way to go about installing g20 and OpenCV is to install from the package manager because that creates all the symbolic links/pointers and then you can compile is from source in a ghost directory. From there you copy over your newly compiled stuff into the directories that the package manager made overwriting all files.

Originally posted by kbalisciano with karma: 26 on 2015-03-18
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by TSC on 2015-03-18:
"works fine" is note really the case, maybe you mean "compiles fine".Last year, for my thesis, I was also able to compile in ROS Hydro, but is not really usable. Transform publishing rates are unberable (below 0.1Hz) and not really usable for the purpose of my thesis (vision-based navigation).
Comment by kbalisciano on 2015-03-18:
We were able to get 1 FPS after compilation and 5-6 FPS after some optimization. It is actually painfully slow on my Core i7, 8GB Ram, SSD, and gpu with 4GB dedicated ram laptop. The Odroid handles it very well.
EDIT: Also if you run is at QVGA resolution things are much faster
Comment by TSC on 2015-03-18:
Have some problems also on my Laptop with it (core i7, 32GB RAM, SSD, ...), but running on a VM (don't know if it makes substancial difference). Well you say it handles well, can you please share your RGBDSLAM files with the optimizations? My e-mail is: n.marques21hotmailcom. Thanks!
Comment by kbalisciano on 2015-03-18:
You really just want to change the options in the drop down menu such as the number of features you detect and the resolution. You need to match it to your specific needs. Voxel Grid filter is useful if you don't need a great map
Comment by TSC on 2015-03-18:
@kbalisciano just the VoxelGrid? What FeatureExtractor and Matcher are you using? ORB? BTW, what's the Ubuntu release?
Are you working with drones, too?

