Q:

Navigation outdoors, how?

Hello,
PLEASE NOTE THIS IS NOT MY HOMEWORK, I AM JUST ASKING FOR DIRECTIONS
I am quite new to ROS. I'm working on a research project where we have to move a mid-sized vehicle (1m^2) from point A to point B, along a curved track (outdoors), ROS Kinetic, Ubuntu 16.04 LTS.
I considered using OpenCV for edge detection/line detection, but the track is very wide so there aren't many reference points, and no lanes either.
I have looked recently looking into ROS navigation stack as well as SLAM. It looked very promising until I realized it's probably suited better for indoor use (correct me if I am wrong)?
My sensor payload is this:

Doppler sensor (50m range, noise resistant)
GPS INS (up to 2cm position accuracy)
LEDDAR VU8 unit (20 degrees beam, up to 185m range, not a 360 LIDAR)
Many ultrasonic proximity detectors (~50 degrees beam, 7m range)
Stereoscopic cameras

So that's my sensor payload, I have them all integrated into ROS. I am, however, slightly confused where to go from here. I  understand how SLAM and then navigation stack do it, but they use a 360 degree LSD for mapping/localisation, plus, all the examples I have seen are done indoors.
The only current idea I've is to use GPS INS sensor to follow pre-recorded set of waypoints, however that wouldn't account for any changes on the map (like obstacle avoidance in SLAM/navigation stack).
I am not exactly sure where to start looking. Can it be done with the ROS navigation stack? Are there any other navigation packages that I can research?
Again, I am not asking for a solution, I would extremely be grateful if any of you could provide any links, sources, books, suggestions or directions.
Thanks!

Originally posted by Hypomania on ROS Answers with karma: 120 on 2018-07-06
Post score: 3

A:

To answer your direct question: Yes. There are other packages to use for navigation, but the Navigation Stack is still a good way to start even if you will need to move to a few different nodes to finish your project. I think you'll be frustrated if you start off trying to create a custom solution to your specific use. I really think it better you gain some experience with a configuration that is known to work. Use the Navigation Stack as your "hello world" app. Get the robot working and tune to give good results. This you could be done indoors with a temporary 360 lidar if needed, but you could also use the stereo cameras to get a laser scan message with some effort.
The GPS is good enough that you could use the robot localization package instead of AMCL for locating.  I make an assumption that you have encoders on the drive motors, and that you are using wheels.  But even if you don't, it may be OK.
http://wiki.ros.org/robot_localization
For obstacle detection, there really is no substitute for 360 Lidar but you have enough sensors that it could be made to work. You'll use costmaps to integrate the different sensor data into a form that Navigation Stack/Move Base can use for obstacle detection and avoidance.
http://wiki.ros.org/costmap_2d/Tutorials/Configuring%20Layered%20Costmaps

Originally posted by billy with karma: 1850 on 2018-07-06
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Hypomania on 2018-07-06:
Thank you for your answer! Sadly I do not have a 360 LIDAR unit. I can't really gather much mapping data with a stationary LIDAR, can I (same goes for cameras)? The way I understand navigation stack is that it always needs a map, which I can't get without a 360 LIDAR, or can I?
Comment by Hypomania on 2018-07-06:
And yes, I am using wheels, it's a 4 wheel vehicle with it's own vehicle control system controlled via CAN bus, so controlling the actuators, motors and servos is as easy as sending a single command.
Comment by billy on 2018-07-06:
You don't have to do SLAM. You could simply draw a map if the environment is simple. It actually may be required anyways as it sounds like the path you need to follow doesn't contain any landmarks the lidar will see. ...continued...
Comment by billy on 2018-07-06:
The map.yaml file you'll learn about in the tutorials sets resolution of map and you can draw the map in GIMP.  I would probably use maps.google to get overhead view of area and trace over it to make map.
Comment by Hypomania on 2018-07-06:
So as far as I understand I do the mapping by drawing it manually, do the localisation with the GPS sensor and obstacle avoidance with ultrasonics/LIDAR? Drawing the map is a part of costmap_2d package, am I correct?
Comment by billy on 2018-07-06:
#1 - yes
#2 - Not really. Costmap will use the map you provide, in conjunction with sensor data, to build a cost map that move-base will use for planning.

