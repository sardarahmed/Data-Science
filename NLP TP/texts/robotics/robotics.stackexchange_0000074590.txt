Q:

"The library is neither a target nor built/installed properly"

Hello,
Hello I have a package called wp3_driver_pkg which builds without errors when I build it alone but when I'm trying to use it in another package (ur10) I have the following error :

  Project 'ur10' tried to find library 'wp3_driver_pkg'.  The library is
  neither a target nor built/installed properly.  Did you compile project
  'wp3_driver_pkg'? Did you find_package() it before the subdirectory
  containing its code is included?

The package wp3_driver_pkg has been added to the  ur10 package.xml for build and run.
and is called  in the cmakefile.txt of the ur10:

find_package( wp3_driver_pkg REQUIRED)

This is the catkin_package() in the cmakefile.txt for the wp3_driver_pkg

catkin_package(
INCLUDE_DIRS include
LIBRARIES ${PROJECT_NAME} wp3_driver_lib
CATKIN_DEPENDS message_runtime roscpp rospy roslib ${MSG_DEPS}
)

the wp3_driver_lib is a library added in the same cmakefile with the source file

 add_library(wp3_driver_lib
         src/wp3_driver.cpp
)
target_link_libraries(wp3_driver_lib
        ${catkin_LIBRARIES}
)

I can even see the package being built before in the terminal :

And if I use the command "rospack fin wp3_driver_pkg" just after the failed compilation and the package is found, even if I suppress the devel and build folder of the workspace.
Thanks for the answers  if you see what I'm doing wrong !

Originally posted by sumperfees on ROS Answers with karma: 77 on 2016-06-16
Post score: 7

A:

You are trying to export a hypotetical library called ${PROJECT_NAME}.
In your case it looks you don't have any target or library called ${PROJECT_NAME}. Instead, in your case you only have to export the library "wp3_driver_lib" that is the only artifact that really exits.
catkin_package(
INCLUDE_DIRS include
LIBRARIES ${PROJECT_NAME} wp3_driver_lib
CATKIN_DEPENDS message_runtime roscpp rospy roslib ${MSG_DEPS}
)

Originally posted by Pablo IÃ±igo Blasco with karma: 2982 on 2016-06-16
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by moatilliatta on 2016-10-13:
I don't understand your answer. I have a similiar problem and I did it like you quoted it. But the proplem persists. Is there another command how to export the library?
Comment by bluenote on 2019-01-16:
Me neither. Isn't the code snippet posted in your answer exactly the same as the one in the question? What has to be changed?
Comment by lucasw on 2019-03-29:
I had to remove the LIBRARIES line entirely, I wasn't building anything named ${PROJECT_NAME} (or building anything conventionally at all, just messages for _msgs style package).

