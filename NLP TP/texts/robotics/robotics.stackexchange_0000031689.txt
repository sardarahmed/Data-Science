Q:

Calibrating Kinect with surroundings

Hey everyone <br >
I am having a serious problem with my Kinect project, but since many are working with the Kinect camera, then I hope someone have solved this or atleast have an idea how to solve it. <br >
My Kinect camera is able to find a suitable grasping point, but is done according to the optical frame of the Kinect camera. In order to use it with a robot arm, then I need to know how the base of the robot arm is located according to the camera. <br >
I have tried to use markers on the robots end-effector and combine it with the knowledge of the forward kinematic, but apparently there is some serious errors with the markers (ArToolKitPlus), which means the distance on the z-axis is several centimeters off. In am not entirely sure why, but atleast I am looking for an alternative method to calibrate the Kinect camera with the environment and I hope someone have some ideas <br >
Regards <br >
Sebastian Aslund

Originally posted by Aslund on ROS Answers with karma: 289 on 2011-05-19
Post score: 1

A:

You might want to check out a submission to the ROS 3D contest: Automatic Calibration of the 3D pose of the Kinect with respect to the robot base. Uses fast ICP to track the 3D pose of the Kinect, then uses a global optimization to retrieve the static transformation. (http://www.ros.org/wiki/openni/Contests/ROS%203D/Automatic%20Calibration%20of%20Extrinsic%20Parameters)
This should help you get an initial guess between your base link and kinect. So that you can start making a URDF.
Then you might want to look at this tutorial: How to learn kinematic models of articulated objects only by using a webcam and a laptop. (http://www.ros.org/wiki/articulation_tutorials/Tutorials/ArticulationWebcamDemo)
Which might help you finish making your URDF.
Another approach might be to use the ar_pose package to determine the rough locations of each joint in the camera frame and then use those measurements to construct a URDF.
Unfortunately people typically get out a ruler and just measure these things because it is faster and in general more accurate.

Originally posted by mmwise with karma: 8372 on 2011-06-27
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by fergs on 2011-06-27:
You might look at ar_kinect instead of ar_pose, as it is far more accurate on the Kinect, and requires no calibration of camera parameters.

