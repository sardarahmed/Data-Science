Q:

Custom global planner

Hello,
I would like to create my own global planner.
So far I have created a simple path that should move robot for 0.5m to the left using "nav_msgs::Path mypath", and publish it to the "move_base/NavfnROS/plan" . The path is shown in the rviz, but robot doesn't start to move on it.
What am I missing? Or what would be the easiest way for me to "foward" my custom path to move_base (robot).
I only want to change global plan, I still want for local plan to work normally and avoid obstacles etc.

Originally posted by Darkmaster on ROS Answers with karma: 43 on 2012-07-18
Post score: 2

Original comments
Comment by Darkmaster on 2012-07-18:
I think I need to implement BaseGlobalPlanner. Can you point me more on what to do? I'm still a beginner.
Comment by ngoldfarb on 2016-01-12:
How did you get the path to appear? I am publishing a nav_msgs Path mypath (in Python) but it will not appear in Rviz.
Comment by skpro19 on 2021-06-10:
@Darkmaster please see this.

A:

If you're looking to integrate your new global planner with move_base, you should check out the code for navfn and carrot_planner. carrot_planner is much simpler for a global planner and it would be a really good place to start. There's only one source file and it's essentially a straight-line planner.
Essentially, your planner must implement two methods to fit the BaseGlobalPlanner interface:
void initialize(std::string name, costmap_2d::Costmap2DROS* costmap_ros);
bool makePlan(const geometry_msgs::PoseStamped& start, const geometry_msgs::PoseStamped& goal, std::vector<
  geometry_msgs::PoseStamped>& plan);

The initialize() method acts as a replacement for the constructor. You should do all of your construction in this method instead of in the actual constructor.
The makePlan() method is the one that is called when move_base asks for a new plan.

Originally posted by DimitriProsser with karma: 11163 on 2012-07-18
This answer was ACCEPTED on the original site
Post score: 6

