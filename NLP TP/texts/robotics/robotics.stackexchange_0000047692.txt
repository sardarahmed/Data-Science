Q:

Zero copy passing of OpenCV datatypes with nodelets

Hi,
I am thinking about setting up an image processing pipeline using nodelets for a high flexibility. Is there a easy way to pass OpenCV datatypes between nodelets without having to convert them to ros-messages? For example, I would like to pass pointers to image data associated with cv::Mat objects stored in a shared memory. I want to avoid copying or converting this data.

Originally posted by Tones on ROS Answers with karma: 635 on 2013-01-28
Post score: 2

A:

You don't want to start with the OpenCV datatypes.  The best method in ROS is to use nodelets with sensor_msgs::ImageConstPtrs.  Then you cast them to a cv share using cv_bridge:
http://www.ros.org/wiki/cv_bridge
http://www.ros.org/wiki/cv_bridge/Tutorials/UsingCvBridgeToConvertBetweenROSImagesAndOpenCVImages#cv_bridge.2BAC8-Tutorials.2BAC8-UsingCvBridgeCppDiamondback.Examples_of_sharing_the_image_data
This shares the large amount of image data that you do not want to copy, but sets up the correct metadata for each image type.
If you want to see this "in the wild" take a look at image_pipline, it all uses nodelets and follows best practices for image processing in ROS:
https://github.com/ros-perception/image_pipeline/blob/groovy-devel/image_proc/src/nodelets/rectify.cpp

Originally posted by Chad Rockey with karma: 4541 on 2013-01-28
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Tones on 2013-01-29:
Thanks for your answer!

