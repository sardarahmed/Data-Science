Q:

Why /base_footprint's position is not (0,0,0) in /tf?

I echo /tf:
 - 
    header: 
      seq: 0
      stamp: 
        secs: 1310
        nsecs: 562000000
      frame_id: /base_footprint
    child_frame_id: /base_link
    transform: 
      translation: 
        x: 0.0
        y: 0.0
        z: 0.051
      rotation: 
        x: 0.0
        y: 0.0
        z: 0.0
        w: 1.0

But I found that in gazebo it shows (0,0,0).

What's happened?

Originally posted by sam on ROS Answers with karma: 2570 on 2013-09-26
Post score: 0

A:

Everything in tf is relative. There is no absolute position, so nothing is at 0,0,0.
TF only describes transformations between different frames. In your case base_footprint and base_link. The footprint is "on the ground" while the base_link is setup a little bit higher as the wheels make the robot a bit above the ground. That's the only thing that you see in the tf output.
As this is relative, if you'd move the robot in gazebo, the transform will also stay the same.
Of course gazebo has to have some global coordinate system, but that is independent of tf, unless you anchor a fixed frame at gazebo's world frame.

Originally posted by dornhege with karma: 31395 on 2013-09-26
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by sam on 2013-09-27:
I understand 0.051 means the offset between base_footprint and base_link. Why gazebo don't use the same coordinate system like tf? Thank you~
Comment by dornhege on 2013-09-27:
TF sits on top of that, i.e. after gazebo. Gazebo just simulates a robot. tf information is computed from gazebo data in the same way it would be for a real robot. There is no tf coordinate system as all tf information is produced somewhere in the system (e.g. from gazebo).

