Q:

Technical details of the VSLAM package

Hi,
Can anyone help me with the technical details of the VSLAM package? Like What feature matching techniques were used (in the VSLAM_SYSTEM package available in ROS), what was the main uncertainty algo used - Kalman Filter? EKF? or Monte-Carlo Implementation?
Or is there any paper that I could refer to that would help me figure these out. I want to know what methods were used to implement the VSLAM package available in ROS.
I'm trying to analyze the performance of VSLAM for my thesis and I really need to find out what algorithms have been used in order for me to get started.
Thank you.

Originally posted by Divya on ROS Answers with karma: 46 on 2012-03-19
Post score: 0

A:

The VSLAM package in ROS (http://www.ros.org/wiki/vslam), is (a) unsupported (b) out of date and (c) very brittle, as most VSLAM systems are.
If you want to know how it works, read the code. If you're looking for a highly general VSLAM that will work on your system, for your data, we recommend you look elsewhere.

Originally posted by Mac with karma: 4119 on 2012-03-20
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Divya on 2012-03-20:
Um.. I know its slightly out-dated. Unfortunately, my project is based on this particular version of VLSAM implementation and I've already done my testing using this particular set of packages!  That's precisely why I need the technical details of this particular implementation! :| ..
Comment by Divya on 2012-03-20:
I'm also using another Visual odometry method called libviso which works with OpenCV.. I am basically trying to compare the performance of that with VLSAM.. Sorry if I am making it all the more confusing!
Comment by Mac on 2012-03-21:
Then you'll need to read the code; since it's not supported anymore, that's the best we can do.
Comment by Divya on 2012-03-21:
ahh!! I read through most of the code. To be honest, I don't understand most of it! Anyways, thank you :)

