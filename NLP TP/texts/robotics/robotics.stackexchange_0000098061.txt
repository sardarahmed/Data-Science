Q:

How to visualise under-actuated joints in rviz?

I am working on a project where I have attached a custom-designed four-wheel cart on the rear axle of the Clearpath Robotics Ridgeback robot. I have two problems -

The cart is attached with an underactuated continuous joint of which the value/position can be changed using the joint_state_publisher, but when the robot-trailer system is moved, the change in the orientation as in Gazebo is not reflected/visualized in rviz. The same problem exists with the wheels of the cart which are also underactuated. How do I get them visualized as their state changes in Gazebo?

The cart keeps drifting about its hitch axis on its own when the robot is moved. I tried adding weight/payload on the cart but it didn't make a difference. I did set the coefficients of friction to zero as the robot model also had them set to zero. I'm not able to figure out the appropriate setup which can solve this problem.

Here are some pictures of the system I am using -
https://drive.google.com/file/d/1xkEUyJQw4vm2vNLgaF4gDX16NLWsI0pQ/view?usp=sharing
https://drive.google.com/file/d/1Xz2B9Naml5NKc_2U85W1JDyMubNKNPZc/view?usp=sharing
https://drive.google.com/file/d/1Tjo3K1QAeAtXhgdmKcIbcpSdNfxUGjvE/view?usp=sharing

Please help me solve these problems.
Thank You.

Originally posted by hanks on ROS Answers with karma: 57 on 2021-01-15
Post score: 1

Original comments
Comment by gvdhoorn on 2021-01-15:
Please do not link to images on Google drive. They tend to disappear. Please attach your images directly to the post. You have sufficient karma to do that.

A:

Actuated or not, RViz reflects the current transform tree.  If it's visualizing the robot but doesn't show updated poses, it's because RViz doesn't know about them.  Do you have a robot_state_publisher node running?  Here's an example from the tutorial:
 <node pkg="robot_state_publisher" type="robot_state_publisher" name="rob_st_pub" >
   <remap from="robot_description" to="my_robot_description" />
   <remap from="joint_states" to="different_joint_states" />
 </node>

If there's no friction, damping, or actuator, there's nothing to stop the joint once it starts moving, so what you describe sounds like expected behavior.  If the behavior doesn't make sense--even for a fricitonless world-- then some of the other physical parameters may be off, but we'll need more information to track down the problem.  The URDF joint wiki provides information on how to add damping or friction to a joint:
 <joint name="my_joint" type="floating">
   <origin xyz="0 0 1" rpy="0 0 3.1416"/>
   <parent link="link1"/>
   <child link="link2"/>

   <calibration rising="0.0"/>
   <dynamics damping="0.7" friction="0.0"/>  # Make one of these non-zero
   <limit effort="30" velocity="1.0" lower="-2.2" upper="0.7" />
   <safety_controller k_velocity="10" k_position="15" soft_lower_limit="-2.0" soft_upper_limit="0.5" />
 </joint>

If you want to see the casters move properly, you'll need surface friction between them and the ground.  The Gazebo friction tutorial provides an example and some helpful links.  You may also consider just modeling them as frictionless spheres, depending on your application.

###Update 1
You can add actuators without using them, so the joint remains free to move.  Since you're using a JointStateController, just add a transmission to each movable joint in ridgeback.urdf.xacro.  Here's an example for cargo_cart_joint:
...

<joint name="cargo_cart_joint" type="revolute">
  <origin xyz="0 0 0.025" rpy="0 0 0" />
  <parent link="tow_hitch_link"/>
  <child link="cargo_cart_link" />
  <axis xyz="0 0 1" />
  <limit lower="-${PI/2}" upper="${PI/2}" velocity="0" effort="0"/>
  <dynamics damping="${damping_coef}" friction="${friction_coef}" />
</joint>

<transmission name="cargo_cart_trans">
  <type>transmission_interface/SimpleTransmission</type>
  <joint name="cargo_cart_joint">
    <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
  </joint>
  <actuator name="cargo_cart_joint_actuator">
    <mechanicalReduction>1</mechanicalReduction>
  </actuator>
</transmission>

...

Then, ridgeback_joint_publisher will publish the states of those joints.  It only finds joints "registered to a hardware_interface::JointStateInterface" as mentioned in the ros_control wiki.  You'll also have to get rid of joint_state_publisher_gui in empty_world.launch as that will collide and cause the published joint state to flip back and forth.

###Update 2
I agree that revolute joints seem to behave as expected, though I don't know why the continuous joints don't.  In any case, I recommend adding some trailing distance to the casters to encourage "following" behavior, and adding damping/friction to address the drift/skid issue.
I changed your URDF file as follows:
...

<xacro:property name="damping_coef" value="0.7" />
<xacro:property name="friction_coef" value="0.5" />

...

<joint name="${prefix}_${side}_cart_wheel" type="continuous">
  <parent link="${prefix}_${side}_wheel_holder_mid_link"/>
  <child link="${prefix}_${side}_cart_wheel_link" />
  <axis xyz="0 1 0" />
  <origin xyz="-0.1 ${-(s_location*wheel_width/2)} -0.11" rpy="0 0 0"/>  # Note x < 0
</joint>

...

and in ridgeback.gazebo (used to set friction to zero):
...

<gazebo reference="front_left_cart_wheel_link">
  <material>Gazebo/DarkGrey</material>
</gazebo>

<gazebo reference="front_right_cart_wheel_link">
  <material>Gazebo/DarkGrey</material>
</gazebo>

<gazebo reference="rear_left_cart_wheel_link">
  <material>Gazebo/DarkGrey</material>
</gazebo>

<gazebo reference="rear_right_cart_wheel_link">
  <material>Gazebo/DarkGrey</material>
</gazebo>

...

Originally posted by tryan with karma: 1421 on 2021-01-15
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by hanks on 2021-01-16:
Thank you for your reply. Here is the state of the problems according to your suggestions -

I actually do have a robot_state_publisher node running, but the joint_state_publisher that is attached to it is not publishing the joints that I have added. Is it because I haven't attached any transmission or actuator plugin to them? Because I want them underactuated. I couldn't figure out how to add them to the control.yaml file where the joint_state_publisher is defined.

I tried adding friction and damping (various values) to the wheels but they either stop swiveling or keep swiveling. In either case, the cart still drifts. Is there any specific information I can provide to help track down the problems?
And about the wheel design, I am actually trying to model a cart/trolley and for that reason, I designed the swivel wheels instead of spheres for castors. I want to make this version work, but if it doesn't I can switch to spheres.

Please let me know what can be done. Thank You.
Comment by tryan on 2021-01-16:
Please post your URDF and launch files, and I'll take a closer look at your issues.
Comment by hanks on 2021-01-17:
Sure, I have made a drive folder since I won't be able to add all the files here. I have added the necessary files and here is how they are executed/called -
The empty_world.launch file calls the other respective files in the following order -
empty_world.launch -> joint_state_publiesher_gui; empty_world.launch (gazebo_ros); spawn_ridgeback.launch(ridgeback_gazebo) -> description.launch(ridgeback_description); control.launch -> ridgeback.urdf.xacro; robot_state_publisher
Here are the files - https://drive.google.com/drive/folders/1kyLQqCFD5ex7VnVXjuRbn9Bn8XsO1fZX?usp=sharing
Please let me know if you need any other files or details. I really have to solve this problem to move further in my project. Thank you for your help.
Comment by tryan on 2021-01-17:
Let's make sure we handle "Issue 1" first.  You are correct that the behavior is related to not having attached transmissions; however, you also have two joint state publishers: one from ros_control and one from joint_state_publisher_gui.  Your cart wheels don't appear to move because the second (GUI) is publishing zeros by default.  See Update 1 in my answer for further details, and let me know if that doesn't solve the issue.
Comment by hanks on 2021-01-18:
I added the transmissions to the joints and removed the joint_state_publisher_gui node as you suggested, and it partly worked. The cargo_cart_joint works as I wanted and also reflects the joint position in rviz. But the holder joints (for swivel) and cart-wheel joints don't rotate at all (they remain stuck in the default position). The cart drift problem still persists.
I updated the empty_world.launch and ridgeback.urdf.xacro files and also added some recordings for you here - https://drive.google.com/drive/folders/1kyLQqCFD5ex7VnVXjuRbn9Bn8XsO1fZX?usp=sharing
Please take a look and let me know what can be done. Thanks a lot for the help.
UPDATE - I changed the holder joints and cart-wheel joints to revolute joints with -pi to pi limits from continuous joints and now they work like the cargo_cart_joint. Cart drift/skid problem still persists. Have added another video labeled revolute joints for you to the same folder.
Comment by tryan on 2021-01-19:
Friction/damping should take care of the drifting, and I would add some trailing distance to the casters.  I'll add a modified URDF to my answer to show you what I mean.
The wheels should definitely be continuous; otherwise, the cart will only be able to roll a short distance before the wheels lock and start skidding.  The continuous joints moved for me, though not as I expected, and the revolute joints definitely move more naturally.  I'm not sure why that is and won't really have time to investigate for awhile.  Since your initial question is answered, I suggest opening a new question specific to the caster wheel issue (unless you can find an answer already posted or are satisfied with the revolute joints).
Comment by hanks on 2021-01-21:
Thank you for all your help. The friction and damping values have solved the drift problem. The new problem is, since the continuous joints of the cart-wheels don't rotate, the cart is not stable when the robot is moving. Currently trying to solve that but not able to figure out the reason the wheel joints won't rotate. They still do rotate when I change the joints to revolute, but as you said, revolute joints won't work for the wheels.
Anyway, thank you for the help, really appreciate it. If you do get time, please investigate why the continuous wheel joints won't rotate. Thank you.
Comment by hanks on 2021-02-03:
Hey @tryan, I have started another question with some issues I'm facing. Here is the link - https://answers.ros.org/question/370845/continuous-joints-dont-rotatework/
Please take a look if possible, thanks.

