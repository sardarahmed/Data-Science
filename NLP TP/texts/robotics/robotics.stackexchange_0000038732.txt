Q:

Navigation stack with a very asymmetric diff drive robot

Hello all,
We are using ros navigation for a rectangular robot base with the rotation center (O) placed close to one side (sorry for the foolish sketch). M are powered wheels, c castor wheels
   ________________
  |                |
  | M            c |
  | O    <--       |
  | M            c |
  |________________|

Setting properly the footprint around O (footprint: [[0.18, 0.26], [-0.64, 0.26], [-0.64, -0.26], [0.18, -0.26]]) and base_link also in O, makes the nav stack behave quite bad, getting stuck very easily close to obstacles. The speeds issued by the local planner get very, very low, almost zero. One could said that robot becomes very "scary". By other hand, if I fake the footprint and base_link to place the rotation center in the physical center of the robot, navigation improves a lot, and works as expected (as long as you don't try in-place rotations with and obstacle in the back part sides).
Any similar experience?  Any clue about how to better understand what's happening?
Thank you very much.
Jorge

Originally posted by jorge on ROS Answers with karma: 2284 on 2012-03-15
Post score: 3

A:

As far as I'm aware, the navigation stack only supports robot footprints that are centered around the center of rotation of the robot. In my experience, the stranger the shape of the robot, the more difficulty the navigation stack has with it.

Originally posted by DimitriProsser with karma: 11163 on 2012-03-16
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by tfoote on 2012-03-29:
sbpl_lattice_planner has been used for some more eccentric robot shapes, but it takes a little bit more work to get it running.  The default global planners shrink the robot to a point and expand obstacles, which is why they work better for close to circular robots.  It's much faster to do this.

