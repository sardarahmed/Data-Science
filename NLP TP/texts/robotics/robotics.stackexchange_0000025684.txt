Q:

DRCSIM: five related questions to API and JointCommands

As a follow up to question 946 and new DRCSIM API http://gazebosim.org/wiki/DRC/UserGuide
The https://bitbucket.org/osrf/osrf-common/raw/default/ros/osrf_msgs/msg/JointCommands.msg
shows terms for a standard PID + feedforward control policy.

Will the API allow resetting of the integral value?  Preferably to an arbitrary value, and not just zero

How will the controller handle saturation?
(will there be integral tie back to prevent windup?)

What are the units of terms?  (e.g. N*m, fraction max effort, ...).
The bitbucket link doesn't specify units, although I thought I saw N*m somewhere else.

Related to (2) and (3), will the individual actuator limits be published,
or are we responsible for parsing the model definition file?

Will the jointCommands be issued in a vector to guarantee synchronous execution, or will the individual joint commands be sent separately?  If latter, is there any way to guarantee coordinated execution?

The need for synchronous execution and potentially the need for a trajectory vector will depend on the answers to question 946 regarding update rate.

Originally posted by dcconner on Gazebo Answers with karma: 298 on 2013-01-22
Post score: 0

A:

1) Will the API allow resetting of the integral value? Preferably to an arbitrary value, and not just zero

We are not currently planning on providing such an API, please file a feature request if it's important to your controller development.
2) How will the controller handle saturation?  (will there be integral tie back to prevent windup?)

The effort command produced by the integral term is limited by [i_effort_min, i_effort_max].
3) What are the units of terms? (e.g. N*m, fraction max effort, ...).

We will be using MKS throughout DRCSIM.
4) Related to (2) and (3), will the individual actuator limits be published, or are we responsible for parsing the model definition file?

In ROS, the common practice is to obtain the Robot URDF from the ROS parameter server and use existing libraries to parse it.
5) Will the jointCommands be issued in a vector to guarantee synchronous execution, or will the individual joint commands be sent separately? If latter, is there any way to guarantee coordinated execution?

Each subsystem (Atlas, right hand, left hand and head) is expected to receive JointCommands messages containing commands for all joints simultaneously.  We do not expect to coordinate execution between subsystems.

Originally posted by hsu with karma: 1873 on 2013-01-23
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by dcconner on 2013-01-23:
Thanks.  I will file a feature request for (1).
Comment by dcconner on 2013-01-23:
re: (2)  from this answer I presume that integral term will be clamped, and then the output torque will be clamped separately.  I will file a separate feature request that if the overall output is clamped, that the integral term is calculated to give the continuous control as the controller moves in and out of saturation.
Comment by dcconner on 2013-01-24:
https://bitbucket.org/osrf/drcsim/issues #91 and #92 were posted in response to these questions and answers

