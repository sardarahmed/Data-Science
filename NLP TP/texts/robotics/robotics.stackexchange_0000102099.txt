Q:

Robot Localization ekf_node: frame ID "camera_imu_optical_frame" does not exist

Hello,
I am new to ROS, and I was trying to use ROS2 to implement SLAM with RealSense Camera L515. I tried to search for others with similar issues, but haven't had any success.
Operating System & Version: Linux (Ubuntu 20.04) on Jetpack 5.01
ROS2 Distro: Foxy
Kernel Version: 5.10.65-tegra
Platform: NVIDIA Jetson Xavier NX
I'm working to set up odometry for my robot that utilizes the L515 and its internal imu. I don't have my wheel odometry set up yet, but I wanted to see if I could run the ekf_node from the robot localization package with just the imu first, but I encountered a barrage of warnings when I launched the node in conjunction with the realsense camera node. This message was repeatedly printed in the terminal:
[ekf_node-1] Warning: Invalid frame ID "camera_imu_optical_frame" passed to canTransform argument source_frame - frame does not exist
[ekf_node-1]        at line 133 in /tmp/binarydeb/ros-foxy-tf2-0.13.13/src/buffer_core.cpp

My ekf.yaml config file is as follows:
### ekf config file
ekf_filter_node:
    ros__parameters:
        frequency: 30.0
        sensor_timeout: 0.1
        two_d_mode: false
        transform_time_offset: 0.0
        transform_timeout: 0.0
        print_diagnostics: true
        debug: false
        debug_out_file: /path/to/debug/file.txt
        publish_tf: true
        publish_acceleration: false
        map_frame: map              # Defaults to "map" if unspecified
        odom_frame: odom            # Defaults to "odom" if unspecified
        base_link_frame: camera_link  # Defaults to "base_link" if unspecified
        world_frame: odom           # Defaults to the value of odom_frame if unspecified

        odom0: example/odom
        odom0_config: [true,  true,  false,
                    false, false, false,
                    false, false, false,
                    false, false, true,
                    false, false, false]
        odom0_queue_size: 2
        odom0_nodelay: false
        odom0_differential: false
        odom0_relative: false
        odom0_pose_rejection_threshold: 5.0
        odom0_twist_rejection_threshold: 1.0

        odom1: example/odom2
        odom1_config: [false, false, true,
                    false, false, false,
                    false, false, false,
                    false, false, true,
                    false, false, false]
        odom1_differential: false
        odom1_relative: true
        odom1_queue_size: 2
        odom1_pose_rejection_threshold: 2.0
        odom1_twist_rejection_threshold: 0.2
        odom1_nodelay: false
        pose0: example/pose
        pose0_config: [true,  true,  false,
                    false, false, false,
                    false, false, false,
                    false, false, false,
                    false, false, false]
        pose0_differential: true
        pose0_relative: false
        pose0_queue_size: 5
        pose0_rejection_threshold: 2.0  # Note the difference in parameter name
        pose0_nodelay: false

        twist0: example/twist
        twist0_config: [false, false, false,
                        false, false, false,
                        true,  true,  true,
                        false, false, false,
                        false, false, false]
        twist0_queue_size: 3
        twist0_rejection_threshold: 2.0
        twist0_nodelay: false

        imu0: camera/imu
        imu0_config: [false, false, false,
                    false,  false,  false,
                    false, false, false,
                    false,  false,  true,
                    true,  false,  false]
        imu0_nodelay: false
        imu0_differential: false
        imu0_relative: true
        imu0_queue_size: 5
        imu0_pose_rejection_threshold: 0.8              # Note the difference in parameter names
        imu0_twist_rejection_threshold: 0.8             #
        imu0_linear_acceleration_rejection_threshold: 0.8  #

        imu0_remove_gravitational_acceleration: true
        use_control: true
        stamped_control: false
        control_timeout: 0.2
        control_config: [true, false, false, false, false, true]
        acceleration_limits: [1.3, 0.0, 0.0, 0.0, 0.0, 3.4]
        deceleration_limits: [1.3, 0.0, 0.0, 0.0, 0.0, 4.5]
        acceleration_gains: [0.8, 0.0, 0.0, 0.0, 0.0, 0.9]
        deceleration_gains: [1.0, 0.0, 0.0, 0.0, 0.0, 1.0]

        process_noise_covariance: [0.05, 0.0,   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.05, 0.0,  0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.06, 0.0,  0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.03, 0.0,  0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.03, 0.0,  0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.06, 0.0,  0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.025, 0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.025, 0.0, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.04, 0.0,  0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.01, 0.0,  0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.01, 0.0,  0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.02, 0.0,  0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.01, 0.0,  0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.01, 0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.015]

        initial_estimate_covariance: [1e-9, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                    0.0,    1e-9, 0.0,  0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                    0.0,    0.0,    1e-9, 0.0,  0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                    0.0,    0.0,    0.0,    1e-9, 0.0,  0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                    0.0,    0.0,    0.0,    0.0,    1e-9, 0.0,  0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                    0.0,    0.0,    0.0,    0.0,    0.0,    1e-9, 0.0,  0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-9, 0.0,  0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-9, 0.0,  0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-9, 0.0,  0.0,    0.0,    0.0,    0.0,    0.0,
                                    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-9,  0.0,     0.0,    0.0,    0.0,    0.0,
                                    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-9,  0.0,     0.0,    0.0,    0.0,
                                    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-9,  0.0, 0.0,    0.0,
                                    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-9, 0.0,  0.0,
                                    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-9, 0.0,
                                    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-9]

ros2 run tf2_tools view_frames.py reveals that indeed, there is no camera_imu_optical_frame:

My realsense camera node is run with the following parameters:
configurable_parameters = [{'name': 'camera_name',                  'default': 'camera', 'description': 'camera unique name'},
                        {'name': 'serial_no',                   'default': "''", 'description': 'choose device by serial number'},
                        {'name': 'usb_port_id',                 'default': "''", 'description': 'choose device by usb port id'},
                        {'name': 'device_type',                 'default': "''", 'description': 'choose device by type'},
                        {'name': 'config_file',                 'default': "''", 'description': 'yaml config file'},
                        {'name': 'unite_imu_method',            'default': "2", 'description': '[0-None, 1-copy, 2-linear_interpolation]'},
                        {'name': 'json_file_path',              'default': "''", 'description': 'allows advanced configuration'},
                        {'name': 'log_level',                   'default': 'info', 'description': 'debug log level [DEBUG|INFO|WARN|ERROR|FATAL]'},
                        {'name': 'output',                      'default': 'screen', 'description': 'pipe node output [screen|log]'},
                        {'name': 'depth_module.profile',        'default': '0,0,0', 'description': 'depth module profile'},
                        {'name': 'enable_depth',                'default': 'true', 'description': 'enable depth stream'},
                        {'name': 'rgb_camera.profile',          'default': '0,0,0', 'description': 'color image width'},
                        {'name': 'enable_color',                'default': 'true', 'description': 'enable color stream'},
                        {'name': 'enable_infra1',               'default': 'false', 'description': 'enable infra1 stream'},
                        {'name': 'enable_infra2',               'default': 'false', 'description': 'enable infra2 stream'},
                        {'name': 'infra_rgb',                   'default': 'false', 'description': 'enable infra2 stream'},
                        {'name': 'tracking_module.profile',     'default': '0,0,0', 'description': 'fisheye width'},
                        {'name': 'enable_fisheye1',             'default': 'true', 'description': 'enable fisheye1 stream'},
                        {'name': 'enable_fisheye2',             'default': 'true', 'description': 'enable fisheye2 stream'},
                        {'name': 'enable_confidence',           'default': 'true', 'description': 'enable depth stream'},
                        {'name': 'gyro_fps',                    'default': '0', 'description': "''"},
                        {'name': 'accel_fps',                   'default': '0', 'description': "''"},
                        {'name': 'enable_gyro',                 'default': 'true', 'description': "''"},
                        {'name': 'enable_accel',                'default': 'true', 'description': "''"},
                        {'name': 'enable_pose',                 'default': 'true', 'description': "''"},
                        {'name': 'pose_fps',                    'default': '200', 'description': "''"},
                        {'name': 'pointcloud.enable',           'default': 'false', 'description': ''},
                        {'name': 'pointcloud.stream_filter',    'default': '2', 'description': 'texture stream for pointcloud'},
                        {'name': 'pointcloud.stream_index_filter','default': '0', 'description': 'texture stream index for pointcloud'},
                        {'name': 'enable_sync',                 'default': 'true', 'description': "''"},
                        {'name': 'align_depth.enable',          'default': 'false', 'description': "''"},
                        {'name': 'colorizer.enable',            'default': 'false', 'description': "''"},
                        {'name': 'clip_distance',               'default': '-2.', 'description': "''"},
                        {'name': 'linear_accel_cov',            'default': '0.01', 'description': "''"},
                        {'name': 'initial_reset',               'default': 'true', 'description': "''"},
                        {'name': 'allow_no_texture_points',     'default': 'false', 'description': "''"},
                        {'name': 'ordered_pc',                  'default': 'false', 'description': ''},
                        {'name': 'calib_odom_file',             'default': "''", 'description': "''"},
                        {'name': 'topic_odom_in',               'default': "''", 'description': 'topic for T265 wheel odometry'},
                        {'name': 'tf_publish_rate',             'default': '0.0', 'description': 'Rate of publishing static_tf'},
                        {'name': 'diagnostics_period',          'default': '0.0', 'description': 'Rate of publishing diagnostics. 0=Disabled'},
                        {'name': 'decimation_filter.enable',    'default': 'false', 'description': 'Rate of publishing static_tf'},
                        {'name': 'rosbag_filename',             'default': "''", 'description': 'A realsense bagfile to run from as a device'},
                        {'name': 'depth_module.exposure.1',     'default': '7500', 'description': 'Initial value for hdr_merge filter'},
                        {'name': 'depth_module.gain.1',         'default': '16', 'description': 'Initial value for hdr_merge filter'},
                        {'name': 'depth_module.exposure.2',     'default': '1', 'description': 'Initial value for hdr_merge filter'},
                        {'name': 'depth_module.gain.2',         'default': '16', 'description': 'Initial value for hdr_merge filter'},
                        {'name': 'wait_for_device_timeout',     'default': '-1.', 'description': 'Timeout for waiting for device to connect (Seconds)'},
                        {'name': 'reconnect_timeout',           'default': '6.', 'description': 'Timeout(seconds) between consequtive reconnection attempts'},

and when I run ros2 topic echo /camera/imu I get the following output:
header:
  stamp:
    sec: 1657205548
    nanosec: 714173696
  frame_id: camera_imu_optical_frame
orientation:
  x: 0.0
  y: 0.0
  z: 0.0
  w: 0.0
orientation_covariance:
- -1.0
- 0.0
- 0.0
- 0.0
- 0.0
- 0.0
- 0.0
- 0.0
- 0.0
angular_velocity:
  x: -0.001745329238474369
  y: 0.001745329238474369
  z: -0.001745329238474369
angular_velocity_covariance:
- 0.01
- 0.0
- 0.0
- 0.0
- 0.01
- 0.0
- 0.0
- 0.0
- 0.01
linear_acceleration:
  x: -0.019613299518823624
  y: -9.639936447143555
  z: 0.16671304404735565
linear_acceleration_covariance:
- 0.01
- 0.0
- 0.0
- 0.0
- 0.01
- 0.0
- 0.0
- 0.0
- 0.01

Notice the frame_id is notated as camera_imu_optical_frame.
So my question is how can I help the ekf_node see my imu data when the frames are currently split into camera_accel_optical_frame and camera_gyro_optical_frame?
Thank you!

Originally posted by LiquidTurtle1 on ROS Answers with karma: 15 on 2022-07-11
Post score: 0

A:

The EKF finds the imu data that you want, looks at the transform frame of that imu data, tries to look up where it is located in the world, fails, and warns you. You need to tell the system where your sensors are located. This is done via transforms. I think the method of choice is to provide a URDF for your robot, but I'm not sure. There are tutorials available that you could use.

Originally posted by Per Edwardsson with karma: 501 on 2022-07-12
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by LiquidTurtle1 on 2022-07-12:
I think you are right. Within the ekf config file it says "# make sure something else is generating the odom->base_link transform."
When I publish a static transform it works for 1 frame and the stops, so I should expect a dynamic transform to do the trick.
Thank you!

