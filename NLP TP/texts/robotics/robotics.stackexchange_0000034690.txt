Q:

Variable in export of package manifest

Hi,
I have a quick question about the neat wrapping of an external library. I'm wrapping PhysX into a ros package and would need an variable export of a cflag depending of the word-length of the host system.
cpp cflags="-I${prefix}/include/SDKs/Cooking/include -I${prefix}/include/SDKs/Foundation/include -I${prefix}/include/SDKs/NxCharacter/include -I${prefix}/include/SDKs/Physics/include -I${prefix}/include/SDKs/PhysXLoader/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lNxCharacter -lNxCooking -lPhysXCore -lPhysXLoader"

Now I want to add a flag -DNX32 or -DNX64 bit to the cflags depending on the host system. (The Makefile installs PhysX binaries automatically for 32bit and 64 bit systems into the package).
Any suggestions on how to nicely do this? Thanks.

Originally posted by rado0x54 on ROS Answers with karma: 191 on 2011-10-04
Post score: 0

A:

Adding
-DNX`getconf LONG_BIT`

solved the problem.
rospack cflags-only-other physx2_wrapper: 
-DNX64

Thanks.

Originally posted by rado0x54 with karma: 191 on 2011-10-05
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Brian Gerkey on 2011-10-05:
Yep, that'll work.  You can see the same pattern in the way we call things like rosboost-cfg (e.g.: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/clients/cpp/roscpp/manifest.xml).  But I'll note that this backdoor, where we let bash chew on the export flags, is highly non-portable, and will go away with the advent of rosbuild2.

