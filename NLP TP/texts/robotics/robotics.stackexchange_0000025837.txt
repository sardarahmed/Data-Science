Q:

Resources for writing ROS plugins

I realize that standalone Gazebo/ROS integration (among many other things) is something being worked on as we speak.
I still have a question relating to the Fuerte integration question . I would've commented but I think my karma's too low :) .
Regarding the comments about how the "joint_states" publisher is really a plugin that talks to ROS, I would like to put together a plugin or set of plugins to re-create some of the basic functionality provided with previous versions of ROS/Gazebo.
An example would be something like the erratic robot with controller, ideally launchable from a roslaunch file as well. I have seen gazebo_ros_ plugins but the examples seem to be for the earlier wrapped versions of Gazebo.
I would like to avoid starting from scratch if I can avoid it, so are there any resources implement the necessary plugins required for basic ROS robot controller functionality? Even a list of the required plugins would be helpful. Thanks

Originally posted by phil0stine on Gazebo Answers with karma: 25 on 2013-02-11
Post score: 2

Original comments
Comment by Ben B on 2013-02-11:
+1 Since it never hurts for posters who have done their homework and write clearly to have some karma  :)

A:

Not sure it will work for Fuerte, but in Groovy there is a bunch of plugins which work both in Gazebo 1.3 (groovy's version) and 1.4.
So, what I did so far is:

Install standalone Gazebo 1.4.
Adjust GAZEBO_PLUGIN_PATH to point to pr2_simulator/pr2_gazebo_plugins/lib, simulator_gazebo/gazebo/lib and simulator_gazebo/gazebo_plugins/lib in Groovy stacks dir.
Add <plugin> entry to model/world SDF.
Add -s command-line parameter to load system plugins such as gazebo_ros_api_plugin.
Spawn a robot_mechanism_controllers controller with pr2_controller_manager.

With this setup I can run robot_mechanism_controllers/CartesianWrenchController, for example.
Hope it helps.
Boris

Originally posted by Boris with karma: 330 on 2013-02-11
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by phil0stine on 2013-02-12:
Thanks for the details, I will try to give it a shot in Fuerte and see if it works. Otherwise, groovy it is.
Comment by dejanpan on 2013-02-13:
Hi there, we are running ROS plugins in fuerte with Gazebo hg version deprecated_parser_sdf_1.2_support, which to our understanding is actually 1.3 version. We have slightly patched the and gazebo_ros_paths_plugin.cpp script to find and load the ros plugins correctly. Drop me an email and I'll email you back patches until they get accepted upstream.
Comment by ffurrer on 2013-02-13:
I created a pull request (https://bitbucket.org/osrf/gazebo/pull-request/291/added-clearmodelpaths-and-addmodelpaths/diff), such that you can now set all paths (including the model paths) via ROS manifests (. The patch for the gazebo_simulator ROS stack can be found in the comment there.
usage in a ros manifest: e.g.

<gazebo gazebo_model_path="${prefix}/models"/>

Comment by Boris on 2013-02-14:
@ffurrer: Great! Will it work with catkin's package.xml?
Comment by ffurrer on 2013-02-14:
@Boris: I don't know, you will need to try that ;)

