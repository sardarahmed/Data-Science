Q:

How to add a point to sensor_msgs::PointCloud2?

I declare a point as
Eigen::Vector2f point;
However, I cannot add this point  to my PointCloud2 with this code:
sensor_msgs::PointCloud2 filteredPoints;
filteredPoints.data.push_back(point);
The issue is the data is a type of std::vector<uint8_t, std::allocator<uint8_t>>. The eror shows clearly: error: no matching function for call to â€˜std::vector<unsigned char, std::allocator<unsigned char> >::push_back(Eigen::Vector2f&)
I never work with such a vector type with allocator as the second template.

Originally posted by wiyogo on ROS Answers with karma: 44 on 2020-10-15
Post score: 0

A:

It is saying that you can't just use an Eigen::Vector2f to add a point to a pointcloud2. See this example for a use case of generating a point cloud and then publishing it.
As I understand it the best practice is that you process the data using the pcl library, and then after you have made the pointcloud you convert it to the ROS msg pointcloud2 and then publish it.

Originally posted by JackB with karma: 977 on 2020-10-15
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by wiyogo on 2020-10-15:
Thank you @jackB! But how can I integrate ros_pcl in an existing project in ros-melodic? I got an error msg: No such file or directory #include <pcl/conversions.h>, even I added pcl_conversions in my CMakeLists.txt. It seems I need to download the package too.
Comment by JackB on 2020-10-15:
You should open another, separate question, with more detail and context so that someone can help you solve it. Glad I could help get you started in the right direction.
Comment by wiyogo on 2020-10-16:
Thanks @JackB. This is my new question https://answers.ros.org/question/363532/how-to-integrate-pcl-library-into-an-existing-project/

