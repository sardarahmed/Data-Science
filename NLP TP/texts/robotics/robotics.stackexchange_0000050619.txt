Q:

How to publish opencv Mat image in ROS Fuerte

I went through the tutorial about conversion between ROS and OpenCV images.... To publish opencv image, it has to be converted to ROS image msg.
Now what I have is just a Mat image,
Mat opencv_img ;

I tried :
cv_bridge::CvImagePtr cv_ptr;

cv_ptr->image = opencv_img.clone();

ros::Publisher pub;
 
pub.publish(cv_ptr->toImgMsg());

I get an error :-
 T* boost::shared_ptr<T>::operator->() const [with T = cv_bridge::CvImage]: Assertion `px != 0' failed.
Aborted (core dumped)

Originally posted by KarthikMurugan on ROS Answers with karma: 15 on 2013-04-23
Post score: 0

A:

Similar error is reported and solved.

Originally posted by 130s with karma: 10937 on 2013-04-23
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by KarthikMurugan on 2013-04-24:
I followed as said in the answer.... cv_bridge::CvImagePtr cv_ptr(new CvImage() ); Then , opencv_img.copyTo(cv_ptr->image);
Comment by KarthikMurugan on 2013-04-24:
But even then I get error :-  error: expected type-specifier before ‘CvImage’
error:  expected ‘)’ before ‘CvImage’
Comment by KarthikMurugan on 2013-04-24:
usr/include/boost/smart_ptr/shared_ptr.hpp: In constructor ‘boost::shared_ptr::shared_ptr(Y*) [with Y = int, T = cv_bridge::CvImage]’:
/home/karthik/Desktop/pcl/sandbox/Image_processing/src/example.cpp:116:47:   instantiated from here
Comment by KarthikMurugan on 2013-04-24:
/usr/include/boost/smart_ptr/shared_ptr.hpp:187:50: error: cannot convert int * to cv_bridge::CvImage * in initialization
Comment by Mike Gao on 2013-04-30:
Maybe you should use the constructor of cv_bridge::CvImage to create a new instance of this class instead of using its pointer (CvImagePtr), but pay attention to fill all the necessary headers rightly before publishing.
Comment by KarthikMurugan on 2013-04-30:
How to fill the headers ?? There are members such as seq ,time, frame id... what should I put into these ??
Comment by Mike Gao on 2013-05-03:
cv_bridge::CvImage cv_img;
cv_img.header.stamp = ros::Time::now();
cv_img.header.frame_id = "your_camera_frame";
cv_img.encoding = "mono8"; (or "bgr8")
cv_img.image = img_topub;
img_pub_.publish(cv_img.toImageMsg());

