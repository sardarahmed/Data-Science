Q:

Gazebo8 stops publishing /gazebo/link_states

Edit: It appears as though the problem occurs only for Gazebo8, having nothing to do with Singularity containment. My local machine is using Gazebo7.4, while I'm trying to use Gazebo8 which exhibit the problem.
The problem occurs right after start. Both Gazebo and my node is started and everything waits for the robot to spawn inside Gazebo. Once this is verified my experiments begin. From the output I can see that my code is started, waiting and then starts the experiment and is able to complete one round of evaluation before Gazebo stops publishing /gazebo/link_states. My code reports that it is not getting any data and I have verified this using rostopic which reports that right after start the topic is published, but after one round it stops.
My code subscribes and unsubscribes to /gazebo/link_states during the course of an evaluation. This is done to ensure that only data related to the current evaluation is used to assess the performance. This setup worked for Gazebo7, but not for Gazebo8. Is this expected behavior in Gazebo8?
Edit: (Thanks to gvdhoorn)
So the problem was not actually related to the clock topic failing to publish. The problem was/is that my node did not handle Gazebo stopping to publish /gazebo/link_states (which lead to a divide by 0 error). My code now correctly handles this situation, but there is still a problem that after the first iteration of my evaluation code Gazebo stops publishing /gazebo/link_states.

Originally posted by jorgehn on ROS Answers with karma: 3 on 2017-06-29
Post score: 0

Original comments
Comment by gvdhoorn on 2017-06-29:\

The problem does not occur when running the code on my local machine [..]

inside the Docker container, or without it?
Comment by jorgehn on 2017-06-29:
On my local machine it works outside Singularity. Will test inside Singularity right away. Just to clarify, I can't run inside Docker on the cluster, but I can create the Singularity container from a Docker image.
Comment by gvdhoorn on 2017-06-29:
I was specifically wondering about the Docker image, as that is what you are starting from according to your OP.
Comment by jorgehn on 2017-06-29:
Ah, my apologies. My sentence is a bit inaccurate, I'm creating the image from docker://ros:robot and moving my source folders into the Singularity container as explained on their documentation. I.e. I never create a full Docker image that can be run, only Singularity.
Comment by gvdhoorn on 2017-06-29:
Then it would seem you'll have to run your Singularity image on your machine to see whether it's a config issue on the cluster.
Apart from that: "ros crashes" is not a good way to start (as 'ros' does not run): which node crashes?
Comment by jorgehn on 2017-06-29:
Well, that is sort of the problem. I never see a segmentation fault or anything like it. roslaunch detects my node as crashed, but there is nothing indicating what has gone wrong and the only fault that I can find is the Connection refused error from master.log.
Comment by jorgehn on 2017-06-29:
Just to add, after testing on my local machine the same problem happens so it seems to be something with how Singularity functions.
Comment by gvdhoorn on 2017-06-29:\

before the whole setup crashes.

and

roslaunch detects my node as crashed

so is it your node that crashes, or the whole setup? If it's just your node, then I would try to run it in GDB and see what is going on when it crashes. If it's 'everything', then that is a different problem.
Comment by gvdhoorn on 2017-06-29:
There must be some output from roslaunch, like "process exited ... exit code XXX" etc. Are you saying that there is no output at all?
Comment by jorgehn on 2017-06-29:
Ah ok I think I see my confusion. My node is not crashing because of the /clock error, it is the other way around. Well that explains some of the problem, but why is this happening only inside Singularity and not outside.
Comment by gvdhoorn on 2017-06-29:
Now I'm even more confused: /clock is not something that can crash, it's a topic. Could you perhaps edit your question and include all terminal output that you do get when you try to run this? Perhaps that will make things clearer.
Comment by jorgehn on 2017-06-30:
Thanks for all your help @gvdhoorn. I fixed the crash in my code and updated the question. The title of this post is now completely wrong, so I'm not sure if I should open a new question or keep discussing here.
Comment by gvdhoorn on 2017-06-30:
Just change the title. Click the edit button/link to the right of it.
Comment by jorgehn on 2017-06-30:
So after more testing I have now found that the problem is with Gazebo8 which stops publishing /gazebo/link_states after I subscribe and unsibscribe from the topic.
Comment by gvdhoorn on 2017-06-30:
So how do you "unsubscribe"? Could you include some snippet of code that shows what you're doing?
Comment by jorgehn on 2017-06-30:
Create subscription, call shutdown method and then let the subscription go out of scope.
Comment by gvdhoorn on 2017-06-30:
Also: could I please ask you to add to your original question instead of changing / overwriting things? That way the chronology of your troubleshooting is visible in your edits, instead of just a single post that seems to have come 'out of nowhere'.

A:

If only Gazebo 8 has this problem then it might be an idea to report this as an issue over at osrf/gazebo/issues.

Originally posted by gvdhoorn with karma: 86574 on 2017-06-30
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by jorgehn on 2017-07-04:
Thanks for all your help @gvdhoorn. I have submitted a bug to gazebo_ros_pkg with a minimal example that further illustrates my problem.
Comment by gvdhoorn on 2017-07-04:
Thanks for the report and providing an MWE. I actually pointed to the osrf/gazebo tracker as this might be a problem at a lower level, but let's see what the maintainers of gazebo_ros_pkgs think.

