Q:

tf synchronization

Hi! I am trying to synchronize a camera input with an servo with no feedback and the tf library. More specifically:

There is a camera (cameraNode) that asynchronously (with a ros::timer) takes pictures and posts them at a ROS topic with a timestamp.

There is a node (servoNode) that controls a servo and some other hardware, that has no feedback.

There is a node (armNode) that controls a set of motors (and the servo through servoNode) and publishers tf transforms with their positions.

There is a node (visionNode) that processes the images and publishers results about the images (with the image timestamp).

There is a node (dataNode) that receives the results and time-travels (with tf) to obtain actual points in a coordinate system.

All these seem to work fine individually, but there are times that the camera takes a picture just before the servoNode returns and the armNode publishes the new tf transformation. Then the dataNode when it uses the lookupTransform (with the camera timestamp) gets a transformation that is not correct. How could these be synchronized? Should the armNode stop broadcasting tf transforms (and if yes, how would that change the dataNode's ability for correct transformation)?
Using a tf::MessageFilter doesn't seem right because tf transforms might be sent just before the servos started moving and the camera might take up to 200ms to take a picture. Any suggestions?

Originally posted by miltos on ROS Answers with karma: 85 on 2011-05-19
Post score: 0

A:

So what I understand is that you have a somewhat open loop system where you cannot know where the system is between commanding a movement before it returns.  If this is the case you should probably set a flag and only process camera data from the periods when you know where the servo positions are.  There are many different techniques to do this.

You could have a flag to start and stop the camera timer.
Or you could start and stop the image processing based on a similar flag.

Originally posted by tfoote with karma: 58457 on 2011-05-19
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by miltos on 2011-05-21:
Thanks about that. That's what I did. I create a "RemoteMutex" and the camera is now working fine. Thanks!

