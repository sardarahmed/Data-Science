Q:

package did not get built

I am running ros indigo and trying to run the launch file or the node cpp file in this github source I downloaded the file and moved the DSP-3000 folder into my ~/catkin_ws/src directory. Then, in my catkin_ws, I did source devel/setup.bash then catkin_make.
All my other packages that's in the src directory got build, but DSP-3000 did not seem to get build. I deleted build/ devel/ and catkin_make again. in the build results, it show that only 3 packages were found, but in my src/ folder, there is DSP-3000 as well:
-- ~~  traversing 3 packages in topological order:

-- ~~  - beginner_tutorials

-- ~~  - camera_info_manager_py

-- ~~  - axis_camera

This is what I have in my src/ directory:
~/catkin_ws/src$ ls
axis_camera  beginner_tutorials  camera_info_manager_py  CMakeLists.txt  DSP-3000

So, what is the reason that DSP-3000 not being build?

Originally posted by frodyteen on ROS Answers with karma: 62 on 2018-05-08
Post score: 0

Original comments
Comment by kparikh on 2018-05-09:
Maybe you need to adjust your cmakelists.txt file.
Comment by frodyteen on 2018-05-09:
are you talking about something like this link?
If this is the case, what would be the reason that other packages does not need this step?

A:

The DSP-3000 package you linked to uses the old rosbuild build system which is not compatible with the current catkin build system. This is why catkin_make is not recognising it as a package.
There's a guide for migrating packages from rosbuild to catkin here that will help you to convert this and get it building.

Originally posted by PeteBlackerThe3rd with karma: 9529 on 2018-05-09
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by frodyteen on 2018-05-10:
Thank you, turns out the master branch is catkinized.

