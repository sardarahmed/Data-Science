Q:

Jenkins build became unstable - what am I supposed to do?

Hi,
I just released a new version of an existing package.  Before the release I ran the prerelease test successfully.
Now I got an email from the ROS Buildfarm with the subject: "Jenkins build became unstable: [...]"
edit:
Here is the link contained in the email: http://build.ros.org/job/Idev__innok_heros_gazebo__ubuntu_trusty_amd64/3/changes
What am I supposed to do? Is this critical?
Regards,
Sabrina

Originally posted by Sabrina on ROS Answers with karma: 285 on 2016-02-11
Post score: 2

Original comments
Comment by Dirk Thomas on 2016-02-11:
If you include the link to the actual job in the question you might get a more helpful answer.
Comment by Sabrina on 2016-02-11:
thanks for the hint - > I added the link.

A:

The devel job is building your source code when you commit any changes to the branch specified in the source section of rosdistro (after some delay, commonly checking once every hour).
If you read through the console output (http://build.ros.org/job/Idev__innok_heros_gazebo__ubuntu_trusty_amd64/3/consoleFull) you will find the section where the tests are being run (http://build.ros.org/job/Idev__innok_heros_gazebo__ubuntu_trusty_amd64/3/consoleFull#console-section-17). The test checking the roslaunch file fails with a stacktrace.
Based on that you will find the test results at the end which say:
The total number of tests for this category exceeds the specified 'unstable' threshold value.
Setting the build status to UNSTABLE

That's why the build was marked as unstable and you received a notification email. You can also see the summary of all tests here: http://build.ros.org/job/Idev__innok_heros_gazebo__ubuntu_trusty_amd64/3/testReport/
Now to reason why the test might fail. The stacktrace says: rospkg.common.ResourceNotFound: gazebo_ros My first guess would be that your launch file uses something from the gazebo_ros package but since your package.xml file doesn't declare a dependency on that package it is not available on the build farm. That also means if someone if installing your Debian package and tried to run the launch file it would fail in a similar way. Therefore you will likely have to add a run dependency on gazebo_ros to make this test pass and the Debian package usable.

Originally posted by Dirk Thomas with karma: 16276 on 2016-02-11
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Sabrina on 2016-02-11:
Thank you, now I see. The problem is exactly as you said: I removed run deps concerning gazebo from package.xml because this resolves in system dependencies of Gazebo2 in the resulting debian package. But I need Gazebo6 in order get a correctly running robot model with this package.
Comment by Sabrina on 2016-02-11:
In fact this is related with my other question: http://answers.ros.org/question/226336/howto-release-a-package-with-system-dependency-ros-indigo-gazebo6-ros/?comment=226345#post-id-226345
Comment by Sabrina on 2016-02-11:
Can I ignore the fact that the build is unstable until I found a way to include gazebo6 as run dep? Or could anything be harmed as long as the build is unstable?
Comment by Sabrina on 2016-03-03:
As a workaround I removed the line roslaunch_add_file_check(launch) from the CMakeLists.txt. The build is stable now. But users will have to install ros-indigo-gazebo6 and ros-indigo-gazebo6-plugins manually to be able to run the launch files.

