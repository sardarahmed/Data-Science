Q:

Using other library in ros node

Hello,
I am new to ROS and have browsed the beginner tutorial. I have installed ros on Raspberry Pi(the beta is developed by Emlid). Now I want to write a new node to control the raspberry pi camera, to take images, to use opencv analyze the image data. What should I do to use the raspicam-0.1.4 librarylink text in ros? I have seen that to use opencv in ros on this pagelink text, are these two similar? Just need to modify the CMakeLists.txt to
find_package(Raspicam-0.1.4) 
include_directories(${Raspicam_INCLUDE_DIRS})
target_link_libraries(my_awesome_library ${Raspicam_LIBRARIES})  

??
target_link_libraries(my_awesome_library ${Raspicam_LIBRARIES})

Originally posted by jason on ROS Answers with karma: 32 on 2017-02-07
Post score: 0

Original comments
Comment by ahendrix on 2017-02-08:
You may want to look at http://ubiquityrobotics.com/blog/2016/01/24/Raspberry-Pi-Cam.html and their source code: https://github.com/UbiquityRobotics/raspicam_node
Comment by jason on 2017-02-08:
I tried to follow the their tutorial. But there ros is kinetics while mine is indigo, and there is an error when I run
rosdep install --from-paths src --ignore-src --rosdistro=kinetic -y

and the error "Unable to locate package ros-kinetic-camera-info-manager"
Comment by ahendrix on 2017-02-08:
If you're using indigo instead of kinetic, you shouldn't tell rosdep that you're using kinetic. Use indigo in that command instead: rosdep install --from-paths src --ignore-src --rosdistro=indigo -y
Comment by jason on 2017-02-08:
when I run it, the error:
ERROR: the following packages/stacks could not have their rosdep keys resolved to system dependencies: 

raspicam_node: No definiton of [camera_info_manager] for OS [debian]
Comment by jason on 2017-02-08:
Does this command relate to using rosdep for third party library?  I  have browsed that part, but because my knowledge is limited, i am confused, have no idea how to use rosdep
Comment by gvdhoorn on 2017-02-09:\

If you're using indigo instead of kinetic, you shouldn't tell rosdep that you're using kinetic

just an FYI (@jason): if you already have sourced a setup.bash file, you don't even need to use --rosdistro=.., as it will use the value of $ROS_DISTRO.

A:

Finally I figured out how to make it work. You need to edit the cmakelists.txt according to the directory where the library is and the cmakelist and readme file of that library. Maybe easy for those who are familiar with cmakelist, but really not for those who are not.

Originally posted by jason with karma: 32 on 2017-02-16
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by jason on 2017-02-16:
Thanks gvdhoorn and ahendrix for the advices

