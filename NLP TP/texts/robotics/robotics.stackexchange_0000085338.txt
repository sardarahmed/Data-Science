Q:

canopen_chain_node and init device

How to init vcan0?
I need to use can::SocketCANInterface ?
can::Frame msg1;
msg1.id = 1;
msg1.data = {1,2,3,4};
  const string driv("vcan0");
  can::SocketCANInterface driver;

  printf("init = %d\n",driver.init(driv, true));
  printf("rec = %d\n",driver.recover());
  printf("state = %d\n",(int)driver.getState().isReady());
  printf("send = %d\n",driver.send(msg1));

Output:
init = 1
rec = 0
state = 0
send = 0

And how to send messages using a dictionary in canopen_chain_node .
canopen_chain_node configured correctly and launched.
Please, help to understand, I am a beginner to ROS.
My .yaml file
Does anyone have an example?

Originally posted by Dizett on ROS Answers with karma: 3 on 2018-02-15
Post score: 0

A:

How to init vcan0?

For setting up vcan, just follow the directions in the driver documentaion, section 6.4

And how to send messages using a dictionary in canopen_chain_node .

You cannot send message using a dictionary.
But you can use the (currently undocumented) set_object service to write to the (remote) node object dictionary.

Originally posted by Mathias Lüdtke with karma: 1596 on 2018-02-20
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Dizett on 2018-02-22:
I don't understand. How do I use canopen_chain_nod to send commands to a device? И как получать сообщения от устройства? Thank You!
Comment by Mathias Lüdtke on 2018-02-22:
You have to interact with the corresponding objects of the dictionary. This is device-specific. In most cases these dictionaries are standardized as device profiles.
Please stick to English.
Comment by Dizett on 2018-02-22:
How i can  to interact with the corresponding objects of the dictionary? I Need to use the topics? I need something to prescribe in .a yaml file for this? Thank You!
Comment by Mathias Lüdtke on 2018-02-22:
Just configure and initialize canopen_chain_node and use the provided services.
Comment by Dizett on 2018-02-22:
My .yaml file this is a sufficient configuration?
If i add
node1:
  publish: ["1003sub0!"]

do I have to subscribe to the topic 1003sub0 to receive messages from the device?
Or I need to publish in topic for the device?
Comment by Mathias Lüdtke on 2018-02-22:
The canopen_chain_node does not care if someone subscribes to the topics. It will just read the object (per SDO or PDO) periodically and publish it at the SYNC/update rate.
Comment by Dizett on 2018-02-22:
an example on Python
self.steer_controller = self.network.add_node(0x01 ,'/home/turtle1/ros/base_control/eds/phyPS409Y.eds')
steer_controller.sdo[0x6411][2].raw = value

Comment by Dizett on 2018-02-22:
Does it have to look like this in ros?
  ros::Publisher pub = nh.advertise<std_msgs::Int16>("node2_6411sub2",20);
  ...
  std_msgs::Int16 a;
  pub.publish(a);

Comment by Mathias Lüdtke on 2018-02-22:
canopen_chain_node does not expose any code API, only the generic topics (read) and the get/set_objects services. If you need more, you have to extend the chain node or use canopen_master directly.
canopen_chain_node is mostly meant as base for profile implementations like canopen_motor_node.
Comment by Dizett on 2018-02-22:
I don't understand.So how do I communicate with the device using dictionaries? Is there an example?
Please, help me!
Comment by Dizett on 2018-03-14:
How to send data using canopen_master or canopen_motor_node?

