Q:

Local costmap has large drift, why?

I want to test out an exploration node and want to avoid errors in mapping and localization. Therefore I have replaced gmapping by the fake_localization node and a modified version of the map_server node. In the map_server I publish only the parts of the map where the robot has been. This computation is based on the localization of the fake_localization node and implements ray tracing to emulate a laser scanner.
EDIT: I did not experience the drift of the local map with gmapping!
Now I'm experiencing a large drift in the local costmap (see images). The first image was taken right after the start, the second just a minute later. Any Ideas what could be wrong here?

The costmap setup is as follows:
Common costmap parameters:
transform_tolerance: 10
obstacle_range: 2.5
raytrace_range: 4.0
inflation_radius: 0.8
footprint: [[-0.4, -0.4], [-0.4, 0.4], [0.4, 0.4],[0.4, -0.4]]
track_unknown_space: true

Global costmap parameters:
global_costmap:
    update_frequency: 5
    publish_frequency: 0
    static_map: true
    rolling_window: false
    width: 150.0
    height: 150.0

Local costmap parameters:
local_costmap:
    update_frequency: 1
    publish_frequency: 0
    static_map: false
    rolling_window: true
    width: 8.0
    height: 8.0
    global_frame: /map

The TF transforms in RVIZ look completely wrong, maybe its just a displaying issue. It is static all the time, not moving together with the robot. At the lower end of the transform axis there is map and odom, on the upper end there is base_link, base_laser_link and base_footprint.

The frames look like this:

UPDATE:
Using roswtf I figured out that the message types of the robot footprint publisher and subscriber in the costmap did not match. I fixed this in the costmap_2d_ros.cpp in the costmap_2d node. Luckily the tf transforms are now correctly displayed in rviz but I get strange errors now. All the frontier points are now way off and I don't know why.

Originally posted by Micha Sende on ROS Answers with karma: 65 on 2015-08-20
Post score: 0

Original comments
Comment by Micha Sende on 2015-08-24:
Connecting the costmap with itself over the footprint topic was just wrong. Thats why it messed up so much.

A:

It was just a problem with the map_server/resolution parameter. It did not match the resolution of the stage simulator. So basically I had to change the size in the world file for stage so it matches the resolution of the map server (I guess the other way around it would have also been possible).
Thanks for the help anyways!
EDIT:
In the stage world file you specify the underlying bitmap like this:
floorplan
(
  name "my_bitmap"
  bitmap "my_bitmap.png"
  size [100.0 200.0 0.4]
  pose [ 0 0.0 0 0.0 ]
)

where the size is given in meters (e.g. width 100 m, height 200 m). The corresponding bitmap file should have a number of pixels that results in a resolution you specify in the map server.
For example, if your bitmap is 2000 pixel wide and 4000 pixel high, the resolution parameter of the map server must be 0.05 (i.e. 1 m = 20 px).

Originally posted by Micha Sende with karma: 65 on 2015-08-24
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by femitof on 2020-06-06:
How did you fix this please?
I have the same issue
Comment by Micha Sende on 2020-06-07:
@femitof: Se my updated answer.
Comment by femitof on 2020-06-12:
Thanks for your response @aau
Not sure I totally understand..
Are you saying that the local cost map and the static map
Should have the same resolution?
If yes, mine already has the same resolution..
Looking forward to your response..

