Q:

How to move the robot (Rosbot 2.0)

Hi, I'd like to know how to move the robot.
when I give a /cmd_vel, the robot can move appropriately.
But, I'd like to know HOW.
I know the /com_vel go to geometry_msgs/Twist.
After that? How to calculate the motor speed, voltage, or torque?
which node does this?
I can't find any code from my Rosbot 2.0 file directories.
I want to watch the code file. where is it?
please help me.

Originally posted by choking on ROS Answers with karma: 15 on 2021-09-27
Post score: 0

A:

Where is the code? You can find it in the repo, get familiar with the structure. As you can see in this link, other packages are used by Rosbot 2.0 telop_twist_keyboard:
https://github.com/husarion/rosbot_description/blob/master/src/rosbot_navigation/launch/rosbot_teleop.launch
If you look at the source code of teleop_twist_keyboard.py you can see that there is communication through termios, tty. https://github.com/ros-teleop/teleop_twist_keyboard/blob/master/teleop_twist_keyboard.py
This is read by a serial communicator in your hardware. Your hardware may need their own programs at the lower level. An example using Dynamixel:
https://github.com/ROBOTIS-GIT/DynamixelSDK/issues/326
There are different protocols of communication, so you need to understand that as well.
In Rosbot 2.0, you can see more info in your specs how this happens..
https://husarion.com/manuals/rosbot/#hardware-guide

Originally posted by osilva with karma: 1650 on 2021-09-27
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by choking on 2021-09-27:
Thank you for your kind!
But, Even if it runs appropriately. I can't find teleop_twist_keyboard.py in my robot.
I want to know where is the code file in my robot.
And, I'd like to motor torque information for my experiment.
Where can I find the lower-level controller in my robot?
Is it possible to get the input torque information?
Comment by osilva on 2021-09-27:
Your robot uses teleop_twist_keyboard it’s called by the launch file. I also sent a link of the specs of your robot for the low level hardware. Check the last link
Comment by osilva on 2021-09-27:
From the manual. Software for ROSbot can be divided into 2 parts:
A low-level firmware that works on the real-time controller (CORE2). It can be developed using Visual Studio Code IDE.
OS based on Ubuntu 18.04 or 20.04, which runs on the SBC (ASUS Tinker Board or UpBoard) and contains all components needed to start working with ROS or ROS2 immediately. The microSD card or MMC memory with OS is included with each ROSbot. The OS has been modified to make the file system insensitive to sudden power cuts.
Comment by osilva on 2021-09-27:
And the link to the firmware: https://github.com/husarion/rosbot-stm32-firmware
Comment by choking on 2021-09-28:
Thank you, sir!
I will try to study the lower-level system.
Comment by osilva on 2021-09-28:
Glad it helped. Pls don’t forget to vote if you got what you were looking for

