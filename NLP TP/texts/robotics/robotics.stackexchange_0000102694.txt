Q:

ROS2 OctoMap Transform cache was not updated. Self-filtering may fail

Hi,
I have the following problem. I try to publish a pointcloud from a camera in gazebo onto my move_groups octomap configuration. The camera shows the correct image and I get a pointcloud on my /camera/points topic but as soon as I start my workspace I get the following error:
[move_group-13] [ERROR] [1668170556.088628285] [moveit_ros.planning_scene_monitor.planning_scene_monitor]: Transform error: Lookup would require extrapolation into the past.  Requested time 136.418000 but the earliest data is at time 1668170546.080549, when looking up transform from frame [upper_arm_link] to frame [camera_link]
[move_group-13] [ERROR] [1668170556.088732748] [moveit.ros.occupancy_map_updater]: Transform cache was not updated. Self-filtering may fail. If transforms were not available yet, consider setting robot_description_planning/shape_transform_cache_lookup_wait_time to wait longer for transforms

I develop on ROS2 Foxy in a docker container with the UR ROS2 Driver.
my camera is defined, with the prefix being empty, in the urdf as:
<!-- Define gazebo sensor -->
  <gazebo reference="${prefix}camera_link">
    <sensor type="depth" name="${prefix}camera">
      <always_on>false</always_on>
      <update_rate>10.0</update_rate>
      <camera name="camera">
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3.0</far>
        </clip>
        <distortion>
          <k1>0.0</k1>
          <k2>0.0</k2>
          <k3>0.0</k3>
          <p1>0.0</p1>
          <p2>0.0</p2>
          <center>0.5 0.5</center>
        </distortion>
      </camera>
      
      <plugin name="${prefix}camera_controller" filename="libgazebo_ros_camera.so">
        <ros>
          <imageTopicName>${prefix}/camera/color/image_raw</imageTopicName>
          <cameraInfoTopicName>${prefix}/camera/color/camera_info</cameraInfoTopicName>
          <depthImageTopicName>${prefix}/camera/depth/image_raw</depthImageTopicName>
          <depthImageCameraInfoTopicName>${prefix}/camera/depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudTopicName>${prefix}/camera/points</pointCloudTopicName>
        </ros>
        <camera_name>${prefix}camera</camera_name>
        <frame_name>${prefix}camera_link</frame_name>
        <hack_baseline>0.07</hack_baseline>
        <min_depth>0.001</min_depth>
      </plugin>
    </sensor>
  </gazebo>

<!-- Links -->
<link name="${prefix}camera_link">
  <visual>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <geometry>
      <box size="0.05 0.05 0.05"/>
    </geometry>
  </visual>
  <collision>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <geometry>
      <box size="0.05 0.05 0.05"/>
    </geometry>
  </collision>
  <inertial>
    <mass value="0.001"/>
    <origin xyz="0 0 0"/>
    <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
  </inertial>
</link>

<!-- Joints -->
<joint type="fixed" name="${prefix}tool_camera_joint">
  <origin xyz="0 0 0.1" rpy="0 ${-pi/2.0} 0"/>
  <child link="${prefix}camera_link"/>
  <parent link="${prefix}wrist_3_link"/>
  <axis xyz="0 0 0" rpy="0 0 0"/>
</joint>

octomaps configuration:
octomap_config = {"octomap_frame": "camera_link", 
                  "octomap_resolution": 0.05,
                  "max_range": 5.0}

octomap_updater_config = load_yaml("modproft_ur_bringup", "config/sensors_3d.yaml")

move_group node:
move_group_node = Node(
    package="moveit_ros_move_group",
    executable="move_group",
    output="screen",
    parameters=[
        robot_description,
        robot_description_semantic,
        robot_description_kinematics,
        ompl_planning_pipeline_config,
        trajectory_execution,
        moveit_controllers,
        planning_scene_monitor_parameters,
        octomap_config,
        octomap_updater_config,
    ],
)

sensors config:
sensors:  ["sensor1"]
sensor1:
    sensor_plugin: occupancy_map_monitor/PointCloudOctomapUpdater
    point_cloud_topic: /camera/points
    max_range: 5.0
    point_subsample: 1
    padding_offset: 0.1
    padding_scale: 1.0
    shape_padding: 0.01
    shape_scale: 1.0
    max_update_rate: 1.0
    filtered_cloud_topic: filtered_cloud

Many thanks for the help in advance!

Originally posted by sergej on ROS Answers with karma: 1 on 2022-11-11
Post score: 0

Original comments
Comment by angcorcue2 on 2023-07-04:
Did you solve it?

A:

follow #q325486 and https://answers.gazebosim.org//question/3172/timing-synchronisation-between-gazebo-and-ros/
and if you will this solved your problem, then close this question no need to duplicate it,

Originally posted by Ranjit Kathiriya with karma: 1622 on 2022-11-11
This answer was ACCEPTED on the original site
Post score: 0

