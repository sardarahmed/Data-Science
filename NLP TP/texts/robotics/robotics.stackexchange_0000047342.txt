Q:

Finding Python modules in groovy and with catkin?

Suppose I have a package with two sub directories "src" and "test". Suppose I have a module "a.py" in "src". How do I in a script in "test" import from "a.py"?  What is the correct method with regard to finding "a.py" when executing?

Originally posted by TommyP on ROS Answers with karma: 1339 on 2013-01-16
Post score: 2

A:

The recommended method is to use the nosetests library to write tests fpr python. The command is nose. Nose automatically sets the PYTHONPATH before running the tests when you use reasonable names for your folders, like src and test. Doing so, in a python file in the test folder you can simply write "import foo.bar" to import a module defined in src/foo/bar.py.
When you write python modules with catkin, you should also use a setup.py file and the catkin_python_setup macro in your CMakeLists.txt file. More information can be found in the catkin documentation, and rospy tutorials, such as here:
http://ros.org/wiki/rospy_tutorials/Tutorials/Makefile
and here: http://ros.org/rosdoclite/groovy/api/catkin/html/user_guide/setup_dot_py.html

Originally posted by KruseT with karma: 7848 on 2013-01-17
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by TommyP on 2013-01-17:
I found an example setup.py file and got that to work. But I do not understand exactly what it does. Are there any documentation for setyp.py? Especially I did not get what the "packages" parameter was supposed to be.
Comment by KruseT on 2013-01-18:
setup.py is the standard build file for python projects. In our case, you declare the scripts and packages from your project, and setup.py makes sure those get installed to the right locations. More info here: http://ros.org/rosdoclite/groovy/api/catkin/html/user_guide/setup_dot_py.html
Comment by TommyP on 2013-02-07:
So are you saying that the thing in "packages" in setup.py is not ros packages at all? Are they Python packages or what are they? And if they are ROS packages what is a "relay package" talked about on the web page you gave? (Re-reading this now after reading the SIG discussion about setup.py).
Comment by KruseT on 2013-02-07:
yes, 'packages' in the setup.py relate to python packages only. And a relay-package is a folder foo with only an init.py file in it that points to the foo folder in the sourcespace with all the python code the user writes.
Comment by Sentinal_Bias on 2014-04-02:
what happens if you accidentally run the setup.py file the tutorial said it can break your ROS installation? Does this mean you have to reinstall ROS if you do this? Is it possible to keep a back up of your ROS workspace and just replace it?
Comment by joq on 2014-04-02:
You should ask this as a separate question. The answer is complicated. Nothing will break immediately, but  maintenance problems will likely arise later on. Solution: remove all the files setup.py created.

