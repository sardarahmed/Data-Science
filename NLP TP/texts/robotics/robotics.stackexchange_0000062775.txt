Q:

Using rosjava nodes inside non-rosjava projects

Hi,
I am trying to adapt an existing complex java application using a rosjava node. I succesfully included my rosjava test class "Listener.java" into my other java project so I can access the class and create an instance of the rosjava object. The problem happens here :
 public class Listener extends AbstractNodeMain {
     ... 
     @Override   
     public void onStart(ConnectedNode connectedNode) { ... }
     ...
 }

This method is the onStart method of the auto-generated Listener.java class of my rosjava project.
How could I access the ConnectedNode object from a non-rosjava class or method and pass it to the rosjava object in order to correctly use it.
Or maybe there's another way around to adapt non rosjava projects ? Did you guys encounter the same problem as me ? I want to hear what you've done to solve this problem.
Thank you very much !

Originally posted by kritchie on ROS Answers with karma: 15 on 2014-09-22
Post score: 0

A:

This seems like an architecture issue. You cannot access ConnectedNode from your external code, since that code doesn't have a dependency on rosjava, and doesn't know what a ConnectedNode is.
Instead you have to try to wrap the external code inside your rosjava nodes, the official name for that is the Adapter pattern. That means the external code needs to expose all necessary functions and data in its public API.

Originally posted by paulbovbel with karma: 4518 on 2014-09-23
This answer was ACCEPTED on the original site
Post score: 2

