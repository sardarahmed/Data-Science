Q:

Bloom: Releasing from multiple upstream repos which depend on each other

Hello,
I'm trying to use bloom to build some debian packages for my project. This project consists of multiple git repos which all contain one metapackage, each with multiple packages. Packages have build dependencies to packages in other metapackages/repositories.
I'm able to build the project and single packages locally with catkin in every possible order when pulling all the repos into the src directory of one single catkin workspace. All dependencies are considered correctly.
What would be the correct workflow when using bloom to release such a project? In the end I would like to have a debian package for every metapackage/repository.
I'm able to build these debians with bloom when considering the correct build order manually and installing successfully built packages to satisfy dependencies before trying to build new ones. But I'm sure that this is not the way it's meant to be used. Is there a way to release in the correct order automatically and without first having to install built packages manually to satisfy dependencies?

Originally posted by danielm0hr on ROS Answers with karma: 73 on 2013-01-02
Post score: 3

Original comments
Comment by mwe on 2016-01-22:
Any progress on this or suggestions how this setup can be handled for binary (private) releases?
Comment by William on 2016-01-22:
This should be a comment and not an answer. Also if you have more than one package use a build farm, either the Ros build farm or the Ros buildbot setup.

A:

From the lack of other answers, I suspect that your manual method is the only option currently available, pending future tool development.
Perhaps you should open an enhancement issue asking for a solution.

Originally posted by joq with karma: 25443 on 2013-02-02
This answer was ACCEPTED on the original site
Post score: 0

