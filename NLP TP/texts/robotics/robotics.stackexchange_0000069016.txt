Q:

Ros Occupancy Grids

Hello guys,
Me and a Partner of mine are working on a Turtlebot Project at the Karlsruhe College in Germany.
Our projects aims to make the Turtlebot decide whether it can, for example, drive under a table, or not.
We thought that the Turtlebot would anyhow measure the height of the obstacle in front of him and then
decide (it has a XTion Pro Live Camera). During this, the Turtlebot doesn't have to move (rotation may be allowed).
Our idea was to record a Pointcloud (we already tried out Rtabmap, which did pretty good) and export
the data (.pcd / .ply) for further use. We didn't know how to proceed after this, since none of us is a
real computer expert (we both study Mechatronics).
We also thought we would have to include some libraries into a Cpp file (like the Pcl Library), but we
also found the Octomap library and Gridmap (whose description seem pretty useful to us).
We're kinda lost. If you know any detailed way or package  to build that function, please let us know !

Originally posted by fatstudentsweating on ROS Answers with karma: 5 on 2015-08-01
Post score: 0

A:

I think you were in the correct path. I would use the octomap_server and, if you appropriately set the filters of the octomap (which can be done in the launch file), you can filter out those obstacles which are higher than the robot.
Other option is to use the pass through filter of the PCL, but to use the octomap server is a much easier option.

Originally posted by Javier V. Gómez with karma: 1305 on 2015-08-03
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by fatstudentsweating on 2015-08-03:
Hello Javi,
thank you very much. I was browsing the documentation of the Octomap server, as you said i could
use ~pointcloud_[min|max]z (float) or ~occupancy[min|max]_z (float) to threshold the height. But how can i implement something like :  if (is there anything straight ahead at 80 cm ?){..}?
Comment by Javier V. Gómez on 2015-08-04:
I would open a new question for that, as the solution it is not that easy. Please accept and/or upvote the answer if it was useful for you.

