Q:

Camera calibration problem AR.Drone 2.0

Hi guys, I installed the following driver: link:text because I noticed there were calibration files for the front and bottom camera of the AR.Drone. I downloaded this successfully so I tried the following line in terminal to see if the image quality improved:
rosrun image_view image_view image:=/ardrone/front/image_raw

However, the camera stream was still terrible. I wanted to know how people fixed the camera stream or had a similar problem on the AR.Drone 2.0 because my one is poor over ROS. Thanks!

Originally posted by JP on ROS Answers with karma: 95 on 2013-11-12
Post score: 0

A:

The quality of the bottom camera is terrible so don't expect to get a good quality even after calibrating it.
I suggest you to calibrate the front camera yourself using calibration package.

Originally posted by Artem with karma: 709 on 2013-11-12
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by JP on 2013-11-12:
Thanks for the reply. The problem is that the front camera is terrible. I tried to calibrate using the checkerboard method but the camera could not detect it. I was doing it correctly because I got it working on my webcam so the only problem could be the front camera.
Comment by JP on 2013-11-12:
I basically get double images and it looks quite transparent. If I take a snapshot using the app on the phone, it shows a clear image so the camera must not be broken...
Comment by Artem on 2013-11-13:
When you will be calibrating specify it as a parameter for the calibration package i.e. rosrun camera_calibration cameracalibrator.py --size 8x6 --square 0.108 image:=/ardrone/front/image_raw camera:=/ardrone/front/
Comment by JP on 2013-11-13:
Hi, I tried an A4 size check board that was detected when using the webcam. When I changed the camera to the ardrone feed, it would not draw the dots and lines on the checkerboard. What size checkerboard do you recommend?
Comment by Artem on 2013-11-13:
We used two kinds of calibration patterns, the big one 0.108 and the small one (If am not mistaken 0.024) on A4 paper. It is strange that you pass the same parameters for the webcam and it is detected. Can you check that the parameter are the same.
Comment by JP on 2013-11-13:
I ran: rosrun camera_calibration cameracalibrator.py --size 6x6 --square 0.024 image:=/camera/image_raw camera:=/camera for my webcam and: rosrun camera_calibration cameracalibrator.py --size 6x6 --square 0.024 image:= /ardrone/front/image_raw camera:=/ardrone/front for the AR.Drone.
Comment by Artem on 2013-11-13:
Where did you get the pattern 6 by 6? If the number of comers will not fit the number you pass as a parameter, the board will not be detected.
Comment by JP on 2013-11-13:
The checkerboard was a 9x7 board printed on A4 but i folded it so it was a 7x7. The 6x6 refers to the number of inner corners.
Comment by Artem on 2013-11-13:
If you used the same checkerboard successfully in calibrating the webcam, then I am not sure what could the problem. The person who was working with ardrone is not around. So I will try to run calibration on our ARDrone tomorrow myself and let you know.
Comment by JP on 2013-11-13:
yh it is strange. That would be good if you could check with your one and maybe I will try a larger size check board. If not, something might be wrong with my ardrone camera.
Comment by Artem on 2013-11-13:
It works in my case, here the command
rosrun camera_calibration cameracalibrator.py --size 8x6 --square 0.108 image:=/ardrone/front/image_raw camera:=/ardrone/front/ --no-service-check
Comment by JP on 2013-11-14:
Thanks for checking. What size is your check board?
Comment by Artem on 2013-11-14:
I am not in the lab now, but it is a big one. One square is 0.108 meter and it has 8x6 internal conners, just like the command above says. I am pretty sure it will work with A4 size checkerboard.
Comment by JP on 2013-11-14:
Okay thanks so much for your help!

