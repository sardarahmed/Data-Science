Q:

trajectory error in simulation / controller parameters

I'm a student at University of Stuttgart and work at IPA Fraunhofer with the Care-O-bot.
We have here some problems with the planned trajectory in simulation. The actual executed trajectory of the robot arm in rviz differs from the planned one (display_path (motion_planning_msgs/DisplayTrajectory)). We guess that it comes from the dynamic model and the chosen controller parameters in the arm_controller_cob3-1.yaml file (cob_simulation/cob_controller_configuration_gazebo/ros/controller).
So we're looking for ideas, hints and rules how to choose these parameters or explanations where the trajectory error could come from.
Thanks in advance for your help!

Originally posted by Tully on ROS Answers with karma: 1145 on 2011-02-14
Post score: 1

A:

The path you are seeing is indeed the path that comes from the planner.  But there's an extra step that move_arm goes through of filtering the trajectory using a spline_shortcutting method that tries to find ways to make the path shorter while also assigning reasonable velocities when it can.  This can change the trajectory quite a bit.  If you want to see the path that move_arm will actually be sending to be executed you'll need to change the code a bit.  Overlay arm_navigation.  In whatever version of the code you are running find the line:
visualizePlan(current_trajectory_);  //move_arm_simple_action.cpp:1361 in unstable.
Comment this line out, and then copy it an add it after the line:
current_trajectory_ = filtered_trajectory; //move_arm_simple_action.cpp:1422 in unstable
visualizePlan(current_trajectory_); // copied from 1361
The trajectory you see in rviz will now be the actual one getting passed to the controller.  I expect it will look much more like the executed trajectory.

Originally posted by tfoote with karma: 58457 on 2011-02-14
This answer was ACCEPTED on the original site
Post score: 3

