Q:

In ROS2, is a wall timer connected to a node in a way meaningfull for a user

Hi, I need an object (a node) to create a timer in ROS2. I can create any node just in order to call the respective method create_wall_timer, but I would like to have a timer which calls any generic callback not connected to a ROS node. I guess it works like that but you need a node for some technical reasons mentioned here https://groups.google.com/forum/#!topic/ros-sig-ng-ros/5ZwIWUct3o4 ?

Originally posted by uthinu on ROS Answers with karma: 118 on 2018-10-30
Post score: 2

A:

I think my answer on the mailing list you linked is the right one:
https://groups.google.com/d/msg/ros-sig-ng-ros/5ZwIWUct3o4/Rf_HKXDuAgAJ
You need to have something to wait on the timer (they do not create their own threads or anything) and so you need to add it to an executor. For that reason we create it through the node. It would be possible to have a timer which can be used with an executor and without a node, but that's not currently possible.
If you want a timer that automatically calls the callback without blocking (fire and forget), then you should consider using C++'s async and std::this_thread::sleep_for:

https://en.cppreference.com/w/cpp/thread/async
https://en.cppreference.com/w/cpp/thread/sleep_for

Originally posted by William with karma: 17335 on 2018-10-30
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Kansai on 2020-05-14:
What is exactly an executor? (I have some idea) Is rclcpp an executor? (it has a spin method). Is there some info about this?

