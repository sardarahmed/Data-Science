Q:

Sending ROS Nodes between Android Activities

I have a ROS node that I want to be able to communicate with from a view class in an android app. This view class is outside of the mainActivity. At present, I believe that I must either:

create the node in the mainActivity and then send it, or a pointer to it, down a line of activities to the view that will communicate with it.
create the node in the view class that will directly communicate with it.

I believe that, with the second option, I will need to send either the nodeMainExecutor or a reference to it.
Any help or comments would be appreciated.

Originally posted by Srogacki on ROS Answers with karma: 74 on 2012-05-08
Post score: 0

A:

You do not need to create nodes manually. Instead, build a class (for example, a View) that implements the NodeMain interface. In your activity's init(NodeMainExecutor nmExecutor) method, call
nmExecutor.execute(yourView, yourNodeConfig);
as shown on lines 48 and 51 of the example activity.
Your class should implement the methods from both NodeMain and NodeListener as shown in the rosjava documentation. You will receive the actual node object in your onStart(ConnectedNode node) method; you can add topic and service interactions there.
Note that you should NOT rely on onStart() running immediately; if you want to interact with the node from your activity (e.g., to call a service you have created), check to make sure the node has actually been created first.

Originally posted by jatowler with karma: 61 on 2012-05-15
This answer was ACCEPTED on the original site
Post score: 1

