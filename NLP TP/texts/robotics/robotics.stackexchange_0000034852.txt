Q:

Pr2 whirling like a dervish

When using the pr2_2dnav_local and setting a goal very close to an obstacle, the robot starts rotating in place. My guess is that this is related to the dynamic window controller, which can't find a suitable set of commands, even if the planner says the goal target is in a free cell. I've read the guide here, but I didn't find anything to solve this problem.
What parameters of the dwc should I change to avoid this effect?
A broader question is, would you use the default navigation stack to get close to an object (say a table) or do I need a custom package for that?

Originally posted by Lorenzo Riano on ROS Answers with karma: 1342 on 2011-10-11
Post score: 4

Original comments
Comment by Lorenzo Riano on 2011-10-12:
thanks :-D
Comment by Martin GÃ¼nther on 2011-10-11:
Thumbs up for the question title! :-)
Comment by Lorenzo Riano on 2011-10-11:
Several whirling robotic dervishes then!
Comment by Mac on 2011-10-11:
I don't have a solution, but this is a failure mode I've experienced myself, as have several others. At least you aren't alone!

A:

Lorenzo, you should try the "base_local_planner", which was default until cturtle. It does not have this spinning problem at all. The DWA local planner can be fun to watch, but you might be bored of this spinning behavior.
The default configuration file in pr2_navigation_config/move_base/base_local_planner_params.yaml will work well, but if you add the parameter "min_vel_x" to "0.10", the planner will be slightly more robust.

Originally posted by watts with karma: 584 on 2011-10-11
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by JuergenHess on 2012-01-22:
Hi Lorenzo, did you solve the problem? We got the same here in Freiburg. If the robot gets too close to obstacles on the way or at the goal it does not finish rotating and does not continue the path. I have played around with the move_base parameters but was not able to fix it.
Comment by Lorenzo Riano on 2011-10-12:
base_local_planner  solves the problem. in that the robot reaches the point. but then it get's stuck and it doesn't move anymore, even if it has reached a goal position. I guess there is still some fine tuning to do, but things are getting better.

