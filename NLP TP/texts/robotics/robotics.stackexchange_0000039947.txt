Q:

Fuerte - no transformations published when using spawn_model

Hello fellow ROSers,
I've recently tried upgrading from Electric to Fuete but I'm getting errors relating to publishing of the transforms after I spawn a model. I started out with the simple spawning of a block in this tutorial, and while the block spawns in Gazebo, no transforms are published. Here's the output I receive:
In first terminal:
$ roslaunch gazebo_worlds empty_world.launch
... [some startup messages, no errors] ...
rosrun gazebo spawn_model -file ~/object.urdf -urdf -z 1 -model my_object
Warning [parser.cc:330] Gazebo SDF has no gazebo element
Warning [parser.cc:269] parse as sdf version 1.0 failed, trying to parse as old deprecated format
Error [parser_deprecated.cc:1159] Unable to get attribute. Node is null
Error [parser_deprecated.cc:1159] Unable to get attribute. Node is null
Error [parser_deprecated.cc:1159] Unable to get attribute. Node is null
Error [parser_deprecated.cc:1159] Unable to get attribute. Node is null
Error [parser_deprecated.cc:1159] Unable to get attribute. Node is null
Error [parser_deprecated.cc:1159] Unable to get attribute. Node is null
Error [parser_deprecated.cc:1159] Unable to get attribute. Node is null
Error [parser_deprecated.cc:1159] Unable to get attribute. Node is null
Error [parser_deprecated.cc:1159] Unable to get attribute. Node is null
Error [parser_deprecated.cc:1159] Unable to get attribute. Node is null
Error [parser_deprecated.cc:1159] Unable to get attribute. Node is null
Error [parser_deprecated.cc:1159] Unable to get attribute. Node is null
Warning [parser_deprecated.cc:1146] Node[physical] Has empty key value[static]
Warning [parser_deprecated.cc:1146] Node[empty] Has empty key value[]
Warning [parser_deprecated.cc:1146] Node[box] Has empty key value[mu1]
Warning [parser_deprecated.cc:1146] Node[box] Has empty key value[mu2]
Warning [parser_deprecated.cc:1146] Node[box] Has empty key value[fdir1]
Warning [parser_deprecated.cc:1146] Node[box] Has empty key value[slip1]
Warning [parser_deprecated.cc:1146] Node[box] Has empty key value[slip2]
Warning [parser_deprecated.cc:1146] Node[box] Has empty key value[bounce]
Warning [parser_deprecated.cc:1146] Node[box] Has empty key value[bounceVel]
Warning [parser_deprecated.cc:1146] Node[box] Has empty key value[kp]
Warning [parser_deprecated.cc:1146] Node[box] Has empty key value[kd]
Warning [parser_deprecated.cc:1146] Node[box] Has empty key value[softCFM]
Warning [parser_deprecated.cc:1146] Node[box] Has empty key value[maxVel]
Warning [parser_deprecated.cc:1146] Node[box] Has empty key value[minDepth]
Dbg Unable to find element with name[model] return empty

In second terminal:
$ rosrun gazebo spawn_model -file ~/object.urdf -urdf -z 1 -model my_object
loading model xml from file
waiting for service spawn_urdf_model
spawn status:  SpawnModel: successfully spawned model

As I still have Electric installed, I have tried running the same code but with my ROS paths pointing to the Electric installation, and everything ran smoothly with no errors or warnings, and all transforms published.
Any ideas? Thanks for you help!

Ubuntu oneiric 11.10

EDIT/UPDATE:
Opps, as hsu reminded me - there aren't supposed to be any transforms published when simply generating Block.urdf with spawn_model. However, when I try other examples with multiple links and attempt to use 'robot_state_published', no transforms are published when using Fuerte (whereas, they work fine using Electric).
Looking closer at the simple Block.urdf example again, I've further noticed:

When I use Fuerte and run rxgraph, three nodes appear: /gazebo, /rosout and /empty_world_server but none of the of nodes have any arrows to each other or to themselves.
When I do the same but with Electric, the same three nodes appear, but topics are published to and from the nodes. Namely, the /rosout topic is published by both /empty_world_server and /gazebo and subscribed to by the /rosout node, in addition, /gazebo publishes and subscribes the clock to itself.

I've also noticed, from running $rostopics echo /gazebo/joint_states, that the joint states are published continuously by /gazebo for both Electric and Fruete

Originally posted by Angus on ROS Answers with karma: 438 on 2012-04-26
Post score: 1

Original comments
Comment by hsu on 2012-04-26:
I see, found the object.urdf in the tutorial.  What transforms are you referring to?

A:

After playing around with it a little more, I've found some answers:

other than the errors and warnings shown above, the spawn_model command with Block.urdf does work just the same in Fuerte as in Electric. I got confused because the default graphs for rxgraph in Fuerte are different than in Electric (when I click the option 'show all topics,' however, then the two graphs appear roughly the same).

transforms for multi-link models are published normally when using spawn_model. It turns out my problem laid with an improper launch file that wasn't calling the pr2_controller_manager properly and I incorrectly assumed it was a problem related to the string of error and warning messages seen in my original question.

the big chunk of parser error and warning messages that you see above in my question remain but appear to be harmless.

Following is a copy of the launch file I successfully used. Note, however, that running Rviz in the launch file seems to still produce an error for me, whereas running it separately, using rosrun, after the launch file is loaded, works fine.
<!-- Sample empty world in which a robot is spawned.
This file is a modified version of empty_world.launch in the gazebo_simulator stack -->
<launch>

  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>

  <!-- set use_sim_time flag -->
  <group if="$(arg use_sim_time)">
    <param name="/use_sim_time" value="true" />
  </group>

  <!-- start empty world -->
  <node name="empty_world_server" pkg="gazebo" type="gazebo" args="$(find project_dir)/worlds/empty.world" respawn="false" output="screen"/>

 <!-- send urdf file to param server -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find project_dir)/urdf/robot.urdf.xacro'" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_robot" pkg="gazebo" type="spawn_model" args="-urdf -z 3 -param robot_description -model pr2" respawn="false" output="screen" />

  <!-- start robot state and transform publisher -->
  <include file="$(find pr2_controller_manager)/controller_manager.launch"/>

  <!-- start gui -->
  <group if="$(arg gui)">
    <node name="gazebo_gui" pkg="gazebo" type="gui" respawn="false" output="screen"/>
  </group>

  <!--start Rviz
  <node name="Visualizer" pkg="rviz" type="rviz" />
  -->

</launch>

Originally posted by Angus with karma: 438 on 2012-04-27
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by hsu on 2012-04-28:
I've cleaned up a lot of the parser errors in simulator_gazebo 1.6.7.  Thanks for reporting.
Comment by hsu on 2012-04-28:
might be nice to include the correct launch files you are using so others reading this post can understand how to get the transforms.

