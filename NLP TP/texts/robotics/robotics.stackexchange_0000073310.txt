Q:

Using Synchronizer to batch up image messages

Given the code on this page, if I have a message file batched_image.msg that looks like:
sensor_msgs/Image image
sensor_msgs/CameraInfo info

And code that looks like:
void callback(const ImageConstPtr& image, const CameraInfoConstPtr& cam_info)
{
    batched_image batch;
    batch.image = *image;
    batch.info = *cam_info;
}

This works, of course, but it involves a copy of Image, if I understand correctly. How can I avoid this copy, as in my use case I have four 1280x960 images? Ideally I would like:
sensor_msgs/ImageConstPtr image
sensor_msgs/CameraInfoConstPtr info

But that obviously doesn't work.

Originally posted by KenYN on ROS Answers with karma: 541 on 2016-04-11
Post score: 0

A:

Publishing a message makes a copy and sends it over the network. ROS doesn't let you send pointers between nodes, because those nodes aren't running in the same memory space, and may not even be running on the same machine.
If you don't need to publish this data structure, and just want to pass it around within your own code, you can just declare a class or a struct containing the pointers, like:
struct ImageWithCameraInfo {
    sensor_msgs::ImageConstPtr image;
    sensor_msgs::CameraInfoConstPtr info;
}; 

Originally posted by ahendrix with karma: 47576 on 2016-04-12
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by KenYN on 2016-04-12:
I'm using Nodelets, so I was under the impression that passing images between Nodelets in the same container was copy-free.
Comment by ahendrix on 2016-04-12:
yes, but the core ROS message format needs to support the more general use case, so pointer types aren't supported.

