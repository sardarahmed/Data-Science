Q:

GPS Waypoint navigation with robot_localization and navsat_transform_node

I'm using Clearpath Husky A200 which outputs encoders information, a XSENS IMU (without a good compass) and a Novatel RTK GPS with sub-inch accuracy and I would like to implement a GPS waypoints navigation where the robot must follow a set of given waypoints.
I've read the robot_localization documentation, but I didn't understand how to insert the waypoints as goals for the robot.
I know that I need to use navsat_transform_node to obtain the UTM coordinates and then to set a new goal by converting the GPS waypoint coordinates to UTM. But I don't know how to implement this.
Moreover, I've found this package gps_common which subscribes to /fix topic and outputs a /odom topic. Should I use it as input for the ekf_localization node?
Thank you for your help and support!

Originally posted by Marcus Barnet on ROS Answers with karma: 287 on 2017-01-05
Post score: 2

Original comments
Comment by sonyccd on 2017-01-10:
It is strange to me how something like GPS waypoint following is no clearly documented. I have been trying to make this work on Jackal for some time now and still am having problems. I have gotten about to where you are.
Comment by Marcus Barnet on 2017-01-10:
It is very strange to me, too! This is very strange since there is lots of documentation about all the other ROS topics, but almost nothing about GPS and waypoint. I'm very sad about this since this topic is very important to me.
Comment by Marcus Barnet on 2017-01-10:
All I want, it's to find a short tutorial on how set the waypoints and how to use move_base to make the robot follow them to reach the goal.
Comment by sonyccd on 2017-01-14:
Have you tried this?
http://answers.ros.org/question/170131/simple-gps-guided-vehicle/
It does not say much, for that matter none of the answers say much.
Comment by Marcus Barnet on 2017-01-14:
I already read it but it provides no additional information.. it only links to the robot_localization package which I have already read several times :(

A:

Moreover, I've found this package gps_common which subscribes to /fix topic and outputs a /odom topic. Should I use it as input for the ekf_localization node?

navsat_transform_node's job is to convert the GPS data into a nav_msgs/Odometry message so it can be fused into an EKF instance, so you don't need any external packages for that. But that's unrelated to GPS waypoint following. robot_localization and navsat_transform_node are just giving you a state estimate.
move_base requires goals to be in the robot's world frame, or a frame that can be transformed to the world frame. When you run navsat_transform_node, it generates a world_frame->utm transform. Therefore, if you can create a geometry_msgs/PoseStamped or move_base_msgs/MoveBaseGoal message with the UTM coordinates of the goal (and a frame_id of utm), I believe move_base will use that transform to convert it.
So the problem boils down to retrieving UTM coordinates from your GPS coordinates, and then packing those UTM coordinates into a goal message and firing it off to move_base. It occurs to me that this might make a handy service for navsat_transform_node, but free time being what it is(n't), you'll have to do this conversion yourself for now. Fortunately, there are a couple libraries that do this. navsat_transform_node itself uses a header file called navsat_conversions.h (credit to Chuck Gantz for the functionality contained in this header). You can include that header file and call the function I've linked, and it will give you what you want.
You'll obviously have to write a node that subscribes to a NavSatFix and then publishes a goal to move_base, but that should be fairly straightforward.

Originally posted by Tom Moore with karma: 13689 on 2017-01-26
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Marcus Barnet on 2017-01-26:
So, do I need to output a /odometry/filtered by fusing encoders and IMU in ekf_localization_node and then make the navsat_transform_node subscribe to this? Then, how can I use /odometry/gps and /gps/filtered? Do I have to use them to create a new ekf_localization_node istance with only GPS data?
Comment by Tom Moore on 2017-01-26:
/odometry/gps gets fed right back into the same EKF to which it is subscribing. You can run a two-tier setup with just odom and IMU in the first tier and odom, IMU, and GPS in the second, but you don't have to. /gps/filtered just gives you the fused state estimate as GPS coords.
Comment by Tom Moore on 2017-01-26:
Cont'd: You don't need them, which is why the publication is optional. It's just handy if you have some other node that needs your GPS position.
Comment by Marcus Barnet on 2017-01-26:
Thank you a lot! I'm going to try to implement this. Just a question: my GPS system has a sub-inch accuracy while encoders and IMU include always errors (wheel slipping, IMU accumulated errors). Will they affect the GPS readings since they are fused together in ekf_localization_node?
Comment by Marcus Barnet on 2017-01-26:
Continued: I'm asking this since I would like to make the robot consider the goal as reached only when the current GPS coordinates read by the robot will be equal to the given goal GPS coordinates.what happen if the robot moves on a wet surface with a high slipping effect? Will this affect the GPS?
Comment by Tom Moore on 2017-02-01:
If the robot slips, you may see movement in your state estimate in between GPS readings, but then it will snap/jump back to the correct location when the GPS reading arrives.
Comment by Marcus Barnet on 2017-02-22:
@Tom Moore, I'm having problems with my XSENS MTi-10 IMU. It should use ENU standard as the manual reports, so the YAW should outputs 0° when facing EAST, but may be my IMU model do not have orientation output.
Comment by Marcus Barnet on 2017-02-22:
@Tom Moore, I think i'm having problems with my XSENS MTi-10 IMU. It should use ENU standard so the YAW should outputs 0° when facing EAST as reported in the manual, but may be my IMU model do not have orientation output.
Comment by Marcus Barnet on 2017-02-22:
Cont'd: This is a bag file containing /imu/data and /magnetic which are generated by my IMU node. Can you tell me if my IMU output is correct for GPS integration, please? If not, I need to specify the datum parameter with the starting GPS coordinates?
Comment by Marcus Barnet on 2017-02-22:
May be, is it not possible to integrate GPS data if the IMU doesn't output the orientation data? Should I buy another IMU sensor or I just need to set the datum parameter by adding the GPS coordinates for the robot starting point?
Comment by Tom Moore on 2017-02-22:
Your IMU must produce earth-referenced orientation data (i.e., it needs a compass) if you want to use navsat_transform_node. The node has to know your heading so it can figure out which way you are facing in the UTM grid.
Comment by Marcus Barnet on 2017-02-22:
Thank you, so my current IMU is not useful if I want to use this node. I will try to buy another IMU with compass included.
Comment by Marcus Barnet on 2017-02-22:
The /magnetic topic included in my bag is not useful? It seems to contain the magnetic orientation vector. Should the orientation be included in the /imu/data only?
Comment by P_Brand on 2017-04-19:
Hi, I tried to send a move_base_simple/goal (with frame_id: utm) on the Jackal robot. The navsat_transorm_node was running. But that didn't worked. The move_base node accepts only goals in the odom or map frame. How can I send goals in utm Coordinates to the robot?

