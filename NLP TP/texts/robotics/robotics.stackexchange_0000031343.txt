Q:

move_base warning sensor out of bounds

I'm trying to set up the navigation stack to work on a differential drive mobile platform (the Pekee 2 robot by Wany) and I'm having issues to make it work.
I've already followed the steps in the tutorial in http://www.ros.org/wiki/navigation/Tutorials/RobotSetup to set up the robot, and I've successfully created a map of the environment I want to test it in by using the slam_gmapping node.
However, when I run the whole thing, the move_base node keeps outputting a warning that says
[ WARN] [1304077069.890195016]: The origin for the sensor at (0.42, -0.22, 0.23) is out of map bounds. So, the costmap cannot raytrace for it.
[ WARN] [1304077070.090216854]: The origin for the sensor at (0.43, -0.24, 0.23) is out of map bounds. So, the costmap cannot raytrace for it.
[ WARN] [1304077070.290202557]: The origin for the sensor at (0.46, -0.28, 0.23) is out of map bounds. So, the costmap cannot raytrace for it.
[ WARN] [1304077070.490195304]: The origin for the sensor at (0.47, -0.29, 0.23) is out of map bounds. So, the costmap cannot raytrace for it.
[ WARN] [1304077070.690157122]: The origin for the sensor at (0.48, -0.30, 0.23) is out of map bounds. So, the costmap cannot raytrace for it.
[ WARN] [1304077070.890200670]: The origin for the sensor at (0.51, -0.31, 0.23) is out of map bounds. So, the costmap cannot raytrace for it.
[ WARN] [1304077071.090191993]: The origin for the sensor at (0.52, -0.31, 0.23) is out of map bounds. So, the costmap cannot raytrace for it.

(I put several lines to note that the sensor origin changes at the robot spins, in case it's important)
In addition, when I try to send a goal the robot starts spinning around and an additional warning which says
[ WARN] [1304077075.656158292]: The robot's start position is off the global costmap. Planning will always fail, are you sure the robot has been properly localized?

Until it stops with an error
[ERROR] [1304077075.706049498]: Aborting because a valid plan could not be found. Even after executing all recovery behaviors

The thing is that using rviz, after setting up the initial pose, the robot footprint is fully inside the map, as well as the whole pose array cloud in the /particlecloud topic (after teleoperating the robot around for a while).
Can anyone help me with this? I'll try to get more insight of how the navigation stack works, but I'd really like to have something working even before knowing what exactly is going on because of deadline issues.

Originally posted by Miguel Prada on ROS Answers with karma: 1071 on 2011-04-28
Post score: 4

Original comments
Comment by Jack Sparrow on 2011-04-29:
There is probably problem with your localization. Global costmap uses map from map server for it's costmap. When you haven't localized properly your robot, robot might get outside your map borders and then you receive and error. There might be also a problem with your transformations. Cheers

A:

Hi Miguel,
It seems that the transform between the /map frame and the /odom frame works fine for you. From the warning you get I would say that you have some configuration parameters of the costmaps that are not set correctly. The move_base node uses two costmaps, the local costmap and the global costmap. If you are using a map, make sure to configure the global costmap as static map. However, the local one should not be static (look at the rolling_window parameter). You can find all the parameters at http://www.ros.org/wiki/costmap_2d
I hope this can help you!

Originally posted by gazkune with karma: 219 on 2011-04-29
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Miguel Prada on 2011-04-29:
Hi gazkune. It was indeed a problem with the costmap configuration parameters. Few days ago I was trying to run the navigation without using a map, and I must have changed the static map parameter to false in the global costmap yaml back then. It was quite a stupid mistake after all. Thanks.
Comment by Ziwen Qin on 2016-12-01:
I am confused, When I run the navigation without using a map, Should I set "static_map" true or false in the global costmap yaml?
Comment by peterwe on 2017-04-13:
When you run the navigation stack without a prior map, you should set "static_map: true". This means that the map does not get updated over time.
Comment by jinseoi on 2017-11-05:
Actually, you can set "static_map: false", and set global_map as a rolling window like what you set parameter for local_map. Navigation without a prior map will also work.

