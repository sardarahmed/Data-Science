Q:

Migrating from rosbuild to catkin:    equivalent

Hello everyone,
I'm working on switching beetween rosbuild & catkin build system. In my old rosbuild package manifest.xml, there is this macro:
 
which I don't know how to transfer to catkin. Some suggestions say that it must be done in CMakeLists.txt catkin_package()  but there are no options for cflags and/or lflags.
Any help will be appreciated
Thank you,

Originally posted by Huy Cong on ROS Answers with karma: 15 on 2015-03-11
Post score: 1

A:

catkin_package is correct, see
http://wiki.ros.org/catkin/CMakeLists.txt#catkin_package.28.29
INCLUDE_DIRS take the role of cflags and LIBRARIES are like lflags, just that in both cases you don't specify explicit flags, but links the exported include directories and libraries to link.

Originally posted by dornhege with karma: 31395 on 2015-03-11
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by gvdhoorn on 2015-03-11:
Just to add to this: if you need to export actual C(XX)_FLAGS (so not just include paths), that should be done using the CFG_EXTRAS argument to catkin_package(..).
Comment by Huy Cong on 2015-03-11:
Yes thats exactly what I want to do. My flags to export is -std=c++0x. The CFG_EXTRAS is quite difficult to understand, so I have to create a .cmake file that has   set (C(XX)_FLAGS ...)  then export the whole script?
Comment by gvdhoorn on 2015-03-11:
Yes. You create a your_pkg-extras.cmake in a cmake/ subdir, then add the CFG_EXTRAS to your catkin_package(..) line. For setting CXX_FLAGS I'd use set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x"), as you want to append, not overwrite.
Comment by Huy Cong on 2015-03-11:
I tried   catkin_package(.. CFG_EXTRAS {my_cmake}.cmake.develspace.in)   but   {my_cmake}  file was not build into   devel/{my_package}/cmake/{my_package}  directory, what has gone wrong? should I replace the name of the cmake file?
Comment by gvdhoorn on 2015-03-11:
Adding a single option to the CXX_FLAGS does not really require using a templated extras file. Just make it a regular -extras.cmake, without the .develspace.in. Also: as far as I know, the extras file doesn't end up in devel. Only in install.
Comment by Huy Cong on 2015-03-11:
Its ok to use  -extras.cmake , but I want my file to end up in  devel , so other package can see and include it also, is there a way to do it?
Comment by gvdhoorn on 2015-03-11:\

so other package can see and include it also

You don't need to include it in other pkgs. catkin takes care of that. It's all auto-magic.

