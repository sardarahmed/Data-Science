Q:

How do I calculate the required loop frequency for a servo controller?

I have a motor which drives a string connected to a load cell. I would like to implement a closed loop controller to control the load applied by the motor to the string.

How do I go about determining the required loop frequency in order to create a stable control system? Is it something like the Nyquist frequency, where the loop speed should be at least twice the highest frequency inherent in the mechanical system?

A:

The loop frequency is a parameter that needs to be tuned just like your proportional, integral, and/or derivative terms. Varying it has a similar affect on your output as varying your other parameters. Too low a frequency and you'll never reach your desired steady state. Too high and the output will oscillate.
To determine the optimal loop frequency, you will first need to construct Bode plots from real world test or simulation data:

Bode plots concisely display all relevant frequency input and output
information on two plots: amplitude ratio as a functions of frequency
and phase shift as a function of frequency. The amplitude ratio plot
is a log-log plot while the phase angle plot is a semilog (or
log-linear) plot.
To construct a Bode plot, an engineer would have
empirical data showing input and output values that vary as sinusoidal
functions of time. For instance, there might be inlet temperature data
that varies sinusoidally and the outlet temperature data that also
varies sinusoidally.
The amplitude ratio, AR, is the ratio of the amplitude of the output
sinusoidal curve divided by the amplitude of the input sinusoidal
curve.
$$AR = \dfrac{outputamplitude}{inputamplitude}$$
To find the phase shift, the periods of the input and output sine
curves need to be found. Recall that the period, P, is the length of
time from one peak to the next.
$$P = \dfrac{1}{f} = \dfrac{2\pi}{\omega}$$
$$f = frequency$$
$$\omega = frequency(rad/sec)$$

Rules of Thumb when analyzing Bode plots
Generally speaking, a gain change shifts the amplitude ratio up or
down, but does not affect the phase angle. A change in the time delay
affects the phase angle, but not the amplitude ratio. For example, an
increase in the time delay makes the phase shift more negative for any
given frequency. A change in the time constant changes both the
amplitude ratio and the phase angle. For example, an increase in the
time constant will decrease the amplitude ratio and make the phase lag
more negative at any given frequency.

Then you will need to determine the cross-over frequency:

The proportional term moves the magnitude of the frequency response of
the open loop up or down and hence is used to set the cross-over
frequency of the open loop. The cross-over frequency is the frequency
at which the magnitude has a gain of 1 (or 0dB). This frequency is
important as it is closely related to bandwidth of the closed loop
response.
In an ideal system the proportional gain could be made (almost)
infinitely large leading to an infinitely fast, yet still stable,
closed loop. In practice that is not the case. Rather, two design
rules of thumb come into play.
Firstly the sample rate of the digital hardware on which the
controller is going to be executed needs to be considered. A typical
rule of thumb is that the cross-over frequency should be set to be at
least 10 times lower than the sample rate of the controller.
Conceptually this ensures that the controller is running at a fast
enough rate that it can adequately handle changes in the signal being
controlled.
The second rule of thumb is related to the slope of the frequency
response at the cross-over frequency. If the roll-off of the open-loop
magnitude response at cross-over can be made to be close to
-20dB/decade then the closed-loop bandwidth can be expected to be close to the cross-over frequency. Note that the integral and
derivative terms, not just the proportional term, are used to control
the slope at cross-over.

(emphasis mine)
So the optimal control loop frequency should be around 10 times that of the cross-over frequency of your system's phase delay which can be obtained through empirical test data or, ideally, computer simulation.

A:

When the string isn't under tension you have a non-linear system (i.e. you're pushing on a rope) which may also make this harder to control.  The stiffness of your string is going to limit your bandwidth. (The string acts as a low-pass filter, at least when it's under tension).  I've actually worked a little on a similar setup and it was really hard to control.
Since you're sampling the sampling theorem absolutely applies and you must sample at least x2 the highest frequency in your input (either by increasing the sample rate or filtering the input before sampling or both) otherwise you'll get aliasing.
As Kyle points out the other factor is your desired control bandwidth.  I concur with the rule of thumb that the loop should run at least ~x10 that frequency.  
Both these conditions need to be met.
There's a pretty good discussion of this in Chapter 6: Sampling in closed loop control systems of Marten Derk van der Laan's (1995) dissertation Signal sampling techniques for data acquisition in process control:

Selection of sampling rates is an important issue. For economical
  reasons, sampling rates are kept as low as possible: A lower rate
  means that there is more time available for control algorithm
  execution, which can thereby be carried out on slower computers.
  Digitizing well behaved analog control systems can heavily affect
  system response. If sampling frequencies is too low, the systems may
  even become unstable. According to the Nyquist criterion, the sampling
  frequency should at least be twice as high as the bandwidth of the
  error signal. This bandwidth is bounded by the system bandwidth, hence
  ws  2wB. However, in order to guarantee satisfactory response, a
  factor of 10 to 20 may be required

