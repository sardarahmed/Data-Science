Q:

Error when loading MyControllerClass

Hi,
I run this tutorial.
And everything seems ok, but at last I couldn't load the controller.
How to fix that?
Thank you~~
It showed that:
 sam@sam-desktop:~/code/ros/controller/joint_controller_pkg$ rosparam set MyControllerClass/type MyControllerPlugin
 sam@sam-desktop:~/code/ros/controller/joint_controller_pkg$ rosparam set MyControllerClass/joint_name r_shoulder_pan_joint
 sam@sam-desktop:~/code/ros/controller/joint_controller_pkg$ rosrun      pr2_controller_manager pr2_controller_manager load MyControllerClass
 Error when loading MyControllerClass
 sam@sam-desktop:~/code/ros/controller/joint_controller_pkg$

My controller.h
 #include <pr2_controller_interface/controller.h>
 #include <pr2_mechanism_model/joint.h>
 
 namespace my_controller_ns{
 
    class MyControllerClass: public pr2_controller_interface::Controller
    {
        private:
            pr2_mechanism_model::JointState* joint_state_;
            double init_pos_;
 
        public:
            virtual bool init(pr2_mechanism_model::RobotState *robot,
                    ros::NodeHandle &n);
            virtual void starting();
            virtual void update();
            virtual void stopping();
    };
 } 

My controller.cpp
 #include <pluginlib/class_list_macros.h>
 
 #include "controller.h"
 
 namespace my_controller_ns {
 
    /// Controller initialization in non-realtime
    bool MyControllerClass::init(pr2_mechanism_model::RobotState      *robot,ros::NodeHandle &n)
    {
        //使用時會從console取得joint名字才能繼續執行
        std::string joint_name;
        if (!n.getParam("joint_name", joint_name))
        {
            ROS_ERROR("No joint given in namespace: '%s')",
                    n.getNamespace().c_str());
            return false;
        }
 
        joint_state_ = robot->getJointState(joint_name);
        if (!joint_state_)
        {
            ROS_ERROR("MyController could not find joint named '%s'",
                    joint_name.c_str());
            return false;
        }
        return true;
    }
 
 
    /// Controller startup in realtime
    void MyControllerClass::starting()
    {
        init_pos_ = joint_state_->position_;
    }
 
 
    /// Controller update loop in realtime
    void MyControllerClass::update()
    {
        double desired_pos = init_pos_ + 0.5 * sin(ros::Time::now().toSec());
        double current_pos = joint_state_->position_;
        joint_state_->commanded_effort_ = -10 * (current_pos - desired_pos);
    }
 
 
    /// Controller stopping in realtime
    void MyControllerClass::stopping()
    {}
 } // namespace
 
 /// Register controller to pluginlib
 PLUGINLIB_DECLARE_CLASS(joint_controller_pkg,MyControllerPlugin, 
        my_controller_ns::MyControllerClass, 
        pr2_controller_interface::Controller)

My CMakeLists.txt
 cmake_minimum_required(VERSION 2.4.6)
 include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)
 
 # Set the build type.  Options are:
 #  Coverage       : w/ debug symbols, w/o optimization, w/      code-coverage
 #  Debug          : w/ debug symbols, w/o optimization
 #  Release        : w/o debug symbols, w/ optimization
 #  RelWithDebInfo : w/ debug symbols, w/ optimization
 #  MinSizeRel     : w/o debug symbols, w/ optimization, stripped      binaries
 #set(ROS_BUILD_TYPE RelWithDebInfo)
 
 rosbuild_init()
 
 #set the default path for built executables to the "bin" directory
 set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
 #set the default path for built libraries to the "lib" directory
 set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
 
 #uncomment if you have defined messages
 #rosbuild_genmsg()
 #uncomment if you have defined services
 #rosbuild_gensrv()
 
 #common commands for building c++ executables and libraries
 #rosbuild_add_library(${PROJECT_NAME} src/example.cpp)
 #target_link_libraries(${PROJECT_NAME} another_library)
 #rosbuild_add_boost_directories()
 #rosbuild_link_boost(${PROJECT_NAME} thread)
 #rosbuild_add_executable(example examples/example.cpp)
 #target_link_libraries(example ${PROJECT_NAME})
 rosbuild_add_library(joint_controller_lib src/controller.cpp)

My manifest.xml
 <package>
   <description brief="joint_controller">
 
     joint_controller
 
   </description>
   <author>sam</author>
   <license>BSD</license>
   <review status="unreviewed" notes=""/>
   <url>http://ros.org/wiki/joint_controller</url>
   <depend package="pr2_controller_interface"/>
   <depend package="pr2_mechanism_model"/>
   <depend package="pluginlib"/>
 
   <export>
     <pr2_controller_interface plugin="${prefix}/controller_plugins.xml" />
   </export>
 </package>

My controller_plugins.xml
 <library path="lib/libjoint_controller_lib">
   <class name="joint_controller_pkg/MyControllerPlugin"
          type="joint_controller_ns::MyControllerClass"
          base_class_type="pr2_controller_interface::Controller" />
 </library>

I also find some similar error others met and run the instruction
 sam@sam-desktop:~/code/ros/controller/joint_controller_pkg$ nm lib/libjoint_controller.so | grep pocoBuildManifest
 00002f30 T pocoBuildManifestjoint_controller_pkg__MyControllerPlugin
 sam@sam-desktop:~/code/ros/controller/joint_controller_pkg$

I also run rxconsole,and it showed that
 Could not load class MyControllerPlugin: According to the loaded plugin descriptions the class MyControllerPlugin with base class type pr2_controller_interface::Controller does not exist. Declared types are  CartesianTrajectoryController JTTeleopController JointGravityController JointPendulumController ethercat_trigger_controllers/MultiTriggerController ethercat_trigger_controllers/ProjectorController ethercat_trigger_controllers/TriggerController joint_qualification_controllers/CheckoutController joint_qualification_controllers/CounterbalanceTestController joint_qualification_controllers/HeadPositionController joint_qualification_controllers/HysteresisController joint_qualification_controllers/JointLimitCalibrationController joint_qualification_controllers/MotorJointCalibrationController joint_qualification_controllers/WristDifferenceController pr2_calibration_controllers/CasterCalibrationController pr2_calibration_controllers/GripperCalibrationController pr2_calibration_controllers/JointCalibrationController pr2_calibration_controllers/WristCalibrationController pr2_controller_manager/TestController pr2_gripper_sensor_controller/PR2GripperSensorController pr2_mechanism_controllers/CasterController pr2_mechanism_controllers/CasterControllerNode pr2_mechanism_controllers/LaserScannerTrajController pr2_mechanism_controllers/Pr2BaseController pr2_mechanism_controllers/Pr2BaseController2 pr2_mechanism_controllers/Pr2GripperController pr2_mechanism_controllers/Pr2Odometry robot_mechanism_controllers/CartesianPoseController robot_mechanism_controllers/CartesianTwistController robot_mechanism_controllers/CartesianWrenchController robot_mechanism_controllers/JointEffortController robot_mechanism_controllers/JointPositionController robot_mechanism_controllers/JointSplineTrajectoryController robot_mechanism_controllers/JointTrajectoryActionController robot_mechanism_controllers/JointVelocityController slipgrip_controller/ContactObserverPlugin slipgrip_controller/PR2GripperSensorObserver slipgrip_controller/SlipGripControllerPlugin teleop_controllers/JinvTeleopController7 tff_controller/TFFController
 Could not load controller 'MyControllerClass' because controller type 'MyControllerPlugin' does not exist

Run rospack:
 sam@sam-desktop:~/code/ros/controller/joint_controller_pkg$ rospack      plugins --attrib=plugin pr2_controller_interface
 joint_controller_pkg      /home/sam/code/ros/controller/joint_controller_pkg/controller_plugins.xml
 tff_controller      /opt/ros/cturtle/stacks/pr2_doors/tff_controller/controller_plugins.xml
 teleop_controllers      /opt/ros/cturtle/stacks/pr2_cockpit/teleop_controllers/controller_plugins.xml
 pr2_controller_manager      /opt/ros/cturtle/stacks/pr2_mechanism/pr2_controller_manager/test/controller_pl     ugin.xml
 joint_qualification_controllers      /opt/ros/cturtle/stacks/pr2_self_test/joint_qualification_controllers/controller_plug     ins.xml
 gazebo_benchmarks      /opt/ros/cturtle/stacks/wg_robots_gazebo/gazebo_benchmarks/gazebo_physics_co     ntroller_plugins.xml
 simple_Jtranspose_controller      /opt/ros/cturtle/stacks/pr2_object_manipulation/simple_Jtranspose_controller/con     troller_plugins.xml
 slipgrip_controller      /opt/ros/cturtle/stacks/pr2_object_manipulation/slipgrip_controller/controller_plug     ins.xml
 pr2_gripper_sensor_controller      /opt/ros/cturtle/stacks/pr2_object_manipulation/pr2_gripper_sensor_controller/co     ntroller_plugins.xml
 pr2_mechanism_controllers      /opt/ros/cturtle/stacks/pr2_controllers/pr2_mechanism_controllers/controller_plug     ins.xml
 pr2_calibration_controllers      /opt/ros/cturtle/stacks/pr2_controllers/pr2_calibration_controllers/controller_plugi     ns.xml
 robot_mechanism_controllers      /opt/ros/cturtle/stacks/pr2_controllers/robot_mechanism_controllers/controller_pl     ugins.xml
 ethercat_trigger_controllers      /opt/ros/cturtle/stacks/pr2_controllers/ethercat_trigger_controllers/controller_plug     ins.xml
sam@sam-desktop:~/code/ros/controller/joint_controller_pkg$

Originally posted by sam on ROS Answers with karma: 2570 on 2011-03-06
Post score: 1

A:

Okay.. I ran through the entire tutorial... and I can reproduce your error when my package path doesn't include the controller..
This is the error
[ERROR] [1300151311.132418409, 151.906000000]: Could not load class MyControllerPlugin: According to the loaded plugin descriptions the class MyControllerPlugin with base class type pr2_controller_interface::Controller does not exist. Declared types are  CartesianTrajectoryController ethercat_trigger_controllers/MultiTriggerController ethercat_trigger_controllers/ProjectorController ethercat_trigger_controllers/TriggerController joint_qualification_controllers/CheckoutController joint_qualification_controllers/CounterbalanceTestController joint_qualification_controllers/HeadPositionController joint_qualification_controllers/HysteresisController joint_qualification_controllers/JointLimitCalibrationController joint_qualification_controllers/MotorJointCalibrationController joint_qualification_controllers/WristDifferenceController pr2_calibration_controllers/CasterCalibrationController pr2_calibration_controllers/FakeCalibrationController pr2_calibration_controllers/GripperCalibrationController pr2_calibration_controllers/JointCalibrationController pr2_calibration_controllers/WristCalibrationController pr2_controller_manager/TestController pr2_gripper_sensor_controller/PR2GripperSensorController pr2_mechanism_controllers/CasterController pr2_mechanism_controllers/CasterControllerNode pr2_mechanism_controllers/LaserScannerTrajController pr2_mechanism_controllers/Pr2BaseController pr2_mechanism_controllers/Pr2BaseController2 pr2_mechanism_controllers/Pr2GripperController pr2_mechanism_controllers/Pr2Odometry robot_mechanism_controllers/CartesianPoseController robot_mechanism_controllers/CartesianTwistController robot_mechanism_controllers/CartesianWrenchController robot_mechanism_controllers/JointEffortController robot_mechanism_controllers/JointPositionController robot_mechanism_controllers/JointSplineTrajectoryController robot_mechanism_controllers/JointTrajectoryActionController robot_mechanism_controllers/JointVelocityController tff_controller/TFFController
[ERROR] [1300151311.132503256, 151.907000000]: Could not load controller 'my_controller_name' because controller type 'MyControllerPlugin' does not exist

Make sure that you have your path setup correctly in EVERY terminal window. This means you can roscd to the controller package in every terminal. If you don't have your path setup correctly you will get the error.
OR
I can reproduce the error when the controller_plugin.xml does not reflect the actual code as you have in your question. Your namespace is my_controller_ns but you call out in the controller_plugins.xml that the namespace is joint_controller_ns. This is the error
[ERROR] [1300214922.756787931, 74.340000000]: Could not load class my_controller_pkg/MyControllerPlugin: The class my_controller_pkg/MyControllerPlugin could not be loaded. Error: Not found: joint_controller_ns::MyControllerClass
[ERROR] [1300214922.756846627, 74.340000000]: Could not load controller 'my_controller_name' because controller type 'my_controller_pkg/MyControllerPlugin' does not exist

Update your controller_plugin.xml to reflect the actual controller and it should run.

Originally posted by mmwise with karma: 8372 on 2011-03-14
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by mmwise on 2011-03-16:
Yes I loaded the controller for the tutorial in gazebo .. i posted the fix in the above answer as well.. have you had any success?
Comment by sam on 2011-03-16:
So...have you succeeded to load that controller??
Comment by mmwise on 2011-03-15:
The namespace mismatch returns the same error...
Comment by mmwise on 2011-03-15:
I see a problem ...  controller_plugins.xml does not match your controller... your namespace is my_controller_ns yet you have joint_controller_ns called out in your controller_plugins.xml
Comment by mmwise on 2011-03-15:
okay is the controller in the list when you do rosrun pr2_controller_manager pr2_controller_manager list-types
Comment by sam on 2011-03-15:
Thank you for this answer.  I have checked that my ~/.bashrc file:"...  source /opt/ros/cturtle/setup.bash
export ROS_PACKAGE_PATH=/home/sam/code/ros/control/joint_controller_pkg:/opt/ros/cturtle/stacks;", and I can roscd to that package in any terminal,but also can't load controller type...

