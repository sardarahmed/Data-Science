Q:

Triggering re-build on jenkins

Hi,
Is there a way to trigger a re-build of the jenkins builds? I'm thinking about something like this.
The reason I would like to do this is that I am releasing a package which runs fine in the pre-release tests, but fails on Jenkins (see also my other question about this). Now I'd like to be able to test this particular case locally.
I can apply the fixes in my repo and then re-run bloom-release to push to the release repository. I don't increase the version, and skip the part about the PR to rosdistro. This causes all packages which have failed so far to re-build (they failed because they depend on the faulty package which needs fixing). However the faulty package itself has built fine, so a jenkins re-build is not triggered for it - with the result of having all depending packages fail again, even though the cause of error has been fixed in the release repository.
In my case, I just forgot to set a flag needed for jenkins build in my cmake file. Is it necessary to increase version and do a full bloom bloom-release (incl. PR), even if changes are tiny, in order to trigger a re-build of a particular jenkins project? Or is there an easier way to do this? I don't want to flood the system with silly version increases, I'd prefer to test this locally before I re-release the package. Is there a standard way to do this?
Thanks for your help,
Jenny

Originally posted by JenniferBuehler on ROS Answers with karma: 1 on 2016-06-01
Post score: 0

Original comments
Comment by Dirk Thomas on 2016-06-01:
Can you please clarify which job you are referring to. A devel job or a sourcedeb / binarydeb job?
Comment by JenniferBuehler on 2016-06-01:
One example was arm_components_name_manager. It needs the baselib_binding package, which had built fine. I wanted to re-trigger building baselib_binding (after only setting a flag to true in cmakelists)
Comment by Dirk Thomas on 2016-06-01:
http://build.ros.org/view/Idev/job/Idev__jb_common_libs__ubuntu_trusty_amd64/ should be the job since that repo contains the package of the referenced binary job (https://github.com/ros/rosdistro/blob/c9164b251da44df2aaa7dd928f596f29ff0da74b/indigo/distribution.yaml#L4085-L4105).
Comment by JenniferBuehler on 2016-06-01:
Ok, that's great to know, I'll try this. So far the devel branches have built fine, but maybe I have missed something there. I'll re-release the package with the fixes - it's anyway only required for the first release of the package, until things are fixed, so it's not a huge concern. Thanks!

A:

I binary job builds a released package. Therefore it requires you to make a new release to trigger it again. You might want to use a devel job which is being triggered on new commits to your upstream repo.

Originally posted by Dirk Thomas with karma: 16276 on 2016-06-01
This answer was ACCEPTED on the original site
Post score: 0

