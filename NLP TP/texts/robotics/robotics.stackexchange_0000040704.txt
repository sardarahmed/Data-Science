Q:

detecting backward obstacles when navigating

Hi, we are using the navigation stack (diamondback) in our robot in order to navigate in a dynamic scenario with presence of people and must say that its performance is good in general terms. There is, however, a behavior that compromises safety. When a person stands in front of the robot, close to it, the robot moves backward (only if escape_vel parameter has a negative value). If the person starts walking, she can guide the robot backwards.
Although we have several ultrasound sensors at the rear of the robot, it continues moving backward colliding with obstacles. We have tested the navigation setting escape_vel value to zero, but the overall performance gets worse, because the robot gets stuck in much more cases.
Is there any way to configure the navigation stack so that the obstacles in the rear of the robot are taken into account?

Originally posted by marija on ROS Answers with karma: 36 on 2012-05-21
Post score: 1

Original comments
Comment by karthik on 2012-05-21:
Please mention the robot in use and the sensors available.

A:

The trajectory_planner_ros currently does not have a parameter to change this. The code intentionally discards obstacles behind the robot, which might be a design flaw, but helped in some situations on the PR2.
If you want a person to be able to move the robot backwards like that, it is likely that you will have to write your own localplanner or modify one of the local planners in the navigation stack.
Possibly you can change the code of trajectory_planner.cpp to check for obstacles when escaping backwards. If your costmap is updated by the ultrasonic sensors, you should be able to make this modification easily, by searching the file for escape_vel and adding a footprint check.

Originally posted by KruseT with karma: 7848 on 2012-05-21
This answer was ACCEPTED on the original site
Post score: 1

