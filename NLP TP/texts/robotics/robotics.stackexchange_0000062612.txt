Q:

Filtering Visual Odometry and IMU/GPS data

Hello,
during the past months I have been working on gettings results from a stereo-cam system
using ROS-package viso2_ros in a moving vehicle. So far so good, the egomotion estimation from visual
odometry really works well as can be seen here:
https://docs.google.com/document/d/1lsqHfEHf7g4K1UC0KOJIlh22V57SYQLA5EkSOBJr0fg/edit
I now have wheel_odometry, visual_odometry, IMU and GPS-data in ASCII-files ready to be processed and filtered (also have a reference trajectory giving the "true" position). Here is the data:
https://drive.google.com/file/d/0B1b1mlDmiL4wQm9DdVAzX0lWYmc/edit?usp=sharing
I can filter all the data with the package "robot_pose_ekf".
The disadvantage is that the package uses the orientation from the IMU rather than
angular rates and acceleration. This orientation is drifting and not accurate.
I was wondering if you could give me tips how to build a filter which fuses all
the described data. If possible the design of the filter should not be that complicated
since I donot have that much knowledge about EKFs. Also any good literature recommendation is appreciated.
Hector

Originally posted by mister_kay on ROS Answers with karma: 238 on 2014-09-16
Post score: 0

Original comments
Comment by karry3775 on 2020-04-06:
Hi I am also using viso2_ros inside gazebo to get stereo visual odometry. I am facing issues with translation estimates. When my robot is standstill, even then there is some forward motion estimate given by the package. Did you ever face these issues ? Thanks

A:

Have you tried robot_localization? It accepts angular velocities, though linear acceleration is not (yet) supported.
However, I'm surprised that you're getting drift from robot_pose_ekf. Have you tried plotting the raw sensor data?

Originally posted by Tom Moore with karma: 13689 on 2014-09-16
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by mister_kay on 2014-09-16:
Yes I did. Actually that is what my supervisor told me, e.g. if an xsens is in rest, the orientation [computed by xsens] will drift over time. I also have some experience with that. My former colleague has put up a video of his error state filter: https://www.youtube.com/watch?v=ymuhJ6pt52o.

