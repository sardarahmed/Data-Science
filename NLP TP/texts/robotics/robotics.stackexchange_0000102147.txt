Q:

ros2_control joint limits

OS: Ubuntu 22.04
Distro: Humble
Hi, I am trying to use MoveIt2! to control a custom robot. I have created a simple URDF files to test how to work with ros2_control. I have created a hardware interface component. When running the trajectory,  it seems that the joint_limits that I have specified in the URDF file is not being enforced.

<?xml version="1.0"?>
&ltrobot name="one_joint">
  &ltlink name="base_link">
    &ltvisual>
      &ltgeometry>
        &ltcylinder length="0.6" radius="0.2"/>
      </geometry>
    </visual>
    &ltcollision>
      &ltgeometry>
        &ltcylinder length="0.6" radius="0.2"/>
      </geometry>
    </collision>
  </link>
  &ltlink name="rotate_joint">
    &ltvisual>
      &ltgeometry>
        &ltbox size="0.6 0.1 0.2"/>
      </geometry>
      &ltorigin rpy="1.57075 0 0" xyz="0.3 0 0"/>
    </visual>
    &ltcollision>
      &ltgeometry>
        &ltbox size="0.6 0.1 0.2"/>
      </geometry>
    </collision>
  </link>
  &ltjoint name="base_to_rotate_joint" type="revolute">
    <!-- &ltsafety_controller k_velocity="4" soft_lower_limit="-0.20" soft_upper_limit="0.20" /> -->
    &ltparent link="base_link"/>
    &ltchild link="rotate_joint"/>
    &ltorigin xyz="0 0 0.35"/>
    &ltaxis xyz="0 0 1"/>
    &ltlimit effort="87" lower="-6" upper="6" velocity="0.272645" />
  </joint>

  &ltros2_control name="grab_joint1" type="actuator">
    &lthardware>
      &ltplugin>grab_hardware_interface/GrabJointHardware</plugin>
    </hardware>
    &ltjoint name="base_to_rotate_joint">
      &ltcommand_interface name="position">
        &ltparam name="min">-6</param>
        &ltparam name="max">6</param>
      </command_interface>
      &ltcommand_interface name="velocity">
        &ltparam name="min">-0.27</param>
        &ltparam name="max">0.27</param>
      </command_interface>
      &ltcommand_interface name="acceleration">
        &ltparam name="min">-0.27</param>
        &ltparam name="max">0.27</param>
      </command_interface>
      &ltstate_interface name="position"/>
      &ltstate_interface name="velocity"/>
    </joint>
  </ros2_control>
</robot>

Going through the ros2_control PRs I am completely confused on how to enforce the joint_limits.
Can anyone shed some light on this.

Originally posted by Cryoschrome on ROS Answers with karma: 75 on 2022-07-20
Post score: 1

A:

The ros2_control joint_trajectory_controller actually doesn't enforce joint limits at all right now  :'|   There's some work being done to fix that but it's not ready yet.
So, MoveIt is the module that's actually obeying joint limits when it creates a trajectory. MoveIt is not aware of these limit tags that you have put in the <ros2_control> block.
For MoveIt, you should specify the joint limits like this:
https://github.com/ros-planning/moveit_resources/blob/57a44ca62132802e4d6155801a0c867edb247db9/panda_description/urdf/panda.urdf#L57
Or you can put the joint limits in joint_limits.yaml --> this will override whatever you have in the URDF.

Originally posted by AndyZe with karma: 2331 on 2022-07-20
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Cryoschrome on 2022-07-21:
Thank you for the reply. I got it working!

