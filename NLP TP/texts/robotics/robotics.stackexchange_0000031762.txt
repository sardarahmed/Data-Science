Q:

Questions about the Dynamic Window Approach in ROS

Hi ROS community! Some questions:

Is the use of the Base_Local_Planner with dwa=true deprecated? I've read that the dwa_local_planner is more efficient.
What is the difference between TR and DWA in the base_local_planner? I understand the differences explained in the Wiki, however looking the trajectory_planner.cpp I don't see them.
The only difference I see in the source code is that each choice defines the dynamic window velocity limits using sim_period or sim_time (which are both customizable parameters).
I suspect dwa=true also works as the TR algorithm (with non-circular trajectories) but I would like a second opinion.
The original DWA method is a goal-directed reactive method, while this implementation uses the path_cost (based on the MapGrid class) to evaluate the cost of each local trajectory. Is this method documented in any known paper or it is considered a minor modification of the method made by WG?

Thanks!

Originally posted by Pablo IÃ±igo Blasco on ROS Answers with karma: 2982 on 2011-05-23
Post score: 3

A:

OK, you're actually right here because dt is being computed based on the simulation granularity, and not the controller_frequency. This is important for safety, but in some cases, you're right that it would lead to a very short TR style simulation before the desired velocity is reached. You're also right that the dwa_local_planner doesn't do this TR simulation up to the desired speed, though to be more correct in terms of simulating what the robot will actually do based on acceleration limits, it probably should. However, I doubt that this short TR simulation, or lack there of in the dwa_local_planner, has any noticeable affect on performance. If a change were to be made, it'd probably be most proper to have the dwa_local_planner use the acceleration limits when forward simulating to ramp up to its desired speed.

Originally posted by eitan with karma: 2743 on 2011-05-25
This answer was ACCEPTED on the original site
Post score: 2

