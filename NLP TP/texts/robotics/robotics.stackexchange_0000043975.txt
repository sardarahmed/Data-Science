Q:

Document about relationship b/w GUI components

Is there a little more in detail documentation about ROS GUI components?
I see at least 2 ROS stacks for GUI development, qt_gui_core and rqt. Both of which seem to contain some common packages but the hierarchy and their usage is unclear to me.
Because of that, I've drawn a simple dependency diagram for GUI related components in ROS (focusing on python for now), expecting that clarifying hierarchy per each plugin would explain the difference of the common packages. However there I see some packages are depending on multiple of those common packages so that the role of each commong pkg remains unknown to me.
So before I start looking into source codes of those packages I just wanted to know if there's already good clarification somewhere.

Originally posted by 130s on ROS Answers with karma: 10937 on 2012-09-07
Post score: 2

A:

I conclude by myself that there's not much dependency b/w core components that the developers need to care; as far as we follow what's instructed on rqt's tutorial, we use the proper dependency.
One thing I note currently is that rqt_py_common which is currently in rqt_common_plugins pkg provides common classes instead of plugins (moving to common pkg is requested).
Lastly, API review compensates design decision to the great level.

Originally posted by 130s with karma: 10937 on 2013-01-12
This answer was ACCEPTED on the original site
Post score: 0

