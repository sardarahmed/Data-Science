Q:

navigation for non-holonomic robots

Hi everyone!
I am working on a non holonomic, non differential drive robot, and I was wondering if there are already plans to extend the navigation stack to this kind of robots?

Originally posted by atenea on ROS Answers with karma: 36 on 2014-07-08
Post score: 1

A:

The standard navigation stack works fine for non-holonomic robots. You just need to set the maximum velocity in the Y direction to 0 in the local_planner.

Originally posted by David Lu with karma: 10932 on 2014-07-08
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by ccapriotti on 2014-07-08:
David, I am not sure if I am missing the point here, but navigation for Ackermann-type steering is far from optimal, AFAIK. The planned route looks good, even including k-curves, according to documents I found, but executing the plan, K-curves are solemnly ignored. Tough for car-like robots.
Comment by David Lu on 2014-07-08:
I did not read "non differential drive" as Ackermann, which is perhaps my fault.
Comment by ccapriotti on 2014-07-09:
Actually, I did the opposite: I read "non-holomoni" (and had to look it up) and forgot about the non-differential. It gets confusing, but, if you stop to think about it, it is simpler from a mechanical point of view: two motorized driving wheels and two steering wheels. (cont...)
Comment by ccapriotti on 2014-07-09:
But if this is the scenario, I'd go for two motorized wheels and one free wheel, holonomic. IF this is an option, of course. We would need from details from @atanea.
Comment by atenea on 2014-07-09:
Hi guys! actually, the robot counts with two fixed standard rear wheels and two steerable standard front wheels, the front wheels are the motorized driving and steering wheels. So basically it is an Ackermann type steering.
Comment by David Lu on 2014-07-09:
Maybe we can summon @joq. All I know is the existence of this package: http://wiki.ros.org/ackermann_msgs

