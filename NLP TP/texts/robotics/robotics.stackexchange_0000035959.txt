Q:

Using openCL in ROS

Hi,
I've been using openMP to get some multi-core parallelism going in ROS but I'd like to try to use the GPU for this instead. Can someone please instruct me on how to edit my CMakeLists.txt to get ROS to compile a node so that it can use openCL? Typically, I'd go about compiling an openCL program is like this:
gcc -c -I /path-to-the-include-dir-with-cl.h/ main.c -o main.o
gcc -L /path-to-the-lib-folder-with-OpenCL-libfile/ -l OpenCL main.o -o host

I know there is a CUDA package somewhere, but it's not an option due to the ATI hardware (plus, cross-platform is nice, right?)

Originally posted by Daniel Canelhas on ROS Answers with karma: 465 on 2011-11-24
Post score: 1

A:

Hi Daniel,
You could try adding the following lines to your CMakeLists.txt:
include_directories(/path-to-the-include-dir-with-cl.h)
rosbuild_add_executable(main path-to-main-cpp/main.cpp)
target_link_libraries(main /path-to-the-lib-folder-with-OpenCL-libfile/libOpenCL.so)

For more details you can find the documentation of CMake here. I hope this could help you.
Martin.

Originally posted by Martin Peris with karma: 5625 on 2011-11-24
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by tfoote on 2011-11-24:
The CMake find_package command will also likely be useful to automatically find the path.

