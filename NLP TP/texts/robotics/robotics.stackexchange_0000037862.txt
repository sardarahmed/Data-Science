Q:

Can I use ROS without the ROS build system

Hello,
I'm part of a team of researchers that are developing software for autonomous robots for nearly 5 years now. We have a pretty big software project with lots of our own libraries and our own homebrew IPC solution.
Now, since we want to collaborate with others we want to be able to use the message sending and receiving functionality of ROS, but we'd rather not migrate from our own build-system (which is also based on cmake) to the ROS build-system.
So, is there an easy way, such that we only have to include some headers (probably ros.h) and link against some libraries and we're done? What happens to the scripts that convert the msg-files and srv-files to C++ classes? Can I easily extract that functionality or even call it from within our own CMake build-system?
Thanks for your help!
Sebastian

Originally posted by Sebastian Schneider on ROS Answers with karma: 31 on 2012-02-13
Post score: 2

Original comments
Comment by Sebastian Schneider on 2012-03-20:
I solved it buy building an arch package based on the *.deb files for ubuntu. See more here: http://answers.ros.org/question/28134/whats-the-best-way-to-package-ros?answer=30029#post-id-30029

A:

As @seanarm said, the current answer is "no".
There are significant build changes in the upcoming Fuerte release, using a more generic cmake approach.
One of the main goals is to allow external libraries (like PCL) to depend on smaller ROS components, such as messages and message generation, without adopting the entire ROS build methodology.

Originally posted by joq with karma: 25443 on 2012-02-14
This answer was ACCEPTED on the original site
Post score: 3

