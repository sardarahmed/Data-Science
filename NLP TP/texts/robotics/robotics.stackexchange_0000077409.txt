Q:

Delay incoming messages

Is there a way in Rospy to delay incoming messages? Specifically, I wish to delay incoming velocity commands for teleop.
I can't use a sleep because I still need my program/node to run other processes.
I was wondering whether the queue size would have something to do with it?
Thanks!

Originally posted by piraka9011 on ROS Answers with karma: 32 on 2016-11-18
Post score: 1

A:

According to http://wiki.ros.org/message_filters there is a TimeSequencer that does this, but only for C++ (and not much activity here about it, some example code is on http://stackoverflow.com/questions/34322075/ros-message-filterstimesequencer).
I tried this rospy.Timer based method and it looks like it is working, I don't know if it is robust- a bunch of Timers must be created behind the scenes and hopefully are taken care of properly:
#!/usr/bin/env python

import functools
import rospy

from std_msgs.msg import Float64

rospy.init_node("delay")

pub = rospy.Publisher("delayed", Float64, queue_size=4)

def delayed_callback(msg, event):
    pub.publish(msg)

def callback(msg):
    timer = rospy.Timer(rospy.Duration(2.0),
                        functools.partial(delayed_callback, msg),
                        oneshot=True)

sub = rospy.Subscriber("input", Float64, callback, queue_size=4)

rospy.spin()

Originally posted by lucasw with karma: 8729 on 2016-11-18
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by piraka9011 on 2016-11-18:
This is an interesting way of going about it...plus you reminded me how to pass two arguments to a callback (did it before but forgot how!) I will test this out when I get to work, thanks.
Comment by piraka9011 on 2016-11-21:
So this actually worked! Very much appreciated. My implementation had an if/else statement that would decide if we wanted to have a delay or not in the original callback. Either way, good use of timers.

