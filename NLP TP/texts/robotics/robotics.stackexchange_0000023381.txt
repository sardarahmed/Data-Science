Q:

What is the consquence of Gimbal lock?

I'm learning about Gimbal lock and I understand the reason why that happened.
But I don't understand why that is a big deal because it only affect this rotation. After this rotation finished, we have 3 new axis to rotate from, so we get back our 3 degree of freedom.
And if the resulting attitude is not what we desired, doesn't that mean we have the wrong Euler angle? which imply that the middle Euler angle should not be 90 degrees.
The only consquence that I can think of is that perhapes some rotation cannot be achieved if the 3 axis rotation order(ex. x->y->z) have been decided? I'm not sure this is the case, please help me out!
Thank you~~

A:

I made a clip for you (https://i.stack.imgur.com/Z0q5Y.jpg) using Unity, which internally represents rotations as quaternions, but uses Euler angles for display and positioning.
You can see that, at zero orientation, slight rotations about an axis just result in... slight changes about that axis.

We can approach gimbal lock by setting the x-axis rotation to near 90 degrees. Then a slight rotation one way about z generates large positive angles about the y- and z-axes:

... but moving a slight rotation the other way generates large negative angles about the y- and z-axes:

So, is this a problem? It is if you're acting on those angles! If you have a roll controller, a pitch controller, and a yaw controller, and then you get into the gimbal lock condition, then as you can see in the latter two images above one axis remains basically stationary while the other two axes flip almost 180 degrees.
The real rotation of the object doesn't actually change very much, but if you choose to represent the rotation with Euler angles then you get these wild speeds about the gimbal-locked rotation, which can affect your rotational position estimators, your rotational position controllers, etc.

