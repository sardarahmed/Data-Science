Q:

How are ROS 2 parameters initialized once specified on the command line?

The ROS 2 Design document for the Parameter API, does not give a description of the details of ROS 2 parameter initialization after specifying them on the command line.
Specifically, what happens "under the hood" after a parameter is specified on the command line. In other words, how does specifying a parameter on the command line interplay with Node member functions like declare_parameter() or similar? For example, declaring a parameter on the command line alone doesn't (necessarily?) make the node actually have that parameter.
I recognize this question comes close to asking about implementation details, but I do believe that it's not unreasonable to think that these sort of details belong in API space.

A:

Parameters are a property of and associated with a specific Node instances. They are independent of what executable the node is contained within.
Are you wondering about command line syntax for running nodes?
If so there's the design document of the command line synax for setting parameters on the command line and how to address them to a specific node.
Edit:
I would recommend reading the parameters overview: https://docs.ros.org/en/rolling/Concepts/Basic/About-Parameters.html
Declaring parameters is implemented to allow nodes to clearly define their API and allow for enforcement/errors if you go out of bounds. Set and get methods will fail if they don't match the declared parameter names and/or types.

For example, declaring a parameter on the command line alone doesn't (necessarily?) make the node actually have that parameter.

Note that the command line is setting parameters. Declaring parameters has to happen in the code. Declared parameters don't have to be set.
If you disable the need to declare the parameters (allow_undeclared_parameters = true) then the parameters are basically a blackboard with get and set methods with key value pairs.

