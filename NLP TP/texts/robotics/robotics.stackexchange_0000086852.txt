Q:

Can't copy same data than IMU with robot_localization

I have troubles with robot_localization. So I decided to test only data from the Madgwick filter obtained from my IMU.
However, results provided by robot_localization are far from these data.
Here is the bagfile
Here is the launch file:
 <?xml version="1.0"?>
 <launch>
 <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_madgwick" output="screen" respawn="false" >
 <param name="fixed_frame" value="base_link" />
 <param name="use_mag" value="true" />
 <param name="use_magnetic_field_msg" value="true" />
 <param name="publish_tf" value="true" />
 </node>

<node pkg="nodelet" type="nodelet" name="imu_manager"
 args="manager" output="screen" />

 <node pkg="nodelet" type="nodelet" name="PhidgetsImuNodelet"
   args="load phidgets_imu/PhidgetsImuNodelet imu_manager"
   output="screen">
   <param name="period" value="4"/>
 </node>
 <node pkg="tf2_ros" type="static_transform_publisher" name="baselink_imu"        args="0 0 0.0 0 0 0 base_link imu" />
 <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization" clear_params="true" output="screen">
  <param name="frequency" value="5"/>
  <param name="sensor_timeout" value="0.1"/>
  <param name="imu0" value="/imu/data"/>
  <param name="two_d_mode" value="false"/>
  <rosparam param="imu0_config">[false, false, false, true,  true,  true, false, false, false, true,  true,  true, true,  true,  true]</rosparam>

  <param name="imu0_remove_gravitational_acceleration" value="true"/>
  <param name="debug"           value="true"/>
  <param name="debug_out_file"  value="~/debug_ekf_localization.txt"/>

  <param name="publish_acceleration" value ="true"/>
  <param name="publish_tf" value ="true"/>

  <param name="odom_frame" value="odom"/>
  <param name="base_link_frame" value="base_link"/>
  <rosparam param="initial_estimate_covariance">
                     [1e-9, 0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                      0,    1e-9, 0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                      0,    0,    1e-9, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                      0,    0,    0,    100, 0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                      0,    0,    0,    0,    100, 0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                      0,    0,    0,    0,    0,    100, 0,    0,    0,    0,     0,     0,     0,    0,    0,
                      0,    0,    0,    0,    0,    0,    1e-9, 0,    0,    0,     0,     0,     0,    0,    0,
                      0,    0,    0,    0,    0,    0,    0,    1e-9, 0,    0,     0,     0,     0,    0,    0,
                      0,    0,    0,    0,    0,    0,    0,    0,    1e-9, 0,     0,     0,     0,    0,    0,
                      0,    0,    0,    0,    0,    0,    0,    0,    0,    100,  0,     0,     0,    0,    0,
                      0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     100,  0,     0,    0,    0,
                      0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     100,  0,    0,    0,
                      0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     100, 0,    0,
                      0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    100, 0,
                      0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    100]</rosparam>
</node>
</launch>

Here is what I get from /imu/data:
---
header: 
  seq: 13861
  stamp: 
    secs: 1525363752
    nsecs: 950200058
  frame_id: "imu"
orientation: 
  x: -0.348316741047
  y: -0.602712667954
  z: 0.590834173906
  w: 0.407833135901
orientation_covariance: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
angular_velocity: 
  x: 0.00855211333477
  y: 0.0
  z: 0.00366519142919
angular_velocity_covariance: [1.2184696791468346e-07, 0.0, 0.0, 0.0, 1.2184696791468346e-07, 0.0, 0.0, 0.0, 1.2184696791468346e-07]
linear_acceleration: 
  x: 0.79510053401
  y: -9.81000041962
  z: 0.335305814342
linear_acceleration_covariance: [8.66124974095918e-06, 0.0, 0.0, 0.0, 8.66124974095918e-06, 0.0, 0.0, 0.0, 8.66124974095918e-06]
---
header: 
  seq: 13862
  stamp: 
    secs: 1525363752
    nsecs: 954200057
  frame_id: "imu"
orientation: 
  x: -0.34803859812
  y: -0.602742822373
  z: 0.590816249998
  w: 0.408051936688
orientation_covariance: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
angular_velocity: 
  x: 0.0158824961931
  y: -0.00855211333477
  z: 0.00855211333477
angular_velocity_covariance: [1.2184696791468346e-07, 0.0, 0.0, 0.0, 1.2184696791468346e-07, 0.0, 0.0, 0.0, 1.2184696791468346e-07]
linear_acceleration: 
  x: 0.843071436062
  y: -9.82912992043
  z: 0.364049115572
linear_acceleration_covariance: [8.66124974095918e-06, 0.0, 0.0, 0.0, 8.66124974095918e-06, 0.0, 0.0, 0.0, 8.66124974095918e-06]

Here is what robot_localization provides:
---
header: 
  seq: 146
  stamp: 
    secs: 1525364518
    nsecs: 892152786
  frame_id: "odom"
child_frame_id: "base_link"
pose: 
  pose: 
    position: 
      x: -13.0690016277
      y: -8.18444181075
      z: 16.9989781404
    orientation: 
      x: 1.82640882884e-10
      y: -8.21966344865e-11
      z: -2.7356857487e-11
      w: 1.0
  covariance: [207.07713413156662, -5.7040178257204794e-08, 9.978910872831822e-05, 1.3102045021365689e-21, 4.1645675393512735e-17, 1.4459932078618483e-17, -5.704017825734225e-08, 207.07713405057194, 0.0001962525991995146, -4.160335680928879e-17, -7.457008449868983e-20, -1.0761677687587693e-17, 9.97891087283185e-05, 0.00019625259919951504, 330.7305333288588, -2.902514949722296e-17, 2.1545306969450206e-17, -9.325915435424517e-21, 1.3102045021365702e-21, -4.1603356809288805e-17, -2.902514949722295e-17, 9.999998333333653e-10, 6.005231329050467e-29, 1.9990604350031187e-29, 4.1645675393512753e-17, -7.457008449868983e-20, 2.1545306969450218e-17, 6.005231328314847e-29, 9.999998333333655e-10, -8.992601293026998e-30, 1.445993207861848e-17, -1.0761677687587693e-17, -9.325915435424517e-21, 1.9990604350031024e-29, -8.992601293028158e-30, 9.99999916666635e-10]
twist: 
  twist: 
    linear: 
      x: -0.647882420202
      y: -0.873556625097
      z: 1.24957340025
    angular: 
      x: -0.0029128103884
      y: -0.00787242437575
      z: 0.00751005609254
  covariance: [0.7303506208018974, -1.4272838998438906e-21, 1.0127882802417763e-21, 0.0, 0.0, 0.0, -1.3771337690910615e-21, 0.7303506208018974, 3.0187169563261866e-21, 0.0, 0.0, 0.0, 1.076997012037841e-21, 2.9401315399900294e-21, 1.1685306196944716, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.2183954547018434e-07, -6.616638657608997e-24, 1.0083689631110166e-32, 0.0, 0.0, 0.0, -6.616638682161806e-24, 1.2183954547018434e-07, -3.308420170891388e-24, 0.0, 0.0, 0.0, 1.6542100692899256e-24, -3.3084201708913884e-24, 1.2184325646635733e-07]
---

In /data/imu, I have correct values when I move the robot (and I can clearly see it in RViz. In /odometry/filtered, position: x and y are going nowhere, while the other values remain almost constant).
Finally, /diagnostics provide:
    level: 2
    name: "ekf_localization: Filter diagnostic updater"
    message: "Erroneous data or settings detected for a robot_localization state estimation node."
    hardware_id: "none"
    values: 
      - 
        key: "X_configuration"
        value: "Neither X nor its velocity is being measured. This will result in unbounded error\
  \ growth and erratic filter behavior."
      - 
        key: "Y_configuration"
        value: "Neither Y nor its velocity is being measured. This will result in unbounded error\
  \ growth and erratic filter behavior."
      - 
        key: "Z_configuration"
        value: "Neither Z nor its velocity is being measured. This will result in unbounded error\
  \ growth and erratic filter behavior."
      - 
        key: "imu0_pose_covariance"
        value: "The covariance at position (35), which corresponds to YAW variance, was zero. This\
  \ will be replaced with a small value to maintain filter stability, but should be\
  \ corrected at the message origin node."
  -

Originally posted by pl.guhur on ROS Answers with karma: 23 on 2018-05-03
Post score: 0

A:

I had a look at your bag file and I think the problem is related to your tf setup. Here's what I think is happening:

The madgwick filter publishes a tf from base_link to imu (because you set the publish_tf param to be true)
When r_l receives the imu measurement, it will attempt to transform it from imu to base_link so that it fuses the orientation properly
Because the madgwick filter is constantly updating the tf between base_link and imu, when the imu measurements are transformed to base_link, it is resulting in a measurement with unit quaternion orientation.

I ran your bag data (only /imu/data and /tf_static) with your r_l launch file configuration and the ekf odometry orientation matches the /imu/data orientation. So I think the only thing you'll need to do is set the publish_tf param to false and you should be okay. Give that a try and see what happens.

Originally posted by stevejp with karma: 929 on 2018-05-03
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by pl.guhur on 2018-05-04:
Completely right thanks!

