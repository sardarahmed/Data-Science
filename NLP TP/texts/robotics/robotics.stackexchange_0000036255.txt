Q:

costmap_2d TrajectoryPlannerROS cost_cloud not being published

Hello,
I have a laser scanner and a Kinect on my TurtleBot.  I would like to use the point cloud from the Kinect to assist with obstacle avoidance while I use the laser for amcl navigation.  I have included both the laser and Kinect as observation sources in my costmap_common_params.yaml file (see below).  I can view the raw point cloud from the Kinect (/camera/depth/points) in RViz; however, the cost cloud under /move_base/TrajectoryPlannerROS/cost_cloud returns a warning "No messages received".  I've read through the costmap_2d Wiki page but I can't see what I am missing.
I am running the latest Debian version of ROS Electric under Ubuntu 10.04. Here is my parameter file:
obstacle_range: 2.5
raytrace_range: 3.0
robot_radius: 0.17
inflation_radius: 0.6
max_obstacle_height: 0.6
min_obstacle_height: 0.08
observation_sources: scan point_cloud
scan: {data_type: LaserScan, topic: /scan, marking: true, clearing: true}
point_cloud: {data_type: PointCloud2, topic: /camera/depth/points, marking: true, clearing: true}

Thanks!

patrick

Originally posted by Pi Robot on ROS Answers with karma: 4046 on 2011-12-05
Post score: 2

Original comments
Comment by ctguell on 2013-07-29:
Hi could you make the navigation work with gmapping after all? I would really apprciate some help thanks

A:

So... Apparently neither Eitan nor myself actually put any documentation for this on the wiki... whoops.
I've added some documentation to the base_local_planner docs that should describe how to configure that topic. See ros-pkg 4620 for some more usage details.
Let me know if the wiki documentation isn't sufficient to answer this question and how we can improve it.

Originally posted by Eric Perko with karma: 8406 on 2011-12-05
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Pi Robot on 2011-12-06:
Thanks Eitan.  I have been running the Kinect at QQVGA for both image and depth (mode 8).  Do you think this is sufficient or do you recommend downsampling in addition to the low resolution?
Comment by eitan on 2011-12-06:
Whoops, thanks Eric, I dropped the ball on that one. As far as the cloud_cost topic goes, has it been advertised by move_base at least? Also, I'd highly recommend downsampling the cloud from the kinect with something like a voxel grid filter before passing it to the nav stack to improve performance.
Comment by Pi Robot on 2011-12-06:
Thanks Eric.  I added the line 'publish_cost_grid_pc: true' in my base_local_planner_params.yaml file and verified it is getting set via rosparam.  However, I still get "No messages received" in RViz for the cloud_cost topic.  Also, 'rostopic hz /move_base/TrajectoryPlannerROS/cost_cloud' subscribes to the topic but then never returns any values.  I'm less worried about seeing the cloud than I am verifying that the Kinect's point cloud is actually being factored into the cost.  I believe it is since I can see the projection of the cloud onto the ground plane in RViz as occupied cells.
Comment by ctguell on 2013-07-29:
Hi could you make the navigation work with gmapping after all? I would really apprciate some help thanks

