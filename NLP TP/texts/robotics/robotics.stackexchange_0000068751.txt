Q:

Message Definition Object in Object

Would a custom message definition with a child Object of the message definition type define an infinite loop?
Example Message Definition for CogFoo:
Fim x
Fim y
Example Message Definition for Fim:
float32 a
float32 b
Fim z

Originally posted by unknown_entity2 on ROS Answers with karma: 16 on 2015-07-18
Post score: 0

Original comments
Comment by gvdhoorn on 2015-08-04:
May I suggest to change the title of the question to something that includes the word recursive? Perhaps something like "Are recursive message definitions allowed/supported?".

A:

In Short: In theory yes, but is caught due to reaching the maximum recursion depth.

Long answer here:
Actually, I would have expected to break with another message.
However, the build process actually starts and breaks with the following error message:
/opt/ros/hydro/share/genmsg/cmake/pkg-genmsg.cmake.em:50: error: <type 'exceptions.RuntimeError'>: maximum recursion depth exceeded while calling a Python object
Traceback (most recent call last):
  File "/usr/bin/empy", line 3288, in <module>
    if __name__ == '__main__': main()
  File "/usr/bin/empy", line 3286, in main
    invoke(sys.argv[1:])
  File "/usr/bin/empy", line 3269, in invoke
    interpreter.wrap(interpreter.file, (file, name))
  File "/usr/bin/empy", line 2273, in wrap
    self.fail(e)
  File "/usr/bin/empy", line 2264, in wrap
    apply(callable, args)
  File "/usr/bin/empy", line 2337, in file
    self.safe(scanner, done, locals)
  File "/usr/bin/empy", line 2379, in safe
    self.parse(scanner, locals)
  File "/usr/bin/empy", line 2399, in parse
    token.run(self, locals)
  File "/usr/bin/empy", line 1410, in run
    interpreter.execute(self.code, locals)
  File "/usr/bin/empy", line 2576, in execute
    exec statements in self.globals
  File "<string>", line 37, in <module>
  File "/opt/ros/hydro/lib/python2.7/dist-packages/genmsg/deps.py", line 48, in find_msg_dependencies
    genmsg.msg_loader.load_depends(msg_context, spec, search_paths)
  File "/opt/ros/hydro/lib/python2.7/dist-packages/genmsg/msg_loader.py", line 344, in load_depends
    return load_msg_depends(msg_context, spec, msg_search_path)
  File "/opt/ros/hydro/lib/python2.7/dist-packages/genmsg/msg_loader.py", line 321, in load_msg_depends
    load_msg_depends(msg_context, depspec, search_path)
 ...
 ... the two lines above now appear multiple times
 ...
  File "/opt/ros/hydro/lib/python2.7/dist-packages/genmsg/msg_loader.py", line 310, in load_msg_depends
    depspec = msg_context.get_registered(resolved_type)
  File "/opt/ros/hydro/lib/python2.7/dist-packages/genmsg/msg_loader.py", line 434, in get_registered
    if self.is_registered(full_msg_type):
  File "/opt/ros/hydro/lib/python2.7/dist-packages/genmsg/msg_loader.py", line 423, in is_registered
    package, base_type = package_resource_name(full_msg_type)
  File "/opt/ros/hydro/lib/python2.7/dist-packages/genmsg/names.py", line 104, in package_resource_name
    val = tuple(name.split(PRN_SEPARATOR))
 RuntimeError: maximum recursion depth exceeded while calling a Python object
 CMake Error at /opt/ros/hydro/share/catkin/cmake/safe_execute_process.cmake:11 (message):
  
  execute_process(/home/mig/git/sandbox_ws/build/catkin_generated/env_cached.sh
  "/usr/bin/empy" "--raw-errors" "-F"
  "/home/mig/git/sandbox_ws/build/py_test/cmake/py_test-genmsg-context.py"
  "-o" "/home/mig/git/sandbox_ws/build/py_test/cmake/py_test-genmsg.cmake"
  "/opt/ros/hydro/share/genmsg/cmake/pkg-genmsg.cmake.em") returned error
  code 1

This actually comes from empy, invoked from some CMake part (don't know where).

Originally posted by mgruhler with karma: 12390 on 2015-08-04
This answer was ACCEPTED on the original site
Post score: 0

