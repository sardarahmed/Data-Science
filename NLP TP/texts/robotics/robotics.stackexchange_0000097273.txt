Q:

message_filter synchronize boolean msg

Hello I want to add a boolean msg in my synchronizer but it seems that BoolConstPtr definition in the callback function is not working. Here is my class and callback dsefiniton.
class LandingNode {

public:
LandingNode (ros::NodeHandle &nh);
~LandingNode ();
void proc_callback (const sensor_msgs::ImageConstPtr& msgLeft,const sensor_msgs::ImageConstPtr& msgRight, const std_msgs::BoolConstPtr& msgHover);
private:
  typedef message_filters::sync_policies::ApproximateTime<sensor_msgs::Image, sensor_msgs::Image, std_msgs::Bool> sync_pol;
  message_filters::Subscriber<sensor_msgs::Image> *sub_left;
  message_filters::Subscriber<sensor_msgs::Image> *sub_right;
  message_filters::Subscriber<std_msgs::Bool>  *sub_hover;
  message_filters::Synchronizer<sync_pol> *sync_;
};

LandingNode::LandingNode( ros::NodeHandle &nh) {
 sub_left = new message_filters::Subscriber<sensor_msgs::Image> (nh, "/left/image_raw", 10);
 sub_right = new message_filters::Subscriber<sensor_msgs::Image> (nh, "/right/image_raw", 10);
 sub_hover = new message_filters::Subscriber<std_msgs::Bool> (nh, "/is_hover", 10);
 sync_ = new message_filters::Synchronizer<sync_pol> (sync_pol(10), *sub_left, *sub_right, *sub_hover);

 sync_->registerCallback(boost::bind(&LandingNode::proc_callback, this, _1, _2, _3));
 boost::thread t = boost::thread(boost::bind(&spinthread));
}
void LandingNode::proc_callback(const sensor_msgs::ImageConstPtr& msgLeft, const sensor_msgs::ImageConstPtr& msgRight, const std_msgs::BoolConstPtr& msgHover) {

i see the following errors
error: ‘__s_getMD5Sum’ is not a member of ‘boost::shared_ptr<const std_msgs::Bool_<std::allocator<void> > >’
     return M::__s_getMD5Sum().c_str();

error: ‘value’ is not a member of ‘ros::message_traits::TimeStamp<std_msgs::Bool_<std::allocator<void> >, void>’
     ros::Time msg_time = mt::TimeStamp<typename mpl::at_c<Messages, i>::type>::value(msg);
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
 error: ‘value’ is not a member of ‘ros::message_traits::TimeStamp<std_msgs::Bool_<std::allocator<void> >, void>’
       if ((mt::TimeStamp<M2>::value(*m2.getMessage()) < time) ^ end)
            ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
/opt/ros/melodic/include/message_filters/sync_policies/approximate_time.h:565:40: error: ‘value’ is not a member of ‘ros::message_traits::TimeStamp<std_msgs::Bool_<std::allocator<void> >, void>’
         time = mt::TimeStamp<M2>::value(*m2.getMessage());
                ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~

The whole terminal msg id the following

This code block was moved to the following github gist:
https://gist.github.com/answers-se-migration-openrobotics/863229430cdd355a4a206206f5adf4d8

Originally posted by kaponloto on ROS Answers with karma: 3 on 2020-10-10
Post score: 0

A:

The message_filter synchroniser classes only support messages with std_msgs/Headers in them -- otherwise it would not have any time information with which to synchronise the message streams.
std_msgs/Bool does not contain a header, so you cannot pass it to message_filters.
This is also clearly stated on the wiki page:

The TimeSynchronizer filter synchronizes incoming channels by the timestamps contained in their headers [..]

Unlike the Python version, I believe the C++ version does not support headerless messages.
It could be worthwhile to check fkie_message_filters, although I'm not sure whether it can work around/with headerless messages.

Originally posted by gvdhoorn with karma: 86574 on 2020-10-11
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by kaponloto on 2020-10-11:
Indeed. thank you for your answer.

