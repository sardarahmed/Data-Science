Q:

how to make a scriptable robot?

Does anyone have an idea on how i can make a robot scriptable? So that anyone could program the robots to take actions without worrying about the hard stuff.
To be clear, i would like to do something like this:
An user, could get my robot with ros running. He would then, in his notebook with ros running too, open a node that provides a window, so that he can script an action to the robot. Something like:
move("livining_room");    
object = detect("cube");

for(int i = 0; i<object.getNumberOfObjects(); ++i){    
    grap(object[i]);    
    move("room");
    release();
    move("livining_room");
}
shutDown();

the node would process that and send messages to a node controlling the robot. My question really is how to embedd a script language to accomplish this. Could anyone give me some direction? And what language would be the best to do so? i was thinking about lua or python (i don't know neither one). Thanks

Originally posted by Edno on ROS Answers with karma: 46 on 2014-05-07
Post score: 0

A:

Since ROS supports Python I think that Python would be the best language to use. Supposing that all complex functions are implemented on the robot already (object detection, object localization, path planning, motion planning,robot localization), I think actionlib is what you need. you basically create an action server which can start each of the actions that you implemented on the robot. Then you create a python client (the one your friends will use) and define your functions (move,grap,release etc.) so that they ask the action server to start some actions. Actionlib will also send you some feedback about the current state of the action.
Actionlib: http://wiki.ros.org/actionlib

Originally posted by Mehdi. with karma: 3339 on 2014-05-13
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by Dan Lazewatsky on 2014-05-29:
There is also rosh (http://wiki.ros.org/rosh) which is a python-based scripting environment for ROS. It simplifies a lot of things in rospy like subscribing/publishing. You could add any of your robot-specific functionality as a rosh plugin.

