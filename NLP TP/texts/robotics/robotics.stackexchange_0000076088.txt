Q:

[MoveIt!] Certain .stl files can't be used

Hi,
I'm trying to implement a robot model into MoveIt!.
URDF-file and meshes have been build by my colleagues.
The robot can be viewed using RViz. However, when I'm loading the URDF into the MoveIt Setup Assistent such an error is given:
[ INFO] [1472814379.176343132]: Loaded complete robot model.
[ INFO] [1472814379.176441870]: Setting Param Server with Robot Description
[ INFO] [1472814379.184765149]: Robot semantic model successfully loaded.
[ INFO] [1472814379.184804317]: Setting Param Server with Robot Semantic Description
[ INFO] [1472814379.200211356]: Loading robot model 'complete'...
[ INFO] [1472814379.200256287]: No root joint specified. Assuming fixed joint
================================================================================REQUIRED process [moveit_setup_assistant-2] has died!
process has died [pid 24116, exit code -11, cmd /opt/ros/indigo/lib/moveit_setup_assistant/moveit_setup_assistant __name:=moveit_setup_assistant __log:= 
[...]

The problem seems to be caused by certain .stl meshes that are used.
These meshes can be used as collision link elements, but not as visual link elements. If these specific meshes are not loaded the error doesn't occur.
Has someone experienced something similar? What might cause this problem that only MoveIt! seems to have with these .stl files.

Originally posted by F4bich on ROS Answers with karma: 79 on 2016-09-02
Post score: 0

Original comments
Comment by bhavyadoshi26 on 2016-09-02:
Could you share your URDF file please?
Comment by F4bich on 2016-09-02:
yes, https://www.dropbox.com/s/khpe1746y3gtbzy/robot.urdf?dl=0
The meshes that cause the problem are upper_arm_iam, wrist_iam and all meshes having 'finger' in their name
Comment by spmaniato on 2016-09-02:
I had some problems with custom-made STL files given to me by our MechEs. In my case, it was an encoding problem. I used this utility to convert them: https://github.com/cmpolis/convertSTL (Yours might be a completely different problem.)
Comment by gvdhoorn on 2016-09-02:
Without access to your meshes I think it's going to be difficult to really diagnose this, but in general:

use only binary STLs
make sure you have no solid in your header (SolidWorks does this, for binary STLs, it's incorrect)
don't have 100000+ faces/verts. No need.

A:

As gvdhoorn suggested, I reduced the complexity of the meshes (using Blender) , which was the solution to the problem.

Originally posted by F4bich with karma: 79 on 2016-10-11
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by gvdhoorn on 2016-10-11:
Good to hear you worked around this. Could you perhaps report this at the issue tracker? Even if meshes have large nrs of faces/verts, the MSA should not crash like that. Thanks.
Comment by F4bich on 2016-10-11:
Yes, no problem

