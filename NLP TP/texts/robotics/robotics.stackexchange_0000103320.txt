Q:

Timer Callback not getting called

Here Is My timer callback code

#include 
#include 
class Timer {
public:
    ros::NodeHandle nh_;
    Timer(ros::NodeHandle* nh) ;
    void init_timers();
    void stateTimerCallback(const ros::TimerEvent& event);

};

Timer::Timer(ros::NodeHandle* nh) : nh_(*nh) {
   Timer::init_timers();
}

void Timer::init_timers()
{
    const bool oneshot = false;
    bool autostart = true;
    ros::Timer timer_ = nh_.createTimer(ros::Duration(1.0),&Timer::stateTimerCallback,this,oneshot,autostart);
    timer_.start() ;
    ROS_INFO("Init_Timer \n");
    printf("Init_Timer\n");
    ROS_DEBUG("Init_Timer\n");

}

void Timer::stateTimerCallback(const ros::TimerEvent& event)
{
    ROS_INFO("I am here\n");
    printf("I am here\n");
    ROS_DEBUG("I am here\n");
}

int main(int argc, char **argv)
{
    ros::init(argc,argv,"timer_node");
    ros::NodeHandle nh;
    Timer timer(&nh);
    ros::spin();
    return 0;
}

The output i get after running the node

$ rosrun timertest timertest_node
[ INFO] [1685511182.674019058]: /timer_node: Init_Timer 

Init_Timer

I wait for 1 minute but still there was no output from callback. What might be the reason ?

Originally posted by GauNav on ROS Answers with karma: 3 on 2023-05-31
Post score: 0

Original comments
Comment by GauNav on 2023-05-31:
Really sorry if my question comes out as silly. I am not completely sure about working of roscpp.

A:

Hi!
From the roscpp tutorials:

Note that, in this example, the timer
object must be a member of the class
for callbacks to fire.

Thus, you should have
class Timer {
public:
    ros::NodeHandle nh_;
    Timer(ros::NodeHandle* nh) ;
    void init_timers();
    void stateTimerCallback(const ros::TimerEvent& event);
    ros::Timer timer_;
};

and modify the line where you call nh_.createTimer() as follows:
timer_ = nh_.createTimer(ros::Duration(1.0),&Timer::stateTimerCallback,this,oneshot,autostart);

Hope this helps!

Originally posted by bluegiraffe-sc with karma: 221 on 2023-05-31
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by gvdhoorn on 2023-05-31:
Summarising: the timer_ object only "exists" as long as init_timers() is executing. Which is perhaps a couple hundred nanoseconds. It then immediately gets destroyed. No timer_ -> no callbacks.
Comment by GauNav on 2023-06-01:
Thanks @bluegiraffe-sc , @gvdhoorn .

