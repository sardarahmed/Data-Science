Q:

seeking in a bag file

I am going to work with large bag files, offline. I am going to have to seek back and forth in the bag to find the data I need, i.e. some sort of random access. Before I start working on a hack of my own, I'd like to know if there is any standard approach implemented out there. Let say the goal is to be able to retrieve a message on topic X, at or near time T.
Note: this question is related: http://answers.ros.org/question/10852/playing-back-large-files-with-rosbag/
I am thinking that I could open a new View with the proper query (X,T). But I am wondering how long will it take. i.e. when opening a view, is it reading an index to open it in a constant time, or is it going to scan through the bag until it finds it?

Originally posted by brice rebsamen on ROS Answers with karma: 1001 on 2013-03-30
Post score: 1

Original comments
Comment by Stephane.M on 2013-06-11:
Did you finally found a solution ? Because I could be very interesting (for me, but also for everyone) if you could share what you found/did :-) Thanks !
Comment by brice rebsamen on 2013-06-12:
It's still on my todo list. Once done i'll post my solution here (probably a couple of months)

A:

It looks to me like most of the work in a view query happens in View::updateQueries.  In particular, it uses std::lower_bound and std::upper_bound to find the desired ranges by searching over a timestamp index.  My C++ reference states that these are binary searches, with O(log N) complexity.  If you look in Bag::doWrite, you can see this index being updated as new data is written to the bag file.
The other question you reference addresses time to load a bag-file from disk, but not time to seek within that bag file once loaded.  I haven't tested it, but (at first glance) it looks like view queries should be fairly quick, even in large bag files.

Originally posted by Jeremy Zoss with karma: 4976 on 2013-05-16
This answer was ACCEPTED on the original site
Post score: 1

