Q:

problem getting topic remaps in the code

I am unable to get topic names using
ros::param::get(info_topic, input_info_topic_);

where info_topic and input_info_topic_ are:
  std::string input_info_topic_;
  std::string namespace_ = pnh_.getNamespace();
  std::string info_topic = namespace_ + "/input_info_topic";

A little more detail :
My classes are :
namespace mynamespace 
{   
   class A : public nodelet::Nodelet
   {    
        ...
        boost::shared_ptr<ClassD> di;
   };
}

namespace mynamespace
{
    class ClassD
    {
        //constructor
        ClassD(ros::NodeHandle& n, ros::NodeHandle& pnh);

        //all the ros::param::get() are in definition of this class. 
    };
}

When I try to remap topics, it doesn't work. The end result is always an empty string and hence I can't get any images in.
What am I doing wrong.
I have tried to provide all the information that might be relevant. If I am missing something kindly please let me know.

Originally posted by navderm on ROS Answers with karma: 78 on 2013-04-03
Post score: 0

A:

I'm not sure, what exactly you want to achieve, but I think you are working manually against ROS internals. You should never need to make such constructions as you have done.
Depending on what you want to do, here is what an easier solution should look like:
If you want to get the parameter from within you node's namespace, do not construct that full name by yourself. Just get the parameter from a private node handle, e.g.
ros::NodeHandle pnh("~");
pnh.getParam("input_info_topic", input_info_topic_);

However, as the variable you are requesting is named: ...topic, this leads to another thing. If you want to use this variable to subscribe or publish to a custom topic, you should never set this via parameters! Instead, always use the topic under the same name in the code and rely on remapping of topics to change that. If the topic is supposed to be in the node's namespace, construct a publisher/subscriber from a private node handle.

Originally posted by dornhege with karma: 31395 on 2013-04-03
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by navderm on 2013-04-03:
Hey. Thanks for the reply. I am not able to get the parameters using
pnh.getParam(...) either.
I just wonder if the problem is because the class split into two.
I can't seem to communicate with ros param server at all.
Comment by navderm on 2013-04-03:
Also, in case I need to publish/subscribe using imageTransport, do I initiate the image Transport in private namespace ?
I am using ImageTransport::CameraPublisher to publish and ImageTransport to subscribe to images
Comment by dornhege on 2013-04-03:
I haven't used image transport, but you should be able to just initialize that with the private nodehandle. BTW: If you are writing a driver, according to the newest REP (https://github.com/ros-infrastructure/rep/blob/master/rep-0135.rst) using a namespace is not necessary and should be avoided.
Comment by dornhege on 2013-04-03:
About the getParam(). That should work for nodes. I've seen that you use a nodelet, maybe that changes things.
Comment by navderm on 2013-04-03:
No I am not writing a driver.
The only problem I see is that the parameter isn't being passed in correctly. I can't get the parameter loaded correctly even just as a plain string before I do any topic calls etc.
I tried private_nodehandle.param std::string("st", "/image_raw", "NOT SET")
Comment by navderm on 2013-04-03:
and it is always not set. I tried nodehandle.param , it is still NOT SET. If I can get that parameter read properly, I think I would  have solved more than half the problem. I see depth_image_proc doing the exact same thing but they have 1 class and i have 2 broken classes. Nothing changes otherwise
Comment by dornhege on 2013-04-03:
Remove the '/' in the parameter name.
Comment by navderm on 2013-04-03:
Yeah I tried that too
The current most educated code is :
std::string input_info_topic ;
pnh.paramstd::string("input_info_topic", input_info_topic", "NOT SET")
Still doesn't work . I'll try to keep figuring out why its not working. May be something in the nodelet launch file.
Comment by navderm on 2013-04-03:

<\node>
That is my nodelet file's important part.
Comment by navderm on 2013-04-03:
Ok. I found the first error. It was that I had to use param instead of remap in my launch file. Now I can get the parameter name correctly.
Comment by navderm on 2013-04-03:
with that done. I'll actually use remap to remap the topics and get it working without using params. Thanks a lot for the helpful insight. !
Comment by dornhege on 2013-04-03:
Go ahead. That's actually how it's supposed to be done.
Comment by navderm on 2013-04-03:
Yep ! everything is working now ! I can go on a date tonight ! :)
Thanks a lot !
Comment by navderm on 2013-04-03:
One question though !
How will I find if the shared memory (intraprocess data transfer) in images is actually working ?
Is there a way to see if there is a memory being shared or un-shared. ? How do I make sure that the data is actually being shared and not copied .
Comment by navderm on 2013-04-03:
I do have boost::shared_ptr<image_transport::ImageTransport> it_ setup now
Comment by dornhege on 2013-04-03:
AFAIK, this is not done by any explicit shared memory construct. It just uses the boost::shared_ptr and passes them along. There is an implicit contract that those will not be changed underhand, so that no copying is required.
Comment by dornhege on 2013-04-03:
If you'd like to inquire more details about this, please open a new question.

