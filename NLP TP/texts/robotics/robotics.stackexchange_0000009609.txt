Q:

Most accurate rotation representation for small angles

Assume that I have a rigid body for which I know that it can rotate with respect to a global reference frame (which is considered fixed and already given) for only a few degrees of angle, so I can describe its rotation by using the small angle approximation. For this system, I would like to know if there is a rotation representation that offers more accuracy when compared with other representation methods.
The main representation methods that I considered are the euler angles and the pitch-yaw-roll transformation. To my perception, I think that pitch-yaw-roll representation is expected to be more accurate, since all the angles are expressed with respect to the initial coordinate frame. On the other hand, euler angles are defined on different frames, so I am not sure if the resulting angles will be really small.
To sum up, I know that the body can rotate for only a few degrees and I would like to know which coordinate representation is much probable to deliver the smallest angles, such that the small angle approximation is more valid.
It could also be the case that there is not a general answer (so it depends on the specific configuration) but still I haven't found anything about this topic on the related literature!
Edit: This question is not related to numerical issues. Therefore, it is assumed that all the possible rotation matrix descriptions (Euler, PYR etc) result in the same, exact coordinate vector. Therefore, the question is if there exists one parametrization that is composed of the smallest possible angles.
Example (no small angle approx used): Assume I have a coordinate frame which describes a point in space by the following vector
$P2=\begin{bmatrix} 4 \\ 1 \\ 0.05 \end{bmatrix}$.
Given another coordinate frame which is rotated with respect to the previous one, the description of the same point is given by     
$P1=\begin{bmatrix} 3.8933 \\
    1.3566 \\
   -0.0630 \end{bmatrix}$.
Using Euler angles, I can find that the rotation matrix $R_{euler}$ is characterized by the angles $0.1,0.2,0.1$ rads, which correspond to the angle of rotation around z axis, the rotation around the resulting y axis and the rotation around the resulting z axis, respectively (these are basic stuff, it is explained in many books.). So I have that $P1=R_{euler} P2$.
Now I want to find the corresponding rotation matrix if I use the pitch-yaw-roll representation. Here I have to solve an optimization problem and the solution that I get (maximum error between P1 and the estimated P1 is $3 \times 10^{-8}$) delivers me the following angles
$\begin{bmatrix}  -0.0103   \\ 0.0257  \\  0.0902\end{bmatrix}$,
which correspond to the rotation around the x,y and z axis of the initial coordinate frame. 

A:

@jpro, I think you are not understanding something about kinematics.  Whether you use Euler angles, or homogeneous transforms, or rotation matrices, or quaternians, or any other kinematic representation, ALL of them relate the object's pose with respect to some coordinate frame.  If you refer back to a reference coordinate frame located at the end of the robot's forearm (or the wrist center if the wrist is spherical), you will ensure that any errors caused by the kinematics of the arm joints are not part of your equations.  But you can pick which type of kinematic model you use and you should find the same accuracy for them all.
Edited based in your update:
The Rotation Matrix is unique.  See the answers here:  https://math.stackexchange.com/questions/105264/3d-rotation-matrix-uniqueness
Each term of this 3x3 can be represented many ways, as you are trying to do.  A silly example:   If one of your angles is $\theta_1$, you could instead write it as the sum of ten smaller angles.  But $R$ would be the same.   There is probably a way to represent each of the nine terms with a minimum (least-squares) set of terms.  But $R$ will be the same.  
One more edit (sorry):
$R$ is orthonormal.  That puts six constraints on the nine terms ($||R|| = 1$, the magnitude of each row (and column) is also 1, and the rows and columns are mutually orthogonal).  So you have three degrees of freedom to play with.   There is your optimization problem.   Pick any representation, and as you find different ways to represent those nine terms, it may be challenging to relate that back to the physical system.   I believe you will end up at screw coordinates.   You may want to research canonical kinematics for ideas.   But I suspect you will find different robot geometries, and different motion goals, will result in a change for which standard notation results in the smallest angles.  

