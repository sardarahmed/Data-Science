Q:

is there a way for rviz to subscribe to topic of message typ sensor_msgs::ImagePtr?

For image, I know that the Image Topic must be of type sensor_msgs::Image, but is there any feature in Rviz that would subscribe to any topic whose message type is sensor_msgs::ImagePtr?

Edit: @gvdhoorn I have ELP Camera usb-connected to Jetson TX1, and there is the package that publishes the video feed. And I want my laptop, which is connected to the Jetson via Ethernet crossover cable, to subscribe the video feed data (whether it is sensor_msgs::Image or sensor_msgs::ImagePtr) through Rviz. My old code published the data of type sensor_msgs::Image but for some reason, Rviz stopped when I added the topic for video feed, and I had to restart it. Any techniques as to how I should handle this?

Originally posted by chanhyeoni on ROS Answers with karma: 62 on 2018-03-26
Post score: 0

Original comments
Comment by gvdhoorn on 2018-03-27:
Afaik ImagePtr is not a message type in sensor_msgs. It is only a type in the C++ code that gets generated by gencpp and then used in nodes that subscribe to sensor_msgs/Image. What are you trying to do exactly?
Comment by gvdhoorn on 2018-03-27:
Publishing video/frames of a video could probably be done using sensor_msgs/Image directly but should preferably be done using image_transport. In all cases you wouldn't be publishing a ImagePtr, but an Image msg.
Comment by chanhyeoni on 2018-03-27:
I see. Thanks for your help. So my next question is whether there has ever been a project that remotely transmits video feed from a device A to  a device B using ROS.
Comment by gvdhoorn on 2018-03-27:
Sure. All the time. It's not going to be the most efficient way to do it with sensor_msgs/Image, but it can be done.
Why do you ask?
Comment by chanhyeoni on 2018-03-27:
I tried to find any example projects like that, and I couldn't. I tried to do this myself using all available sources, and I'm still stuck.
Comment by gvdhoorn on 2018-03-27:
Wouldn't just about every camera driver do that?
What about the image_transport/Tutorials?
Comment by chanhyeoni on 2018-03-27:
I thought so. But I guess, unlike mine, most camera-related projects I have examined are based on a single machine, so no one has ever experimented it in an environment with multiple connected machines. I should try with sensor_msgs::Compressed, which no one has ever tried with.
Comment by gvdhoorn on 2018-03-27:
I'm rather confused: ROS is supposed to make multi-machine networks transparent and using a compressed transport with image_transport is also transparent to the node (ie configured outside the node).
Can you describe what makes your 'multi machine' setup different / difficult?

A:

I found the solution. The image_transport package was not fully installed; the plugins for type compressed and theora were not installed. So I built the remaining types from source, and it is working fine. I don't know why other plugins were not installed when they were supposed to be (e.g. when I typed the command sudo apt-get install ros-kinetic-image-transport)

Originally posted by chanhyeoni with karma: 62 on 2018-03-30
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by gvdhoorn on 2018-03-30:\

I don't know why other plugins were not installed when they were supposed to be

As far as I can tell, image_transport_plugins is not a dependency of image_transport. So it would seem to be ok for them to not be installed.
Comment by gvdhoorn on 2018-03-30:\

So I built the remaining types from source

unless you are planning to work on the transport plugins, I would strongly recommend to not build those from source. Just install ros-kinetic-image-transport-plugins and things should work.
Comment by chanhyeoni on 2018-03-30:
Thanks for your help. I removed the source from my catkin project and instead installed using commands. By the way, ros-kinetic-image-transport-plugins does not install the plugins. Rather, I used the command sudo apt-get install ros-<distro>-<type>-image-transport, and it is working fine.
Comment by gvdhoorn on 2018-03-30:
That is rather strange, as ros-kinetic-image-transport-plugins is supposed to bring in all plugins. Its dependencies are exactly the plugins.
But if things work for you, then ok.

