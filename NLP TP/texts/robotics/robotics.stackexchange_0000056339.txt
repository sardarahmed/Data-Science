Q:

[SOLVED] ROS Hydro from source on Ubuntu 13.10 make error in qt_gui_cpp

Edit  I gave up at the time and only installed ROS-COMMs, which went through fine.  But now that I have a need for the other tools, I decided to have a go at Desktop-Full again.  After a bunch of hurdles (some of which were probably self-induced) I was able to get it all working.  I can post my steps if there is interest (My log file is 5MB, so I will only do that if there is a demand.)
--
Hi,
I'm following the guide Installing on Ubuntu from source.
Whilst building the isolated install (using ./src/catkin/bin/catkin_make_isolated --install --make-args -d), I got a cmake error while processing qt_gui_cpp.  I've posted the error message below:
==> Processing catkin package: 'qt_gui_cpp'
==> Creating build directory: 'build_isolated/qt_gui_cpp'
==> Building with env: '/home/username/ros_catkin_ws/install_isolated/env.sh'
==> cmake /home/username/ros_catkin_ws/src/qt_gui_cpp -DCATKIN_DEVEL_PREFIX=/home/username/ros_catkin_ws/devel_isolated/qt_gui_cpp -DCMAKE_INSTALL_PREFIX=/home/username/ros_catkin_ws/install_isolated in '/home/username/ros_catkin_ws/build_isolated/qt_gui_cpp'
-- The C compiler identification is GNU 4.8.1
-- The CXX compiler identification is GNU 4.8.1
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Using CATKIN_DEVEL_PREFIX: /home/username/ros_catkin_ws/devel_isolated/qt_gui_cpp
-- Using CMAKE_PREFIX_PATH: /home/username/ros_catkin_ws/install_isolated
-- This workspace overlays: /home/username/ros_catkin_ws/install_isolated
-- Found PythonInterp: /usr/bin/python (found version "2.7.5") 
-- Using Debian Python package layout
-- Using CATKIN_ENABLE_TESTING: ON
-- Call enable_testing()
-- Using CATKIN_TEST_RESULTS_DIR: /home/username/ros_catkin_ws/build_isolated/qt_gui_cpp/test_results
-- Looking for include file pthread.h
-- Looking for include file pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Found gtest sources under '/usr/src/gtest': gtests will be built
-- catkin 0.5.77
-- Boost version: 1.53.0
-- Found the following Boost libraries:
--   filesystem
--   system
-- Found PythonLibs: /usr/lib/x86_64-linux-gnu/libpython2.7.so (found version "2.7.5+") 
-- Looking for Q_WS_X11
-- Looking for Q_WS_X11 - found
-- Looking for Q_WS_WIN
-- Looking for Q_WS_WIN - not found
-- Looking for Q_WS_QWS
-- Looking for Q_WS_QWS - not found
-- Looking for Q_WS_MAC
-- Looking for Q_WS_MAC - not found
-- Found Qt4: /usr/bin/qmake (found version "4.8.4") 
-- Using default python: -python3.3
CMake Error at /usr/lib/x86_64-linux-gnu/cmake/Shiboken-1.1.2/ShibokenConfig.cmake:5 (include):
  include could not find load file:

    /usr/lib/x86_64-linux-gnu/cmake/Shiboken-1.1.2/ShibokenConfig-python3.3.cmake
Call Stack (most recent call first):
  /home/username/ros_catkin_ws/install_isolated/share/python_qt_binding/cmake/shiboken_helper.cmake:6 (find_package)
  src/qt_gui_cpp_shiboken/CMakeLists.txt:41 (include)

-- Using default python: -python2.7
-- Shiboken binding generator available.
-- SIP binding generator available.
-- Python binding generators: shiboken;sip
-- Configuring incomplete, errors occurred!
<== Failed to process package 'qt_gui_cpp': 
  Command '/home/username/ros_catkin_ws/install_isolated/env.sh cmake /home/username/ros_catkin_ws/src/qt_gui_cpp -DCATKIN_DEVEL_PREFIX=/home/username/ros_catkin_ws/devel_isolated/qt_gui_cpp -DCMAKE_INSTALL_PREFIX=/home/username/ros_catkin_ws/install_isolated' returned non-zero exit status 1

Reproduce this error by running:
==> cd /home/username/ros_catkin_ws/build_isolated/qt_gui_cpp && /home/username/ros_catkin_ws/install_isolated/env.sh cmake /home/username/ros_catkin_ws/src/qt_gui_cpp -DCATKIN_DEVEL_PREFIX=/home/username/ros_catkin_ws/devel_isolated/qt_gui_cpp -DCMAKE_INSTALL_PREFIX=/home/username/ros_catkin_ws/install_isolated

Command failed, exiting.

My version of python is 2.7.5+, not 3.3.
I have the following ShibokenConfig files:  .cpython-33m.cmake, -python2.7.cmake, and Version.cmake
(Is this the source of the error?  Should I update my python? Or, does the version comparison (in ShebrokenConfigVersion.cmake) fail because of the '+' sign in my version number?)
Before building, I ran the command: rosdep install --from-paths src --ignore-src --rosdistro hydro -y to make sure I had everything needed: #All required rosdeps installed successfully. I have also been keeping my Ubuntu install up to date and I am using Gnome Flashback as my GUI, not Unity.
Has anyone else faced this problem, and how were you able to resolve it?
Cheers,
Nap

Originally posted by Nap on ROS Answers with karma: 302 on 2014-01-02
Post score: 1

Original comments
Comment by Nap on 2014-04-21:
I gave up at the time and installed ROS-COMMs.  Today I came back to this and was able to perform a full, working, desktop installation from source, after spending some time investigating the hurdles that were thrown up along the way.  If anyone is interested still, I can post the steps I performed.
Comment by soon on 2016-01-16:
Yes, I am interested on it.
I hope this is not too late to ask you to post the steps that you had performed.

A:

Hi, here is a workaround that worked for me on Debian https://github.com/ros-visualization/qt_gui_core/issues/35#issuecomment-31562501
You can just make sudo apt-get purge libshiboken-dev shiboken from the terminal.

Originally posted by Gary Servin with karma: 962 on 2014-01-04
This answer was ACCEPTED on the original site
Post score: 1

