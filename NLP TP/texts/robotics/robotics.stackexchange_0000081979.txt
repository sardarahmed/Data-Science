Q:

How to find source of TF_NAN_INPUT error

While using amcl and move_base I'm getting the following errors while applying a tf_prefix. It worked without the prefix but now that I'm using it, I get the following error:
remote[red1-0]: Error:   TF_NAN_INPUT: Ignoring transform for child_frame_id "robot_tf/odom" from authority "unknown_publisher" because of a nan value in the transform (nan nan nan) (nan nan nan nan)
         at line 240 in /tmp/binarydeb/ros-indigo-tf2-0.5.15/src/buffer_core.cpp
Error:   TF_DENORMALIZED_QUATERNION: Ignoring transform for child_frame_id "robot_tf/odom" from authority "unknown_publisher" because of an invalid quaternion in the transform (nan nan nan nan)
         at line 253 in /tmp/binarydeb/ros-indigo-tf2-0.5.15/src/buffer_core.cpp

From the error listed above, what transform is being ignored? To the robot_tf/odom frame? What is the authority (I know that it says "unknown_publisher" but what is an authority in this context)?
At this point, I'm just trying to figure out how to read this error so that I can figure out where the issue lies. I know that TF_NAN_INPUT means that somewhere NaN values are being set in a transform and TF_DENORMALIZED_QUATERNION means that somewhere a denormalized quaternion is being set.
In case it is useful, here is the error that roswtf reports:
ERROR TF multiple authority contention:
 * node [/robot/laser_broadcaster_NGNeuromorphic1_18892_5059838883645381072] publishing transform [robot_tf/base_laser] with parent [robot_tf/base_link] already published by node [/robot/robot_tf/pioneer_transform_node_NGNeuromorphic1_18892_3963024023289368467]
 * node [/robot/robot_tf/pioneer_transform_node_NGNeuromorphic1_18892_3963024023289368467] publishing transform [robot_tf/base_laser] with parent [robot_tf/base_link] already published by node [/robot/laser_broadcaster_NGNeuromorphic1_18892_5059838883645381072]

and the output from rqt_tf_tree:

Originally posted by jayess on ROS Answers with karma: 6155 on 2017-07-25
Post score: 0

Original comments
Comment by jayess on 2017-07-25:
I fixed the error that roswtf was reporting. I didn't realize that I was publishing the transform from robot_tf/base_laser -> robot_tf/base_link twice.
Comment by أسامة الادريسي on 2017-11-06:
Can you more explain about this solution??

A:

I fixed the error that roswtf was reporting. I didn't realize that I had two tf publishers publishing the transform from robot_tf/base_laser -> robot_tf/base_link twice.

Originally posted by jayess with karma: 6155 on 2019-07-08
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by parzival on 2020-08-24:
Hi @jayess I'm facing similar issue while running hector_mapping: https://answers.ros.org/question/360033/hector-mapping-tf-issue-tf_nan_input-and-tf_denormalized_quaternion/
There's only one publisher publishing base_link -> laser in my case as per best of my knowledge. What should I do? Thanks

