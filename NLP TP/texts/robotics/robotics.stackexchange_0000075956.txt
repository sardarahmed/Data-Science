Q:

Ctrl +C shutdown for a blocking call

Hello,
Inside my loop
while(ros::ok())
{
// do blocking recvfrom socket
// receives data from socket
recvfrom(s, _buf, buf_size_, 0, (struct sockaddr *) &si_other, &slen);
...

ros::spinOnce();

}

This code work perfectly and the ROS_INFO shows that is receives data from socket port correctly. NOTE here the incoming data is outside ros node. But when I exit using Ctrl+C. The node does not exit. The result is I have to force shutdown. This causes my port to connected. netstat shows the port is still in use. however rosnode list shows that the node has shutdown. This is likely because the code is stuck at the blocking call recvfrom. Any suggestion to overcome this ?
My question is similar to
http://answers.ros.org/question/31570/handling-sigint/
But the suggestion spinOnce didnt help

Originally posted by ROSfc on ROS Answers with karma: 54 on 2016-08-24
Post score: 0

Original comments
Comment by ahendrix on 2016-08-24:
You probably need to set a timeout on your socket so that it exits from recvfrom when no data is received, and eventually has the opportunity to exit the main loop.
Comment by ROSfc on 2016-08-30:
Is that the only way ? or rather the recommended way ?

A:

Is that the only way ? or rather the recommended way ?

I'd say that is the recommended way, as hanging in a system call is never really nice / robust (unless you use a blocking read on a suitable configured file descriptor as a timing device, or waiting for an event). You could look into SO_RCVTIMEO (see Linux: is there a read or recv from socket with timeout?) on SO).
Another option would be using select(..) or Boost asio, but that would be (slightly) more involved.

I guess I will go with timeout then. I am looking if I could use the SIGINT signal in any way

Well, at least according to this (and others), SIGINT might not make it to recvfrom(..) and friends. Which could be why you are hanging in recvfrom(..) when you ctrl+c the roslaunch session. But I haven't verified this.

Originally posted by gvdhoorn with karma: 86574 on 2016-08-30
This answer was ACCEPTED on the original site
Post score: 1

