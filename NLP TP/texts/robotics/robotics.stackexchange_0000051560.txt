Q:

Release non-cmake 3rd party libraries with bloom

I am trying to release gflags with bloom (my final goal is to make the buildfarm create debians for ceres-solver). Unfortunately the port from automake to cmake for gflags is not finished yet.
That's why I want to know if it is possible to make the buildfarm create debians for source code that compiles with ./configure && make && make install instead of cmake.
Is there a special build_type for automake that I can use in my package.xml?
If this is not possible, should I inject a simple CMakeLists.txt that calls ExternalProject_Add?

Originally posted by Stephan on ROS Answers with karma: 1924 on 2013-05-30
Post score: 2

A:

We have only implemented build_type cmake and the default one catkin.  It was designed to be extended to build autotools.  It looks like there are some stubs there, but I am not aware of any package actively using it yet.
@William can give more insight when he gets back from vacation.

Originally posted by tfoote with karma: 58457 on 2013-05-30
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by William on 2013-05-30:
You can extend catkin to support autotools, or you can just wrap the autotools up in a simple CMakeLists.txt. I can provide a better answer later.
Comment by Frantisek.Durovsky on 2015-12-20:
Hi guys, I m facing the same problem with releasing non-cmake library into ROS ecosystem. I have red bloom tutorial but I dont understand how to adopt it for library compiled by make && make install. What is recommended procedure now at the end of 2015? Is there any example available? Thanks
Comment by William on 2015-12-20:
I'd still recommend wrapping up the non-cmake library you want in a CMakeLists.txt. I don't know of a good example of this off hand, maybe someone else on this site can link you one.

