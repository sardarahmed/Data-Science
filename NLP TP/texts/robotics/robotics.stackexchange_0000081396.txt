Q:

ROS navigation stack with dynamic map

Hi
I'm currently developing an autonomous MAV with the goal of achieving autonomous navigation and obstacle avoidance capability within an indoor environment. With an on board lidar and a downward facing camera using the google cartographer package I have been able to successfully localize the MAV as well as generate an updating 2D occupancy grid. Now the next step local navigation and path planning. From what I've read so far however, the ROS navigation stack, as well the vast majority of path planning and navigation packages out there assume an already generated map for navigation. In my case however I would require that the path planner be able to respond to map changes as well as perform some obstacle avoidance based on the current lidar reading. Are there currently any ROS packages that can accomplish this?
Failing that, are there any literature on path planning on dynamic map coupled with SLAM, so that I may implement it?
Currently the environment is assumed to be hallway like, so a 2D navigation algorithm would suffice.

Originally posted by eric1221bday on ROS Answers with karma: 245 on 2017-06-21
Post score: 1

Original comments
Comment by berk ince on 2022-05-29:
I am also working on a similar project. It will be a project that minimizes traffic congestion. However, in this project, a static mapping is always done in navigation and slam applications like your curiosity. Multiple vehicles should recognize each other dynamically and should not collide with each other on the way to the destination. Do you think this is possible? Were you able to realize your project in this way? I would like to review your project.

A:

move_base package works well with both planning and obstacle avoidance, the only things needed are proper configuration of the package and giving a proper goals which are reachable. If the goal is unreachable, robot will be stuck trying to reach it.

Originally posted by saken with karma: 161 on 2017-06-22
This answer was ACCEPTED on the original site
Post score: 0

