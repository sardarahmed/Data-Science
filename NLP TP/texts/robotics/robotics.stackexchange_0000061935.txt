Q:

Catkin fails to chain workspaces

Hi guys, I have a problem and cannot find a permanent solution to it:
I am trying to chain two workspaces A and B but catkin fails to recognize workspace A.
So what i did was create worspace A in:
/usr/share/ros/workspaceA

This works fine and i can build my packages.
Then i created another workspace B to work in, this should overlay workspace A, in:
~/ros/workspaceB

My packages in workspaceB depend on packages in workspace A.
When trying
source /usr/share/ros/workspaceA/devel/setup.bash
source ~/ros/workspaceB/devel/setup.bash
cd ~/ros/workspaceB/
catkin_make

I get
...
-- This workspace overlays: ~/ros/workspaceB/devel;/opt/ros/indigo
...

and following some error that my package from workspaceA ould not be found.
So obviously, catkin fails to recognize workspaceA. Without dependencies on packages from workspaceA everything works fine.
How do I get this fixed, so that i can build my packages in workspaceB? What am I missing? Has this to do with the path to workspaceA?
Note:
This worked for me once, when workspaceA was located in
~/ros/workspaceA

but after deleting it and recreating in in just the same place i got the same result as above.
Thanks for your support!

Originally posted by Marcel Usai on ROS Answers with karma: 200 on 2014-08-19
Post score: 2

Original comments
Comment by peci1 on 2016-11-16:
This has a way nicer solution with catkin tools. See http://answers.ros.org/question/64702/overlaying-multiple-catkin-devel-spaces-at-the-same-time/?answer=248245#post-id-248245 .

A:

The problem is the assumption that sourcing chains workspaces. This is not the case. If it were sourcing multiple setup.sh files will leave you in an undefined state depending on whatever you did before. Here is your problem:
source /usr/share/ros/workspaceA/devel/setup.bash
source ~/ros/workspaceB/devel/setup.bash
cd ~/ros/workspaceB/
catkin_make

This activates workspaceB before building. Thus you do not overlay workspaceA.
Check out the tutorial on chaining workspaces. Note the lines along:

## THIS IS THE CRUCIAL PART FOR OVERLAYING
$ source ~/overlay_ws/devel/setup.bash
$ catkin_make

You probably at some point sourced workspaceA and catkin_make in workspaceB leading to this:

-- This workspace overlays: ~/ros/workspaceB/devel;/usr/share/ros/workspaceA/devel;~/ros/workspaceB/devel;/opt/ros/indigo

Try removing the build/devel folders in workspaceB and then:

source /usr/share/ros/workspaceA/devel/setup.bash
cd ~/ros/workspaceB/
catkin_make
source ~/ros/workspaceB/devel/setup.bash

This should lead to the setup you want. From now on it is sufficient to
source ~/ros/workspaceB/devel/setup.bash in your .bashrc. This will lead to the correct overlays.

Originally posted by dornhege with karma: 31395 on 2014-08-19
This answer was ACCEPTED on the original site
Post score: 6

Original comments
Comment by Marcel Usai on 2014-08-19:
Thank you. Think I messed things up trying to understand chaining workspaces.
Just edited my question to remove the last (misleading) edit.
So one could say that it's always building before sourcing?
Comment by Murilo F. M. on 2014-08-19:
That depends. Build your current workspace before sourcing it, but source other (underlaid) workspaces (which were already built at some point) before building the current one (otherwise, workspaces will not be chained).

