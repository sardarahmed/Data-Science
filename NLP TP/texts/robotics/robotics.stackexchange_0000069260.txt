Q:

ROS orocos tutorial

Hi all,
I am currently reviewing Orocos and would like to use it as my control framework. I would like to use ROS as my transport layer so I have found rtt_ros_integration to be to the point.
I have read all the orocos doc I could find, and would like to pratise on the examples, so I have now installed rtt-ros-integration in indigo (under ubuntu 14.04). But it seems that the orocos component manual is no longer up-to-date as it states to use the following command line in order to create an orocos component package rosrun ocl orocreate-pkg HelloWorld. But this command line outputs an error saying orocreate-pkg does not exist in package ocl, which is true (I have checked in the said package). The same happens when trying to start the deployer with rosrun ocl deployer-gnulinux.
I guess the instructions of the orocos component manual correspond to an old version of the ROS / orocos integration. Hence my question: anyone knows more than I do on the new ways to start orocreate-pkg, the deployer, or the task browser with rtt-ros-integration?
I have run the rtt_ros_examples (the ops version, not the LUA version which looks bugged), but I could not figure out the answer so far...
Thanks,
Antoine.

Originally posted by arennuit on ROS Answers with karma: 955 on 2015-08-17
Post score: 2

A:

ok, I think I have some elements for the answer.
Basically:

Do not follow the steps given in the orocos doc, they are deprecated and should be updated (as for the integration into ROS - the other parts of the doc are still relevant)
-> the last doc corresponds to version 2.6 of orocos and we are now at version 2.8

Follow the steps given in the rtt_ros_integration doc

In addition to this:

create a folder in your workspace (as if you were doing a normal ROS package) and put all your code in there (CMakeLists.txt, package.xml, HelloWorld.cpp, helloworld.ops...)

for the content of these files (CMakeLists.txt, package.xml, HelloWorld.cpp, helloworld.ops...), you can get inspiration from the examples in rtt_ros_integration_examples

all instructions in helloworld.ops should end with a ";", no idea why...

no longer use OCL_CREATE_COMPONENT in your .cpp, but ORO_CREATE_COMPONENT
-> this is the new way of doing things

compile your component the normal ROS way (catkin_make in your workspace)

dynamically load your component: rosrun rtt_ros deployer -s helloworld.ops -linfo

Cheers,
Antoine.

Originally posted by arennuit with karma: 955 on 2015-08-18
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Balaji on 2016-05-09:
When i run this code,      rosrun rtt_ros deployer -s helloworld.ops -linfo
I am getting this error,     /home/coe/ws/underlay/src/rtt_ros_integration/rtt_ros/scripts/deployer: line 5: deployer: command not found 
Comment by Balaji on 2016-05-09:
I cannot see the Helloworld.ops and helloworld.cpp file. I am getting error as failed to open ocl when i run catkin_make_isolated --install
and im getting error as cmake failed   when i run catkin_make

