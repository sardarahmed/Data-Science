Q:

actionlib shutdown beacuse of getState()

the code is be like:

return this->moveBaseClient->getState();

while moveBaseClient is:

typedef actionlib::SimpleActionClient<move_base_msgs::MoveBaseAction> MoveBaseClient;
std::shared_ptr<MoveBaseClient> moveBaseClient;

calling at 20hz and this happened:
robot_decision_node: /opt/ros/kinetic/include/actionlib/managed_list.h:168: const T& actionlib::ManagedList<T>::Handle::getElem() const [with T = boost::shared_ptr<actionlib::CommStateMachine<move_base_msgs::MoveBaseAction_<std::allocator<void> > > >]: Assertion `valid_' failed.

Am i using getState wrong?
i chage the frequency to 10hz, now it works fine.
but it's still a bug?

Originally posted by zhazha on ROS Answers with karma: 21 on 2020-11-30
Post score: 1

Original comments
Comment by miura on 2020-12-01:
You should also post the code that sets moveBaseClient.
Comment by zhazha on 2020-12-01:
hi,i have updated the question with defination of moveBaseClient

A:

You may not be able to create an instance.
MoveBaseClient moveBaseClient("move_base", true); and initialize it with this->moveBaseClient.getState(), which should work.
If it has to be a pointer, it would work with std::shared_ptr<MoveBaseClient> moveBaseClient = new MoveBaseClient("move_base", true);.

Originally posted by miura with karma: 1908 on 2020-12-06
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by zhazha on 2020-12-06:
i have initialized the pointer like this：
if (!moveBaseClient.get()) {
moveBaseClient = std::make_shared("/move_base");
}
and i run the node in 10hz，it works fine
Comment by miura on 2020-12-06:
Congratulations. If you would like, please make a collect. Or, please state your  answer.

