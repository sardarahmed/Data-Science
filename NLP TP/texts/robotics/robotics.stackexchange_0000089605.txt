Q:

Understanding messages MDSum

I am trying to understand how the MD5Sum of the messages is being calculated following this link
So far, I undestand that a plain message like std_msgs/Header translates to:
uint32 seq
time stamp
string frame_id

And if I paste that block of text into this online MD5Sum calculator it correctly gives me the Header hash: 2176decaecbce78abc3b96ef049fabed
Now, for complex messages, the documentation states that: "In order to catch changes that occur in embedded message types, the MD5 text is concatenated with the MD5 text of each of the embedded types, in the order that they appear."
So, how that would translate to a message like geometry_msgs/Vector3Stamped ?
I tried combinations like this:
Header header
Vector3 vector
uint32 seq
time stamp
string frame_id
float64 x
float64 y
float64 z

or like this:
Header header
Vector3 vector
2176decaecbce78abc3b96ef049fabed
4a842b65f413084dc2b10fb484ea7f17

Also with capital letters
but none gives me the correct Vector3Stamped MD5Sum of 7b324c7325e683bf02a9b14b01090ec7

Originally posted by Vicente Penades on ROS Answers with karma: 130 on 2018-11-15
Post score: 0

A:

After trying a bunch or permutations, this is what it worked for Vector3Stamp
2176decaecbce78abc3b96ef049fabed header
4a842b65f413084dc2b10fb484ea7f17 vector

So they're not concatenated as the documentation says. What happens is the MD5 hash of the underlaying message replaces the type itself. so std_msgs/Header becomes 2176decaecbce78abc3b96ef049fabed  and geometry_msgs/Vector3 becomes 4a842b65f413084dc2b10fb484ea7f17
I would recomend updating the docs to reflect this behavior.

Originally posted by Vicente Penades with karma: 130 on 2018-11-15
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by gvdhoorn on 2018-11-15:
The documentation you refer to is a wiki, so if you feel it should be corrected then it would make sense for you to do that.
Btw: this line in the code I linked does what you describe.

