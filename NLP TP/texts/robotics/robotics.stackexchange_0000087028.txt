Q:

How can I set several parameters with a single call of rosparam?

I would like to set several ROS parameters via a single call of rosparam (run in a docker container means loading from .yaml with rosparam load dump.yaml is no option for me). Can I use rosparam set <...> to get this done somehow? (The wiki cli docs probably lack something which I could use.)
I tired a single line invocation like follows but got an yaml.scanner.ScannerError:
$ rosparam set /gains "p: 1.0 i: 1.0 d: 1.0"
...
yaml.scanner.ScannerError: mapping values are not allowed here
  in "<string>", line 1, column 9:
    p: 1.0 i: 1.0 d: 1.0
        ^

Originally posted by thinwybk on ROS Answers with karma: 468 on 2018-05-18
Post score: 0

Original comments
Comment by gvdhoorn on 2018-05-18:\

run in a docker container means loading from .yaml [..] is no option for me

can you explain this? As long as the master is accessible you could even run rosparam outside your container and load entire dumps.
Comment by thinwybk on 2018-05-18:
can you explain this? I could do so. But I prefer to have the docker environment completely separated from my local workstation OS environment. And if I'd like to load dumps I'd need to handle docker volumes/mounts which I don't like to do in this case.
Comment by thinwybk on 2018-05-18:
rosparam set /gains "{p : 1.0, i : 1.0, d : 1.0}" works just fine btw. If you post it as answer I'll accept it...
Comment by gvdhoorn on 2018-05-18:\

And if I'd like to load dumps I'd need to handle docker volumes/mounts which I don't like to do in this case.

use one container to run rosparam and target another container? Only volume mount (-v) would be the .yaml file containing the parameters?
Comment by gvdhoorn on 2018-05-18:
Btw: you could also use rospy.set_param(..). As it's an XMLRPC call, it can be used without creating a ROS node.
I would not be surprised if you could use a bare XMLRPC call with the yaml dictionary directly. No ROS needed in that case (but I haven't tried it).

A:

I tired a single line invocation like follows but got an yaml.scanner.ScannerError

Probably because you're providing invalid markup: abbreviated yaml dictionaries (ie: key-val on a single line) should be structured like so:
{ p : 1.0, i : 1.0, d : 1.0 }

Note the accolades ({}) and item separators (,).

Edit: Btw: you could also use rospy.set_param(..). As it's an XMLRPC call, it can be used without creating a ROS node.
I would not be surprised if you could use a bare XMLRPC call with the yaml dictionary directly. No ROS needed in that case (but I haven't tried it). See wiki/ROS/Technical Overview - Parameter Server and wiki/ROS/Parameter Server API.

Originally posted by gvdhoorn with karma: 86574 on 2018-05-18
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by thinwybk on 2018-05-18:\

Edit: Btw: you could also use rospy.set_param(..). As it's an XMLRPC call, it can be used without creating a ROS node.

Thx. I already thought about using rospy.set_param_raw for [rospbt](https://github.com/ros-testing
Comment by thinwybk on 2018-05-22:\

I would not be surprised if you could use a bare XMLRPC call with the yaml dictionary directly.

The docs in the wiki are wrong about this. Probably I'll take the time to fix it.
Comment by gvdhoorn on 2018-05-22:
I don't understand? What are they wrong about?
Note that the "Setting an entire namespace of parameters using a YAML dictionary" bit is correct: you can do it like that, but the newlines are required.
Comment by thinwybk on 2018-05-22:
Right. sry, Had a typo when I tried it.

