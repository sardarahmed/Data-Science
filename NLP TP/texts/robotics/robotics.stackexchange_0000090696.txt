Q:

Unable to run catkin_make install for sick_scan without a crash

Hello,
I am currently attempting to use a tim561 along with a Raspberry Pi 3 b. On the Raspberry Pi I am using Lubuntu and ROS kinetic and attempting to install the sick_scan package. I am following the instructions for installing however whenever I run catkin_make install, or simply catkin_make it freezes the Pi such that I have to reboot it by unplugging it.
Knowing where it will freeze, I can stop catkin_make and I get the error message that I will paste below. I will also include the last two lines from the compilation if that helps.
Is it possible that the Pi is simply not powerful enough to run this install? Or do I need to install some other packages beforehand?
Thanks.
[ 63%] Building CXX object sick_scan/CMakeFiles/sick_scan_lib.dir/driver/src/sick_scan_common.cpp.o
[ 65%] Building CXX object sick_scan/CMakeFiles/sick_scan_lib.dir/driver/src/sick_scan_common_tcp.cpp.o
^CTraceback (most recent call last):
File "/opt/ros/kinetic/bin/catkin_make", line 296, in 
sick_scan/CMakeFiles/sick_scan_lib.dir/build.make:350: recipe for target 'sick_scan/CMakeFiles/sick_scan_lib.dir/driver/src/sick_scan_common_tcp.cpp.o' failed
sys.exit(main())
make[2]: *** [sick_scan/CMakeFiles/sick_scan_lib.dir/driver/src/sick_scan_common_tcp.cpp.o] Interrupt
File "/opt/ros/kinetic/bin/catkin_make", line 240, in main
run_command(cmd, make_path)
File "/opt/ros/kinetic/lib/python2.7/dist-packages/catkin/builder.py", line 239, in run_command
sick_scan/CMakeFiles/sick_scan_lib.dir/build.make:86: recipe for target 'sick_scan/CMakeFiles/sick_scan_lib.dir/driver/src/sick_scan_common.cpp.o' failed
make[2]: *** [sick_scan/CMakeFiles/sick_scan_lib.dir/driver/src/sick_scan_common.cpp.o] Interrupt
CMakeFiles/Makefile2:4343: recipe for target 'sick_scan/CMakeFiles/sick_scan_lib.dir/all' failed
make[1]: *** [sick_scan/CMakeFiles/sick_scan_lib.dir/all] Interrupt
proc.wait()
File "/usr/lib/python2.7/subprocess.py", line 1392, in wait
Makefile:138: recipe for target 'all' failed
make: *** [all] Interrupt
pid, sts = _eintr_retry_call(os.waitpid, self.pid, 0)
File "/usr/lib/python2.7/subprocess.py", line 476, in _eintr_retry_call
return func(*args)
KeyboardInterrupt

Originally posted by Pol on ROS Answers with karma: 33 on 2019-02-27
Post score: 0

A:

Maybe you are running out of resources on Raspberry Pi, compilation is quite memory/cpu intensive.
Have you tried running only one cmake thread? :
catkin_make -j1

Originally posted by Martin Peris with karma: 5625 on 2019-02-27
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Pol on 2019-02-27:
Hi thanks for the reply. I have not tried that but that would make sense. I am however a bit unfamiliar with ROS, how many "j"'s are there? I noticed there is also j2, are there more? Would i also need to run catkin_make -j2? And for subsequent j's?
Thanks.
Comment by Martin Peris on 2019-02-27:
The -j parameter is to inform CMake of how many threads to use for compilation. If you don't specify any -j then it will try to use all available CPUs. Your Rasberry Pi might have 2 cores, that is why you might have noticed the "j2".
Comment by Pol on 2019-03-01:
That worked! Thanks!

