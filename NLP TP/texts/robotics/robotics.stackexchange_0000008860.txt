Q:

Angle Random Walk vs. Rate Noise Density (MPU6050)

I’ve made a datalog from a MPU6050 (IMU: gyroscope and accelerometer) at 500Hz sample rate. Now I want to calculate the characteristics from the gyro to evaluate the sensor. 
For the gyro I’ve found following values in the datasheet:
Total RMS Noise = 0.05 °/s
Low-frequency RMS noise = 0.033 °/s 
Rate Noise Spectral Density = 0.005 °/s/sqrt(Hz)
Now I want to ask how I can calculate these values from my dataset?
At the moment I’ve the following values from the dataset:
Standard deviation = 0.0331 °/s
Variance = 0.0011
Angular Random Walk (ARW) = 0.003 °/sqrt(s) (From Allan deviation plot)
Bias Instability = 0.0012 °/s
Is the ARW equal to the Rate Noise Spectral Density mentioned in the datasheet? And also is the RMS Noise from the datasheet equal to the standard deviation? 
edit:
I found following website: http://www.sensorsmag.com/sensors/acceleration-vibration/noise-measurement-8166
There is the statement:  "...Because the noise is approximately Gaussian, the standard deviation of the histogram is the RMS noise" So I guess the standard deviation is the RMS noise from the datasheet. But how about the ARW?

A:

Total RMS Noise
Yes, this should be approximately equal to your standard deviation as long as there is no bias.
Rate Noise Spectral Density
You cannot obtain this from the statistics you list.  You will need to take a Fast Fourier Transform (FFT) of your raw data and look at the results in the frequency domain.  Look in the data sheet to see at what frequency or frequency band the spectral noise density is specified at and then compare what your FFT says.
Low-frequency RMS noise
Again, you will need to know (or guess) what frequency cutoff your data sheet is assuming and use the same cutoff.  You may need to run your data through a low-pass digital filter then look at the results in the time domain.
You can do the above analysis with a tool like MATLAB.  If you don't have MATLAB (It's kind of expensive) check out R Studio or Scilab.  They are both available for free.  Personally I prefer R - It has great statistical analysis tools and there is a lot of open source floating around for data visualization.

