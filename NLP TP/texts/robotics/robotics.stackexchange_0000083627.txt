Q:

Difference between catkin_init_workspace inside src vs catkin_make

Hi there, I guess this is more of a conceptual question, what are the differences (or even benefits) of running:
catkin_init_workspace

inside the workspace/src directory vs running:
catkin_make

In the root of the workspace. According to me they are equal and I've always preferred to just create the workspace and src inside and then run catkin_make directly, but I haven't found out if there are big differences from one to the other.
Thanks for your time!
EDIT:
I've seen that catkin_init_workspace will:
" Actually, it creates a symbolic link to a system-wide CMakeLists.txt file."
According to the Programming Robots with ROS book.

Originally posted by bpinaya on ROS Answers with karma: 700 on 2017-10-30
Post score: 1

A:

catkin_make is performing the actual build. It will implicitly initialize the workspace for you.
catkin_init_workspace only creates the CMakeLists.txt file in the root of the source space (see https://github.com/ros/catkin/blob/c0b6ca5d67adb13745c4899868cdee17c9118f5e/python/catkin/init_workspace.py#L57). You only need to use it if you later want to call something like cmake and make manually. So usually you never have to invoke catkin_init_workspace yourself.

Originally posted by Dirk Thomas with karma: 16276 on 2017-10-30
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by bpinaya on 2017-10-30:
Thanks for the quick answer, so catkin_make will also generate the CMakeLists.txt right? So just running catkin_make will also allow me to use cmake and make?
Comment by Dirk Thomas on 2017-10-30:
Yes, that is correct.

