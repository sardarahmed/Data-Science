Q:

understanding velodyne_pointcloud package

I have read and test the manual of this package in hydro but I have several questions I hope you can help.
1. What do the RingColors node and nodelet do? There is no documentation in the package.
2. The 32e_points.launch file call the driver and the conversor in the same code but it still require the intern messages in topic /velodyne_packets (VelodyneScan.msg). Can I fuse these processes without the intern messages? Fusing the two nodelets in one?
And now several questions about the nodelet TransformNode executing with rosrun nodelet nodelet standalone velodyne_pointcloud/TransformNode.
3. Which code is executed? /hydro/lib/libtransform_nodelet.so ? or /shared/velodyne_pointcloud/launch/transform_nodelet.launch?
4. Can I insert parameters such as frame_id? or the parameter are fixed?
5. TransformNode with frame_id=/velodyne is exactly the same process as cloud_node?
6. What is the frame_id? Is not a field in the message. But it is required for visualization with rviz.
Thanks in advance

Originally posted by marilia15 on ROS Answers with karma: 104 on 2014-03-26
Post score: 0

A:

1. RingColors is mostly just a demo of how to get the ring number for each laser. It assigns rainbow colors to each successive laser, allowing you to figure out what laser generates each point in the rviz display.
2. The two nodelets run as separate threads in the same nodelet manager process. The /velodyne_packets messages flow between them using zero-copy pointers. I do not recommend trying to combine them into a single nodelet.
3. /hydro/lib/libtransform_nodelet.so
4. Parameters are specifically provided so you can change them.
5. Transform node is a different implementation, but the resulting point clouds should be the same.
6. frame_id is a field in the message header, i.e: msg.header.frame_id. See std_msgs/Header.

Originally posted by joq with karma: 25443 on 2014-03-26
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by marilia15 on 2014-03-27:
In the 4th, you mean you can or can't change them?
Comment by joq on 2014-03-27:
Yes, you can change them. That is the purpose of making something a parameter.
Comment by marilia15 on 2014-03-28:
How can I check if there is messages with zero-copy pointers between the two nodelets inside the 32e_points.launch file as you have said? zero-copy messages means INTRAPROCESS instead of TCPROS transport communication? I have seen there are the same rostopic list -v , and the same rosnode info velodyne_nodeleT_manager communications (intraprocess and tcpros) than if I use the 2 nodelets separately  (roslaunch velodyne_driver nodelet_manager.launch and roslaunch velodyne_pointcloud cloud_nodelet.launch).
Comment by joq on 2014-03-28:
Both the driver and the point cloud conversion run in the same "velodyne_nodelet_manager" process. You can verify that by reading the launch files. If you believe this question was answered, please click the green check-mark.
Comment by nunuwin on 2019-07-01:
After using velodyne_pointcloud,is it need to pointcloud processing and  registration?
And then, can I get pcap file from velodyne gazebo model (not real velodyne)?

