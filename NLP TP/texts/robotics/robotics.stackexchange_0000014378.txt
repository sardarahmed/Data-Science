Q:

Nuc, custom pc or raspberry pi?

For our Minor “Robotics and Vision” we need to use ROS to create a system that can navigate to and from a coffee machine. The available hardware consists of a robotic platform from "Dr Robot", and a manipulator that uses actuators from Dynamixel. The system should use computer vision to navigate the robotic platform and manipulator.
Besides the robotic platform and manipulator, we have a limited budget of 500 euros to get all the other necessary hardware, including the processing device(s).
This/these devices need to run the ROS core and nodes that are responsible for:
-    Analyzing environment with computer vision;
-    Controlling the engines;
-    Controlling the manipulator;
-    Interfacing with a database.
After research we found that we could use a PC, like an Intel NUC or a custom PC. Or we could use several Raspberry Pi’s to run separate nodes, and let them communicate within a network. We tried to find out how much computational power was necessary to fulfill our requirements, but after searching online for a while we could not find a fitting answer.
Our question is if anyone knows how much computation power we need to fulfill our aforementioned requirements, or how we could find out (without spending the entire budget).
EDIT:
The problem for us is that we are using the V-model, which means that we design our entire system before implementing it, therefore we have to decide on what type of hardware we use for the system before we "are allowed" to write any software. This makes it impossible to test it before ordering the computing part. 

A:

Edit:
With the new information in your post I would highly recommend going for more computing power than you think you need. It is always to have a little extra wriggle room than to be stuck with not enough.
Raspberry Pi's have the awesome advantage of the easily accesable GPIO. ROS is good but adds extra complexity over a single system. On the flip side, using multiple Raspberry Pi's allows you to develop and prove up each system individually.
Alternatives to the Raspberry Pi are:

pcDuino
BeagleBone Blue (Has 2x 32-bit PRUs. Comparison here and here)
Onion Omega2
CubieBoard6 or CubieAIO

Think about solving the problem differently. I get the impression that you expect to get it working first time without having to re-engineer anything. Instead consider creating a few prototypes first before designing your final system. Similar to the iteration/spiral model 
Your first prototype is going to be your proof of concept. I have a philosophy of using computers/processors/equipment that far exceeds my minimum requirements for the proof of concept. That way you can prove that each system works, without having the problem of needing just a little more of this or that.
In your case that would mean that I would start off with a full blown computer (probably something I had lying around spare). It could even mean that you prove up each section on separate hardware and combine it at a later stage. 
Then you can refine your design down until you have it running on the minimum hardware required. This will most likely require you to take measurements of the resources and processing power you use.
So how does this all fit into your 500 euro limit? In most cases the requirement is that the final design costs 500 euros. How you get to that final design isn't counted. Even if it is, you can usually get decent second-hand hardware for practically nothing.

