Q:

Pointcloud to Laserscan in Groovy

Upon upgrading to ROS groovy, I have found that the pointcloud_to_laserscan package no longer exists (or as far as I can tell). Has it been renamed or replaced?
I use a PointCloud2 topic to convert to a laserscan (I am not using a Kinect). This method worked in fuerte, but I am having troubles with it in Groovy... Any help is welcome!
Thanks,
-Hunter A.

Ok, so I built the fuerte pointcloud_to_laserscan package from the git repository supplied, and it crashes with this error:
allenh1@allenh1-Vostro-430:~/filter_ws/src/curvature_extraction$ rosrun nodelet nodelet manager __name:=openni_manager
[ INFO] [1370352714.338026286]: Initializing nodelet with 8 worker threads.
[ERROR] [1370352740.338951246]: Failed to load nodelet [/variance_tracker] of type [pointcloud_to_laserscan/CloudToScan]: According to the loaded plugin descriptions the class pointcloud_to_laserscan/CloudToScan with base class type nodelet::Nodelet does not exist. Declared types are  cmd_vel_mux/CmdVelMuxNodelet depth_image_proc/convert_metric depth_image_proc/disparity depth_image_proc/point_cloud_xyz depth_image_proc/point_cloud_xyzrgb depth_image_proc/register depthimage_to_laserscan/DepthImageToLaserScanNodelet freenect_camera/driver image_proc/crop_decimate image_proc/debayer image_proc/rectify image_view/disparity image_view/image kobuki_auto_docking/AutoDockingNodelet kobuki_bumper2pc/Bumper2PcNodelet kobuki_controller_tutorial/BumpBlinkControllerNodelet kobuki_node/KobukiNodelet kobuki_safety_controller/SafetyControllerNodelet nodelet_tutorial_math/Plus openni_camera/driver pcl/BAGReader pcl/ExtractIndices pcl/NodeletDEMUX pcl/NodeletMUX pcl/PCDReader pcl/PCDWriter pcl/PassThrough pcl/PointCloudConcatenateDataSynchronizer pcl/PointCloudConcatenateFieldsSynchronizer pcl/ProjectInliers pcl/StatisticalOutlierRemoval pcl/VoxelGrid stereo_image_proc/disparity stereo_image_proc/point_cloud stereo_image_proc/point_cloud2 turtlebot_follower/TurtlebotFollower yocs_velocity_smoother/VelocitySmootherNodelet

Anybody have an idea as to what is happening? Also, it is not using the Kinect or any Openni camera...

Nevermind! Just had to close all the ROS apps and start them again. It is working now.

Originally posted by allenh1 on ROS Answers with karma: 3055 on 2013-06-03
Post score: 0

A:

pointcloud_to_laserscan was part of the turtlebot stack in Electric and Fuerte, but was removed in Groovy in favor of the much faster depthimage_to_laserscan.
If you're using a depth sensor (Kinect, Xtion, etc), I suggest trying depthimage_to_laserscan. If you really need to convert a PointCloud2 to a laserscan, you should be able to pull an old version of the source and build it yourself. I would try the last version that was released into fuerte: https://github.com/turtlebot/turtlebot/tree/fuerte (check out the fuerte tag)

Originally posted by ahendrix with karma: 47576 on 2013-06-03
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by CarolineQ on 2013-06-12:
Hi. I was thinking about using pointcloud_to_laserscan too because you can specify that you want to use data between a min height and a max height, is it possible with the new package to select data between two heights ?

