Q:

Problem with ros::Timer

Hello
I have trouble creating a timer in Ros. I defined a class in which one of its members is the timer callback. To create it, in the constructor of the class I put the following:
timer = nh.createTimer(ros::Duration(0.1), &summit_xl_path_planning::PathPlanningSpin, this);

("timer" is a ros::Timer member of the class)
And then define the callback as below:
void summit_xl_path_planning::PathPlanningSpin(const ros::TimerEvent& e)
{
...
}

Finally in the main summit_xl_path_planning I create a class, to make things work. I run the node using rosrun.
The problem is that I never get to run the timer. The program compiles. When I run everything I put in the constructor is done, but then nothing else happens. I have reviewed the tutorials thousands of times, but I can not see I'm doing wrong. Can anybody help?
I'm using Ubuntu 12.04 and Fuerte.
Thanks in advance and best regards

Originally posted by g.aterido on ROS Answers with karma: 229 on 2012-08-23
Post score: 0

A:

Unfortunately, you didn't give us enough information (e.g. source code) in your question so I can just guess. Here a few things that can go wrong:

Are you calling ros::spin() or ros::spinOnce() in a loop somewhere in your program? Spinning will call the timer callbacks.

Is your NodeHandle object maybe stack allocated in the constructor and destroyed at the end of it? The live time of timer objects, publishers and subscribers is bound to the NodeHandle they were created with. Make sure that the NodeHandle is a member variable of the class that starts the timer.

Originally posted by Lorenz with karma: 22731 on 2012-08-23
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by g.aterido on 2012-08-24:
Thanks! I was callin ros::spin(), but the NodeHandle was not a member variable of the class. Sorry for this dummy question ;)

