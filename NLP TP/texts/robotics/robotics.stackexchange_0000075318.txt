Q:

Writing a ROS command-line utility in C++ - what is the difference compared to writing a ROS node in C++?

Howdy folks
So far I have written ROS nodes in C++ and invoked them in launch files.
Now I want to write a ROS command-line utility for off-line processing rosbag files in C++ (using the rosbag C++ API), which doesn't interact with any other nodes per se.
More in particular I want to write a utility that looks for camera_info messages in a given bagfile and change camera calibration and distortion parameters.
My question is: Do I write a command-line utility just like I would write a node in C++, within the catkin build framework? What's different between writing a utility and writing a node in C++? Does anyone know of a good C++ example that I can learn from?
Thanks in advance
Galto

Originally posted by Galto2000 on ROS Answers with karma: 73 on 2016-07-20
Post score: 0

A:

Yes, everything is the same. At the end you just write a normal C++ program using the ROS libraries. Just skip actually connecting to anything, e.g., no need for NodeHandles, etc.
For your specific problem: rosbag filter might already be able to do that, so you won't need to write any specific utility.

Originally posted by dornhege with karma: 31395 on 2016-07-20
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Galto2000 on 2016-07-20:
Thanks for your reply and pointing me to rosbag filter - I'll give it a try.
Comment by Galto2000 on 2016-07-21:
Worked like a champ - thanks again!

