Q:

Navigation with (x,y) goals (no angle)

Is it possible in the navigation stack to specify a goal just as XY coordinates, not specifying the final orientation of the robot?
I guess it could be achieved by subscribing to the feedback and cancelling the goal as soon as the robot it's close enough to the target, but that may generate suboptimal plans.
Any ideas?

Originally posted by Javier on ROS Answers with karma: 408 on 2011-05-16
Post score: 3

A:

I'm just guessing here, but you may be able to set your yaw_goal_tolerance to 2*pi radians (anywhere in a circle).  This configuration parameter is found in the base_local_planner configuration files.
I'm not sure what will actually happen, but intuitively, it would make sense that the base_local_planner would not try and target any particular yaw angle, and just use the (x,y) coordinates.

Originally posted by mjcarroll with karma: 6414 on 2011-05-16
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Eric Perko on 2011-05-17:
I believe the dwa_local_planner in the navigation_experimental stack already supports dynamic reconfigure, so you could give that a shot.
Comment by mjcarroll on 2011-05-17:
If you are trying to mix the two, you may have to patch up move_base to use dynamic reconfigure.  You can then vary the yaw_goal_tolerance for each type of goal that you are trying to set.  I don't believe that there is a documented way of doing this, but that's the approach that I would take.
Comment by Javier on 2011-05-16:
That would be in a global way, I couldn't mix goal with (x,y) and (x,y,theta). Basically I'm trying to have a robot moving between two or more points (where I don't care about the heading), and when some event occurs, it has to move to another position with specific heading. Any ideas?
Comment by Eric Perko on 2011-05-16:
This is exactly what we did when we didn't care about the goal's heading. Note that you will still have to publish a valid quaternion as part of the goal or you will likely run into runtime errors related to an invalid quaternion.

