Q:

Messages being dropped by IRIS Lama Node using YD Lidar Laser Scanner

Hi,
I am trying to use Iris Lama  slam package with YD Lidar to create grid map. I am using following commands to run slam and lidar node  ( Launch files also attached)
Lidar Launch File :
<launch>
  <node pkg="sc_mini" type="sc_mini" name="sc_mini" output="screen">
    <param name="frame_id" type="string" value="laser_link"/>
    <param name="port" type="string" value="/dev/sc_mini"/>
    <param name="baud_rate" type="int" value="115200"/>
  </node>

 <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser"
    args="0.0 0.0 0.0 0.0 0.0  0.0 /base_link /laser_link 40" /> 
</launch>

roslaunch sc_mini start.launch

rosrun iris_lama_ros slam2d_ros _scan_topic:=/scan  _base_frame_id:base_link

There is a static transform between base_link and laser_link.
The issue is that all the messages from the laser are dropped by scan node with following error message
[ WARN] [1629945657.272627698]: MessageFilter [target=odom ]: Dropped
100.00% of messages so far. Please turn the [ros.iris_lama_ros.message_filter] rosconsole logger to DEBUG for more information.

[DEBUG] [1629945661.171888142]: MessageFilter [target=odom ]: Removed oldest message because buffer is full, count now 100 (frame_id=laser_link, stamp=1629945651.173065) [DEBUG] [1629945661.171907816]: MessageFilter [target=odom ]: Added message in frame laser_link at time 1629945661.172, count now 100

It works fine when I use bag file from this link
https://msadowski.github.io/iris-lama-slam-with-ros/
Would be thankful for any insight.

Originally posted by ZainMehdi on ROS Answers with karma: 225 on 2021-08-25
Post score: 0

A:

I am answering it myself.  First of all Iris_lama needs odometry source. If you are like me just trying it out with a 2d lidar there wont be any odometry source available to you so you need to adjust the frame names and run command as follows.
rosrun iris_lama_ros slam2d_ros _scan_topic:=/scan _global_frame_id:=map _base_frame_id:=base_footprint _odom_frame_id:=base_footprint _d_thresh:=-1.0 _a_thresh:=-1.0

This is important as it will tell the algorithm to use scan matching as a source of odometry
_d_thresh:=-1.0 _a_thresh:=-1.0

Thanks to the author for helping me out. Here is the link to the original issue on github.
https://github.com/iris-ua/iris_lama_ros/issues/45

Originally posted by ZainMehdi with karma: 225 on 2021-08-27
This answer was ACCEPTED on the original site
Post score: 0

