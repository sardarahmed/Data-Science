Q:

Writing a Python node that publishes AND subscribes to topics of different message frequency

Hi,
I'm trying to write a node in Python that subscribes to a topic and listens to another.
One way I have managed to do that is by issuing the publish command in the callback. However, this approach only lets my node publish when a new message comes in from the topic it is subscribed to. So my publisher is "constrained" to the subscribed topic's frequency.
Is there an other way to do this? I've looked online and couldn't find anything.
Thanks in advance,
Ernest

Originally posted by Ernest on ROS Answers with karma: 341 on 2013-01-25
Post score: 3

A:

An example might look like this (roughly):
import rospy
from std_msgs.msg import Int32

class Echo(object):
    def __init__(self):
        self.value = 0

        rospy.init_node('echoer')
               
        self.pub = rospy.Publisher('/out_value', Int32, latch=True)
        rospy.Subscriber('/in_value', Int32, self.update_value)
    
    def update_value(self, msg):
        self.value = msg.data

    def run(self):
        r = rospy.Rate(10)
        while not rospy.is_shutdown():
            self.pub.publish(self.value)
            r.sleep()

Originally posted by isherman with karma: 132 on 2013-01-25
This answer was ACCEPTED on the original site
Post score: 5

Original comments
Comment by Yantian_Zha on 2016-12-30:
Do you need to add rospy.Spin() below the subscriber line?

