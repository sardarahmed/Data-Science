Q:

How to calculate the length of a path

Hello to everyone here, I want to get the length of navigation path. The generated path consists of a sequence of coordinates points (x,y) which i can obtain by subscribing to a topic named as "/move_base/GlobalPlanner/plan". I know that if I calculate the distance of every two points and add them up, I will be able to extract the total path's length.
My subscriber looks like:
sub = rospy.Subscriber("/move_base/GlobalPlanner/plan", Path, callback)

What should the structure of my callback be in order to obtain all the poses of path ? Does anyone have python experience of doing that ?

Originally posted by Dimi on ROS Answers with karma: 17 on 2019-08-09
Post score: 0

A:

You need to loop through each adjacent pair of Poses in the path message. You can find the structure of this message described here.
for i in range(len(path_msg.poses) - 1):

  # get two geometry_msgs/Point messages of adjacent points
  position_a = path_msg.poses[i].pose.position
  position_b = path_msg.poses[i+1].pose.position

  # calcualte sum of distances here. . .

Hope this helps.

Originally posted by PeteBlackerThe3rd with karma: 9529 on 2019-08-12
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Dimi on 2019-08-12:
Thanks for your answer Sir. I've managed to solve it by following your template :
def callback(path_msg):
global path_length
path_length = 0
for i in range(len(path_msg.poses) - 1):
    position_a_x = path_msg.poses[i].pose.position.x
    position_b_x = path_msg.poses[i+1].pose.position.x
    position_a_y = path_msg.poses[i].pose.position.y
    position_b_y = path_msg.poses[i+1].pose.position.y

    path_length += np.sqrt(np.power((position_b_x - position_a_x), 2) + np.power((position_b_y- position_a_y), 2))

Comment by PeteBlackerThe3rd on 2019-08-12:
Glad you got this working!

