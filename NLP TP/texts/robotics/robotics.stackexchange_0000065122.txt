Q:

Velodyne rawdata.cc does not appear to read hardware time stamp

From the HDL-32E User's Manual & Programming Guide, pg 9:
Packet Format and Status Byte for GPS Time Stamping
The 6 extra bytes at the end of the HDL-32E data packet are used to report GPS timing. For every packet, the last 6 bytes are formatted as follows:
     4 bytes: 32 bit unsigned integer time stamp. This value represents microseconds from the top of the hour to the first laser firing in the packet.
     2 bytes: blank
Unless I am failing to follow the code, rawdata.cc never touches the time stamp bytes in the data packet.
Question: Are we to assume that the time stamp reported by pcl_ros/bag_to_pcd is the time the UDP packet was received in software as opposed to the hardware-provided time stamp?

Originally posted by brianthelion on ROS Answers with karma: 33 on 2015-01-12
Post score: 2

A:

I believe you are correct. The Velodyne driver was originally written for the -64 model which has a very similar protocol, but no GPS. I did the first validation of the -32 for Jack, because he only had a -64 on hand, and no changes were required to the base code. Since that wasn't really requested by anyone at the time (Clearpath being the only -32 user), the extra code to handle the GPS wasn't added.

Originally posted by Ryan with karma: 3248 on 2015-01-12
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by brianthelion on 2015-01-13:
What's the best way to retrieve the hardware time stamp given that the driver isn't parsing it? Patch the driver? Something else?
Comment by joq on 2015-01-19:
Yes, I think you'd need to patch the driver. If you can make a patch that works with all the supported models, please submit a merge request so we can add it to the standard driver.
Comment by i_robot_flight on 2017-10-20:
I was just wondering if this change been merged into the latest velodyne driver because the comments on rawdata.cc file says HDL-64E? If it has been updated, does it work for the VLP16 as well?

