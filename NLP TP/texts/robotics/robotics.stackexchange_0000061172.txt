Q:

How to compile ROS messages "by hand"?

In our project, we use SCons as our build system. However, I compiled a ROS node (publisher) and try to integrate ROS as good as possible without catkin.
Now I need a custom message type and wonder, how the language-specific code is compiled from a .msg file? Which is the executable catkin calls to build the messages?

Originally posted by foopeter on ROS Answers with karma: 23 on 2014-07-25
Post score: 1

Original comments
Comment by Mehdi. on 2014-07-27:
You could also create a dummy package and generate your messages there and copy them to your Ros node. The generated C++ messages will be in the dummy_pkg/include package, the Python messages will be under dummy_pkg/src/dummy_pkg

A:

Looking at wiki/genmsg, it would seem that it invokes github/gencpp, github/genpy and any other message generators based on parameters supplied by some catkin / cmake macro wrappers.
I haven't done this myself, but I can imagine those generators can be invoked from a command line as well, provided you provide the proper arguments. The genpy readme even seems to give some hints about how to do that:
$ ./scripts/genmsg_py.py -p geometry_msgs -Istd_msgs:`rospack find std_msgs`/msg -Igeometry_msgs:`rospack find geometry_msgs`/msg -o gen `rospack find geometry_msgs`/msg/PoseStamped.msg

This can probably be integrated into a Scons build, by declaring the correct dependencies?

Originally posted by gvdhoorn with karma: 86574 on 2014-07-27
This answer was ACCEPTED on the original site
Post score: 0

