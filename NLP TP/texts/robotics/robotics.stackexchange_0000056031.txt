Q:

How odometry is going to help the navigation stack?

Hi,
Although I am going through the tutorials, I need some precise answer.

How odometry helps navigation stack.
How it is related with tf?
Is odometry helpful for generating velocity command to base controller?
Is it somehow related to amcl, sensor data? then how it is related?

Thanks for your time

Originally posted by RB on ROS Answers with karma: 229 on 2013-12-11
Post score: 0

A:

Odometry is/can be used in multiple components in the navigation stack. Costmaps might be defined in the odometry frame and thus transformed by odometry. The controller can used odometry to determine the next command (this depends on the implementation/algorithm).
Usually odometry is send in two ways: TF + odom message. TF nicely embeds with all other tf frames, while the message contains additional uncertainty information.
AMCL uses odometry as an essential input.

Originally posted by dornhege with karma: 31395 on 2013-12-11
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by RB on 2013-12-11:
@dornhege, from wikipedia, I get a definition of odometry as "Odometry is the use of data from moving sensors to estimate change in position over time. " 1)Does odometry uses sensor data to help the AMCL? 2) If we see a tf message suppose flowing into slam_gmapping, then we can say slam_gmapping uses odometry?3) /odom is a tf message and will it corresponds to world frame?
Comment by dornhege on 2013-12-11:\

There might be different sources, the most common one is wheel encoders. 2) Yes and it does exactly that. 3) No. /odom is a custom message containing uncertainties that runs in parallel with the /odom -> /base_link transform in tf. Both should contain the same odometry information though.

Comment by Thomas D on 2013-12-11:
Note that odometry differs from tf in that it contains both uncertainties and velocity information, both of which are absent in tf.

