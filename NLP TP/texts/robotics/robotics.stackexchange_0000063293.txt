Q:

navigation stack get crash

Hi, I am working with the navigation stack and when I command a goal (by rviz) which is inside an obstacle I get the following error. This is something I have begun to experience recently (after upgrading some Ros packages).
If you need any configuration file, I can provide them.
[ WARN] [1413287442.128433137, 500.284000000]: Map update loop missed its desired rate of 5.0000Hz... the loop actually took 1.0820 seconds
[ WARN] [1413287447.391084978, 502.616000000]: Map update loop missed its desired rate of 5.0000Hz... the loop actually took 2.1320 seconds
[ WARN] [1413287450.041637304, 503.840000000]: Map update loop missed its desired rate of 5.0000Hz... the loop actually took 1.2240 seconds
[ WARN] [1413287452.804671449, 505.062000000]: Map update loop missed its desired rate of 5.0000Hz... the loop actually took 1.0220 seconds
[ WARN] [1413287452.835355243, 505.075000000]: Clearing costmap to unstuck robot.

[move_base-3] process has died [pid 16397, exit code -11, cmd /home/summitxl/ros_catkin_ws/install_isolated/lib/move_base/move_base odom:=odometry/filtered hokuyo_laser_topic:=scan cmd_vel:=/summit_xl_robot_control/command __name:=move_base __log:=/home/summitxl/.ros/log/3bb2ad12-5396-11e4-ac48-9cb70d1c3f04/move_base-3.log].
log file: /home/summitxl/.ros/log/3bb2ad12-5396-11e4-ac48-9cb70d1c3f04/move_base-3*.log

Thank you
My debug output is here:
https://gist.github.com/arenillas/2408efc78094d1a0be24
EDIT:
Using the parameter default_tolerance (5 meters) the result is:
[ WARN] [1414505173.888202638, 61.526000000]: Map update loop missed its desired rate of 5.0000Hz... the loop actually took 0.7650 seconds
[ WARN] [1414505173.930135630, 61.537000000]: Invalid Trajectory 0.000000, 0.000000, -0.400000, cost: -1.000000

And after some time and repetitions of these two warnings:
[ WARN] [1414505212.929234900, 71.937000000]: Clearing costmap to unstuck robot.
[move_base-3] process has died [pid 3922, exit code -11, cmd /home/summitxl/ros_catkin_ws/install_isolated/lib/move_base/move_base odom:=odometry/filtered hokuyo_laser_topic:=scan cmd_vel:=/summit_xl_robot_control/command __name:=move_base __log:=/home/summitxl/.ros/log/24466806-5eab-11e4-bdf7-047d7b44770f/move_base-3.log].
log file: /home/summitxl/.ros/log/24466806-5eab-11e4-bdf7-047d7b44770f/move_base-3*.log

EDIT:
Finally, it was a problem in costmap package. It has been fixed.

Originally posted by arenillas on ROS Answers with karma: 223 on 2014-10-14
Post score: 0

Original comments
Comment by dornhege on 2014-10-14:
Looks like a core dump and shouldn't happen. Do you use any non-standard plugins?
Comment by arenillas on 2014-10-14:
I don't think so.

A:

It looks like you're running a source-built version of navigation, I assume there's a good reason to not use debs?
First step for diagnosing would be to set the log level to debug for move_base and post that output as well.

EDIT: From the log file, you're having an error where the observations (i.e. laserscan ray endpoints or pointcloud) received by the obstacle layer of your map are not within the costmap bounds. This is probably a misconfiguration somewhere, either with your map size (maybe your static map which overrides your map size), or your tf transforms.
Since you're already building navigation from source, I would recommend hooking it up to a debugger, or just adding some additional ROS_DEBUGs in the problem area to try to figure out where the calculations are going wrong.

Originally posted by paulbovbel with karma: 4518 on 2014-10-14
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by arenillas on 2014-10-14:
I am using source version because the project has to be developed in Ubuntu 13.10 and ros hydro is not available in it.
Can you explain how to set log lever to debug??
Comment by paulbovbel on 2014-10-15:
http://wiki.ros.org/roscpp/Overview/Logging - > http://wiki.ros.org/rqt_logger_level
Comment by arenillas on 2014-10-21:
Can I send you the file to your email?
It is huge and I do not know where to look
Comment by arenillas on 2014-10-27:
Now I know the problem is in the global map.
Whenever I command a goal that is inside inflation layer of the obstacles, it crashes
Comment by arenillas on 2014-10-27:
I imagine that it is possible to set a goal like that. Am I wrong?
I suppose that in that case the move_base should warn you with a message like "unreachable goal", but not crashing. Am I right?
Comment by paulbovbel on 2014-10-27:
Try raising the the default tolerance parameter on the global planner.
Comment by arenillas on 2014-10-27:
Are you sure that I can command a goal like this?
http://postimg.org/image/3t9we94kv/
In that case, what should happen when the robot is not able to get there because it is inside an obstacle?
Thank you
Comment by paulbovbel on 2014-10-27:
Taking a look at the code, the global planner will try to find the closest legal point using the default_tolerance parameter as a limit.
Comment by arenillas on 2014-10-28:
I have tried it but the problem continues appearing when the clearing. What's that?
Comment by paulbovbel on 2014-10-28:
Sorry, I have no idea. At this point, it sounds like a regression issue (move_base shouldn't be core dumping either way), perhaps you could open a ticket for it in https://github.com/ros-planning/navigation, along with full details of your configuration, steps to reproduce, etc.
Comment by arenillas on 2014-10-29:
Thank you for all your help.
As you said, it was an issue (divide by zero) and it has been already fixed.

