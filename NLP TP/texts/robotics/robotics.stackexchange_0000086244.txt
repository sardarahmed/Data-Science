Q:

Catkin_make looking in wrong directory for header files

I am using ros kinetic ubuntu 16.04 on intel NUC. I put g2ofork in my workspaces src thinking it was a catkin package but I later found out it was not. I moved it outside my WS and attempted to use rgbslam package which requires the g2o libraries. When I catkin_make the workspace it fails because it is still looking in my workspace/src/g2ofork directory. I know this because catkin_make has some warning type messages
- - looking for PCL_COMMON
- - looking for PCL_OCTREE
- - looking for PCL_IO
- - Searching for g2o ...
- - found g2o headers in: /home/astrobotics/ros_code/src/g2ofork
- - found libg2o: /home/astrobotics/ros_code/src/g2ofork/lib/ and so on... 

I know right now all the packages and g2o fork are in the correct places because when I use the install script provided by rgbdslam it sets everything up as I have mine now. The only thing is it creates its own workspace and I want to use it in the one I have been using for some time.
Is there any way to like reset the workspace before building it again?

Originally posted by skynet on ROS Answers with karma: 20 on 2018-03-29
Post score: 0

A:

Did you try deleting the build and install directories from the root of the workspace?

Originally posted by jayess with karma: 6155 on 2018-03-29
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by skynet on 2018-03-30:
I replaced the build with a build file from a different workspace that is able to compile that has the same configuration that I want (home/astro/test/workspace/src/rgbdslam and /home/astrobotics/test/g2ofork) and it works. Only thing is it is obviously using the g2o fork from the test workspace.
Comment by skynet on 2018-03-30:
when I delete the build and re compile i get the error
-- Searching for g2o ...
CMake Error at rgbdslam/cmake-modules/FindG2O.cmake:78 (message):
  Could not find libg2o!
Call Stack (most recent call first):
  rgbdslam/CMakeLists.txt:91 (find_package)

Comment by skynet on 2018-03-30:
deleting the old build file worked because it was holding the wrong directories to g2o. My CMakeCache.txt had the old directories to the g2o library so I manually replaced them with the correct ones.

