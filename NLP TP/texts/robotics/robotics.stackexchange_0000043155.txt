Q:

Using move_base to turn wheels?

Hello,
I am currently using move_base(with default local and global planners) to get the robot in the desired position. My problem is that when my robot(2 wheeled, built using real wheelchair) is told to move forward right or forward left, it is making a path that goes around too much to get there. In other words, if the robot is located at (0,0) and is commanded to move to (1,1), it is not turning its wheels enough to get there more directly and rather makes a curvy path with large radius than necessary. Is there a parameter that I can tweak to make the radius of path smaller?
I would appreciate any help, Thank you.

Originally posted by bkim on ROS Answers with karma: 86 on 2012-08-12
Post score: 2

Original comments
Comment by cagatay on 2012-08-12:
I want to ask something, did you make sure that your motor controller followed the velocity commands sent by move_base(/cmd_vel topic) ?
Comment by bkim on 2012-08-13:
Yes, I am sure I did otherwise the robot would not move at all. My problem is that the planners in move_base are planning paths that are too curvy (i.e. radius larger than necessary), and was wondering if there is anything I can do to make this smaller.
Comment by joq on 2012-08-13:
You should probably edit your question so it mentions which version of ROS you are using, and what OS.
Comment by Eric Perko on 2012-08-13:
@bkim: Could you post a rosbag of the robot while attempting to execute this plan? Also, include a screenshot of the paths planned and your navigation config files. Do you get curvy paths if you plan to a point further away (say [10,10])?
Comment by sunilsulania9192 on 2012-08-15:
Check if You are using AMCL. Your Output seems to use some planning algorithm.
Comment by joq on 2012-09-01:
Please post your answer (below), so people will know this question has been resolved.
Comment by Eric Perko on 2012-12-18:
@bkim's comment has been converted to an answer and I have marked it as accepted.

A:

Thank you all for your help guys. I found that it was the problem with the PID controller, which was written by some guy before me. PID controller was set such that it limits the gain in angular velocity - quite amused that move_base actually take PID parameters into account.

Originally posted by bkim with karma: 86 on 2012-09-01
This answer was ACCEPTED on the original site
Post score: 1

