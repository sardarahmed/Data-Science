Q:

MEMS accelerometer calibration

I am trying to calibrate a MEMS accelerometer. I was able to calibrate it for the current axis which is parallel to gravity and shows correctly, 1g. But the other two axes which should be 0.00g are showing +-0.02g instead. 
So, e.g., when the accelerometer's x axis is parallel to gravity, it should show (1g, 0g, 0g) and not (1g, 0.02g, -0.01g) like now.
How could I eliminate those values, e.g. further calibrate accelerometer? 
EDIT: The acelerometer's datasheet says nothing about calibrating except that The IC interface is factory calibrated for sensitivity (So) and Zero-g level (Off) (page 20).

A:

It is possibly a bias in the accelerometer.  The measured non-zero results (like yours) are the bias. No idea if the magnitude of these biases is right, i.e., you may be experiencing more error than you should expect from a bias. To be clear, you can subtract this bias from your estimate of acceleration. However, you should be sure that the bias doesn't change with time. Then you'll need more sophisticated methods. see: overview of INS or some literature
and typical accelerometer specs.
Does your datasheet help? There's probably a section on calibration schemes. For example:
"In a no-turn or single-point calibration scheme, the part is oriented 
such that one axis, typically the z-axis, is in the 1 g field of gravity 
and the remaining axes, typically the x- and y-axis, are in a 0 g
field. The output is then measured by taking the average of a 
series of samples. The number of samples averaged is a choice of 
the system designer, but a recommended starting point is 0.1 sec 
worth of data for data rates of 100 Hz or greater. This corresponds 
to 10 samples at the 100 Hz data rate. For data rates less than 
100 Hz, it is recommended that at least 10 samples be averaged 
together. These values are stored as X0g, Y0g, and Z+1g for the 0 g
measurements on the x- and y-axis and the 1 g measurement on 
the z-axis, respectively"
EDIT: Also please compare this error to the specified precision of your sensor. Turns out this small error was not a problem, and not unexpected.

