Q:

Could not load library after latest ROS updates

Hello to all the community.
I'm writing this since I'm encountering errors when I launch my custom controllers written for a KUKA LWR arm, used in combination with Gazebo simulator. The error comes when I run the roslaunch command which loads such controllers.
**[ERROR] [1421148091.366974261, 5.814000000]: Could not load class kuka_controllers/BacksteppingController: Failed to load library /home/enrico/catkin_ws/devel/lib//libkuka_controllers.so. Make sure that you are calling the PLUGINLIB_EXPORT_CLASS macro in the library code, and that names are consistent between this macro and your XML. Error string: Could not load library (Poco exception = /home/enrico/catkin_ws/devel/lib//libkuka_controllers.so: undefined symbol: _ZN26forward_command_controller24ForwardCommandControllerIN18hardware_interface20EffortJointInterfaceEE8startingERKN3ros4TimeE)
[ERROR] [1421148091.367239553, 5.814000000]: Could not load controller 'BacksteppingController' because controller type 'kuka_controllers/BacksteppingController' does not exist.
[ERROR] [1421148091.367296142, 5.814000000]: Use 'rosservice call controller_manager/list_controller_types' to get the available types**

The weird thing is that running the command suggested by ROS (rosservice call [...]) it actually returns all my controllers names. This error has been introduced after the last ROS software updates and before that it was working just fine. Also I have a call to PLUGINLIB_EXPORT_CLASS in my source, so it is not that the problem.
As a note, the ROS built-in position controllers work, so it seems like a linking or a parsing error (also notice that in the library path there is a double / after 'lib', which may the responsible). I've already tried to rebuild the workspace, still the same error.
Thanks in advance,
Enrico C.

Originally posted by Enrico C. on ROS Answers with karma: 11 on 2015-01-13
Post score: 1

A:

This symbol _ZN26forward_command_controller24ForwardCommandControllerIN18hardware_interface20EffortJointInterfaceEE8startingERKN3ros4TimeE does not exist in the library you are loading but it is expecting it to. Run through c++filt on a Linux machine:
forward_command_controller::ForwardCommandController<hardware_interface::EffortJointInterface>::starting(ros::Time const&)

This means that you library was likely built against one version of headers but linked against a version of the library without this symbol. Either way, this sounds like an ABI breakage, you can try sudo apt-get dist-upgrade to make sure all of the packages involved are at their latest version. You can also rebuild you from source packages, taking care to make sure the libraries get rebuilt.

Originally posted by William with karma: 17335 on 2015-01-13
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by William on 2015-01-14:
On @Enrico C.'s behalf: Hi William,
also to me it seems like a linking problem. Unfortunately the dist-upgrade didn't find any software to update. I think I'm going to try manual building or wait for the next update. To be safe, I've also reverted to an old github commit of my code, where it was
Comment by William on 2015-01-14:
On @Enrico C.'s behalf: surely working fine, and the problem didn't go away. Thanks for your answer, by the way.
Enrico
Comment by William on 2015-01-14:
No problem. If I were you I would try to track down where that missing symbol is coming from and then look at the source for that and see if it has changed recently.
Comment by logan.dunbar on 2019-04-21:
Bless you good sir for teaching me about that lovely command. Bless you.

