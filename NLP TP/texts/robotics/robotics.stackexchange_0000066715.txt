Q:

Which tutorial should i follow?

hi sir,
i'm trying to understand and make robot using arduino. however i'm confused to learn which tutorial should i follow?
i mean should i go for catkin tutorials or for main ros one?
at present, i have installed indigo and ubuntu 14.

Originally posted by baiju on ROS Answers with karma: 71 on 2015-03-30
Post score: 0

Original comments
Comment by gpldecha on 2015-03-30:
What kind of robot and what task are you considering to do ? From ardigos we page it seams they specialize in hardware devices. I would need a bit more details to give you a clean answer.
Comment by baiju on 2015-03-31:
just as same as industrial robot like kuka or abb. it will have its own processor for working, teach pendant and a computer for simulation. however, i want the simulation both in realtime as well as in offline mode. for it i'm trying to understand which software should i follow first. i searched....
Comment by baiju on 2015-03-31:
.....alot and found ros can be a way. now the problem is i'm from mechanical background,so dont have much knowledge of ubuntu but i love programming and interested to do it myself. obviously, i dont have much knowledge of microcontrollers, so i decided to go for arduino.now the basic question is....

A:

You should start with the beginner ROS tutorials (http://wiki.ros.org/ROS/Tutorials) so that you understand the general ROS framework. Reading the catkin tutorials will give you a better understanding of the way workspaces and packages are structured.
To understand how to create a description (URDF) of your robot for integration with simulation (Gazebo), you can take a look at the URDF tutorials (http://wiki.ros.org/urdf/Tutorials), which then lead into the Gazebo + ROS URDF Tutorials (http://gazebosim.org/tutorials?tut=ros_urdf).
If you want to write controllers for your robot that will work for both live-operation and simulation, you should take a look at ros_control (http://wiki.ros.org/ros_control/Tutorials). This last part will definitely require some digging and a good understanding of ROS and Gazebo first. The Husky robot uses ros_control's diff_drive_controller (http://wiki.ros.org/diff_drive_controller) for mobile base control, so you can take a look at the way it's implemented here:
https://github.com/husky/husky
https://github.com/husky/husky_simulator
https://github.com/husky/husky_robot/blob/indigo-devel/husky_base/src/husky_base.cpp

Originally posted by paulbovbel with karma: 4518 on 2015-03-31
This answer was ACCEPTED on the original site
Post score: 4

