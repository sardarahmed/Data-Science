Q:

Compiling a melodic project in noetic: catkin_make can't find Python.h

Hi,
I'm taking over a project that was developed by a fellow student for his diploma thesis. I've received the project files but I can't get the project to compile. It's not a vast project, with only three packages and only a few dependencies. But it was developed under ROS melodic and I'm using noetic. I've checked all dependencies and there shouldn't be any issue. The only issue is a C++ library matplotlibcpp.h used to plot data. It requires the header file "Python.h" and that's the stumbling block. When I try to compile the project using catkin_make, I get the following error:

In file included from
/home/jan/roboweld_ws/src/roboweld/planner/src/planner/graph_plotter.cpp:6:
/home/jan/roboweld_ws/src/roboweld/planner/include/planner/matplotlibcpp.h:5:10:
fatal error: Python.h: No such file or directory

I have asked another colleague, who worked on the project and she said, she was able to compile it under melodic. I know melodic uses Python 2 and noetic Python 3, but the library states it's compatible with both. I've checked /usr/include/python3.8 and the header file is there. VS Code also recognizes the header file. I'm led to believe that the issue lies with the CMakeLists.txt file. I tried to modify it, explicitly including Python directories, but that didn't help either. This is the original CMakeLists:
cmake_minimum_required(VERSION 3.1.3)
project(planner)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_EXTENSIONS OFF)

find_package(catkin REQUIRED COMPONENTS
        rospy
        roscpp
        std_msgs
        interactive_markers
        moveit_core
        moveit_ros_planning
        moveit_ros_planning_interface
        moveit_ros_perception
        rviz_visual_tools
        moveit_visual_tools
        pluginlib
        pcl_ros
        pcl_conversions
        rosbag
        tf2_ros
        tf2_eigen
        tf2_geometry_msgs
        geometric_shapes
        )

find_package(ompl)
find_package(Ceres REQUIRED)
# find_package(sciplot REQUIRED)

find_package(Eigen3 REQUIRED)
find_package(Boost REQUIRED system filesystem date_time thread)

set(THIS_PACKAGE_INCLUDE_DIRS
        doc/interactivity/include
        )

catkin_package(
        LIBRARIES
        INCLUDE_DIRS
        CATKIN_DEPENDS
        moveit_core
        moveit_visual_tools
        moveit_ros_planning_interface
        interactive_markers
        tf2_geometry_msgs
        DEPENDS
        EIGEN3
        geometric_shapes
        ompl
)

###########
## Build ##
###########
include_directories(
        include
        ${catkin_INCLUDE_DIRS}
)

## Declare a C++ library
add_library(${PROJECT_NAME}_utils
        src/${PROJECT_NAME}/utils.cpp
        )
        target_link_libraries(${PROJECT_NAME}_utils
        ${catkin_LIBRARIES}
        )
        
add_library(${PROJECT_NAME}_OmplPlanner
        src/${PROJECT_NAME}/OmplPlanner.cpp
        src/${PROJECT_NAME}/utils.cpp
        )

target_link_libraries(${PROJECT_NAME}_OmplPlanner
        ${catkin_LIBRARIES}
        Ceres::ceres
        # sciplot::sciplot
        )

        add_library(${PROJECT_NAME}_graph_plotter
        src/${PROJECT_NAME}/graph_plotter.cpp
        )
target_link_libraries(${PROJECT_NAME}_graph_plotter
        ${catkin_LIBRARIES}
        )  

add_library(${PROJECT_NAME}_CeresOpt
        src/${PROJECT_NAME}/CeresOpt.cpp
        src/${PROJECT_NAME}/utils.cpp
        )
target_link_libraries(${PROJECT_NAME}_CeresOpt
        ${catkin_LIBRARIES}
        Ceres::ceres
        )

  
include_directories(${THIS_PACKAGE_INCLUDE_DIRS})
include_directories(SYSTEM
${catkin_INCLUDE_DIRS}
        ${Boost_INCLUDE_DIR}
        ${EIGEN3_INCLUDE_DIRS}
        ${OMPL_INCLUDE_DIRS}
        )
        
        
        
        
install(DIRECTORY launch DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION})
        
        
add_executable(approach_outside_lower_weld src/approach_outside_lower_weld.cpp)
target_link_libraries(approach_outside_lower_weld
        ${PROJECT_NAME}_utils
        ${PROJECT_NAME}_OmplPlanner
        ${PROJECT_NAME}_graph_plotter
        ${catkin_LIBRARIES}
        ${Boost_LIBRARIES}
        ${OMPL_LIBRARIES}
        )
install(TARGETS approach_outside_lower_weld DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION})
        
        
  
        
add_executable(approach_rib_weld src/approach_rib_weld.cpp)
target_link_libraries(approach_rib_weld
        ${PROJECT_NAME}_utils
        ${PROJECT_NAME}_OmplPlanner
        ${PROJECT_NAME}_graph_plotter
        ${PROJECT_NAME}_CeresOpt
        ${catkin_LIBRARIES}
        ${Boost_LIBRARIES}
        ${OMPL_LIBRARIES}
        )
install(TARGETS approach_rib_weld DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION})
        
        
add_executable(rib_weld src/rib_weld.cpp)
target_link_libraries(rib_weld
        ${PROJECT_NAME}_utils
        ${PROJECT_NAME}_OmplPlanner
        ${PROJECT_NAME}_graph_plotter
        ${PROJECT_NAME}_CeresOpt
        ${catkin_LIBRARIES}
        ${Boost_LIBRARIES}
        ${OMPL_LIBRARIES}
        )
install(TARGETS rib_weld DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION})
        
add_executable(outside_lower_weld src/outside_lower_weld.cpp)
target_link_libraries(outside_lower_weld
        ${PROJECT_NAME}_utils
        ${PROJECT_NAME}_OmplPlanner
        ${PROJECT_NAME}_graph_plotter
        ${PROJECT_NAME}_CeresOpt
        ${catkin_LIBRARIES}
        ${Boost_LIBRARIES}
        ${OMPL_LIBRARIES}
        )
install(TARGETS outside_lower_weld DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION})
        

and this is the one modified by me:
cmake_minimum_required(VERSION 3.1.3)
project(planner)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_EXTENSIONS OFF)

find_package(catkin REQUIRED COMPONENTS
        rospy
        roscpp
        std_msgs
        interactive_markers
        moveit_core
        moveit_ros_planning
        moveit_ros_planning_interface
        moveit_ros_perception
        rviz_visual_tools
        moveit_visual_tools
        pluginlib
        pcl_ros
        pcl_conversions
        rosbag
        tf2_ros
        tf2_eigen
        tf2_geometry_msgs
        geometric_shapes
        )

find_package(ompl)
find_package(Ceres REQUIRED)
# find_package(sciplot REQUIRED)

find_package(Eigen3 REQUIRED)
find_package(Boost REQUIRED system filesystem date_time thread)
find_package(Python COMPONENTS Interpreter Development)

set(THIS_PACKAGE_INCLUDE_DIRS doc/interactivity/include)

catkin_package(
        LIBRARIES
        INCLUDE_DIRS
        CATKIN_DEPENDS
        moveit_core
        moveit_visual_tools
        moveit_ros_planning_interface
        interactive_markers
        tf2_geometry_msgs
        DEPENDS
        EIGEN3
        geometric_shapes
        ompl
)

###########
## Build ##
###########
include_directories(
        include
        ${catkin_INCLUDE_DIRS}
        ${Boost_INCLUDE_DIRS}
        ${EIGEN3_INCLUDE_DIRS}
        ${Ceres_INCLUDE_DIRS}
        ${ompl_INCLUDE_DIRS}
        ${PYTHON_INCLUDE_DIRS}
)

## Declare a C++ library
add_library(${PROJECT_NAME}_utils src/${PROJECT_NAME}/utils.cpp)
target_link_libraries(${PROJECT_NAME}_utils ${catkin_LIBRARIES})
        
add_library(${PROJECT_NAME}_OmplPlanner src/${PROJECT_NAME}/OmplPlanner.cpp src/${PROJECT_NAME}/utils.cpp)

target_link_libraries(${PROJECT_NAME}_OmplPlanner ${catkin_LIBRARIES} Ceres::ceres) 
# sciplot::sciplot

add_library(${PROJECT_NAME}_graph_plotter src/${PROJECT_NAME}/graph_plotter.cpp)
target_link_libraries(${PROJECT_NAME}_graph_plotter ${catkin_LIBRARIES} ${PYTHON_LIBRARIES})  

add_library(${PROJECT_NAME}_CeresOpt src/${PROJECT_NAME}/CeresOpt.cpp src/${PROJECT_NAME}/utils.cpp)
target_link_libraries(${PROJECT_NAME}_CeresOpt ${catkin_LIBRARIES} Ceres::ceres)

  
include_directories(${THIS_PACKAGE_INCLUDE_DIRS})
include_directories(SYSTEM
${catkin_INCLUDE_DIRS}
        ${Boost_INCLUDE_DIR}
        ${EIGEN3_INCLUDE_DIRS}
        ${OMPL_INCLUDE_DIRS}
        )
        
        
        
        
install(DIRECTORY launch DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION})
install(DIRECTORY include/${PROJECT_NAME} DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION})
        
        
add_executable(approach_outside_lower_weld src/approach_outside_lower_weld.cpp)
target_link_libraries(approach_outside_lower_weld
        ${PROJECT_NAME}_utils
        ${PROJECT_NAME}_OmplPlanner
        ${PROJECT_NAME}_graph_plotter
        ${catkin_LIBRARIES}
        ${Boost_LIBRARIES}
        ${OMPL_LIBRARIES}
        )
install(TARGETS approach_outside_lower_weld DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION})
        
        
  
        
add_executable(approach_rib_weld src/approach_rib_weld.cpp)
target_link_libraries(approach_rib_weld
        ${PROJECT_NAME}_utils
        ${PROJECT_NAME}_OmplPlanner
        ${PROJECT_NAME}_graph_plotter
        ${PROJECT_NAME}_CeresOpt
        ${catkin_LIBRARIES}
        ${Boost_LIBRARIES}
        ${OMPL_LIBRARIES}
        )
install(TARGETS approach_rib_weld DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION})
        
        
add_executable(rib_weld src/rib_weld.cpp)
target_link_libraries(rib_weld
        ${PROJECT_NAME}_utils
        ${PROJECT_NAME}_OmplPlanner
        ${PROJECT_NAME}_graph_plotter
        ${PROJECT_NAME}_CeresOpt
        ${catkin_LIBRARIES}
        ${Boost_LIBRARIES}
        ${OMPL_LIBRARIES}
        )
install(TARGETS rib_weld DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION})
        
add_executable(outside_lower_weld src/outside_lower_weld.cpp)
target_link_libraries(outside_lower_weld
        ${PROJECT_NAME}_utils
        ${PROJECT_NAME}_OmplPlanner
        ${PROJECT_NAME}_graph_plotter
        ${PROJECT_NAME}_CeresOpt
        ${catkin_LIBRARIES}
        ${Boost_LIBRARIES}
        ${OMPL_LIBRARIES}
        )
install(TARGETS outside_lower_weld DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION})
    

What's even more weird though, is that when invoking catkin_make, catkin states that it has found the Python directories, but throws the error anyways. Here's catkin_make output:
> Executing task in folder roboweld_ws: catkin_make --directory /home/jan/roboweld_ws <

Base path: /home/jan/roboweld_ws
Source space: /home/jan/roboweld_ws/src
Build space: /home/jan/roboweld_ws/build
Devel space: /home/jan/roboweld_ws/devel
Install space: /home/jan/roboweld_ws/install
####
#### Running command: "make cmake_check_build_system" in "/home/jan/roboweld_ws/build"
####
-- Using CATKIN_DEVEL_PREFIX: /home/jan/roboweld_ws/devel
-- Using CMAKE_PREFIX_PATH: /opt/ros/noetic
-- This workspace overlays: /opt/ros/noetic
-- Found PythonInterp: /usr/bin/python3 (found suitable version "3.8.10", minimum required is "3") 
-- Using PYTHON_EXECUTABLE: /usr/bin/python3
-- Using Debian Python package layout
-- Using empy: /usr/lib/python3/dist-packages/em.py
-- Using CATKIN_ENABLE_TESTING: ON
-- Call enable_testing()
-- Using CATKIN_TEST_RESULTS_DIR: /home/jan/roboweld_ws/build/test_results
-- Forcing gtest/gmock from source, though one was otherwise available.
-- Found gtest sources under '/usr/src/googletest': gtests will be built
-- Found gmock sources under '/usr/src/googletest': gmock will be built
-- Found PythonInterp: /usr/bin/python3 (found version "3.8.10") 
-- Using Python nosetests: /usr/bin/nosetests3
-- catkin 0.8.10
-- BUILD_SHARED_LIBS is on
-- BUILD_SHARED_LIBS is on
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- ~~  traversing 3 packages in topological order:
-- ~~  - cell
-- ~~  - cell_description
-- ~~  - planner
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- +++ processing catkin package: 'cell'
-- ==> add_subdirectory(roboweld/cell)
-- +++ processing catkin package: 'cell_description'
-- ==> add_subdirectory(roboweld/cell_description)
-- +++ processing catkin package: 'planner'
-- ==> add_subdirectory(roboweld/planner)
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
-- Found required Ceres dependency: Eigen version 3.3.7 in /usr/include/eigen3
-- Found required Ceres dependency: glog
-- Found required Ceres dependency: gflags
-- Found Ceres version: 2.0.0 installed in: /usr/local with components: [EigenSparse, SparseLinearAlgebraLibrary, LAPACK, SuiteSparse, CXSparse, SchurSpecializations, Multithreading]
CMake Warning at /opt/ros/noetic/share/catkin/cmake/catkin_package.cmake:166 (message):
  catkin_package() DEPENDS on 'ompl' but neither 'ompl_INCLUDE_DIRS' nor
  'ompl_LIBRARIES' is defined.
Call Stack (most recent call first):
  /opt/ros/noetic/share/catkin/cmake/catkin_package.cmake:102 (_catkin_package)
  roboweld/planner/CMakeLists.txt:38 (catkin_package)

-- Configuring done
-- Generating done
-- Build files have been written to: /home/jan/roboweld_ws/build
####
#### Running command: "make -j4 -l4" in "/home/jan/roboweld_ws/build"
####
Scanning dependencies of target planner_OmplPlanner
Scanning dependencies of target planner_CeresOpt
Scanning dependencies of target planner_graph_plotter
Scanning dependencies of target planner_utils
[  5%] Building CXX object roboweld/planner/CMakeFiles/planner_CeresOpt.dir/src/planner/CeresOpt.cpp.o
[ 11%] Building CXX object roboweld/planner/CMakeFiles/planner_OmplPlanner.dir/src/planner/OmplPlanner.cpp.o
[ 16%] Building CXX object roboweld/planner/CMakeFiles/planner_utils.dir/src/planner/utils.cpp.o
[ 22%] Building CXX object roboweld/planner/CMakeFiles/planner_graph_plotter.dir/src/planner/graph_plotter.cpp.o
In file included from /home/jan/roboweld_ws/src/roboweld/planner/src/planner/graph_plotter.cpp:6:
/home/jan/roboweld_ws/src/roboweld/planner/include/planner/matplotlibcpp.h:5:10: fatal error: Python.h: No such file or directory
    5 | #include <Python.h>
      |          ^~~~~~~~~~
compilation terminated.
make[2]: *** [roboweld/planner/CMakeFiles/planner_graph_plotter.dir/build.make:63: roboweld/planner/CMakeFiles/planner_graph_plotter.dir/src/planner/graph_plotter.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:2818: roboweld/planner/CMakeFiles/planner_graph_plotter.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
[ 27%] Building CXX object roboweld/planner/CMakeFiles/planner_OmplPlanner.dir/src/planner/utils.cpp.o
[ 33%] Building CXX object roboweld/planner/CMakeFiles/planner_CeresOpt.dir/src/planner/utils.cpp.o
[ 38%] Linking CXX shared library /home/jan/roboweld_ws/devel/lib/libplanner_utils.so
[ 44%] Linking CXX shared library /home/jan/roboweld_ws/devel/lib/libplanner_OmplPlanner.so
[ 44%] Built target planner_utils
[ 44%] Built target planner_OmplPlanner
[ 50%] Linking CXX shared library /home/jan/roboweld_ws/devel/lib/libplanner_CeresOpt.so
[ 50%] Built target planner_CeresOpt
make: *** [Makefile:141: all] Error 2
Invoking "make -j4 -l4" failed
The terminal process "bash '-c', 'catkin_make --directory /home/jan/roboweld_ws'" terminated with exit code: 1.

Is my CMakeLists.txt correct? It might be worth mentioning that I'm new to ROS, been using it only for about two weeks. I believe I must be missing something trivial, the project is simple enough that there's not much to go wrong. I'm considering setting up a virtual environment or a Docker container with melodic to get the project to run. But that requires a whole lot to learn and I'd much rather spend time advancing the project itself.

Originally posted by The_Vaasty on ROS Answers with karma: 23 on 2021-07-15
Post score: 2

Original comments
Comment by Mike Scheutzow on 2021-07-17:
Please don't use links for short text files. Edit your question to include the text, and format each with the 101010 button.
Comment by The_Vaasty on 2021-07-19:
Edited the question per the instructions.
Comment by Mike Scheutzow on 2021-07-19:
Thanks. This help people who see the question in the future.

A:

find_package(Python COMPONENTS Interpreter Development)
According to cmake.org, this should be "Python3". If your cmake version is earlier than 3.12, there's a workaround using pkgconfig. This assumes you have the apt package python3-dev installed.

Originally posted by Mike Scheutzow with karma: 4903 on 2021-07-19
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by The_Vaasty on 2021-07-20:
Thanks, but it didn't help. Still throws the same error. I have Cmake 3.16.3 and python3-dev installed.
Comment by Mike Scheutzow on 2021-07-20:
Did you first clean up by deleting the top-level devel and build dirs in catkin_ws dir ?
Comment by Mike Scheutzow on 2021-07-20:
According to the page I linked to, the var name is "Python3_INCLUDE_DIRS". Also look at the boxed "Note" on that page -- it's unclear to me if you can declare both Intepreter and Development at the same time.
Comment by The_Vaasty on 2021-07-23:
Sorry for the late answer. It works now. I had the var name all in capitals. Thanks for the help.

