Q:

Build ROS Fuerte on Angstrom Linux

Hello everyone!
I'm playing with my BeagleBone trying to install ROS onto it. It's running Angstrom linux and I managed to set up and install every dependency but I'm getting compilation errors for boost. I have boost installed and also checked the mentioned library files for the right symbols.
I guess I should play a bit with the CMake files but I have no clue about where to start. Compiler output below.
If you have advices or a tutorial somewhere for electric on a "different" platform that would also be nice.
Thanks!

root@beaglebone:~/ros-underlay/build# make -j1
-- The C compiler identification is GNU
-- The CXX compiler identification is GNU
-- Check for working C compiler: /usr/bin/gcc
-- Check for working C compiler: /usr/bin/gcc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- +++ catkin
-- Found PythonInterp: /usr/bin/python2.7 
-- Found PY_em: /usr/lib/python2.7/site-packages/em.pyo 
-- Looking for include files CMAKE_HAVE_PTHREAD_H
-- Looking for include files CMAKE_HAVE_PTHREAD_H - found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE 
TODO: implement add_roslaunch_check() in rostest-extras.cmake.
-- BUILD_SHARED_LIBS is on.
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- ~~         traversing stacks/projects in dependency order         ~~
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- +++ genmsg
-- +++ genlisp
-- +++ genpy
-- +++ gencpp
-- +++ rospack
-- Rospack building shared objects.
-- Boost version: 1.51.0
-- Found the following Boost libraries:
--   system
--   filesystem
--   program_options
-- +++ std_msgs
-- std_msgs: 32 messages
-- +++ ros
-- Boost version: 1.51.0
-- Found the following Boost libraries:
--   thread
--    Making toplevel forward script for bash script rosrun
-- +++ roscpp_core
-- Looking for execinfo.h
-- Looking for execinfo.h - found
-- Performing Test HAVE_CXXABI_H
-- Performing Test HAVE_CXXABI_H - Failed
-- Looking for backtrace
-- Looking for backtrace - found
-- Boost version: 1.51.0
-- Found the following Boost libraries:
--   date_time
--   thread
-- +++ ros_comm
-- rosgraph_msgs: 2 messages
-- std_srvs: 0 messages
TODO: consider moving xmlrpcpp's headers into a subdirectory
-- Boost version: 1.51.0
-- Found the following Boost libraries:
--   regex
--   thread
-- Boost version: 1.51.0
-- Found the following Boost libraries:
--   signals
--   filesystem
--   system
-- Looking for include files HAVE_IFADDRS_H
-- Looking for include files HAVE_IFADDRS_H - found
-- Looking for trunc
-- Looking for trunc - not found
-- roscpp: 1 messages
-- topic_tools: 0 messages
CMake Warning at build/cmake/rosunit/rosunit-extras.cmake:17 (message):
  add_pyunit() is deprecated.  For Python tests, use add_nostests() instead.
Call Stack (most recent call first):
  ros_comm/tools/topic_tools/CMakeLists.txt:70 (add_pyunit)

-- Found BZip2: /usr/lib/libbz2.so 
-- Looking for BZ2_bzCompressInit in /usr/lib/libbz2.so
-- Looking for BZ2_bzCompressInit in /usr/lib/libbz2.so - found
CMake Warning at build/cmake/rosunit/rosunit-extras.cmake:17 (message):
  add_pyunit() is deprecated.  For Python tests, use add_nostests() instead.
Call Stack (most recent call first):
  ros_comm/tools/rosbag/CMakeLists.txt:62 (add_pyunit)

-- test_ros: 15 messages
-- test_roslib_comm: 15 messages
-- test_rospy: 12 messages
-- test_rosservice: 0 messages
-- test_roscpp: 4 messages
-- test_roscpp_serialization: 18 messages
-- test_roscpp_serialization_perf: 3 messages
-- perf_roscpp: 2 messages
-- test_crosspackage: 2 messages
-- test_rosbag: 12 messages
CMake Warning at build/cmake/rosunit/rosunit-extras.cmake:17 (message):
  add_pyunit() is deprecated.  For Python tests, use add_nostests() instead.
Call Stack (most recent call first):
  ros_comm/test/test_rosbag/CMakeLists.txt:52 (add_pyunit)

-- +++ common_msgs
-- geometry_msgs: 23 messages
-- sensor_msgs: 18 messages
-- nav_msgs: 5 messages
-- actionlib_msgs: 3 messages
-- visualization_msgs: 10 messages
-- stereo_msgs: 1 messages
-- diagnostic_msgs: 3 messages
-- trajectory_msgs: 2 messages
-- +++ actionlib
-- Generating .msg files for action actionlib/Test /home/root/ros-underlay/actionlib/action/Test.action
-- Generating .msg files for action actionlib/TestRequest /home/root/ros-underlay/actionlib/action/TestRequest.action
-- Generating .msg files for action actionlib/TwoInts /home/root/ros-underlay/actionlib/action/TwoInts.action
-- actionlib: 21 messages
actionlib custom **message***
-- Configuring done
-- Generating done
-- Build files have been written to: /home/root/ros-underlay/build
[  0%] Built target gtest
[  0%] Built target gtest_main
[  1%] Built target rospack
Linking CXX executable ../bin/rospack
../lib/librospack.so: undefined reference to `boost::filesystem::detail::directory_iterator_construct(boost::filesystem::directory_iterator&, boost::filesystem::path const&, boost::system::error_code*)'
../lib/librospack.so: undefined reference to `boost::filesystem::detail::create_directory(boost::filesystem::path const&, boost::system::error_code*)'
../lib/librospack.so: undefined reference to `boost::program_options::detail::cmdline::get_canonical_option_prefix()'
../lib/librospack.so: undefined reference to `boost::filesystem::path::operator/=(boost::filesystem::path const&)'
../lib/librospack.so: undefined reference to `boost::filesystem::detail::dir_itr_close(void*&, void*&)'
../lib/librospack.so: undefined reference to `boost::filesystem::detail::status(boost::filesystem::path const&, boost::system::error_code*)'
../lib/librospack.so: undefined reference to `boost::filesystem::path::parent_path() const'
../lib/librospack.so: undefined reference to `boost::filesystem::path::filename() const'
../lib/librospack.so: undefined reference to `boost::filesystem::detail::current_path(boost::system::error_code*)'
../lib/librospack.so: undefined reference to `boost::filesystem::detail::directory_iterator_increment(boost::filesystem::directory_iterator&, boost::system::error_code*)'
../lib/librospack.so: undefined reference to `boost::filesystem::path::m_append_separator_if_needed()'
../lib/librospack.so: undefined reference to `boost::filesystem::path::m_erase_redundant_separator(unsigned int)'
../lib/librospack.so: undefined reference to `boost::filesystem::path::compare(boost::filesystem::path const&) const'
../lib/librospack.so: undefined reference to `boost::filesystem::path::codecvt()'
collect2: ld returned 1 exit status
make[2]: *** [bin/rospack] Error 1
make[1]: *** [rospack/CMakeFiles/rospackexe.dir/all] Error 2
make: *** [all] Error 2

Originally posted by Bence Magyar on ROS Answers with karma: 358 on 2012-09-05
Post score: 2

Original comments
Comment by v.mayoral on 2013-06-21:
I'm interested in what you tried to do. Did you success?
Comment by Bence Magyar on 2013-07-23:
Moved to debian :)

A:

Perhaps try this tutorial?
http://williametter.com/portfolio/projects/ros-on-beaglebone/

Originally posted by davinci with karma: 2573 on 2012-09-06
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Bence Magyar on 2012-09-11:
Thanks, but that's not really an answer for me. I'm trying to avoid installing Ubuntu and do the whole thing on Angstrom. Failing to do so I'm experimenting with Debian right now.

