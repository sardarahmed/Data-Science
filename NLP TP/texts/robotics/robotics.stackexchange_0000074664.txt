Q:

How can I help AMCL deal with catastrophic wheel slips?

My robot uses an ASUS Xtion for a fake laser scan and odometry from encoders on the wheels. It basically is a big version of a turtlebot.
For the most part it navigates fine, but sometimes a wheel will catch on something, like a lip on a rug or a threshold and spin badly. AMCL immediately thinks the robot has rotated and RVIZ shows that the map is in clear disagreement with the laser scan image of the surrounding walls.
Is there some setting in AMCL that will help it to "reset" when the visual input is very different from the model?
In short, I'd like AMCL to assume the laser scan is right and the odometry is wrong when there is a huge disparity.
As it is now, if it gets too bad I often just have to shut down AMCL and start over.
Note, this is for AMCL, where the map has been created and is not being updated.

Originally posted by ChrisL8 on ROS Answers with karma: 241 on 2016-06-19
Post score: 4

Original comments
Comment by ChrisL8 on 2016-06-22:
This picture might help explain what the issue is:
https://ekpyroticfrood.net/shared/amcl_rotation_issue.png
You can clearly see how the corner of the room as seen by the 3D sensor is off from the corner of the map.

A:

I used AMCL on a robot with Mecanum wheels, which have an enormous amount of slip. I used an IMU along with the laser_scan_matcher package in order to simulate the odom and then fed that to AMCL.
If you want to try with straight odometry, one thing you could try is increasing the covariance values in the odometry message. Covariance is a measure of uncertainty. If the uncertainty is high then AMCL should weigh the measurement less.
[EDIT] I did not know that AMCL doesn't use covariance, so I guess that's out.
In regards to laser_scan_matcher, yes and no. Yes, you are using the laser scans twice, but you are using them for different things. AMCL uses scan matching to compare the current laser scans against a map to try and determine the sensor's pose on that map. Laser_scan_matcher also uses scan matching, but between successive scans in order to determine the amount of translation and rotation there is between scans. This is then converted into a transform between a user specified fixed frame and base frame.
TLDR: amcl uses scan matching to find pose on a map, laser_scan_matcher uses scan matching to find pose relative to its initial position.

Originally posted by Icehawk101 with karma: 955 on 2016-06-21
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by ChrisL8 on 2016-06-21:
Based on this comment and the AMCL Wiki, I don't think that AMCL actually uses the covariance on the odometry topic. Am I wrong
Comment by ChrisL8 on 2016-06-21:
When you combine the IMU with the laser_scan_matcher and then feed it to AMCL, does that mean you are using the Laser Scan twice? This always confused me.
Comment by Icehawk101 on 2016-06-22:
Well, that I did not know. Oh well, there goes the covariance idea.
Comment by ChrisL8 on 2016-06-22:
My attempt to use the laser_scan_matcher resulted in a huge mess:
https://ekpyroticfrood.net/shared/laser_scan_matcher_mess.png
I've never seen the green arrows spread so far and wide! I must be doing something very wrong.

