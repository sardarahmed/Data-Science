Q:

Do interprocess nodelet communication perform any kind of TCP external communication?

Hi, I was reading about how nodelets are implemented and as far as I understand, an shared_ptr is passed from the publisher to the subcriber's callback if both are part of the same nodelet.
This seems familiar to a shared memory implementation I read about, that used TCP to transmit the pointers to the allocated memory between different applications.
I'm trying to reduce the number of TCP communication as I believe they are causing me severe performance issues, and want to make sure that publishing/subscribing in a nodelet doesn't perform any kind of socket reading/writing.
So, this is the question, given a publisher and a susbcriber in the same nodelet, does their communication happen completely inside the application or needs some kind of external communication, for instance, with the ROS master?

Originally posted by Victor Lopez on ROS Answers with karma: 651 on 2012-10-05
Post score: 1

Original comments
Comment by joq on 2012-10-05:
They do not need to be in the same nodelet, but must be loaded into the same nodelet manager process.

A:

As long as you are publishing a shared pointer and a subscriber is inside the same node, no TCP communication should be involved. Right after instantiation, publishers and subscribers have to communicate with the ros master though to enable other nodes to connect to the topics.

Originally posted by Lorenz with karma: 22731 on 2012-10-05
This answer was ACCEPTED on the original site
Post score: 2

