Q:

share params between nodes ROS2

In ROS1 there you can read params from node namespace (prefixing param name with "~") and global namespace (prefixing param name with "/")
If understand the tutorials
https://index.ros.org/doc/ros2/Tutorials/Parameters/Understanding-ROS2-Parameters/
and
https://index.ros.org/doc/ros2/Tutorials/Using-Parameters-In-A-Class-CPP/
correctly, for ROS2 every node has its own param server and name space. Params can be adjusted via launch file or command line. However, regardles of the prefix in cpp code, the node will query its own namespace.
Now, what would be the recommended pattern if 2 cpp nodes shall share a common parameter that must be known to both of them? Is there any way to avoid having 2 parameters in different namespaces with the same value?

Originally posted by Wolf on ROS Answers with karma: 7555 on 2020-12-27
Post score: 3

A:

The parameter can be queried from a remote node. So you can choose one node to be the primary one and then query the remote parameter from that node from the other nodes.

Originally posted by tfoote with karma: 58457 on 2020-12-27
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by gvdhoorn on 2020-12-28:
What if there is no logical choice for a primary node?
Comment by tfoote on 2020-12-28:
That's outside the scope of the question where they "shall share a common parameter that must be known to both of them". But for completeness if they can both operate independently then I wouldn't consider the parameters redundant and then you should be willing to set them both.
Comment by gvdhoorn on 2020-12-29:
Two nodes sharing a common parameter does not necessarily mean there is a natural choice for a primary node. They could both (or there could be more) duplicates, none of which is the primary one.
I don't understand how this is out-of-scope here, as you suggested "choose one node to be the primary one", on which your answer hinged. My question seems to follow logically: what if that's not possible.
From your comment it would appear you suggest setting all shared parameters on all nodes in that case.
That's ok, but would seem to be a different answer and something the OP seems to like to avoid having to do.
Comment by tfoote on 2021-05-22:
"There's no logical choice" is a hypothetical catch 22, if there's no logical solution there cant be a solution. However if they are indistinguishable or equal then you as the deployer can choose one to be primary. You don't have to make A reference B and B reference A and be fully symmetrical.
If there are two nodes which are exact duplicates you can choose to make one primary, which is the one you'll address and the other one secondary which will reference the primary one.
Alternatively you could choose to have a third node which manages the common parameters specifically for the original two nodes to share references to. This third node would need to have the semantics of the parameters understood, but it could also understand more of the semantics of the coordination too which might be different than running the nodes in standalone settings.
There's no one answer that fits all situations.

