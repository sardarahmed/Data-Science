Q:

ROS urdf for Moveit!

Hi there!
I am currently working on a project, i am using servo motors to build a robotic arm.
The arm is aligned vertically, the gripper points to the sky.
In the joint description i wrote (urdf):
<limit effort="1.0" lower="0" upper="1.88" velocity="0.5"/>

meaning the joint state publisher will publish a state in the interval 0-1.88 radian (=120 grades).
so my servos are moving 120 grades, 60 grades in each direction and are set to the center.
When i start ROS Moveit! it publishes 0, for the initial positions, while i need 60 grades.
Any ideas how can i fix this?
How can i configure the urdf to start publishing positions in the center of the domain, causing a right move of my robot arm?
Thanks,
TkrA

Originally posted by TkrA on ROS Answers with karma: 45 on 2015-05-25
Post score: 0

Original comments
Comment by gvdhoorn on 2015-05-26:
Just a comment, but your issue isn't only with MoveIt obviously: anything that uses urdf (and the joint definitions in yours) is going to assume that 0 rad is your robot's zero-position.
Comment by TkrA on 2015-05-27:
Yes, i thought there are some settings i can make in the urdf file, to define the correct zero-position. Until now i could't find anything.
Thanks!
Comment by dornhege on 2015-05-27:
You might be able to hack this together with a mimic joint that has an offset.

A:

I finally found the answer:
reading the code joint_state_publisher
minval = float(limit.getAttribute('lower'))
maxval = float(limit.getAttribute('upper'))

..
if minval > 0 or maxval < 0:
zeroval = (maxval + minval)/2 

meaning if i wrote in the urdf
<limit effort="1.0" lower="0.001" upper="1.88" velocity="0.5"/>

the robot's zero postition=zeroval (middle)

Originally posted by TkrA with karma: 45 on 2015-05-29
This answer was ACCEPTED on the original site
Post score: 0

