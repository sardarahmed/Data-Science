Q:

How to catch nodelet shutdown signal?

I created a new thread in a nodelet which runs some task until the nodelet is shutdown. But I don't know how to let the new thread know when the nodelet is shutting down, so for now it will make the whole nodelet_manager crash when I only wants to end that nodelet.
I tried to use getPrivateNodeHandle() to get the ros::NodeHandle instance, and use nodehandle.ok() to test whether the new thread should stop, sometimes it works, but sometimes not.

Originally posted by K Chen on ROS Answers with karma: 391 on 2011-12-22
Post score: 3

A:

You should signal any threads started in the destructor and wait to join them before exiting the destructor.
For an example take a look at the camera1394 nodelet destructor.

Originally posted by tfoote with karma: 58457 on 2011-12-22
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by K Chen on 2011-12-24:
Thanks! It's a good example
Comment by Matias on 2014-11-21:
I'm not really sure if the destructor is being called correctly since I try to use ROS_INFO_STREAM or std::cout and I see nothing printed.

