Q:

What "escalating to SIGTERM" mean?

Hi everyone !
I have develop my on keyboard to start doing a teleoperation, to read the keys I have created a thread and and i have a ros::rate to publish my data in other frequency. But when I kill all the execution ros send this message :
Failed to call commander_service
[keyboard-2] escalating to SIGTERM

So I have search for an easy example and I found: http://ros.org/wiki/turtlebot_teleop
I have found the keyboard driver and tried and I received the same message.
http://www.ros.org/doc/api/turtlebot_teleop/html/turtlebot__key_8cpp_source.html
In this code I find a this line :
signal(SIGINT,quit);

And I decided to replace the SIGINT with SIGTERM. But I doesn't solve the error, but the function quit is executed.
So do you know why is happening it and how to solve ?
Thanks in advance.

Originally posted by Catotaku on ROS Answers with karma: 163 on 2011-06-14
Post score: 6

Original comments
Comment by Ros User on 2016-05-16:
I have been facing a similar problem. Did you figure out the solution to this problem?

A:

ROS automatically installs a signal handler for the application (you can disable that in ros::init afaik) that can be used in the main loop. The default is SIGINT, which corresponds to pressing Ctrl-C on the keyboard.
SIGTERM is the corresponding signal that is sent to the application when you kill it from the command line. I think ros (roslaunch) kills an application as first using SIGINT (nicely) and if the program doesn't react to "escalate" to SIGTERM (killing it - by asking). I'm not sure if SIGKILL is used, that would kill the application immediately.
So probably your program doesn't quit on SIGINT, which might be because of your signal handler.
If you only use it to catch Ctrl-C, you can just use while(ros::ok()) ... in your main loop and remove all signal handling on your side.
Otherwise you should quit on Ctrl-C (or just accept that it "escalates").

Originally posted by dornhege with karma: 31395 on 2011-06-14
This answer was ACCEPTED on the original site
Post score: 6

Original comments
Comment by dornhege on 2011-06-22:
Either remove your SIGINT handler (why do you need that) or change the loop condition as something like: while(ros::ok() && !quit), where you set quit to true in your SIGINT handler.
Comment by Catotaku on 2011-06-22:
I disable the SIGINT service ros::init_options::NoSigintHandler, and create my signal(SIGINIT,quit) and it do the same. In the same main I have a while(ros::ok()) and it sends the same error. So how I can fix this problem ( it stays like one or to seconds to stop my program).

