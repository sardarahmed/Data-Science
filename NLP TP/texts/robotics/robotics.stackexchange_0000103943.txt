Q:

Start and stop a node from another node with no system call (ROS2 CPP)

The issue I'm reporting is quite common looking at similar questions:
Shutdown a node from another node in ROS CPP
Start or stop the ROS node in another node
Could a node can be stoped by another node?
launch a node within another node
None of these answer to my case: ros2, cpp, no system calls allowed, component nodes.
The first link suggests that a possible solution would be implementing a service but the old code snippets are no longer available...
My use case is this node to capture sound from microphones
https://github.com/ros-drivers/audio_common/blob/ros2/audio_capture/src/audio_capture_node.cpp
I'd like to record only when some conditions become true...
Thank you!

A:

lifecycle nodes are the default solution for this. Activate your node when conditions are met, and deactivate it when it should not be active anymore. In your activate and deactivate transitions you can then implement the logic required. (see the official documentation and demo at github.com/ros2/demos/blob/foxy/lifecycle/README.rst)
An easy way to activate or deactivate a node is to only construct the subscription when a node should be active. If it should not do anything anymore, this subscription is destroyed again.

