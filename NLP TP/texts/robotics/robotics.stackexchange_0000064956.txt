Q:

How ros_control can be customized to a dynamixel based omni directional mobile base

Recently I got to know that ros_control is very much helpful while making a mobile-robot(Specially for autonomous navigation). I am not find any good technical explanation and how it customized to our robot.
What all are the advantages of using ros_controller for a mobile base.Is it really required?. What all are the problems if it is not using. I want to use it for making navigation stack based slam.
It would be great if some one who already used this give some key points.

Originally posted by unais on ROS Answers with karma: 313 on 2015-01-05
Post score: 1

A:

One of the main advantages of using ros_control is that you can reuse existing robot-agnostic code, such as the Gazebo simulator backend and robot controllers. For onmidirectional bases, there is currently no officially supported controller (only diff-drive), although there are implementations out there that expose ROS APIs compatible with the navigation stack.

Originally posted by Adolfo Rodriguez T with karma: 3907 on 2015-01-07
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by unais on 2015-01-07:
We already seen that steered_wheel_base_controller.  Dynamixel has an ros driver.  ros_control http://wiki.ros.org/dynamixel_motor.  So I am thinking which will less head ache- using ros_dynamixel or building a ros cotrol using this ros_control framework.
Comment by Adolfo Rodriguez T on 2015-01-26:
Using one does not mean not using the other. dynamixel_motor provides hardware access, while steered_wheel_base_controller implements the inverse kinematics map between twist and joint commands. The functionality of the packages is orthogonal, you could consider leveraging both.

