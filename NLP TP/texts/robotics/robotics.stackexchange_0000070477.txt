Q:

An outer loop with a slower ros::Rate() and an inner loop with a faster ros::Rate() logic

Consider the situation where there is an outer control loop and an inner control loop. The outer loop runs at 100Hz and the inner loop runs at 500Hz.  The inner loop will run 5 times before the outer loop gets called again.
However, the logic of the program would only like the outer loop to run after the inner loop finishes its cycle and sets a flag as true.
What happens in this situation? Does the outer loop forces itself to run again and re-writes data from the yet unfinished return value of the inner loop?

Originally posted by Juan on ROS Answers with karma: 208 on 2015-11-19
Post score: 0

A:

I think I'd just set up 2 ros::Timer instances with different timeouts and different callbacks for both loops and then call ros::spin() in the main loop to let the callback be "fired". If you use the "normal" ros::spin() and not MultithreadedSpinner or AsynchSpinner it is safe to assume that your 2 callbacks wo'nt be called at the same time in parallel.....

Originally posted by Wolf with karma: 7555 on 2015-11-25
This answer was ACCEPTED on the original site
Post score: 0

