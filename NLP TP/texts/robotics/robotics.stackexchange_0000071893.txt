Q:

what is needed in order to add support for building archlinux packages from ROS packages automatically?

ROS supports the generation of debian packages via the buildfarm. Currently ArchLinux supports ROS via the AUR, which means users need to compile (via archlinux's "makepkg" tool) packages themselves, instead of simply downloading binary packages as it happens for Ubuntu.
What would be needed in order to allow either officially or unofficially the generation of ArchLinux binary packages? I would be nice to at least be able to privately run a server with which binary archlinux packages could be created for ROS, using standard ROS tools.
At the moment, python scripts generating ArchLinux PKGBUILDs for ROS packages already exist, so maybe this could be added to existing tools, although I don't know where to start.

Originally posted by Matias on ROS Answers with karma: 122 on 2016-02-09
Post score: 1

Original comments
Comment by gvdhoorn on 2016-02-10:
Bloom is the tool used in the release process that generates the required debian directories and spec files. Adding another platform would require support at least there. In addition, the buildfarm would need to be updated to run the needed build tools.
Comment by gvdhoorn on 2016-02-10:
@William and @tfoote can probably provide a much more in-depth answer on Bloom and the buildfarm respectively.

A:

Support for automated building of binary packages for a different packaging system requires three things:

making all third-party dependencies which we use from Debian / Ubuntu available (e.g. PCL, gazebo, etc.)
update bloom to generate the necessary information for the packaging system (currently it supports Debians as well as RPMs)
update the ros_buildfarm to run the actual packaging jobs to produce the binary packages of your choice

I would not recommend doing the packaging by hand simply because it:

is a huge continuous effort and
will likely always suffer from being out-of-date since packages get updated frequently and there are just a lot of them

Originally posted by Dirk Thomas with karma: 16276 on 2016-02-10
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Matias on 2016-02-10:
For the first point, dependencies are already met but packages need to be built from AUR (Arch User Repository). If the changes made to ros_buildfarm include retrieving and building this packages, would that be ok?
Comment by Matias on 2016-02-10:
Also, if ros_buildfarm is extended for Arch support, would this mean that eventually an arch package repository would be available from which users would simply download packages? Or would this require a separate server?
Comment by Dirk Thomas on 2016-02-10:
The third-party packages are not built by the ROS build farm. They are already available in the official Debian / Ubuntu repositories. So there is no infrastructure to help building them for Arch. That should happen externally.
Comment by Dirk Thomas on 2016-02-10:
Yes, ros_buildfarm would drop the binary packages into an Arch repository (however that looks like). I guess the same server as for the Debian/Ubuntu apt repo can be used. The buildfarm_deployment repo is used to provision the server.
Comment by tfoote on 2017-12-05:
BTW There's a new tool for automating metadata generation for rosdistros supreflore: https://github.com/ros-infrastructure/superflore It's being actively used for Gentoo and Open Embedded support is under development. It could relatively easily be extended to support Arch as well.

