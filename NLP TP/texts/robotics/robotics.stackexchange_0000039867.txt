Q:

Add MySQL to a ROS project?

Hello,
How would I add MySQL functionality to a ROS project? I am running Ubuntu 11.04, I have MySQL installed, the .h is located at /usr/include/mysql/mysql.h.
Is there a way to include MySQL in the CMakeLists.txt file? Ideally, I would like to be able to do something like: #include <mysql.h> from my node.
Thanks!

Originally posted by gavinmachine on ROS Answers with karma: 353 on 2012-04-24
Post score: 2

A:

This may not be complete:
First, add <rosdep name="libmysqlclient-dev"/> to your manifest.xml.
Reference the file in your C++ sources using: #include <mysql/mysql.h>
Add something like this to your CmakeLists.txt:
find_package(MySql REQUIRED)
include_directories(${MYSQL_INCLUDE_DIRS})
add_definitions(${MYSQL_DEFINITIONS})

UPDATE: a library that depends on MySQL probably needs to export some link flags in its manifest.xml like this:
<export>
  <cpp lflags="-lmysqlclient"/>
</export>

Normally, that would be done using pkg-config, but I don't see a .pc file for MySQL on Ubuntu Oneiric. You may have to figure out the correct lflags experimentally.

Originally posted by joq with karma: 25443 on 2012-04-24
This answer was ACCEPTED on the original site
Post score: 7

Original comments
Comment by gavinmachine on 2012-04-24:
I think this is on the right track... To give more info: I am trying to execute MySQL queries in a package that I expose as a library to another node... the library package compiles just fine, it's when I try to compile the node that depends on the library that I get an error.
Comment by Dustin on 2012-04-25:
What is the error?
Comment by gavinmachine on 2012-04-26:
Dustin, say for example I attempt to call a library function from within the C++ of the node that is using the library, and the library function uses mysql_init(...),  the compiler will throw "mysql_init(...) has not been defined." The library package itself compiles just fine, however.
Comment by joq on 2012-04-26:
Did you find a set of export lflags to solve that problem? Is it the compiler or the linker complaining about an unresolved mysql_init()?
Comment by gavinmachine on 2012-05-03:
Yep, adding the linker flag appeared to fix it! I added exactly what you posted above.

