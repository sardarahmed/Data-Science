Q:

What does python_qt_binding.loadUi's 3rd arg do in PyQt binding?

For example, in rqt_bag loadUi takes a python dictionary as its 3rd arg like this:
ui_file = os.path.join(rp.get_path('rqt_bag'), 'resource', 'bag_widget.ui')
loadUi(ui_file, self, {'BagGraphicsView': BagGraphicsView})

Now tracking back loadUi, what PySide binding does makes sense looking at source code -- it uses dictionary "as dictionary":
def loadUi(uifile, baseinstance=None, custom_widgets=None):
    from PySide.QtUiTools import QUiLoader
    from PySide.QtCore import QMetaObject
        :
        def createWidget(self, class_name, parent=None, name=''):
            # don't create the top-level widget, if a base instance is set
            if self._base_instance is not None and parent is None:
                return self._base_instance

            if class_name in self._custom_widgets:
                widget = self._custom_widgets[class_name](parent)

But what about PyQt binding?
def loadUi(uifile, baseinstance=None, custom_widgets=None):
    from PyQt4 import uic
    return uic.loadUi(uifile, baseinstance=baseinstance)

Just ignoring? If so, what's the purpose of letting PySide binding have 3rd arg?

Originally posted by 130s on ROS Answers with karma: 10937 on 2013-02-26
Post score: 0

A:

PyQt uses the "promoted classes" specified in the UI file and there does not need the 3rd argument.
PySide on the other hand does not support that, so you have to explicitly pass the mapping to the loadUi function.

Originally posted by Dirk Thomas with karma: 16276 on 2013-02-26
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by 130s on 2013-02-27:
I see. Given that PySide requires the 3rd arg to incorporate custom classes, I think python_qt_binding.loadUi as an API should obligate the 3rd arg. I'll open a ticket.
Comment by Dorian Scholz on 2013-02-27:
This was certainly true for PySide 1.0.6, but has anyone checked if it changed in more recent versions?
Comment by 130s on 2013-02-28:
Ticketed. Let's move further discussion there.

