Q:

Viewing custom messages from a ROS node that is on a different ROS install

I have ROS running on a robot with a raspberry Pi. I have several custom messages that I would like to echo and view on rqt_plot from my laptop. However as the robot package is only installed on the pi, the custom messages do not exist on the laptop so I cannot view them.
What is usually done in this case? Should I move my messages to a different package so I can just install that on other devices?

Originally posted by hez on ROS Answers with karma: 3 on 2016-10-02
Post score: 0

A:

Should I move my messages to a different package so I can just install that on other devices?

Yes, that is actually the best practice for message, services and actions.
Being able to re-use messages without having to install also the other parts of a package is one part of the rationale. Separating the messages from the rest of your packages also clearly separates your ROS API from your implementation, further enhancing separation of concerns and re-usability.

Originally posted by gvdhoorn with karma: 86574 on 2016-10-02
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by hez on 2016-10-02:
Thanks that makes sense.
I keep all of my code in a github repo, I have just created a new package with the postfix _msgs to store messages - and with that a second git repository. Is it also best practice to distribute code like that? One repo for the messages package and one for the main package?
Comment by gvdhoorn on 2016-10-02:
Depends. Some ppl like to keep _msgs pkgs in the same repository as the nodes that use that pkg, to make releases easier (_msgs is dependency of other pkgs, so needs to be released first). Others like to separate. Smallest re-usable artefact vs distribution convenience is always a trade-off.
Comment by gvdhoorn on 2016-10-02:
Note that if you release the pkg (through the ROS buildfarm), it doesn't matter (for your users) whether the pkg is in a separate repository or not, they can always install your _msgs pkg separately.

