Q:

ROS launch naming detail

I installed STDR with info from here: http://wiki.ros.org/stdr_simulator/Tutorials/Set%20up%20STDR%20Simulator where I used the "from GitHub" instructions, because it appears that there's no official melodic version yet. I've not gone through that process before but it looks like it worked with out errors.
But when I try:
$ roslaunch stdr_launchers server_with_map_and_gui_plus_robot.launch
It doesn't expand with a tab (meaning to me that there's some searchpath problem). Instead I can do this which in the end doesn't work either:
$ roslaunch stdr_simu<tab>lator/stdr_laun<tab>ers ... etc
The install ended up installing the stdr stuff in catkin_ws/src which contains this:
CMakeLists.txt  stdr_simulator  turtlebot3  turtlebot3_msgs  turtlebot3_simulations
That might be the problem. But I am not sure. Any help is appreciated!

Originally posted by pitosalas on ROS Answers with karma: 628 on 2020-04-22
Post score: 0

A:

Did you source /path/to/your/catkin_ws/devel/setup.bash after the catkin_make? If not, that's most likely your problem.

The install ended up installing the stdr stuff in catkin_ws/src which contains this:

I don't believe that's the case. The git clone command downloaded the sources into your src space. Which is exactly where it should be. I would not call that installing.

Originally posted by gvdhoorn with karma: 86574 on 2020-04-22
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by pitosalas on 2020-04-22:
You're right about the source'ing. But gee I am so aware of that and I could swear I had done it. Wow.
On your second point, indeed the page doesn't say "install" it says "Get STDR from Github". But just to clarify, what would count as "installing"?
Comment by gvdhoorn on 2020-04-22:
On most OS, the act of installing software would be placing the result of the build phase (ie: binaries, scripts, whatever) into special locations which will be considered by the binary loaders/scripting environment/execution infrastructure when searching for programs.
On Windows this is typically done using an Install wizard. On Ubuntu it would be apt or some kind of store. On macOS you typically run some wizard which copies files to /Applications. Or Docker images could be used, or flatpack, or snap, etc, etc.
But downloading a set of source files for a compiled language into the src space of a Catkin workspace would not be something I would call installing it.
I would say a defining characteristic of the act of installation would be that the software is usable after the installation is complete. Copying the source code does not make it usable (as you found out as well).

