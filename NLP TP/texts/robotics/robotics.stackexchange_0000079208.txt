Q:

Orientation constraint for link 'tip' is probably incorrect warning

Hi, I was planning a pose for a 5-dof manipulator tip with moveit kdl solver. The position of the pose is reached, but the orientation cannot be reached. And the following warning is shown every time:
[ INFO] [1488121271.999191010, 373.663000000]: Planning request received for MoveGroup action. Forwarding to planning pipeline.
[ WARN] [1488121271.999485048, 373.663000000]: Orientation constraint for link 'tip' is probably incorrect: 0.000000, 0.000000, 1.000000, 0.500000. Assuming identity instead.
[ WARN] [1488121271.999603296, 373.663000000]: Orientation constraint for link 'tip' is probably incorrect: 0.000000, 0.000000, 1.000000, 0.500000. Assuming identity instead.
[ INFO] [1488121271.999718045, 373.663000000]: No optimization objective specified, defaulting to PathLengthOptimizationObjective
[ INFO] [1488121271.999857147, 373.663000000]: LBKPIECE1: Starting planning with 1 states already in datastructure
[ INFO] [1488121272.444189499, 374.101000000]: LBKPIECE1: Created 38 (20 start + 18 goal) states in 37 cells (19 start (19 on boundary) + 18 goal (18 on boundary))
[ INFO] [1488121272.444250950, 374.101000000]: Solution found in 0.444438 seconds
[ INFO] [1488121272.467475751, 374.124000000]: SimpleSetup: Path simplification took 0.000019 seconds and changed from 23 to 2 states
[ INFO] [1488121272.500154361, 374.156000000]: Combined planning and execution request received for MoveGroup action. Forwarding to planning and execution pipeline.
[ WARN] [1488121272.500245398, 374.156000000]: Orientation constraint for link 'tip' is probably incorrect: 0.000000, 0.000000, 1.000000, 0.500000. Assuming identity instead.
[ INFO] [1488121272.500362095, 374.156000000]: Planning attempt 1 of at most 1
[ WARN] [1488121272.500788898, 374.157000000]: Orientation constraint for link 'tip' is probably incorrect: 0.000000, 0.000000, 1.000000, 0.500000. Assuming identity instead.
[ WARN] [1488121272.500939599, 374.157000000]: Orientation constraint for link 'tip' is probably incorrect: 0.000000, 0.000000, 1.000000, 0.500000. Assuming identity instead.
[ INFO] [1488121272.501062772, 374.157000000]: No optimization objective specified, defaulting to PathLengthOptimizationObjective
[ INFO] [1488121272.501254698, 374.157000000]: LBKPIECE1: Starting planning with 1 states already in datastructure
[ INFO] [1488121273.689715240, 375.327000000]: LBKPIECE1: Created 75 (37 start + 38 goal) states in 74 cells (37 start (37 on boundary) + 37 goal (37 on boundary))
[ INFO] [1488121273.690050718, 375.327000000]: Solution found in 1.188844 seconds
[ INFO] [1488121273.700934373, 375.345000000]: SimpleSetup: Path simplification took 0.000024 seconds and changed from 66 to 2 states
[ WARN] [1488121273.702429142, 375.345000000]: Dropping first 1 trajectory point(s) out of 10, as they occur before the current time.
First valid point will be reached in 0.060s.

Does anybody have any idea what is wrong, please?

Originally posted by yangtfu on ROS Answers with karma: 11 on 2017-02-26
Post score: 1

A:

The cause of the warning lies in the Quaternion/Orientation values moveit received as goal.
Quaternions that represent orientations have to be normalized to 1. This is not true for the quaternion you passed in: (0.0,0.0,1.0,0.5). As a result MoveIt ignores it and internally replaces it by the identity (0.0,0.0,0.0,1.0).
Side note: You might want to set RRTConnectkConfigDefault as your PlannerId. LBKPIECE often yields pretty weird/infeasible paths with MoveIt at the moment.

Originally posted by v4hn with karma: 2950 on 2017-02-26
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by yangtfu on 2017-02-26:
Do you mean the quaternion vector including w should be normalized? I thought the axis vector of xyz should be a normalized vector which represents the rotation axis. What's the point of normalizing a quaternion vector.
Comment by v4hn on 2017-02-26:
Quaternions are not an Axis/Angle representation.
They are a completely separate form of represention of Orientations.
If you want to learn more about this, please look at the appropriate Math literature.
For many people I know it is enough though to think of them as a normalized 4-vector.
Comment by yangtfu on 2017-02-26:
Yeah, I misunderstood the concept, thank you!
Comment by Beshari on 2021-01-28:
Had the same error, now I understand, thanks for the RRTConnectkConfigDefault suggestion.

