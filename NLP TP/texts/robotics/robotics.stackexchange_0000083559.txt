Q:

Generic path to read a file in a ROS directory

I have created a /csv and /scripts directories in my /src directory. The /csv directory contains a csv file and /scripts directory contains a Python script to parse the csv file. The first few lines of the script is as follows -
import csv
with open('/home//default_ws/src/<package_name>/csv/alarms.csv', 'rb') as csvfile:
    reader = csv.reader(csvfile)
    for row in reader:

How can I add a generic location path for the csv file in my Python script? And what modifications do I need to make in my CMakelists.txt in order to install the /csv and /scripts directories?
*** CORRECT ANSWER ***
import csv
import os, rospkg
rospack = rospkg.RosPack()
with open(os.path.join(rospack.get_path("package_name"), "csv", "alarms.csv"), 'rb') as csvfile:
    reader = csv.reader(csvfile)
    for row in reader:

Originally posted by robo_ninja on ROS Answers with karma: 55 on 2017-10-26
Post score: 2

A:

To get path of your package you can use rospack package. Take a look at examples here.
This is basically it:
import rospkg 
rospack = rospkg.RosPack()
# get the file path for rospy_tutorials
rospack.get_path('rospy_tutorials')

In order to install your scripts you need to use cmake's install.
For example like this:
install(PROGRAMS
  "scripts/my_script"
  DESTINATION bin
)

Then it depends on if you're using catkin_make or catkin build command. To install the script you run catkin_make install. Or if you're using catkin build you need to config your package with catkin config config --install and then run catkin build.
This should install your script to install directory of your root's workspace.

Originally posted by l4ncelot with karma: 826 on 2017-10-27
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by robo_ninja on 2017-10-27:
How should I modify with open('/home//default_ws/src/<package_name>/csv/alarms.csv', 'rb') as csvfile: in my code?
Comment by l4ncelot on 2017-10-27:
I'm not familiar with python. But I would probably save output of rospack.get_path('your_package') to some variable. Then somehow add the last part of your path (csv/alarms.csv) and insert it to open(). But this is already python related.
Comment by john.j.oneill on 2017-10-27:
You should just be able to concatenate strings by adding them:
with open(rospack.get_path('<package_name>')+'/csv/alarms.csv', 'rb') as csvfile:

Comment by gvdhoorn on 2017-10-27:
If I may suggest: always use os.path.join(..) instead of concatenating path segments with hard-coded path delimiters (ie: /). You never know where your code ends up.
Comment by robo_ninja on 2017-10-27:
It works! Thank you @gvdhoorn
Comment by gvdhoorn on 2017-10-27:
If @l4ncelot's suggestion of using rospack for this worked, then I believe it would be good if you could mark his answer as the answer by ticking the checkmark to the left of it. It should turn green.

