Q:

Strange warnings when running image_view

When I run image_view, it works, but I get a lot of strange warnings on the command line:
[kevin@tardis ros_sandbox]$ rosrun image_view image_view image:=/opencv_cam/camera

(process:591): GLib-GObject-CRITICAL **: gtype.c:2720: You forgot to call g_type_init()

(process:591): GLib-CRITICAL **: void g_once_init_leave(volatile void *, gsize): assertion `result != 0' failed

(process:591): GLib-GObject-CRITICAL **: gtype.c:2720: You forgot to call g_type_init()

(process:591): GLib-GObject-CRITICAL **: gtype.c:2720: You forgot to call g_type_init()

(process:591): GLib-GObject-CRITICAL **: gtype.c:2720: You forgot to call g_type_init()

(process:591): GLib-GObject-CRITICAL **: void g_type_add_interface_static(GType, GType, const GInterfaceInfo *): assertion `G_TYPE_IS_INSTANTIATABLE (instance_type)' failed

(process:591): GLib-GObject-CRITICAL **: gtype.c:2720: You forgot to call g_type_init()

(process:591): GLib-GObject-CRITICAL **: void g_type_interface_add_prerequisite(GType, GType): assertion `G_TYPE_IS_INTERFACE (interface_type)' failed

(process:591): GLib-CRITICAL **: void g_once_init_leave(volatile void *, gsize): assertion `result != 0' failed

(process:591): GLib-GObject-CRITICAL **: void g_type_add_interface_static(GType, GType, const GInterfaceInfo *): assertion `G_TYPE_IS_INSTANTIATABLE (instance_type)' failed

(process:591): GLib-GObject-WARNING **: invalid uninstantiatable type `(null)' in cast to `<invalid>'

(process:591): GLib-GObject-WARNING **: instance of invalid non-instantiatable type `(null)'

(process:591): GLib-GObject-CRITICAL **: gulong g_signal_connect_data(gpointer, const gchar *, GCallback, gpointer, GClosureNotify, GConnectFlags): assertion `G_TYPE_CHECK_INSTANCE (instance)' failed
^C[kevin@tardis ros_sandbox]$ 

Not sure if it is related to this question or not. Any ideas how to fix this?
ROS Groovy
OSX 10.8, Homebrew

Originally posted by Kevin on ROS Answers with karma: 2962 on 2013-01-24
Post score: 0

Original comments
Comment by Dirk Thomas on 2013-01-24:
You might want to try rqt_image_view which is based on Qt instead and should provide the same functionality.

A:

I'm not sure where in the image_view code this comes from, but if memory serves, similar errors come up on Linux, and it might be that you can simply ignore those warnings.

Originally posted by WilliamWoodall with karma: 1626 on 2013-01-24
This answer was ACCEPTED on the original site
Post score: 0

