Q:

ROSBridge - Unknown Operation: Auth?

Hi Everyone,
I have ROSBridge Server and a client I wrote communicating just fine. Now I want to enable authentication.
I set "authenticate" to true in the ROSBridge launch file. I also started rosauth and set the "secret_file_location" param to point to a text file containing a 16 character key (which I use to encrypt my MAC using SHA-256).
When I launch the ROSBridge server, it disconnects any clients which communicate with it unless they have have "auth" in their "op" field. So if I try to "subscribe" or "publish", it will just disconnect the client. Now, the peculiar thing is that ROSBridge will then print to screen: "Unknown operation: auth.  Allowed operations: ['call_service', 'publish', 'subscribe', 'unsubscribe', 'unadvertise', 'advertise']"
So it definitely understands that "auth" is an operation... because it does not immediately disconnect my client. However it tells me that "auth" is unknown. What's the deal?
EDIT: Here is my launch file:
<launch>
  <arg name="port" default="9090" />
  <arg name="ssl" default="false" />
  <arg name="certfile" />
  <arg name="keyfile" />
  <arg name="authenticate" default="true" />
  
  <param name="/rosbridge/port" value="$(arg port)"/>

  <group ns="ros_mac_authentication">
  <param name="secret_file_location" value="/home/developer/SecretFile.secret" />
  <node pkg="rosauth" type="ros_mac_authentication" name="ros_mac_authentication" />
  </group>

  <group if="$(arg ssl)">
    <node name="rosbridge_websocket" pkg="rosbridge_server" type="rosbridge_websocket" output="screen">
      <param name="certfile" value="$(arg certfile)" />
      <param name="keyfile" value="$(arg keyfile)" />
      <param name="authenticate" value="$(arg authenticate)" />
    </node>
  </group>
  <group unless="$(arg ssl)">
    <node name="rosbridge_websocket" pkg="rosbridge_server" type="rosbridge_websocket" output="screen">
      <param name="authenticate" value="$(arg authenticate)" />
    </node>
  </group>
  
  <node name="rosapi" pkg="rosapi" type="rosapi" />
</launch>

Originally posted by trianta2 on ROS Answers with karma: 293 on 2013-11-25
Post score: 0

Original comments
Comment by rtoris288 on 2013-11-25:
Are you using the most recent version of rosbridge from source or debians? What parameters have you set in the launch file?
Comment by trianta2 on 2013-11-25:
I am using the version of rosbridge that I got from "apt-get install ros-hydro-rosbridge-suite". The package.xml file I have says version 0.5.1. As for the launch file, I'll update my post to include its contents.
Comment by rtoris288 on 2013-11-25:
Is the message about awaiting authentication printing when the socket connects? I.e., https://github.com/RobotWebTools/rosbridge_suite/blob/hydro-devel/rosbridge_server/scripts/rosbridge_websocket#L69-L70
Comment by trianta2 on 2013-11-25:
Yes it is. I downloaded the source and I've been poking around as well. It appears that L81 "resp = auth_srv(...)" throws an exception, but I still cannot figure out why.
Comment by rtoris288 on 2013-11-25:
That was going to be my next suggestion. Make sure the message has all the correct fields or it might throw an excepting trying to access something that doesn't exist.
https://github.com/RobotWebTools/rosbridge_suite/blob/hydro-devel/rosbridge_server/scripts/rosbridge_websocket#L81-L83
Comment by trianta2 on 2013-11-25:
I'm currently printing all of the fields to console. An exception was thrown upon printing the time field, yet I'm not sure why. Still investigating...
Comment by rtoris288 on 2013-11-25:
What is your client sending in the time fields? It should be a number (make sure it's not being sent as a string or anything), in seconds.
Comment by trianta2 on 2013-11-25:
My client (for test purposes) is sending t : 1 and end : 2. ROS is printing that the received 't' is 1000000000 and the received 'end' is 2000000000. So the server appears to be appending nine 0's to the end of whatever I send. I suppose that's what rospy.Time() is doing, but why?
Comment by trianta2 on 2013-11-25:
PS - I was sending strings before! I am now sending ints for my time fields. I have been calculating my hash using 1 and 2 as my time fields, not 1000000000 and 2000000000 ... this will surely create a mismatch between the client and ROS SHA-512 hashes.
Comment by trianta2 on 2013-11-25:
I downloaded and built rosauth from source. I am running its unit test and seeing what the SHA512 hash output it. It is different than the one my client generates. Seeing how online SHA512 generators match rosauth, I believe the issue is my SHA512 generator in my client.

A:

Okay, so after a lot of poking around I found my problem(s):

I was sending a string for the time values when I should have been sending integers. This was throwing the exception of "Unknown Operation: Auth" which was throwing me off.

For time values, I was sending the seconds relative to when my program started. This was wrong. I should have been sending seconds since epoch (http://en.wikipedia.org/wiki/Unix_time). Of course.

I hope this is useful for people with this problem in the future.

Originally posted by trianta2 with karma: 293 on 2013-11-26
This answer was ACCEPTED on the original site
Post score: 2

