Q:

Bumblebee Reverse engineering Calibration

Hi guys,
I am currently working with a Bumblebee2 stereo camera to do visual SLAM using ROS. This camera is very good but we cannot use the calibration files given by the company's camera in ROS. I have access to the rectified images but no way to publish them through ROS.
I would like to know if there is any solution to retrieve the calibration parameters by a reverse engineering method using the calibrated and uncalibrated images that i already have.

Originally posted by INSA on ROS Answers with karma: 112 on 2013-04-05
Post score: 2

A:

About a year ago we used the bumblebee2 very successfully in ROS, but we did not use the pointgrey library nor the factory provided calibration files:
http://www.youtube.com/watch?v=r9iAnATJuaQ
We used the standard ROS stereo image pipeline and calibration tools with the bumblebee2.  We also had to modify the camera_drivers node to support format_7 firewire (two cameras on one cable):
https://github.com/Auburn-Automow/camera_drivers
I don't have time to walk you through the whole process, but perhaps some of the stuff in that repo will help.
Other resources:
http://www.ros.org/wiki/image_pipeline/Tutorials

Originally posted by William with karma: 17335 on 2013-04-05
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by INSA on 2013-04-05:
Thank William for your response, did you used the stereo_calibration node to calibrate the camera ? I used this one and got the following results : http://www.youtube.com/watch?v=59gd4OU5u7A&feature=youtu.be
What do you think ?
Comment by INSA on 2013-04-05:
Also as good as we can calibrate this camera, we can never get the same calibration quality as the one given by pointgrey.
Comment by William on 2013-04-05:
That video looks decently similar to what we were getting. We were able to make use of the data at this quality, but it might not be good enough for your application. We also verified the accuracy of our data against a Hokuyo lidar, and it seemed to work fairly well at close distances.
Comment by William on 2013-04-05:
The pointgrey library and calibration both work really well, better than the generic stereo pipeline in ROS, but there are issues with it. The precompiled binary that pointgrey provides is statically linked against boost 1.37, whereas ROS links against 1.42 (at the time), so you could not link...
Comment by William on 2013-04-05:
them to each other. So making a ROS node which utilizes the pointgrey system was not possible. One thing we played with before using the ROS stereo pipeline was to make a program which received images and sent the result of the pointgrey stereo library back and forth to ROS using protobuf and zeromq

