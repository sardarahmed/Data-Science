Q:

Is different subscriber working like different thread?

For example, I want to subscribe to 2 topics ("/scan" and "/odometry")
the "/scan" frequency is 10Hz, while the "/odometry" frequency is 50Hz.
But in my program, the scanCallBack function is computational heavy, so it cannot process as fast as the "/scan".
the odomCallBack function is not that heavy, so it has the potential to process like 50Hz.
I expected them to work separately, but when I try print out time, I found the odomCallBack function now has the same frequency as the scanCallBack function, at 6Hz.
So does it mean the subscribers can affect each other, instead of working separately like different threads?
By the way, how can I fix this problem?

Originally posted by Bill5785 on ROS Answers with karma: 141 on 2017-05-25
Post score: 1

Original comments
Comment by jayess on 2017-05-25:
Why not use two nodes?
Comment by Bill5785 on 2017-05-26:
@jayess I need to do sensor fusion. So I need to put them in one program.

A:

By default roscpp executes your subscriber callbacks single-threaded, which is what you're observing.
You can process callbacks on multiple threads, or assign specific threads to callbacks by using a MultiThreadedSpinner, AsyncSpinner,  CallbackQueue or various combinations of these as described in http://wiki.ros.org/roscpp/Overview/Callbacks%20and%20Spinning

Originally posted by ahendrix with karma: 47576 on 2017-05-25
This answer was ACCEPTED on the original site
Post score: 7

Original comments
Comment by Bill5785 on 2017-05-26:
Thanks, it works!

