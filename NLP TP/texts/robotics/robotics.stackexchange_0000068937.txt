Q:

ackermann_vehicle_description does not contain the URDF file

I distributed the ros-indigo-ackermann-vehicle, ros-indigo-ackermann-vehicle-description, and ros-indigo-ackermann-vehicle-gazebo Ubuntu packages months ago. It's been brought to my attention that when these packages are installed, most of their files are missing. For example, /opt/ros/indigo/share/ackermann_vehicle_description contains only package.xml and a cmake directory. I think that distribution of ackermann_vehicle as Ubuntu packages used to work. Here is a link to my ackermann_vehicle and ackermann_vehicle-release Git repositories: https://github.com/wunderkammer-laboratory?tab=repositories. I'd appreciate it if someone could let me know why correct Ubuntu packages are not being built.

Originally posted by Jim Rothrock on ROS Answers with karma: 792 on 2015-07-28
Post score: 0

A:

Looking at the CMakeLists.txt of ackerman_vehicle_description, there seem to be no install(..) rules. Without those, no files will be, well, installed.
For ackerman_vehicle_description, something like:
install(DIRECTORY launch urdf
  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION})

should do.
See catkin 0.6.14 documentation » How to do common tasks » Building and installing targets for more information (and examples) of how to do this.

I think that distribution of ackermann_vehicle as Ubuntu packages used to work

Looking at the history of the CMakeLists.txt in ackerman_vehicle_description that seems unlikely, as there has only ever been one version of that file, and it never contained the required install(..) statements.

Edit: I'd also suggest adding the architecture_independent tag to the export section of your package.xml, as ackerman_vehicle_description does not contain any artefacts that will need to be rebuild for different processor architectures (ie: x86 vs x64, etc). That saves the buildfarm some effort, and results in your packages becoming available sooner. Just add the following to the end of your manifest:
<export>
  <architecture_independent />
</export>

Originally posted by gvdhoorn with karma: 86574 on 2015-07-28
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Jim Rothrock on 2015-08-05:\

Looking at the history of the CMakeLists.txt in ackerman_vehicle_description that seems unlikely

I think what has been happening is that users have been forking the Github repository, so I've never noticed the CMakeLists.txt problem.
Comment by Jim Rothrock on 2015-08-05:\

I'd also suggest adding the architecture_independent tag to the export

Only the metapackage package.xml doesn't have such a tag. I didn't think it was intended for metapackages, but http://www.ros.org/reps/rep-0140.html#id29 says otherwise. I'll add the tag.
Comment by gvdhoorn on 2015-08-05:\

Only the metapackage package.xml doesn't have such a tag.

I think I looked at the repository at the time of the last commit to CMakeLists.txt. There it doesn't have an export section. But you're right, it is there now.

