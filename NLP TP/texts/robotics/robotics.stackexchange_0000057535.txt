Q:

Format of depth value openni2_camera

I used the openni2 to install in my ARM-Board from this website link, now I want to know clearly how is the format of the depth data get from Asus Xtion looks like?  Because I met some confuses when I display the depth data in image, it was just the black-white image not gray image. Now maybe I should calibration of this data but I dont know the format.
  void imageCb_d(const sensor_msgs::ImageConstPtr& msg)
  {
cv_bridge::CvImagePtr cv_ptr;
try
{
  cv_ptr = cv_bridge::toCvCopy(msg, sensor_msgs::image_encodings::TYPE_32FC1);
 
}
catch (cv_bridge::Exception& e)
{
  ROS_ERROR("cv_bridge exception: %s", e.what());
  return;
}

cv::imshow("Depth", cv_ptr->image);

cv::waitKey(3);

image_pub_.publish(cv_ptr->toImageMsg());
}

Originally posted by domikilo on ROS Answers with karma: 89 on 2014-02-26
Post score: 0

A:

I got the solution from Opencv tutorial web site, just use one simple function to convert data 32FC1 to 8UC1, and the result looks good as same sam the image of depth/image from the other openni2_camera source
 double minVal, maxVal;
    minMaxLoc(cv_ptr->image, &minVal, &maxVal); //find minimum and maximum intensities
    //Mat draw;
    cv_ptr->image.convertTo(blur_img, CV_8U, 255.0/(maxVal - minVal), -minVal * 255.0/(maxVal - minVal)); 

P/S: minVal, maxVal you can set it constant in mm based on your camera properties

Originally posted by domikilo with karma: 89 on 2014-03-01
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by WillAndrew on 2015-07-02:
Thanks! this fixed the issues I've been having
Comment by 张京林 on 2017-01-10:
I try to use it to convert camera/depth/image_raw, which is 16UC1 data, to OpenCV format, but it doesn't work.

