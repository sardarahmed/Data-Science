Q:

Reading PointCloud2 in C++

How do you read a PointCloud2 in C++? I'm interested in getting the depth(z point). Maybe an equivalent of this: reading pointcloud2 in python.

Originally posted by Homer Manalo on ROS Answers with karma: 475 on 2011-03-02
Post score: 1

A:

If you know what type of points you expect inside the PointCloud2, you can use the information from the pcl_ros wiki page for Subscribing to point clouds.

Originally posted by Eric Perko with karma: 8406 on 2011-03-02
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Homer Manalo on 2011-03-03:
For some reason, I did not notice that. Thanks.
Comment by Eric Perko on 2011-03-03:
Note that that is an optical frame, with Z pointing along the camera's viewing axis, not a standard body frame. In that situation, the camera frame should be specified with an _optical suffix, as noted in REP 105: http://www.ros.org/reps/rep-0103.html#coordinate-frame-conventions .
Comment by Eric Perko on 2011-03-03:
That warning isn't a big deal. The question I had was what sort of reference frame the PointCloud was using. According to the diagram and docs at http://www.ros.org/wiki/stereo_image_proc#stereo_image_proc.2BAC8-common.Nodes , /camera ought to be the frame of the left camera in the pair.
Comment by Homer Manalo on 2011-03-03:
The frame_id is [camera]. I actually have a warning message on the rviz console window saying [camera] is not a fully qualified frame_id (resolved locally to [/camera]). I have not setup any tf here.
Comment by Eric Perko on 2011-03-03:
What is the reported frame_id in the PointCloud2 you are reading?
Comment by Homer Manalo on 2011-03-03:
I'm just using the pointcloud from stereo_image_proc. Where is the origin here? (top-left corner? top-right corner? center of the image?)
Comment by dornhege on 2011-03-02:
That depends on whoever sends the pointcloud and what frame the data is in. For sensors the origin is usually (0,0,0). A negative y is also not unexpected. It could mean a point right or below the sensor (depending on the coordinate system)
Comment by Homer Manalo on 2011-03-02:
Is the origin(0.0, 0.0) of points x and y at the center of frame? I'm seeing a negative y point here.
Comment by surabhi96 on 2018-07-19:
@Eric I did not understand your solution. Can you elaborate? Thanks

