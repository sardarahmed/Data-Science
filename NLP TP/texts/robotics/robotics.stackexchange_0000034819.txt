Q:

PR2 planning_component_visualizer

I am trying to run the planning component visualizer on a PR2. I couldn't find a PR2 specific tutorial, so I tried to follow the guidelines on this tutorial. I have a launch file that reads:
<launch>
    <include file="$(find planning_environment)/launch/planning_environment_visualization_prerequisites.launch" />
    <node pkg="rviz" type="rviz" name="rviz_planning_components" args="-d $(find a-custom-location)/config/planning_components_visualizer.vcg" />
    <node pkg="move_arm" type="planning_components_visualizer" name="planning_components_visualizer" output="screen" />
</launch>

However the node planning_components_visualizer hangs with the message:

waitForService: Service
[/pr2_left_arm_cartesian_kinematics/get_constraint_aware_ik]
has not been advertised, waiting...

I couldn't find a launch file for this service. Could anybody tell me how to launch the component visualizer on the PR2?

Originally posted by Lorenzo Riano on ROS Answers with karma: 1342 on 2011-10-10
Post score: 0

A:

Lorenzo,
The planning_components_visualizer is meant to be run in concert with the Arm Navigation Wizard, which will auto-generate all the necessary launch files - they get pretty complicated and will be painful to generate by hand.  If you want to use it with the PR2 I'd recommend running this tutorial - [Arm Navigation Wizard](http://www.ros.org/wiki/arm_navigation/Tutorials/Automatically Generating Arm Navigation Configurations/Planning Description Configuration Wizard ) - it will tell you how to run it will a copy of the PR2 urdf, and you'll get an auto-generated application that will contain a planning_components_visualizer, as well as an rviz config.  You can then also, with a bit of additional work, use the warehouse viewer, which is substantially more general and powerful than the planning_components_visualizer.
Note that by running the tutorial your application will contain a KDL-based numeric IK solver which is not as fast as the PR2 custom solver.  You can replace the solver by changing the kinematics solver in your autogenerated constraint_aware_kinematics.launch file from "arm_kinematics_constraint_aware/KDLArmKinematicsPlugin" to "pr2_arm_kinematics/PR2ArmKinematicsPlugin" .

Originally posted by egiljones with karma: 2031 on 2011-10-10
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Lorenzo Riano on 2011-10-10:
Ok, removing the cartesian groups solved the problem, thanks.
Comment by egiljones on 2011-10-10:
Ah - I didn't realize you were launching this along side a bunch of other components.  So the problem is that in pr2_arm_navigation/pr2_arm_navigation_config/pr2_planning_description.yaml there are groups defined for right_arm_cartesian and left_arm_cartesian - you can safely delete these, and things should work.  I will likely do a release with them deleted once I ascertain that it doesn't break anything.
Comment by Lorenzo Riano on 2011-10-10:
Thank for your answer. I started with the wizard first, and taken away bits that are already implemented on the PR2.  I guess it wasn't enough. I still don't know what node provides the cartesian_kinematics. Do you know what on the PR2 provides this service?

