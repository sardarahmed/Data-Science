Q:

Cartographer obstacle detection

Hi there,
i already worked with rtabmap which is working pretty fine. Many thanks to @Dragonslayer for that. I also figured out my problem with the /tf tree so this part seems to work fine. I have a turtlebot3 burger and a kinect camera. I'm now trying to use cartographer. My current problem is that the pointcloud that is created by the kinect also shows points not only infront of the camera but also on the ground. This is working great with rtabmap but cartographer is using the groundpoints as obstacles. Is there a way to let's say exclude ground points ? Or modify the costmaps to exclude these points as obstacles ? What would be the best way to start about this problem ?
Many thanks four your help. Here is my current lua configuration file. I also included the local and global costmap configuration files.
EDIT:
The solution to this problem, is pretty easy, so i will update my question. In 2D mode Cartographer offers these parameters to limit the point cloud. When using the 3D mode it's possible to use something like pcl/PassThrough pcl_manager.
TRAJECTORY_BUILDER_2D.max_z = 0.5 
TRAJECTORY_BUILDER_2D.min_z = 0.0

Originally posted by Chris91 on ROS Answers with karma: 15 on 2020-05-23
Post score: 0

A:

Well, there is link text pointcloud_to_laserscan package, there is also a depthimge to laserscan package if that might suit you better. And costmap2d has obstacle hight parameters. link text. You have to read up on this, as they all have their pro and cons. Specially a tilted camera might get tricky, but this shouldnt be the problem with turtlebot.

Originally posted by Dragonslayer with karma: 574 on 2020-05-23
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Chris91 on 2020-05-23:
Hey, i already saw those packages. But when using laserscan data aren't we using 2D mapping ... The paramters are a solution to increase the navigation result. The static map is still buggy. I wonder how RTAB-Map is doing so much better.
Comment by Dragonslayer on 2020-05-23:
Whats your goal exactly? If you have a robot that only moves in 2d space you dont need more then 2d. To take the robots hight into consideration and 3d data you might look into voxel obstacle layers in costmap2d. As I understand it its similar to using rtabmaps projection map. But this is navigation. In 3d space the floor is of course an obstacle in the z dimension.
Comment by Chris91 on 2020-05-26:
Using the point_cloud_to_laserscan node is working pretty good actually will try to improve that and give some feedback.

