Q:

Catkin_make doesn't generate .h files from the srv tutorial

Followed the srv tutorial step by step, catkin_make finishes successfully but the <package_name>/include folder is empty. Any ideas why that might be happening?
Edit: link to the tutorial
http://wiki.ros.org/ROS/Tutorials/CreatingMsgAndSrv#Common_step_for_msg_and_srv
Edit2: What I did basically was to follow the flow of the ROS tutorials. The package containing the service is "beginner_tutorials". After being unsuccessful I decided to create a new empty package "servoservice" to hold the service. Below can be found the xml and the CMakeLists.txt that I used to create the service in "servoservice":
Edit3: Sorry for the formatting, my markdown skills are poor to say the least.
Edit4: The file exists in ROOT_OF_WORKSPACE/devel/include/PKG_NAME but it's empty. Meaning it's an empty .h file.
Edit5: I tried the same sequence on a ubuntu 13.04 machine and the .h file was generated successfully. Could it be the python interpreter? My machine has anaconda python installed.
<?xml version="1.0"?>
<package>
  <name>servoservice</name>
  <version>0.0.0</version>
  <description>The servoservice package</description>

  <maintainer email="ntinos@todo.todo">ntinos</maintainer>

  <license>TODO</license>

  <build_depend>message_generation</build_depend>

  <run_depend>message_runtime</run_depend>

  <buildtool_depend>catkin</buildtool_depend>
  <build_depend>roscpp</build_depend>
  <build_depend>rospy</build_depend>
  <build_depend>std_msgs</build_depend>
  <run_depend>roscpp</run_depend>
  <run_depend>rospy</run_depend>
  <run_depend>std_msgs</run_depend>

  <export>
  </export>
</package>

CMakeLists.txt
cmake_minimum_required(VERSION 2.8.3)
project(servoservice)

find_package(catkin REQUIRED COMPONENTS
  roscpp
  rospy
  std_msgs
  gencpp
  message_generation
)

## Generate services in the 'srv' folder
add_service_files(
   FILES
   AddTwoInts.srv
)

## Generate added messages and services with any dependencies listed here
generate_messages(
   DEPENDENCIES
   std_msgs
 )

catkin_package(
#  INCLUDE_DIRS include
#  LIBRARIES servoservice
#  CATKIN_DEPENDS roscpp rospy std_msgs
#  DEPENDS system_lib
)

## Specify additional locations of header files
## Your package locations should be listed before other locations
# include_directories(include)
include_directories(
  ${catkin_INCLUDE_DIRS}
)

## Declare a cpp library
# add_library(servoservice
#   src/${PROJECT_NAME}/servoservice.cpp
# )

## Declare a cpp executable
# add_executable(servoservice_node src/servoservice_node.cpp)

## Add cmake target dependencies of the executable/library
## as an example, message headers may need to be generated before nodes
# add_dependencies(servoservice_node servoservice_generate_messages_cpp)

## Specify libraries to link a library or executable target against
# target_link_libraries(servoservice_node
#   ${catkin_LIBRARIES}
# )

and the output of the console from the build process:
[  0%] Built target std_msgs_generate_messages_py
[  0%] Built target std_msgs_generate_messages_cpp
[  6%] Built target servo
[  6%] Built target std_msgs_generate_messages_lisp
[ 33%] Built target beginner_tutorials_generate_messages_py
[ 46%] Built target servoservice_generate_messages_py
[ 66%] [ 66%] Built target beginner_tutorials_generate_messages_cpp
Built target servoservice_generate_messages_cpp
[ 73%] Built target servoservice_generate_messages_lisp
[ 86%] Built target beginner_tutorials_generate_messages_lisp
Scanning dependencies of target listener
Scanning dependencies of target talker
Scanning dependencies of target servoservice_generate_messages
Scanning dependencies of target beginner_tutorials_generate_messages
[ 86%] Built target servoservice_generate_messages
[ 86%] Built target beginner_tutorials_generate_messages
[100%] [100%] Building CXX object beginner_tutorials/CMakeFiles/listener.dir/src/listener.cpp.o
Building CXX object beginner_tutorials/CMakeFiles/talker.dir/src/talker.cpp.o
Linking CXX executable /home/ntinos/hydro_ws/devel/lib/beginner_tutorials/talker
Linking CXX executable /home/ntinos/hydro_ws/devel/lib/beginner_tutorials/listener
[100%] Built target talker
[100%] Built target listener

error while building (the second time I run catkin_make it completes successfully):
Traceback (most recent call last):
  File "/opt/ros/hydro/share/gencpp/cmake/../../../lib/gencpp/gen_cpp.py", line 49, in <module>
    srv_template_map)
  File "/opt/ros/hydro/lib/python2.7/dist-packages/genmsg/template_tools.py", line 212, in generate_from_command_line_options
    generate_from_file(argv[1], options.package, options.outdir, options.emdir, options.includepath, msg_template_dict, srv_template_dict)
  File "/opt/ros/hydro/lib/python2.7/dist-packages/genmsg/template_tools.py", line 155, in generate_from_file
    _generate_srv_from_file(input_file, output_dir, template_dir, search_path, package_name, srv_template_dict, msg_template_dict)
  File "/opt/ros/hydro/lib/python2.7/dist-packages/genmsg/template_tools.py", line 114, in _generate_srv_from_file
    search_path)
  File "/opt/ros/hydro/lib/python2.7/dist-packages/genmsg/template_tools.py", line 76, in _generate_from_spec
    interpreter = em.Interpreter(output=ofile, globals=g, options={em.RAW_OPT:True,em.BUFFERED_OPT:True})
AttributeError: 'module' object has no attribute 'Interpreter'
make[2]: *** [/home/ntinos/hydro_ws/devel/include/foobar/AddTwoInts.h] Error 1
make[1]: *** [foobar/CMakeFiles/foobar_generate_messages_cpp.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
[100%] Generating Python srv __init__.py for foobar
[100%] Built target foobar_generate_messages_py
make: *** [all] Error 2
Invoking "make" failed

Originally posted by kokirits on ROS Answers with karma: 290 on 2014-12-23
Post score: 1

Original comments
Comment by gvdhoorn on 2014-12-23:
Please add some more info to your OP, such as output on the console of your build process, layout of your package(s) etc. Without that, we'd all be only guessing ..
Comment by gvdhoorn on 2014-12-23:
I've fixed the formatting a bit. You'll want to put 4 spaces in front of anything like code or console output (can be easily done using the '101010' button on the formatting bar). Also: no need to include all the boilerplate comments in any of those files.
Comment by Dirk Thomas on 2014-12-23:
No files should ever be generated in the source folder of your package. Have you looked in the folder ROOT_OF_YOUR_WORKSPACE/devel/include/PKGNAME?
Comment by kokirits on 2014-12-24:
@Dirk Thomas:  The .h file is generated in workspace/devel/include/pkgname but it's empty.
Comment by emreay on 2014-12-24:
Try catkin_make --force-cmake
Comment by Dirk Thomas on 2014-12-25:
Try to remove the "build" and "deve' folder and invoke "catkin_make" again. If that doesn't help please consider to share you "src" folder using e.g. a GitHub repo.
Comment by kokirits on 2014-12-26:
I think the problem is fixed now. To my knowledge, the anaconda python interpreter messed with the whole thing. I removed anaconda and ros, and then apt-get ros again. Thanks everyone for the intuition.
@Dirk Thomas: I did this multiple times but with no result.
@emreay: Tried it made no difference

A:

I had this problem and then realized I was missing the generate_messages().
I'll make a standalone github repo with the tutorial example in it and post a link here later.

Originally posted by lucasw with karma: 8729 on 2016-09-11
This answer was ACCEPTED on the original site
Post score: 1

