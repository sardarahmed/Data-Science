Q:

Advice on FANUC CR-35iA and fanuc package

Hello,
Our research group is considering to purchase a FANUC CR-35iA collaborative robot and we have been looking into FANUC software to determine if it suits our needs. We are planning to use fanuc package to communicate with the robot but we are also wondering if there are any limitations with it. It seems like FANUC does not publicly distribute their documentation so we will be grateful if you can give us your opinion on the questions below.

We found out that it is possible to update the joint and cartesian position values by updating corresponding registers from an external PC. Is updating registers enough to generate motion or will we need to create a KAREL script that will communicate with the external PC? What is the control loop frequency?
Is it possible to send joint or cartesian velocities from an external PC?
Will purchasing the robotic arm and its control box be sufficient to control the robot via TCP/IP? Is there any particular hardware/software (eg. PCDK) combination that we need to request from FANUC?
Will the collaborative features of the robot (eg. collision detection) be active when we are controlling the robot using the fanuc package?
Is there any documentation that you can share with us which can give us a better understanding of how FANUC's software works?

Thanks for your time and your contribution to the community. We are looking forward to hearing your comments.

Originally posted by bbalci on ROS Answers with karma: 3 on 2020-02-18
Post score: 0

Original comments
Comment by Fetullah Atas on 2020-02-18:
I use a LRMate 200ID Fanuc robot,
if you are planning to couple it with ROS tightly, I don't suggest you FANUC robots, really. Consider something else that respects and recognizes ROS.  I don't know what controller you are going to use, the latest ROS driver available for FANUC controllers , AFAIK is  fanuc_driver_exp. Which works OK but have certain limitations(see issues on the page). And for TCP/IP, you will need external software (R648 if I remember correctly)  to be installed to controller.

A:

1. We found out that it is possible to update the joint and cartesian position values by updating corresponding registers from an external PC. Is updating registers enough to generate motion or will we need to create a KAREL script that will communicate with the external PC? What is the control loop frequency?

You don't tell us anything about what your requirements and constraints are, but if you're just looking to move the robot or an EEF around, then yes, you could write a TP program that would continuously move to a PR[] and it will try to "track" any updates to that PR. Note however that it will be very difficult to control the velocity with which the robot will do this. It will also be difficult to control the trajectory tracking in general: you'll need to configure the motion as 100% velocity and CNT100 (which basically means that the controller is free to do whatever it needs/wants wrt accurately following a commanded motion and associated velocities).
As to reachable control frequency: that depends on a nr of factors and I can't put any nrs to that.

2. Is it possible to send joint or cartesian velocities from an external PC?

No. I know of no publicly available velocity control interface for Fanuc controllers.

3. Will purchasing the robotic arm and its control box be sufficient to control the robot via TCP/IP? Is there any particular hardware/software (eg. PCDK) combination that we need to request from FANUC?

If you're asking in the context of ROS (and fanuc_driver_exp or the older fanuc_driver): you'll need to make sure you have R648 (or User Socket Messaging) on the controller.
If you're asking in general: you could also use a fieldbus to transfer register data. It would be more involved, but certainly possible.

4. Will the collaborative features of the robot (eg. collision detection) be active when we are controlling the robot using the fanuc package?

They will always be active, as both fanuc_driver as well as fanuc_driver_exp are simple, user-level programs. They do not change anything wrt how the controller operates, nor do they deactivate or circumvent any (safety) functionality of the controller.
Whether the collaborative features can be used meaningfully when controlling the robot externally I can't say. That would depend on the application and how you configure things. There is currently no integration between any collaborative aspects of Fanuc robots and ROS though.

5. Is there any documentation that you can share with us which can give us a better understanding of how FANUC's software works?

Unfortunately Fanuc is not very open nor are they willing to share documentation, unless you buy one of their robots. It would not be my place to send you any documentation.
I would recommend you reach out to your local branch office and mention to them you are interested in buying one of their robots. They may be willing to provide you with the information you are after.

Originally posted by gvdhoorn with karma: 86574 on 2020-02-19
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by gvdhoorn on 2020-02-19:
Depending on what you want to do with your Fanuc, you may want to look into J519 or Stream Motion. It's much harder to use than other external interfaces for Fanuc robots, but would give you much better control over the motion and trajectory tracking.
It's most likely not available for the CR series of Fanuc robots though.
Comment by gvdhoorn on 2020-02-20:
And I would also strongly recommend to figure out whether you really need to use Fanuc robots for whatever application you have.
As @atas mentioned, there are ways to integrate them into ROS applications, but for research, where you're probably going to want to control it directly, without much latency, and do dynamic things with it, Fanuc may not be the best choice (unless you go the J519 route, but that has its own drawbacks).
Vendors like ABB (EGM, RWS) and KUKA (RSI, FRI, Smart/Direct Servo) have a much longer tradition of offering external motion interfaces, also with their cobot offerings. You may want to evaluate those as well.
Comment by bbalci on 2020-02-20:
Thank you @atas and @gvdhoorn for your detailed and insightful answers! Our research focuses on force-controlled metal finishing processes for custom manufacturing (preferably) using collaborative robots. We have been using a UR10, which has a fairly open software that allowed us to implement force control easily. However, UR10 also brings some limitations in terms of payload, reach and stiffness. Our main intention with a FANUC was to solve these issues while keeping the collaborative feature. What I'm getting from your answers is FANUC might not be the best option for us even though it's collaborative.
Comment by gvdhoorn on 2020-02-21:
As the situation stands, I would probably advice you to check whether you have a concrete requirement to use Fanuc. Or a desire (could be anything).
If that's the case, you could still decide to go for this brand. But keep in mind what I wrote in my answer.

Our research focuses on force-controlled metal finishing processes for custom manufacturing (preferably) using collaborative robots.

Unless you can use J519 (which is incompatible with collaborative robots afaik), I would not do this with Fanucs (except when using Fanucs built-in support for force-control, but that isn't really suited for research use (ie: completely closed)).

We have been using a UR10, which has a fairly open software that allowed us to implement force control easily

When it comes to integration with external systems (for the purpose of external motion control), I believe there is no comparison between UR and Fanuc.
Comment by gvdhoorn on 2020-02-21:\

limitations in terms of payload

There are many more robot brands. Even brands with cobots with higher payloads than the 10 of the UR (there's even a UR16e, with a 16 Kg payload).

