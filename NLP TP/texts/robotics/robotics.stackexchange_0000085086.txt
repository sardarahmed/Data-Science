Q:

Building tf_tree

Hi!
I am somewhat confused on how to setup an appropriate tf tree for my application. I am using the iai_kinect2 package (https://github.com/code-iai/iai_kinect2) to run my kinect v2s. With the option "publish_tf" set to true, the bridge will publish the following transforms (sorry, cannot upload pictures):

camera1_link -> camera1_rgb_optical_frame -> camera1_ir_optical_frame
camera2_link -> camera2_rgb_optical_frame -> camera2_ir_optical_frame

I now calibrated my Kinects using images from the *_ir_optical_frame. So I thought I could include wolrd->camera1_ir_optical_frame and world -> camera2_ir_optical_frame into my tf tree. Which, since each frame is only allowed to have one parent, does not work as intended.
My question now is: What is the most elegant way of building the tf tree I want?
Thanks!
PS. I am using ROS1 Kinetic on a Ubuntu 16.04 machine (Ubuntu 4.4.0-31.50-generic 4.4.13)

Originally posted by JayDe on ROS Answers with karma: 85 on 2018-02-01
Post score: 0

A:

The camera_link-frame is the parent frame of your camera-subtree so you should use this one to attach your camera to the tf-tree.
You use the world->IR Transformation only as an intermediate result to compute the pose of the camera_link-frame relative to the world and then add the world->camera_link-Transformation to the tf-tree.
so roughly T(world->camera_link)        =    T(world->IR)  *  T^-1(camera_link->IR)

Originally posted by NEngelhard with karma: 3519 on 2018-02-03
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by JayDe on 2018-02-05:
Hi! Thanks, I suppose that is how you do it. Even though it introduces increased possibility for errors when the transformation between rgb and ir is not very good/precise.
Comment by NEngelhard on 2018-02-05:
You would have the same error for the rgb-camera if you use ir-frame as parent for the subtree.

