Q:

How to map with hector_mapping and just a Lidar

Hi, I just got a lidar (ydlidar x4), and would like to use it to map (just holding the lidar and raspberry pi myself and walk around the room without odometry)..I'm very new to ROS. I have read quite a lot posts...but still could fix the errors..
The lidar is connected to raspberry pi 3, and the scanning data is successfully shown in rviz. But as I tried with hector
_slam, I got an error:
[ INFO] [1539142958.281154496]: lookupTransform base_link to laser_frame timed out. Could not transform laser scan into base_frame.
[ WARN] [1539142958.855603123]: No transform between frames /map and /base_link available after 20.009138 seconds of waiting. This warning only prints once.

To start with hector_slam, I roslaunch the all_node.launch file (from another tutorial) below:
<launch>

  <include file="$(find ydlidar)/launch/lidar.launch" />
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom" 
    args="0.0 0.0 0.0 0 0 0.0 /odom /base_link 40" />
  <node pkg="tf" type="static_transform_publisher" name="base_frame_laser" 
    args="0.0 0.0 0.0 0 0 0.0 /base_link /laser_frame 40" />
  <include file="$(find hector_mapping)/launch/mapping_default.launch" />
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find ydlidar)/launch/lidar.rviz" />
  <include file="$(find hector_geotiff)/launch/geotiff_mapper.launch" />

</launch>

While for the mapping default.launch:
<?xml version="1.0"?>

<launch>
  <arg name="tf_map_scanmatch_transform_frame_name" default="scanmatcher_frame"/>
  <arg name="base_frame" default="base_link"/>
  <arg name="odom_frame" default="base_link"/>
  <arg name="pub_map_odom_transform" default="true"/>
  <arg name="scan_subscriber_queue_size" default="5"/>
  <arg name="scan_topic" default="scan"/>
  <arg name="map_size" default="2048"/>

  <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">

    <!-- Frame names -->
    <param name="map_frame" value="map" />
    <param name="base_frame" value="$(arg base_frame)" />
    <param name="odom_frame" value="$(arg odom_frame)" />

    <!-- Tf use -->
    <param name="use_tf_scan_transformation" value="true"/>
    <param name="use_tf_pose_start_estimate" value="false"/>
    <param name="pub_map_odom_transform" value="$(arg pub_map_odom_transform)"/>

    <!-- Map size / start point -->
    <param name="map_resolution" value="0.050"/>
    <param name="map_size" value="$(arg map_size)"/>
    <param name="map_start_x" value="0.5"/>
    <param name="map_start_y" value="0.5" />
    <param name="map_multi_res_levels" value="2" />

    <!-- Map update parameters -->
    <param name="update_factor_free" value="0.4"/>
    <param name="update_factor_occupied" value="0.7" />    
    <param name="map_update_distance_thresh" value="0.2"/>
    <param name="map_update_angle_thresh" value="0.9" />
    <param name="laser_z_min_value" value = "-1.0" />
    <param name="laser_z_max_value" value = "1.0" />

    <!-- Advertising config --> 
    <param name="advertise_map_service" value="true"/>

    <param name="scan_subscriber_queue_size" value="$(arg scan_subscriber_queue_size)"/>
    <param name="scan_topic" value="$(arg scan_topic)"/>
     <!-- Debug parameters -->
    <!--
      <param name="output_timing" value="false"/>
      <param name="pub_drawings" value="true"/>
      <param name="pub_debug_output" value="true"/>
    -->
    <param name="tf_map_scanmatch_transform_frame_name" value="$(arg tf_map_scanmatch_transform_frame_name)" />
      </node>
    </launch>

For your information, here's my tf tree:

Please, anyone knows how to solve this?
=========================================================
After changing the all_nodes.launch file:
 <launch>

  <include file="$(find ydlidar)/launch/lidar.launch" />
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom" 
    args="0.0 0.0 0.0 0 0 0.0 /odom /map 40" />
  <node pkg="tf" type="static_transform_publisher" name="odom_to_baselink" 
        args="0.0 0.0 0.0 0 0 0.0 /odom /base_link 40" />
  <node pkg="tf" type="static_transform_publisher" name="base_frame_laser" 
args="0.0 0.0 0.0 0 0 0.0 /base_link /base_footprint 40" />
  <include file="$(find hector_mapping)/launch/mapping_default.launch" />
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find ydlidar)/launch/lidar.rviz" />
  <include file="$(find hector_geotiff)/launch/geotiff_mapper.launch" />

</launch>

==========================================================
summary shown in the terminal after implementing Delb's launch file under the EDIT:
SUMMARY
========

PARAMETERS
 * /hector_geotiff_node/draw_background_checkerboard: True
 * /hector_geotiff_node/draw_free_space_grid: True
 * /hector_geotiff_node/geotiff_save_period: 0.0
 * /hector_geotiff_node/map_file_base_name: hector_slam_map
 * /hector_geotiff_node/map_file_path: /home/arnold/ydli...
 * /hector_geotiff_node/plugins: hector_geotiff_pl...
 * /hector_mapping/advertise_map_service: True
 * /hector_mapping/base_frame: base_link
 * /hector_mapping/laser_z_max_value: 1.0
 * /hector_mapping/laser_z_min_value: -1.0
 * /hector_mapping/map_frame: map
 * /hector_mapping/map_multi_res_levels: 2
 * /hector_mapping/map_resolution: 0.05
 * /hector_mapping/map_size: 2048
 * /hector_mapping/map_start_x: 0.5
 * /hector_mapping/map_start_y: 0.5
 * /hector_mapping/map_update_angle_thresh: 0.9
 * /hector_mapping/map_update_distance_thresh: 0.2
 * /hector_mapping/odom_frame: base_link
 * /hector_mapping/pub_map_odom_transform: True
 * /hector_mapping/scan_subscriber_queue_size: 5
 * /hector_mapping/scan_topic: scan
 * /hector_mapping/tf_map_scanmatch_transform_frame_name: scanmatcher_frame
 * /hector_mapping/update_factor_free: 0.4
 * /hector_mapping/update_factor_occupied: 0.7
 * /hector_mapping/use_tf_pose_start_estimate: False
 * /hector_mapping/use_tf_scan_transformation: True
 * /hector_trajectory_server/source_frame_name: /base_link
 * /hector_trajectory_server/target_frame_name: /map
 * /hector_trajectory_server/trajectory_publish_rate: 0.25
 * /hector_trajectory_server/trajectory_update_rate: 4.0
 * /rosdistro: kinetic
 * /rosversion: 1.12.13
 * /ydlidar_node/angle_fixed: True
 * /ydlidar_node/angle_max: 180.0
 * /ydlidar_node/angle_min: -180.0
 * /ydlidar_node/baudrate: 115200
 * /ydlidar_node/frame_id: laser_frame
 * /ydlidar_node/frequency: 7.0
 * /ydlidar_node/heartbeat: False
 * /ydlidar_node/ignore_array: 
 * /ydlidar_node/low_exposure: False
 * /ydlidar_node/port: /dev/ydlidar
 * /ydlidar_node/range_max: 16.0
 * /ydlidar_node/range_min: 0.08
 * /ydlidar_node/resolution_fixed: True
 * /ydlidar_node/samp_rate: 9

NODES
  /
    base_footprint_to_base_link (tf/static_transform_publisher)
    base_link_to_laser (tf/static_transform_publisher)
    hector_geotiff_node (hector_geotiff/geotiff_node)
    hector_mapping (hector_mapping/hector_mapping)
    hector_trajectory_server (hector_trajectory_server/hector_trajectory_server)
    map_to_odom (tf/static_transform_publisher)
    odom_to_basefootprint (tf/static_transform_publisher)
    rviz (rviz/rviz)
    ydlidar_node (ydlidar/ydlidar_node)

auto-starting new master
process[master]: started with pid [3656]
ROS_MASTER_URI=http://localhost:11311

setting /run_id to c3a29ae2-ccfb-11e8-a545-b827ebe1b2ff
process[rosout-1]: started with pid [3669]
started core service [/rosout]
process[ydlidar_node-2]: started with pid [3672]
process[map_to_odom-3]: started with pid [3678]
process[odom_to_basefootprint-4]: started with pid [3683]
process[base_footprint_to_base_link-5]: started with pid [3697]
process[base_link_to_laser-6]: started with pid [3703]
[YDLIDAR INFO] Current ROS Driver Version: 1.3.1
[YDLIDAR INFO] Current SDK Version: 1.3.2
process[hector_mapping-7]: started with pid [3709]
process[rviz-8]: started with pid [3749]
process[hector_trajectory_server-9]: started with pid [3755]
process[hector_geotiff_node-10]: started with pid [3765]
[ INFO] [1539224237.884819225]: Waiting for tf transform data between frames /map and /base_link to become available
HectorSM map lvl 0: cellLength: 0.05 res x:2048 res y: 2048
[ INFO] [1539224238.886026041]: Finished waiting for tf, waited 1.001317 seconds
HectorSM map lvl 1: cellLength: 0.1 res x:1024 res y: 1024
[ INFO] [1539224240.035527011]: HectorSM p_base_frame_: base_link
[ INFO] [1539224240.039224911]: HectorSM p_map_frame_: map
[ INFO] [1539224240.039448347]: HectorSM p_odom_frame_: base_link
[ INFO] [1539224240.039624805]: HectorSM p_scan_topic_: scan
[ INFO] [1539224240.039791106]: HectorSM p_use_tf_scan_transformation_: true
[ INFO] [1539224240.039960324]: HectorSM p_pub_map_odom_transform_: true
[ INFO] [1539224240.040111313]: HectorSM p_scan_subscriber_queue_size_: 5
[ INFO] [1539224240.040338656]: HectorSM p_map_pub_period_: 2.000000
[ INFO] [1539224240.040493916]: HectorSM p_update_factor_free_: 0.400000
[ INFO] [1539224240.040635165]: HectorSM p_update_factor_occupied_: 0.700000
[ INFO] [1539224240.040777925]: HectorSM p_map_update_distance_threshold_: 0.200000     
[ INFO] [1539224240.040918653]: HectorSM p_map_update_angle_threshold_: 0.900000
[ INFO] [1539224240.041070111]: HectorSM p_laser_z_min_value_: -1.000000
[ INFO] [1539224240.041211048]: HectorSM p_laser_z_max_value_: 1.000000
libEGL warning: DRI2: failed to authenticate
[YDLIDAR INFO] YDLIDAR running correctly! The health status: well
[YDLIDAR INFO] Connection established in /dev/ydlidar:
Firmware version: 1.0.2
Hardware version: 1
Model: X4
Serial: 2017111300000019
[YDLIDAR INFO] Current Sampling Rate : 5K
[YDLIDAR INFO] Current Scan Frequency : 7.000000Hz
[YDLIDAR INFO] Connected to YDLIDAR on port /dev/ydlidar at 128000 
[ INFO] [1539224241.820943948]: Successfully initialized hector_geotiff MapWriter plugin TrajectoryMapWriter.
[ INFO] [1539224241.821583789]: Geotiff node started
YDLIDAR INFO] Now YDLIDAR is scanning ......

Originally posted by IvyKK on ROS Answers with karma: 39 on 2018-10-09
Post score: 1

Original comments
Comment by gvdhoorn on 2018-10-10:
@IvyKK: in the future: could you please attach images directly to your posts? That way the question is not dependent on the existence of some off-site file (or file hosting company).
I've give you enough karma to do that yourself, but I've already done it here.
Comment by IvyKK on 2018-10-10:
@gvdhoorn: Thank you so much!! Yes, I tried to upload the pic, but found that I didn't have enough karma. Thanks for offering!
Comment by kal on 2019-04-10:
hi
can you plz help me build the same projekt

A:

Directly looking at your tf tree you can say that something is wrong : you should have all your frames connected with each other. The most surprising thing is the frame base_footprint not connected with anything, yet you didn't defined it.
The issue is inside <include file="$(find ydlidar)/launch/lidar.launch" /> if you look at the content of lidar.launch here there is this node launched too :
 <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser4"
args="0.2245 0.0 0.2 0.0 0.0  0.0 /base_footprint /laser_frame 40" />

This node does the work for you to set the static transform base_footprint -> laser_frame but then you redifine a new parent to laser_frame :
<node pkg="tf" type="static_transform_publisher" name="base_frame_laser" 
    args="0.0 0.0 0.0 0 0 0.0 /base_link /laser_frame 40" />

You have two options here :

Instead of including the lidar.launch only copy/paste the ydlidar node and params part to put it in your launch file (ie removing the static_transform_publisher node)
Instead of creating a static transform base_link -> laser_frame change it to base_link -> base_footprint.

EDIT:
You have inverted the frames, map is the parent of odom. Your launch file should be :
 <launch>

    <node name="ydlidar_node"  pkg="ydlidar"  type="ydlidar_node" output="screen">
      <param name="port"         type="string" value="/dev/ydlidar"/>  
      <param name="baudrate"     type="int"    value="115200"/>
      <param name="frame_id"     type="string" value="laser_frame"/>
      <param name="angle_fixed"  type="bool"   value="true"/>
      <param name="low_exposure"  type="bool"   value="false"/>
      <param name="heartbeat"    type="bool"   value="false"/>
      <param name="resolution_fixed"    type="bool"   value="true"/>
      <param name="angle_min"    type="double" value="-180" />
      <param name="angle_max"    type="double" value="180" />
      <param name="range_min"    type="double" value="0.08" />
      <param name="range_max"    type="double" value="16.0" />
      <param name="ignore_array" type="string" value="" />
      <param name="samp_rate"    type="int"    value="9"/>
      <param name="frequency"    type="double" value="7"/>
  </node>
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom" 
    args="0.0 0.0 0.0 0 0 0.0 /map /odom 40" />
  <node pkg="tf" type="static_transform_publisher" name="odom_to_basefootprint" 
        args="0.0 0.0 0.0 0 0 0.0 /odom /base_footprint 40" />
  <node pkg="tf" type="static_transform_publisher" name="base_footprint_to_base_link" 
        args="0.0 0.0 0.0 0 0 0.0 /base_footprint /base_link 40" />
 <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" 
        args="0.2245 0.0 0.2 0.0 0.0 0.0 /base_link /laser_frame 40" />
  <include file="$(find hector_mapping)/launch/mapping_default.launch" />
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find ydlidar)/launch/lidar.rviz" />
  <include file="$(find hector_geotiff)/launch/geotiff_mapper.launch" />

</launch>

I've removed the <include file="$(find ydlidar)/launch/lidar.launch" /> because you hsould have map -> odom -> base_footprint -> base_link -> laser_frame instead of map -> odom -> base_link -> base_footprint -> laser_frame.

Originally posted by Delb with karma: 3907 on 2018-10-10
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by IvyKK on 2018-10-10:
Hi Delb
I have tried out the 2nd approach but I still got an error:
[ WARN] [1539155871.583634796]: No transform between frames /map and /base_link available after 20.005473 seconds of waiting.
Comment by IvyKK on 2018-10-10:
so I tried to insert:

This time all frames are connected, no error, but it only shows the scanning data, not the map, could you advise what the problem is? (tf tree placed in question)
Comment by IvyKK on 2018-10-10:
Delb, Thank you! There is no more error showing now, however the map is still not showing...
The tf tree now has map connected to -> odom->base_footprint->base_link->laser_frame
and also map->scanmatcher_frame...(I also put the summary in the terminal if you would like to have a look)
Comment by IvyKK on 2018-10-10:
I tried to put in

it looks like it lacks the mapping rviz, and it shows the mapping data too. gonna need some time to play around with that. Thanks!
Comment by Delb on 2018-10-11:
It's normal to have another branch in the tf tree only with the scan_matcher, and if you don't see everything in rviz it's because the rviz configuration isn't correctly done (not by you but the default file).
Comment by Delb on 2018-10-11:
Click on "Add" in the Displays panel and go to the tab "By topic" you'll see all the availables topics and you should be able to add the map. You can also directly check the OccupancyGrid values with rostopic echo to see if there aren't only -1.

