Q:

How to handle the kinect camera's vertical movement while using amcl?

According to the amcl page:

An implementation detail: on receipt of the first laser scan, amcl looks up the transform between the laser's frame and the base frame (~base_frame_id), and latches it forever. So amcl cannot handle a laser that moves with respect to the base.

Since the kinect camera has a motor that moves it up and down, would this cause a problem? Is there an accepted way yo deal with this? Should I just modify the pointcloud_to_laserscan node to somehow compensate for it?

Originally posted by Murph on ROS Answers with karma: 1033 on 2011-04-11
Post score: 2

A:

My solution (with help) for a tilting Kinect laserscan was to develop a nodelet that transforms the pointcloud referenced to base_link (or base_footprint) and then converts it to a laserscan using the full robot height as the elevation filter. This is all documented in the "pointcloud to laserscan with transform?" question. Search Kinect or turtlebot tags.
Now I am working on panning the Kinect to produce a full 180 degree laserscan, as the 60 degree field of view of the Kinect is limiting for AMCL and map making. Both of these depend on a functional tf tree that includes the Kinect pan/tilt mechanism and is updated from the hardware interface program.

Originally posted by Bart with karma: 856 on 2011-04-11
This answer was ACCEPTED on the original site
Post score: 0

