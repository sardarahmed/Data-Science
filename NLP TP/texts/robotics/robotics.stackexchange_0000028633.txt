Q:

What does the sensor tag do?

I understand a link tag adds a block of matter into the simulation. The joint tag adds a connection between the two links. But what does the sensor tag actually do?
When look at this chunk of code for example
<sensor name='contact_sensor' type='contact'>
    <always_on>true</always_on>
    <update_rate>10</update_rate>
    <contact>
        <collision>caster_link_collision</collision>
        <topic>/gazebo/caster_bumper</topic>
    </contact>
    <plugin name="gazebo_ros_bumper_controller" filename="libgazebo_ros_bumper.so">
        <frameName>world</frameName>
        <bumperTopicName>/gazebo/caster_bumper</bumperTopicName>
    </plugin>
</sensor>

This sensor loads a plugin. This plugin has a bumperTopicName tag with the same topic name as the sensor tag has in its contacts/topic tag. I can look into the plugin's source code and see what it does with it's tags. But I have no idea what happens with the information inside the sensor tag.

Originally posted by kumpakri on Gazebo Answers with karma: 755 on 2018-11-02
Post score: 0

A:

The <sensor> tag adds a sensor to the link, which usually publishes the sensor readings to a Gazebo Transport topic.
According to the configurations of your contact sensor, it will publish messages to the /gazebo/caster_bumper Gazebo topic whenever the link's caster_link_collision touches something. That's the sensor's basic functionality and it will work even if you remove the <plugin> tag.
Adding a plugin to a sensor lets the user extend the sensor's functionality directly in the C++ code. The referenced plugin library will be loaded together with the sensor and can tie callbacks to specific simulation events.
The functionality of plugin in your example is to publish ROS messages with the sensor readings. So the sensor on your example is publishing to 2 different transport systems: Gazebo's and ROS. The parameters inside the plugin tag only affect the plugin - in this case, they're setting the TF frame name for the readings, and the ROS topic name.
Update
Source code:

The contact sensor class: gazebo::sensors::ContactSensor
The Gazebo-ROS bumper plugin: gazebo::GazeboRosBumper

Originally posted by chapulina with karma: 7504 on 2018-11-02
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by kumpakri on 2018-11-02:
So is there a source code of the sensor available?
Comment by chapulina on 2018-11-02:
updated the answer with links to the source code

