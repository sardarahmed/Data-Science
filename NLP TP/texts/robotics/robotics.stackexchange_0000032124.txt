Q:

retrieve rgb from kinect pointcloud

Hello!
The pointcloud published at camera/rgb/points is sensed to have the rgb at the fourth float
rostopic echo /camera/rgb/points/fields
- 
  name: x
  offset: 0
  datatype: 7
  count: 1
- 
  name: y
  offset: 4
  datatype: 7
  count: 1
- 
  name: z
  offset: 8
  datatype: 7
  count: 1
- 
  name: rgb
  offset: 16
  datatype: 7
  count: 1
---

However, when storing the float with
 float *pstep2 = (float*)&msg->data[(kk) * msg->point_step];
      xi[kk] = pstep2[0]; //x
      yi[kk] = pstep2[1]; //y
      zi[kk] = pstep2[2]; //z
      ci[kk] = pstep2[3]; //rgb 

and printing out the float shows how all of them are set to zero.
How can we retrieve the associated rgb values for each 3d point of the pointcloud output by the kinect?

Originally posted by quimnuss on ROS Answers with karma: 169 on 2011-06-08
Post score: 1

A:

Yes, we knew that, but the float should be non-zero anyway. Actually using the union
typedef union
  {
    struct /*anonymous*/
    {
      unsigned char Blue;
      unsigned char Green;
      unsigned char Red;
      unsigned char Alpha;
    };
    float float_value;
    long long_value;
  } RGBValue;

returned binary invalid types. But we've solved it converting it first to PointXYZRGB
pcl::PointCloud<pcl::PointXYZRGB>::iterator pt_iter = this->pcl_xyzrgb.begin();
for (int rr = 0; rr < (int)pcl_xyzrgb.height; ++rr) {
  for (int cc = 0; cc < (int)pcl_xyzrgb.width; ++cc, ++pt_iter) {
    pcl::PointXYZRGB &pt = *pt_iter;
    RGBValue color;
    color.float_value= pt.rgb;
    matlab_xyzrgb << rr << " " << cc << " " << pt.x*1000 << " " << pt.y*1000 << " " << pt.z*1000 << " " << (int)color.Red << " " << (int)color.Green << " " << (int)color.Blue << std::endl;
  }
}

The code above works.

Originally posted by quimnuss with karma: 169 on 2011-06-08
This answer was ACCEPTED on the original site
Post score: 0

