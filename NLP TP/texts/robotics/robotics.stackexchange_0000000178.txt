Q:

HMMs vs. CRFs to model time-series force data of robots interacting with environment?

I have a time-series of force data of robots interacting with environment objects with various textures. I would like to develop models of various textures using the time-series data to classify textures into smooth, rough, moderate, etc. categories. For this purpose, will Hidden Markov Models be sufficient or should i use Conditional Random Fields? If I decide to classify into more categories and the distinction between each of are categories are very subtle, in that case what would be a good choice? Will force-data be sufficient to capture all the information I need to classify textures into these categories?
Thanks for your replies :)

A:

Based on your problem description, both HMM (generative model) and CRF (discriminative model) will work. See this discussion for a more in-depth explanation of the two approaches:
What is the difference between a Generative and Discriminative Algorithm?
A suggestion: before choosing an algorithm, start by carefully looking at your numerical data, with MATLAB plots or similar. If the information is multi-dimensional (e.g. force values from multiple sensors), it might be the case that some dimensions (e.g. sensor reads) do not contain useful discriminative information; in this case, compress the data with Principal Component Analysis so that you will have more compact features during training and classification.
Now, with regard to your question:
The difference is that HMMs can represent each of your texture classes with several hidden variables/states, thus capturing the internal temporal evolution of each contact. We can say that HMM better model the "low-level" (intra-class) dynamics of your data. For example, in your case HMMs will permit you to explicitly model three different phases of each data acquisition: (1) start of contact between robot and object; (2) stable part of the contact; (3) end of contact and release. These phases could have different values in time, even for the same object texture, and it could make sense to separate them to improve classification results.
On the other hand, CRFs are more suited for capturing the "high-level" (inter-class) relations of your data distribution, which are sometimes important when the spatio-temporal variability is high, or when the observation features are very similar between two samples belonging to different classes.
Personally I find HMMs easier to use and I would start with those, but your mileage may vary.

If I decide to classify into more categories and the distinction between each of are categories are very subtle, in that case what would be a good choice?

In that case, CRFs can be a more robust choice (see above).

Will force-data be sufficient to capture all the information I need to classify textures into these categories?

Adding visual features (object appearance), especially if captured with high-resolution cameras, could help determine if the object has a rough texture or not.

