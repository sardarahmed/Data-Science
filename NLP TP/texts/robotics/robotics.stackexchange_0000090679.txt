Q:

Enforce consecutive execution order for gtest and rostest

My ROS package contains two test executables, one gtest and one rostest. They are specified in the CMakeLists as, catkin_add_gtest(...) and add_rostest_gtest(...) respectively.
When performing catkin run_tests my_package --no-deps, the rostest executable decides to run in the middle of the gtests. This is undesirable as the messages being published from one test could be received by another test.
Is there a way to ensure these tests are run consecutively?
Note: I tried using add_dependencies(my_gtest_target my_rostest_target), hoping it would force the gtest to execute before the rostest, but this makes no difference.
Looking at the build output, it seems two instances of run_tests.py are always run in parallel. One instance for gtest and one for rostest.

Originally posted by Magnus on ROS Answers with karma: 21 on 2019-02-27
Post score: 1

Original comments
Comment by Link on 2019-02-27:
Note that unless the --reuse-master flag is passed to rostest, unlikely in your case since it is not the default, there is essentially a separate Ros master assigned to each test. See here for more details.
Comment by Link on 2019-02-27:
Since there are different Ros masters you won't be able to receive messages from a different test.

A:

Catkin build accepts the jobs flag: https://catkin-tools.readthedocs.io/en/latest/verbs/catkin_build.html#configuring-build-jobs
So adding -j1 as a parameter to catkin run_tests fixes the issue, as it forces the tests to run on one job.

Originally posted by Magnus with karma: 21 on 2019-02-27
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Dirk Thomas on 2019-02-27:
For efficiency of testing you should rather make sure that your tests don't collide with each other. Since you have full control over them that shouldn't be too difficult.

