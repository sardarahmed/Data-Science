Q:

Differences between ros_control and arbotix driver package

1, I wonder what are the differences or similarities between ros_control and arbotix driver.
2, Does arbotix driver belong to firmware for harware ? In other words, it belongs to hardware_interface:RobotHW ?
3, ros_control covers the controller_manager and harware resource interface layer ?

Originally posted by shawnysh on ROS Answers with karma: 339 on 2017-04-27
Post score: 0

A:

ros_control is a generic robot controller package, whereas arbotix_driver is a package designed for a specific hardware device.

Originally posted by gstavrinos with karma: 641 on 2017-04-28
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by shawnysh on 2017-04-29:
Thanks for your quick reply.
I wonder why in book, ros by example volume 2, it never mentions ros_control, but uses arbotix package instead, it completes the motion planning and execution along with moveit. It seems like arbotix completes the jobs including controller manager and hardware_interface
Comment by gstavrinos on 2017-05-02:
I have not read the book, but there are many reason why a book would not include a specific ros package. (Publication date, specific robot packages etc)
Comment by shawnysh on 2017-05-03:
I check arbotix package, I notice that
The arbotix_python package also offers several controllers which add higher-level interfaces to common hardware

Does it mean arbotix package cover the functionalities of ros_control?
Link to arbotix_python
Comment by gstavrinos on 2017-05-03:
From a quick look to the source code, arbotix_python seems to be independent of ros _control, and does not seem to implement the hardware_interface interface. Thus, it should be used only with very specific hardware.

