Q:

The problem about the double messages read from a rosbag file

I want to write the time stamps of rosbag in a .txt document. There, I use two kinds of methods to do that:

Reference of C++ API link text.

Use the callback fuction to subscribe the topics from the rosbag played in another terminal.

But I meet a strange problem about the quantity of time stamps between two methods. The first method will output almost the double quantity of time stamps while that of the second one is right.
The rosbag I choose is from the datase EuRoC MH_easy_01.bag. It is about the indoor UAV for vision and INS (vio) SLAM. I check the inforamtion of it and there are 3682 messages for two cameras.
path:        MH_01_easy.bag
version:     2.0
duration:    3:06s (186s)
start:       Jun 25 2014 03:02:59.81 (1403636579.81)

end:         Jun 25 2014 03:06:06.70 (1403636766.70)
size:        2.5 GB
messages:    47283
compression: none [2456/2456 chunks]
types:       geometry_msgs/PointStamped [c63aecb41bfdfd6b7e1fac37c7cbe7bf]
             sensor_msgs/Image          [060021388200f6f0f447d0fcd9c64743]
             sensor_msgs/Imu            [6a62c6daae103f4ff57a132d6f95cec2]
topics:      /cam0/image_raw    3682 msgs    : sensor_msgs/Image         
             /cam1/image_raw    3682 msgs    : sensor_msgs/Image         
             /imu0             36820 msgs    : sensor_msgs/Imu           
             /leica/position    3099 msgs    : geometry_msgs/PointStamped

For the fist method, I get almost double messages (7364) and for the second one I get the same number of rosbag file. And the double number has a strange phenomenon that each message has a copy. So, it has the double number.
My environment is Ubuntu 16.05 and ROS Kinetic. Two method codes are in the following:
The first one of C++ API
#include <ros/ros.h>
#include <rosbag/bag.h>
#include <rosbag/view.h>
#include <sensor_msgs/Image.h>
#include <sensor_msgs/Imu.h>

#include <boost/foreach.hpp>

#define foreach BOOST_FOREACH

#include <string>
#include <vector>
#include <stdio.h>

int main (int argc, char ** argv)
{
    //Initiliaze the node and bag
    ros::init(argc,argv,"read");
    ros::NodeHandle n;
    rosbag::Bag bag;
bag.open("/home/cyx/dataset/MH_01_easy.bag");
// bag.open("data.bag");

ROS_INFO("Open the bag");

FILE *fpOut0, *fpOut1, *fpout2;
fpOut0=fopen("cam0_MH.txt", "w");
fpOut1=fopen("cam1_MH.txt", "w");
fpout2=fopen("imu_MH.txt", "w");

//Topics name in the rosbag
std::vector<std::string> topics;
topics.push_back(std::string("/cam0/image_raw"));
topics.push_back(std::string("/cam1/image_raw"));
topics.push_back(std::string("/imu0"));

rosbag::View view(bag, rosbag::TopicQuery(topics));

ROS_INFO("Start to read");
//read the time stamp and write them to .txt
foreach(rosbag::MessageInstance const m, view)
{
    sensor_msgs::Image::ConstPtr img0 = m.instantiate<sensor_msgs::Image>();
    sensor_msgs::Image::ConstPtr img1 = m.instantiate<sensor_msgs::Image>();
    sensor_msgs::Imu::ConstPtr imu = m.instantiate<sensor_msgs::Imu>();

    if(img0!=NULL)
    {
        fprintf(fpOut0, "%.9lf\n", img0->header.stamp.toSec());
        // printf("t0 = %.9lf\n", img0->header.stamp.toSec());
    }

    if(img1!=NULL)
    {
        fprintf(fpOut1, "%.9lf\n", img1->header.stamp.toSec());
        // printf("t1 = %.9lf\n", img1->header.stamp.toSec());
    }

    if(imu!=NULL)
    {
        fprintf(fpout2, "%.9lf\n", imu->header.stamp.toSec());
    }

}

bag.close();

return 1;

}

And the second one of callback function
#include <ros/ros.h>
#include <rosbag/bag.h>
#include <sensor_msgs/Imu.h>
#include <sensor_msgs/Image.h>

#include <iostream>
#include <stdio.h>

FILE *fp0, *fp1, *fp2;

void img0_callback(const sensor_msgs::ImageConstPtr &img0)
{
    fprintf(fp0, "%.9lf\n", img0->header.stamp.toSec());
}

void img1_callback(const sensor_msgs::ImageConstPtr &img1)
{
    fprintf(fp1, "%.9lf\n", img1->header.stamp.toSec());
}

void imu_callback(const sensor_msgs::ImuConstPtr &imu)
{
    fprintf(fp2, "%.9lf\n", imu->header.stamp.toSec());
}

int main (int argc, char **argv)
{
    ros::init(argc,argv,"bagOp");
    ros::NodeHandle n;
    ros::console::set_logger_level(ROSCONSOLE_DEFAULT_NAME, ros::console::levels::Info);

fp0=fopen("cam0_hd-MH.txt", "w");
fp1=fopen("cam1_hd-MH.txt", "w");
fp2=fopen("imu_hd-MH.txt", "w");

ros::Subscriber sub_img0=n.subscribe("/cam0/image_raw", 100, img0_callback);
ros::Subscriber sub_img1=n.subscribe("/cam1/image_raw", 200, img1_callback);
ros::Subscriber sub_imu=n.subscribe("/imu0", 2000, imu_callback);

ROS_INFO("wait for rosbag play");

ros::spin();

return 1;
}

I think that the rosbag file has no problem that it has only one message in one time. But I have no idea about the double message problem. Is there some one to say something or advice? Thank you!
EDIT 1ï¼šI have got the time stamp of IMU messages in both two methods above and the result is not the same as it. The number of messages of them are almost the same and it is not like the result that messages got from the bag read is the double of messages got from the callback function. I don't know why.

Originally posted by YancenBOB on ROS Answers with karma: 9 on 2019-08-12
Post score: 0

A:

Your first method is not isolating the message topics correctly which may explain the numbers of messages being twice as high as you expect.
The following lines only check if the message is an sensor_msgs::Image not which topic it is, so they will execute for both image topics:
sensor_msgs::Image::ConstPtr img0 = m.instantiate<sensor_msgs::Image>();
if(img0!=NULL)
{
    // ...
}

You want to use the rosbag::MessageInstance::getTopic() method to get the actual topic name for each message and check that instead as below.
if (m.getTopic() == "/cam0/image_raw" && m.isType<sensor_msgs::Image>())
{
    sensor_msgs::Image::ConstPtr img0 = m.instantiate<sensor_msgs::Image>();
    fprintf(fp0, "%.9lf\n", img0->header.stamp.toSec());
}

This should give you the correct number of messages.
Your second method works but message delivery in ROS is not guaranteed, so it's quite possible that some messages are dropped using this technique meaning your totals would not be correct.
Hope this fixes this for you

Originally posted by PeteBlackerThe3rd with karma: 9529 on 2019-08-13
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by YancenBOB on 2019-08-13:
Thank you very much! I follow your advice and make it! Besides, during a few test, I find that the messages dropped in the second method that you said may appear sometimes. Thank you!
Comment by PeteBlackerThe3rd on 2019-08-14:
Glad you got it working.

