Q:

Wrong base_link translation using ekf_localization_node

Hello there!
I wan't to use ekf_localization_node to fuse data from odom and IMU in my (2,0) class robot, but I have problem to set proper parameters. At first I wanted to check how covariance matrices affect the result based only on odometry data. And I have problem with translation.
After starting all nodes, when I send linear velocity command it's fine. Also rotation works good. Problem occurs when I rotate robot from the starting pose and then say robot to move in the rotated direction. Frame base_link comming from ekf move in wrong direction. But the "raw" odometry from controler with encoders is good.
Could you explain me, what am I doing wrong? Its hard to explain so I attached the rosbag.
Below is my code, and rosbag containing: /robot_0/odom, /robot_0/odom_filtered/ and /cmd_vel.
rosbag:
https://drive.google.com/file/d/1CQanWBfs2-Z1P4hsT_xgxT77E0foy65c/view?usp=sharing
Here is video showing how it looks like:
https://www.youtube.com/watch?v=NjQIzocDBrQ&feature=youtu.be
tf tree:
https://imgur.com/Ir3Rhfe
My launch:
<launch>
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se" clear_params="true">
      <rosparam command="load" file="$(find ekf_test)/params/ekf_rosbag_params.yaml" />

      <remap from="odometry/filtered" to="robot_0/odom_filtered"/>
    </node>

    <node name="controler_tf_publisher" type="pub_tf_from_odom_topic.py" pkg="ekf_test">
        <rosparam param="odom_topic">robot_0/odom</rosparam>
        <rosparam param="parent_frame_id">controler_odom</rosparam>
        <rosparam param="child_frame_id">controler_base_link</rosparam>
    </node>

    <node name="ekf_tf_publisher" type="pub_tf_from_odom_topic.py" pkg="ekf_test">
        <rosparam param="odom_topic">robot_0/odom_filtered</rosparam>
        <rosparam param="parent_frame_id">robot_0/odom</rosparam>
        <rosparam param="child_frame_id">robot_0/base_link</rosparam>
    </node>

    <node pkg="tf" type="static_transform_publisher" name="world_frame_publisher1" args="0 0 0 0 0 0 world robot_0/odom 100"/> 
    <node pkg="tf" type="static_transform_publisher" name="world_frame_publisher2" args="0 0 0 0 0 0 world controler_odom 100"/> 
</launch>

Example odom msg:
header: 
  seq: 761
  stamp: 
    secs: 1576944830
    nsecs: 664253217
  frame_id: "robot_0/odom"
child_frame_id: "robot_0/base_link"
pose: 
  pose: 
    position: 
      x: 0.971138656139
      y: -0.000453197862953
      z: 0.0
    orientation: 
      x: 0.0
      y: 0.0
      z: 0.615555694251
      w: 0.788093387407
  covariance: [0.001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10000000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10000000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10000000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01]
twist: 
  twist: 
    linear: 
      x: 0.000464193755761
      y: 0.00186030799523
      z: 0.0
    angular: 
      x: 0.0
      y: 0.0
      z: 0.00590989086777
  covariance: [0.001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10000000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10000000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10000000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01]
---

pub_tf_from_odom_topic.py:
#!/usr/bin/env python
import rospy
from nav_msgs.msg import Odometry
import geometry_msgs.msg
import random
import math
import tf2_ros

def publish_odom_tf(odom):
    br = tf2_ros.TransformBroadcaster()
    t = geometry_msgs.msg.TransformStamped()

    t.header.stamp = rospy.Time.now()
    t.header.frame_id = parent_frame_id
    t.child_frame_id = child_frame_id
    t.transform.translation.x = odom.pose.pose.position.x
    t.transform.translation.y = odom.pose.pose.position.y
    t.transform.translation.z = odom.pose.pose.position.z
    t.transform.rotation.x = odom.pose.pose.orientation.x
    t.transform.rotation.y = odom.pose.pose.orientation.y
    t.transform.rotation.z = odom.pose.pose.orientation.z
    t.transform.rotation.w = odom.pose.pose.orientation.w

    br.sendTransform(t) 
    

rospy.init_node('pub_ekf_odom_tf')
odom_topic = rospy.get_param('~odom_topic')
parent_frame_id = rospy.get_param('~parent_frame_id')
child_frame_id = rospy.get_param('~child_frame_id')

odom_sub = rospy.Subscriber(odom_topic,Odometry,publish_odom_tf)

if __name__ == '__main__':
    try:
        rospy.spin()
    except Exception as e:
        rospy.logwarn("Pub odom from ekf exception")
        print e

ekf_rosbag_params.yaml:
frequency: 30
reset_on_time_jump: true
sensor_timeout: 0.15

two_d_mode: true

transform_time_offset: 0.0
transform_timeout: 0.0
print_diagnostics: true
debug: true
debug_out_file: /path/to/debug/file.txt

publish_tf: false
publish_acceleration: false

map_frame: map              # Defaults to "map" if unspecified
odom_frame: robot_0/odom          # Defaults to "odom" if unspecified
base_link_frame: robot_0/base_link           # Defaults to "base_link" if unspecified
world_frame: world         # Defaults to the value of odom_frame if unspecified

###########------------------------------------------------###########

odom0: robot_0/odom

# [ x,      y,      z,
#   roll,   pitch,  yaw,
#   vx,     vy,     vz,
#   vroll,  vpitch, vyaw,
#   ax,     ay,     az ]   
odom0_config: [false, false, false,
               false, false, false,
               true, true, false,
               false, false, true,
               false, false, false]

odom0_queue_size: 10
odom0_nodelay: false
odom0_differential: true
odom0_relative: false

###########------------------------------------------------###########

imu0: robot_0/dont_want_imu 

imu0_config: [false,  false,  false,
              false,   false,   true,
              false,  false,  false,
              false,  false,  false,
              false,  false,  false]

imu0_nodelay: false
imu0_differential: false
imu0_relative: true
imu0_queue_size: 10
imu0_remove_gravitational_acceleration: false

###########------------------------------------------------###########

process_noise_covariance: [0.05, 0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0.05, 0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0.06, 0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0.03, 0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0.03, 0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0.06, 0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0.025,  0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0.025,  0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0.04, 0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0.01, 0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0.01, 0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0.02, 0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0.01, 0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0.01, 0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0.015]

initial_estimate_covariance: [1e-9, 0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    1e-9, 0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    1e-9, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    1e-9, 0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    1e-9, 0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    1e-9, 0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    1e-9, 0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    1e-9, 0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    1e-9, 0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    1e-9,  0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     1e-9,  0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     1e-9,  0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     1e-9, 0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    1e-9, 0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    1e-9]

Originally posted by grzegorz.f-16 on ROS Answers with karma: 18 on 2019-12-21
Post score: 0

A:

After few hours of starring at my code I've found a problem in the motor controller node. The bug was in velocity in odom topic, it was computed as follows:
float vx = (odom_x - odom_last_x) / dt;
float vy = (odom_y - odom_last_y) / dt;
float vyaw = (odom_yaw - odom_last_yaw) / dt;

And should be:
float linear = (linear_right + linear_left) / 2.0;
float angular = (linear_right - linear_left) / track_width;

float vx = linear;
float vy = 0;
float vyaw = angular;

Originally posted by grzegorz.f-16 with karma: 18 on 2020-01-04
This answer was ACCEPTED on the original site
Post score: 0

