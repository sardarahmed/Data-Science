Q:

Self balancing robot: PID Control Algorithm

I am working on a hobby project for self-balancing robot. My robot balances quite well, so my next step is to start moving it. I saw in some blogs that they used a cascade control algorithm as shown below

So I have the following question which is giving me a hard time:
When I see some videos about Segway-like systems (like Boston Dynamics here), I see that before moving forward, the robot moves a bit backward (to generate a tilt) which I think is justified because it must first get an error to get started in the forward direction. So will this kind of control system be able to handle that or do I need to code it separately?

A:

After much researching, I found an answer to my question. I think I asked the wrong question. The robot moves in opposite direction initially and then in correct direction because it is a non-minimum phase system meaning it has a pole in right half plane. These kind of systems initially move in opposite direction before moving in correct direction. This is clearly explained in this video at time = 7:46 minute. 

