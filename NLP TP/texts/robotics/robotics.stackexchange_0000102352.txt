Q:

[slam_toolbox]: Message Filter dropping message: frame 'camera_depth_frame'...for reason 'Unknown'

I'm running slam_toolbox with an L515 Intel Realsense camera, and I always recieve this [INFO] message upon startup. After about a minute or so, the message stops, and then the system begins mapping as expected.
What is the cause of all these dropped frames?
[sync_slam_toolbox_node-5] [INFO] [1662493149.436859079] [slam_toolbox]: Message Filter dropping message: frame 'camera_depth_frame' at time 1662493149.164 for reason 'Unknown'
...at time 1662493149.297 ...
...at time 1662493149.330 ...
...at time 1662493149.766 ...
...at time 1662493149.530 ...
...at time 1662493149.597 ...

Thank you for your help!
All of the needed frames and transforms appear to be published before and after the message stops: TF Tree before and after

Originally posted by LiquidTurtle1 on ROS Answers with karma: 15 on 2022-09-06
Post score: 0

Original comments
Comment by khairulm on 2022-09-07:
it could be that the TF2 transformations for the camera frame isn't up yet, try running ros2 run tf2_tools view_frames.py when the message appear, then run it again when the message disappear
Comment by LiquidTurtle1 on 2022-09-07:
Thank you for your response, khairulm, I've updated my original post with more information.

A:

That message comes from the message filters on TF - look into your TF tree and that the transforms are available and sufficiently high rate to transform the data on startup.

Originally posted by stevemacenski with karma: 8272 on 2022-09-07
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by LiquidTurtle1 on 2022-09-14:
I was able to solve the issue by adding {'depth_module.global_time_enabled': True} to my launch file like so:
Node(
    package='realsense2_camera',
    namespace="camera",
    name="camera",
    executable='realsense2_camera_node',
    parameters=[set_configurable_parameters(configurable_parameters), {'depth_module.global_time_enabled': True}
                ],
    output='screen',
    arguments=['--ros-args', '--log-level', LaunchConfiguration('log_level')],
    emulate_tty=True,
    ),

