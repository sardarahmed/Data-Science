Q:

type hinting rosmsgs in callbacks?

Trying to prepare proper documentation for a code review and I wanted to use type hinting, however Im getting errors (expectedly) when type hinting for rosmsgs during function callbacks...
Wanted to know if anyone else has experienced this and any workarounds?
def on_action_done(self, goal_status: actionlib_msgs/GoalStatus, result: rows/RowsResult) -> None:
def on_action_done(self, goal_status: GoalStatus, result: RowsResult) -> None:

Neither is working, both are throwing NameError exceptions.
python3.7.4
ROS1: noetic

Originally posted by rbed23 on ROS Answers with karma: 33 on 2021-01-15
Post score: 1

Original comments
Comment by gvdhoorn on 2021-01-16:\

python3.7.4

have you built Noetic from source? The default Python 3 version supported on Ubuntu Focal by Noetic is 3.8 according to REP-3.

A:

however Im getting errors (expectedly) when type hinting for rosmsgs during function callbacks...

why expectedly?
ROS msgs in Python are Python modules containing (mainly) a class. So you should be able to treat them as such.
As long as the packages are on the PYTHONPATH, I'd expect things to work.

goal_status: actionlib_msgs/GoalStatus

this doesn't look like a proper Python type name to me.
shouldn't it at least be actionlib_msgs.msg.GoalStatus?

Originally posted by gvdhoorn with karma: 86574 on 2021-01-16
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by rbed23 on 2021-01-21:
actionlib.GoalStatus works...
I just needed to use the msg imports i.e. result: RowsResult, target: TrackedTarget
Comment by gvdhoorn on 2021-01-22:\

actionlib.GoalStatus works...

this confuses me a little.
Is that a verbatim copy-paste of the type identifier, or should it be actionlib_msgs.msg.GoalStatus?
The following fails for me: python -c 'from actionlib import GoalStatus'.
Comment by rbed23 on 2021-01-23:
(robot) me@BenderInspiron:~/robot/ros_src$ python -c "from actionlib import GoalStatus; print(GoalStatus)"
<class 'actionlib_msgs.msg._GoalStatus.GoalStatus'>
Im working in a venv and I have the setup.bash file sourced...
Comment by gvdhoorn on 2021-01-24:
Isn't that because almost all top-level modules in actionlib themselves import GoalStatus from actionlib_msgs?
The type is really declared and defined in actionlib_msgs.
if you're doing this to be clear about which types get used in your code, it would make more sense to me to use the appropriate (ie: correct) type definition, instead of one which happens to be exposed via a transitive dependency.
Comment by rbed23 on 2021-01-24:
sure, if you want/need to separately import actionlib_msgs explicitly for that, in addition to import actionlib then go ahead :thumbsup:
Comment by gvdhoorn on 2021-01-24:
So you're going to go through the effort of providing Python with typing hints, but then are OK with passing it the wrong type?
GoalStatus is part of the action definition. It's a message. It comes from the actionlib_msgs package.
Relying on another package to bring in your dependency is actually an anti-pattern, and should be avoided.

