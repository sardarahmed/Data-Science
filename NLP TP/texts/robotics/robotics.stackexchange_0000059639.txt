Q:

catkin_make carries out all processes

When catkin_make is carried out twice in a row, 
I believe that the second catkin_make finishes instantaneously if the first one is done successfully.
However, I have the following situations.

do catkin_make and it's done successfully
do catkin_make in a row(nothing is edited.)
"make" is started from the beginning(it's strange) and takes a lot of time.
do catkin_make and have the same situation as "3".

What's the matter ??
Thanks in advance.
Configuration : 
OS : Ubuntu 12.04LTS
ROS : Hydro
Packages in catkin workspace :
some original packages,
navigation metapackage(amcl, move_base and so on),
kobuki(kobuki-hydro, kobuki_core-hydro kobuki_msgs),
turtlebot(turtlebot_apps, turtlebot_bringup, turtlebot_description, turtlebot_msgs, turtlebot_simulator, turtlebot_viz, yocs_msgs-hydro, yujin_ocs, joystic_drivers, linux_hardware)

Originally posted by moyashi on ROS Answers with karma: 721 on 2014-05-26
Post score: 0

A:

Usually, a second run of catkin_make after the first run completed successfully should NOT re-run cmake, and shouldn't rebuild anything. You will still see status messages as it checks the dependencies to make sure everything is up to date, but even in large projects, this should only take a few seconds.
I have seen a few cases where targets or dependencies were specified improperly, causing them to rebuild every time, and this caused all of the dependencies to rebuild as well.
Most commonly I've seen this happen when the output files for a dynamic_reconfigure cfg file didn't match the name of the cfg file, but it can also happen if you have custom targets that don't produce the right files, or custom targets that create directories and then place files in them as part of the build process.

Originally posted by ahendrix with karma: 47576 on 2014-05-26
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by moyashi on 2014-05-27:
Thank you for your answer and I solved the problem.
I checked dependencies, but found no mistake.
In my case, build time was wrong. My laptop had U.S time, but it has Tokyo's time now.
I removed catkin_ws/build and catkin_ws/devel, tried the above procedures and catkin_make worked well.

