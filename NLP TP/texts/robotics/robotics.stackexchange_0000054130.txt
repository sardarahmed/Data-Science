Q:

problem with custom point cloud type

Hello
I want to create my own point type for my point cloud. Something similar to velodyne_pointcloud. So I created my point type, copying what joq did and adding my own fields to it. Then I used the POINT_CLOUD_REGISTER_POINT_STRUCT to declare (?) it.
I want to publish it and receive it as a pcl::PointCloud so I included the pcl_ros/point_cloud.h header file.
But I get compilation errors: no member name __getMD5Sum, __getDataType, serialize, etc.
According to the documentation, it should be possible to work directly with pcl::PointCloud.
I read the code in velodyne_pointcloud over and over, and I also a created a small test package to test custom point cloud types and it worked. But I can't fix my "real" code. Please help, it's driving me crazy.

Originally posted by brice rebsamen on ROS Answers with karma: 1001 on 2013-09-16
Post score: 0

A:

I found the solution: I was declaring my point cloud as
namespace velodyne {
struct PointType : pcl::PointXYZRGB { ... };
struct PointCloud : pcl::PointCloud<PointType> { ... };
}

but if I use a typedef instead then my compilation error disappears:
namespace velodyne {
struct PointType : pcl::PointXYZRGB { ... };
typedef PointCloud<PointType> PointCloud;
}

EDIT: Actually, I am now declaring my point type following PCL's model: it does not inherit from pcl::PointXYZRGB but rather copies the body of pcl::PointXYZRGB. In the end it looks as follows:
namespace velodyne
{
struct EIGEN_ALIGN16 _PointType
{
  PCL_ADD_POINT4D;
  PCL_ADD_RGB;
  ...
  EIGEN_MAKE_ALIGNED_OPERATOR_NEW
};

struct EIGEN_ALIGN16 PointType : public _PointType
{
  inline PointType () {  ... }
}

} // namespace velodyne

POINT_CLOUD_REGISTER_POINT_STRUCT (velodyne::_PointType,
    (float, x, x)
    (float, y, y)
    (float, z, z)
    (uint32_t, rgb, rgb)
    ...
)
POINT_CLOUD_REGISTER_POINT_WRAPPER(velodyne::PointType, velodyne::_PointType)

namespace velodyne {    
typedef pcl::PointCloud<PointType> PointCloud;
typedef boost::shared_ptr<PointCloud> PointCloudPtr;
typedef boost::shared_ptr<PointCloud const> PointCloudConstPtr;
} // namespace velodyne

Originally posted by brice rebsamen with karma: 1001 on 2013-09-17
This answer was ACCEPTED on the original site
Post score: 0

