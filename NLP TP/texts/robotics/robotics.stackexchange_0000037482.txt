Q:

ROS_INFO vs printf?

Hi there,
I was wondering what the differences were between ROS_INFO and printf. In the tutorials it is referred as the equivalent to printf/cout. Any reason why it had to be implemented?
Cheers,

Originally posted by jlo on ROS Answers with karma: 385 on 2012-02-01
Post score: 10

A:

ROS_INFO's syntax is the same as printf, but ROS_INFO is not printf. The advantage of the ROS logging system is that it provided a wide variety of useful features that printf does not.
For example, ROS_INFO is automatically timestamped for you. Second, it contains five logging levels that you can use. The advantage of these levels is that you can determine how much information you want to see at any given time. You can display only INFO-FATAL messages, or if you're debugging a problem, you can set the level to DEBUG and see all relevant debug messages.
ROS also automatically logs all messages that use ROS_INFO (and all other logging levels) to log files on the filesystem for you so that you can go back and analyze a test later.
EDIT:
See the wiki page here.

Originally posted by DimitriProsser with karma: 11163 on 2012-02-01
This answer was ACCEPTED on the original site
Post score: 28

Original comments
Comment by alfa_80 on 2012-02-01:
Great explanation.
Comment by jlo on 2012-02-01:
Thanks, very clarifying info! Any links where I can see how to use the different logging levels you mention?
Comment by neuronet on 2016-07-24:
Plus python doesn't have printf, using ROS_INFO is better for x-language portability/readability, fwiw.
Comment by alienmon on 2016-08-11:
@jlo http://wiki.ros.org/ROS/Tutorials/UsingRqtconsoleRoslaunch rqt_logger_level will let us see/monitoring events on the node and we can set with different logging levels
Comment by alienmon on 2016-08-11:
http://wiki.ros.org/rosconsole here is rosconsole doccumentation.

