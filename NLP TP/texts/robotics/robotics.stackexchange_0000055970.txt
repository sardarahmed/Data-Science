Q:

rospack cache per workspace?

The rospack cache is currently build user-wide. I often switch between workspaces that contain different sets of packages or the same package at different locations.
I heavily rely on tab-completion. Rospack does everything correctly here, i.e. I've never seen it switch to a wrong package location. However, when I switch the workspace and then observe a now new to rospack package again roscd (caused by rospack I assume) hangs until I either put in the package manually or it has found it.
Is there any way to preserve the rospack cache for a specific workspace?

Originally posted by dornhege on ROS Answers with karma: 31395 on 2013-12-09
Post score: 1

A:

No, that is currently not possible.

Originally posted by Dirk Thomas with karma: 16276 on 2013-12-09
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by dornhege on 2013-12-09:
Unfortunately that's what I thought.
Comment by Dirk Thomas on 2013-12-09:
rospack could use an environment specific cache file. But I guess it would take quite some effort to implement.
Comment by dornhege on 2013-12-09:
So I checked out the sources. Would it be sufficient to (maybe optionally) use $ROS_WORKSPACE to determine the path to put the cache files? roscd, etc. should just use rospack then, right? If you think that is feasible I'd be willing to provide a patch.
Comment by Dirk Thomas on 2013-12-10:
$ROS_WORKSPACE is not an "official" variable of ROS. It is only defined and used by some of the tools. The cache should be ROS_PACKAGE_PATH specific. The cache file(s) should stay in the same location as they are currently (~/.ros/). Yes, commands like roscd use rospack.
Comment by dornhege on 2013-12-10:
OK, in that case it's not trivial to do unfortunately.
Comment by dornhege on 2013-12-11:
Let me give this one more shot: What do you think about naming the files: rospack_cache_MD5SUM_OF_$ROS_PACKAGE_PATH? This would lead to package path specific caches nicely hidden in ~/.ros. After thinking about this for a while it doesn't seem to be that hacky to me any more.
Comment by Dirk Thomas on 2013-12-11:
Yes, that would be good.

