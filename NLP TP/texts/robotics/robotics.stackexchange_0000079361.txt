Q:

Buildfarm failures for Kinetic "move_base_to_manip"

I'd appreciate some help clearing up these build failures (click on Jenkins jobs (13)). I hate to be the cause of multiple failures. The buildfarm output with some numbered error messages follows. I'm confused about multiple things:

What would be the cause of a source build passing, but a binary build failing?
Message 1 is internal to move_group and not something caused by my repo, correct?
Is the buildfarm pulling my latest Kinetic release? I don't think so, because it should have fixed Messages 2-8. (Mostly because I switched from move_group to move_group_interface)
No need to worry about Message #8. I'll change that to a proper service call when I know how to fix these other issues.
Thanks!

Message 1
/opt/ros/kinetic/include/moveit/robot_model_loader/robot_model_loader.h: In member function ‘const ModelSharedPtr& robot_model_loader::RobotModelLoader::getSRDF() const’:
/opt/ros/kinetic/include/moveit/robot_model_loader/robot_model_loader.h:120:12: error: ‘rdf_loader_’ was not declared in this scope
     return rdf_loader_->getSRDF();

Message 2
In file included from /tmp/binarydeb/ros-kinetic-move-base-to-manip-1.0.6/src/move_base_to_manip.cpp:4:0:
/tmp/binarydeb/ros-kinetic-move-base-to-manip-1.0.6/include/move_base_to_manip.h: At global scope:
/tmp/binarydeb/ros-kinetic-move-base-to-manip-1.0.6/include/move_base_to_manip.h:13:195: warning: ‘MoveGroup’ is deprecated [-Wdeprecated-declarations]
   const double cartesian_motion(const std::vector<geometry_msgs::Pose>& waypoints, moveit_msgs::RobotTrajectory& trajectory, moveit::planning_interface::MoveGroup& moveGroup, ros::NodeHandle& nh);

Message 3
In file included from /tmp/binarydeb/ros-kinetic-move-base-to-manip-1.0.6/include/move_base_to_manip.h:7:0,
                 from /tmp/binarydeb/ros-kinetic-move-base-to-manip-1.0.6/src/move_base_to_manip.cpp:4:
/opt/ros/kinetic/include/moveit/move_group_interface/move_group.h:56:7: note: declared here
 class MoveGroup : public MoveGroupInterface

Message 4
/tmp/binarydeb/ros-kinetic-move-base-to-manip-1.0.6/src/move_base_to_manip.cpp:87:213: warning: ‘MoveGroup’ is deprecated [-Wdeprecated-declarations]
 const double move_base_to_manip::cartesian_motion(const std::vector<geometry_msgs::Pose>& waypoints, moveit_msgs::RobotTrajectory& trajectory, moveit::planning_interface::MoveGroup& moveGroup, ros::NodeHandle &nh)                                                                                                                                                                                                 

Message 5
In file included from /tmp/binarydeb/ros-kinetic-move-base-to-manip-1.0.6/include/move_base_to_manip.h:7:0,
                 from /tmp/binarydeb/ros-kinetic-move-base-to-manip-1.0.6/src/move_base_to_manip.cpp:4:
/opt/ros/kinetic/include/moveit/move_group_interface/move_group.h:56:7: note: declared here
 class MoveGroup : public MoveGroupInterface

Message 6
/tmp/binarydeb/ros-kinetic-move-base-to-manip-1.0.6/src/move_base_to_manip.cpp: In function ‘int main(int, char**)’:
/tmp/binarydeb/ros-kinetic-move-base-to-manip-1.0.6/src/move_base_to_manip.cpp:111:68: warning: ‘MoveGroup’ is deprecated [-Wdeprecated-declarations]
   moveit::planning_interface::MoveGroup moveGroup( move_group_name );

Message 7
In file included from /tmp/binarydeb/ros-kinetic-move-base-to-manip-1.0.6/include/move_base_to_manip.h:7:0,
                 from /tmp/binarydeb/ros-kinetic-move-base-to-manip-1.0.6/src/move_base_to_manip.cpp:4:
/opt/ros/kinetic/include/moveit/move_group_interface/move_group.h:56:7: note: declared here
 class MoveGroup : public MoveGroupInterface

Message 8
/tmp/binarydeb/ros-kinetic-move-base-to-manip-1.0.6/src/move_base_to_manip.cpp: In function ‘const double move_base_to_manip::cartesian_motion(const std::vector<geometry_msgs::Pose_<std::allocator<void> > >&, moveit_msgs::RobotTrajectory&, moveit::planning_interface::MoveGroup&, ros::NodeHandle&)’:
/tmp/binarydeb/ros-kinetic-move-base-to-manip-1.0.6/src/move_base_to_manip.cpp:92:45: warning: ignoring return value of ‘int system(const char*)’, declared with attribute warn_unused_result [-Wunused-result]
     system("rosservice call /clear_octomap");

Originally posted by AndyZe on ROS Answers with karma: 2331 on 2017-03-06
Post score: 0

A:

DT helped me figure out how to handle the splitting of a branch. The devel_branch parameter in tracks.yaml of the release repo needs to be updated from e.g. 'null' to 'indigo'.
Now there's just that move_group error to figure out...

Originally posted by AndyZe with karma: 2331 on 2017-03-06
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Dirk Thomas on 2017-03-06:
Can you please clarify which message # is still unclear.
Comment by AndyZe on 2017-03-06:
Message #1
Comment by Dirk Thomas on 2017-03-06:
The error happens when your code includes robot_model_loader.h. The upstream code looks good. So it might be related to the code using it. Have you successfully build the same code locally? Can you post more context around the error message? Can you link to the failing job?
Comment by AndyZe on 2017-03-08:
Yes, I did build it locally with catkin_make & catkin build. And it builds even with "robot_model_loader.h" commented. Hmm.. well, problem solved. I will just remove that header.

