Q:

Why does my robot model fall in Gazebo?

Apologies for a very long post. I created the following xacro file, when I load in gazebo using the following launch file, the robot does not stand straight and falls down. I tried with different values of mass for different links, but no luck. It looks like I am missing something, can anyone help? I have removed the inertia calculation xacros for brevity.
<?xml version="1.0" ?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro" 
xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
    xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
    xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
name="rosbot_v1">

<!--Physical attributes definition for base box-->

<xacro:property name="base_box_length" value="1" />
<xacro:property name="base_box_width" value="1" />
<xacro:property name="base_box_height" value="0.6" />
<xacro:property name="base_box_mass" value="4" />

<!--Physical attributes definition for the swivel arm-->
<xacro:property name="swivel_arm_length" value="0.2" />
<xacro:property name="swivel_arm_radius" value="0.2" />
<xacro:property name="swivel_arm_mass" value="1" />

<!--Physical attributes definition for the arms-->
<xacro:property name="arm_length" value="1" />
<xacro:property name="arm_radius" value="0.1" />
<xacro:property name="arm_mass" value="0.1" />

<!--Physical attributes definition for gripper box-->
<xacro:property name="gripper_box_length" value="0.5" />
<xacro:property name="gripper_box_width" value="0.4" />
<xacro:property name="gripper_box_height" value="0.2" />
<xacro:property name="gripper_box_mass" value="0.01" />

<!--Physical attributes definition for gripper fingers-->
<xacro:property name="gripper_finger_length" value="0.12" />
<xacro:property name="gripper_finger_width" value="0.4" />
<xacro:property name="gripper_finger_height" value="0.12" />
<xacro:property name="gripper_finger_mass" value="0.001" />

<!-- world link -->
<link name="base_link"/>

<link name="rosbot_base">
    <xacro:inertial_matrix_cuboid mass="${base_box_mass}" box_length="${base_box_length}" box_width="${base_box_width}"/>
    <collision name="rosbot_collision">
      <origin rpy="0  0  0" xyz="0  0  0"/>
      <geometry>
        <box size="${base_box_length} ${base_box_width} ${base_box_height}"/>
      </geometry>
    </collision>
    <visual name="rosbot_visual">
      <origin rpy="0  0  0" xyz="0  0  0"/>
      <geometry>
        <box size="${base_box_length} ${base_box_width} ${base_box_height}"/>
      </geometry>
      <material name="blue"/>
    </visual>
</link>

<!-- base_link and its fixed joint -->
<joint name="joint_fix" type="fixed">
    <parent link="base_link"/>
    <child link="rosbot_base"/>
</joint>

<!-- A swiveling base on which next arm will sit -->
<link name="rosbot_swivel_base">
    <xacro:inertial_matrix_cylinder mass="${swivel_arm_mass}" arm_length="${swivel_arm_length}" arm_radius="${swivel_arm_radius}"/>
    <collision name="rosbot_collision">
      <origin rpy="0  0  0" xyz="0   0  ${swivel_arm_length/2}"/>
      <geometry>
        <cylinder length="${swivel_arm_length}" radius="${swivel_arm_radius}"/>
      </geometry>
    </collision>
    <visual name="rosbot_visual">
      <origin rpy="0  0  0" xyz="0   0  ${swivel_arm_length/2}"/>
      <geometry>
        <cylinder length="${swivel_arm_length}" radius="${swivel_arm_radius}"/>
      </geometry>
      <material name="white"/>
    </visual>
</link>

<!-- The joint between swivel and base needs to be flush on the top face of rosbot_base  -->
<joint name="rosbot_base_swivel_joint" type="revolute">
  <parent link="rosbot_base"/>
  <child link="rosbot_swivel_base"/>
  <origin rpy="0  0  0" xyz="0  0  ${base_box_height/2}"/>
  <axis xyz="0  0  1"/>
  <limit effort="100" lower="-1.57" upper="1.57" velocity="100"/>
</joint>

<!-- A moving/manipulating arm1 -->
<link name="rosbot_arm1">
    <xacro:inertial_matrix_cylinder mass="${arm_mass}" arm_length="${arm_length}"  arm_radius="${arm_radius}"/>
    <collision name="rosbot_collision">
      <origin rpy="0  0  0" xyz="0   0   ${arm_length/2}"/>
      <geometry>
        <cylinder length="${arm_length}" radius="${arm_radius}"/> 
      </geometry>
    </collision>
    <visual name="rosbot_visual">
      <origin rpy="0  0  0" xyz="0   0   ${arm_length/2}"/>
      <geometry>
        <cylinder length="${arm_length}" radius="${arm_radius}"/> 
      </geometry>
      <material name="blue"/>
    </visual>
</link>

<!-- The joint between swivel and arm1 needs to be at the height of swivel link  -->
<joint name="rosbot_swivel_arm1_joint" type="revolute">
  <parent link="rosbot_swivel_base"/>
  <child link="rosbot_arm1"/>
  <origin rpy="0  0  0" xyz="0  0  ${swivel_arm_length}"/>
  <axis xyz="1  0  0"/>
  <limit effort="100" lower="-1.57" upper="1.57" velocity="100"/>
</joint>

<!-- A moving/manipulating arm2 -->
<link name="rosbot_arm2">
    <xacro:inertial_matrix_cylinder mass="${arm_mass}" arm_length="${arm_length}"  arm_radius="${arm_radius}"/>
    <collision name="rosbot_collision">
      <origin rpy="0  0  0" xyz="0   0   ${arm_length/2}"/>
      <geometry>
        <cylinder length="${arm_length}" radius="${arm_radius}"/> 
      </geometry>
    </collision>
    <visual name="rosbot_visual">
      <origin rpy="0  0  0" xyz="0   0   ${arm_length/2}"/>
      <geometry>
        <cylinder length="${arm_length}" radius="${arm_radius}"/> 
      </geometry>
      <material name="blue"/>
    </visual>
</link>

<!-- The joint between arm1 and arm2 needs to be at height of arm1  -->
<joint name="rosbot_arm1_arm2_joint" type="revolute">
  <parent link="rosbot_arm1"/>
  <child link="rosbot_arm2"/>
  <origin rpy="0  0  0" xyz="0  0  ${arm_length}"/>
  <axis xyz="1  0  0"/>
  <limit effort="100" lower="-1.57" upper="1.57" velocity="100"/>
</joint>

<!-- A gripper box, which holds the gripper joints -->
<link name="rosbot_gripper_box">
    <xacro:inertial_matrix_cuboid mass="${gripper_box_mass}" box_length="${gripper_box_length}" box_width="${gripper_box_width}"/>
    <collision name="rosbot_collision">
      <origin rpy="0  0  0" xyz="0   0  ${gripper_box_height/2}"/>
      <geometry>
        <box size="${gripper_box_length} ${gripper_box_width} ${gripper_box_height}"/>
      </geometry>
    </collision>
    <visual name="rosbot_visual">
      <origin rpy="0  0  0" xyz="0   0  ${gripper_box_height/2}"/>
      <geometry>
        <box size="${gripper_box_length} ${gripper_box_width} ${gripper_box_height}"/>
      </geometry>
       <material name="cyan"/>
    </visual>
</link>

<!-- The joint between arm2 and gripper needs to be at height of arm2  -->
<joint name="rosbot_arm2_gripper_joint" type="revolute">
  <parent link="rosbot_arm2"/>
  <child link="rosbot_gripper_box"/>
  <origin rpy="0  0  0" xyz="0  0  ${arm_length}"/>
  <axis xyz="0  0  1"/>
  <limit effort="100" lower="-1.57" upper="1.57" velocity="100"/>
</joint>

<!-- The left gripper  -->
<link name="rosbot_lgripper">
    <xacro:inertial_matrix_cuboid mass="${gripper_finger_mass}" box_length="${gripper_finger_length}" box_width="${gripper_finger_width}"/>
    <collision name="rosbot_collision">
      <origin rpy="0  0  0" xyz="-0.0  0.20  ${gripper_finger_height/2}"/>
      <geometry>
        <box size="${gripper_finger_length} ${gripper_finger_width} ${gripper_finger_height}"/>
      </geometry>
    </collision>
    <visual name="rosbot_visual">
      <origin rpy="0  0  0" xyz="-0.0  0.20  ${gripper_finger_height/2}"/>
      <geometry>
        <box size="${gripper_finger_length} ${gripper_finger_width} ${gripper_finger_height}"/>
      </geometry>
      <material name="green"/>
    </visual>
  </link>

<!-- The joint between gripper box and gripper needs to be at origin/slightly higher than origin of gripper box  -->
<joint name="rosbot_lgripper_joint" type="prismatic">
    <parent link="rosbot_gripper_box"/>
    <child link="rosbot_lgripper"/>
    <origin rpy="0  0  0" xyz="-0.2  0.2  0.02"/>
    <axis xyz="1  0  0"/>
    <limit effort="100" lower="0" upper="0.14" velocity="100"/>
</joint>

<!-- The right gripper  -->
<link name="rosbot_rgripper">
    <xacro:inertial_matrix_cuboid mass="${gripper_finger_mass}" box_length="${gripper_finger_length}" box_width="${gripper_finger_width}"/>
    <collision name="rosbot_collision">
      <origin rpy="0  0  0" xyz="-0.0  0.20  ${gripper_finger_height/2}"/>
      <geometry>
        <box size="${gripper_finger_length} ${gripper_finger_width} ${gripper_finger_height}"/>
      </geometry>
    </collision>
    <visual name="rosbot_visual">
      <origin rpy="0  0  0" xyz="-0.0  0.20  ${gripper_finger_height/2}"/>
      <geometry>
        <box size="${gripper_finger_length} ${gripper_finger_width} ${gripper_finger_height}"/>
      </geometry>
      <material name="green"/>
    </visual>
  </link>

<!-- The joint between gripper box and gripper needs to be at origin or slightly higher than origin of gripper box  -->
<joint name="rosbot_rgripper_joint" type="prismatic">
    <parent link="rosbot_gripper_box"/>
    <child link="rosbot_rgripper"/>
    <origin rpy="0  0  0" xyz="0.2  0.2  0.02"/>
    <axis xyz="1  0  0"/>
    <limit effort="100" lower="-0.14" upper="0" velocity="100"/>
</joint>

</robot>

When I load in gazebo using the following launch file, the robot does not stand straight and falls down. I tried with different values of mass for different arms, but no luck. It looks like I am missing something, can anyone help?
My gazebo launch file:
<launch>
<!-- these are the arguments you can pass this launch file, for
example paused:=true -->
<arg name="paused" default="false"/>
<arg name="use_sim_time" default="true"/>
<arg name="gui" default="true"/>
<arg name="headless" default="false"/>
<arg name="debug" default="false"/>
<!-- We resume the logic in empty_world.launch -->
<include file="$(find gazebo_ros)/launch/empty_world.launch">
<arg name="debug" value="$(arg debug)" />
<arg name="gui" value="$(arg gui)" />
<arg name="paused" value="$(arg paused)"/>
<arg name="use_sim_time" value="$(arg use_sim_time)"/>
<arg name="headless" value="$(arg headless)"/>
</include>
<!-- Load the URDF into the ROS Parameter Server -->
<param name="robot_description" command="$(find xacro)/xacro.py '$(find rosbot_v1)/urdf/rosbot_v1.xacro' " />
<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model rosbot_v1 -param robot_description"/>
</launch>

Kindly help me.

Originally posted by dpakshimpo on ROS Answers with karma: 161 on 2018-02-15
Post score: 0

A:

You can try to add some friction on your joint to make them resist the gravity force.
You may need to control your joint with a ros tool or a gazebo plugin to make them keep a particular position.
Maybe this will give you some hints : http://answers.gazebosim.org/question/13029/why-does-the-robot-links-fall-downwards-when-gravity-is-disabled-and-no-controllers-are-used/

Originally posted by F.Brosseau with karma: 379 on 2018-02-15
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by dpakshimpo on 2018-02-15:
Thank you sir. When I added damping and friction, the entire robot model seems to have collapsed onto its own and i can see only the base and one arm.
<dynamics damping="50" friction="1"/>

Comment by dpakshimpo on 2018-02-15:
Hello F.Brosseau,
I reduced the damping value as below, then it is working :) thanks for your suggestion.
<xacro:property name="damping_value" value="10" />
<xacro:property name="friction_value" value="0.1" />

