Q:

Gazebo Garden applying force to model via AddWorldForce fuction not acting as expected

My goal is to apply a force to a gazebo model when prompted via a topic.
To do this I'm reading the force and then applying it to the link of that model via the AddWorldForce command in the PreUpdate step. I assume that calling AddWorldForce applies an acceleration to the link on that timestep, however, when I run this the object does not move.
Am I misunderstanding the function? I assumed that the AddWorldForce function should work similarly to the SetLinearVelocity. However, I have tested my code by replacing the AddWorldForce function with SetLinearVelocity and it acts as I would expect.
Below I've added my full PreUpdate function, any insights into what I'm misunderstanding would be great.
void ForceManager::PreUpdate(const gz::sim::UpdateInfo &_info, 
gz::sim::EntityComponentManager &_ecm) {
    if(_info.paused){return;}
    if(topic_msg){
        

        auto model_entities = entitiesFromScopedName(_model_name,_ecm);

        
        for(auto model_entity : model_entities){

            gz::sim::Model model(model_entity);
            
            if(!model.Valid(_ecm)){
                gzerr << "found model ["<<_model_name<<"] but model not valid\n";
            }
            

                gz::sim::Link link(model.LinkByName(_ecm,_link_name));
                if(!link.Valid(_ecm)){
                    gzmsg << "Link entity not valid\n";

                }
                else{
                    gzmsg << "link found with name["<<link.Name(_ecm).value_or("empty") <<"]\n";
                    gz::math::Vector3d forceVector(topic_msg->x(),topic_msg->y(),topic_msg->z());
                    gzmsg << "set force:\n" << forceVector << "\n";

                    link.AddWorldForce(_ecm,forceVector);

                }
   

            

        }
        i++;
        if(i>1000){ // this is just a temporary hack to get this code to run in the first 1000 simulation steps after the message has been sent 
            topic_msg = std::nullopt;
            i=0;
        }
   
        // 
    }

}
```

A:

The AddWorldForce needs the entity to have a WorldPose component for it to work. The easiest way to create that component on the link is to call Link::EnableVelocityChecks at least one iteration before calling AddWorldForce.
Note, this might not be required in future versions of Gazebo as changes in this PR, if merged, will make it possible to use AddWorldForce without calling EnableVelocityChecks.

