Q:

where to download extra files needed at runtime?

With rosbuild, I used to download data when building and place them in the src folder. I could them find them at runtime with ros::package::getPath().
This is usually data that is too large to be hosted in the repository, like large binary configuration files. They are needed by some of our nodes, and they usually load them when they start. As such they must be accessible at run time.
Now in catkin, I am wondering where to download them and how to retrieve them at runtime. I created a cmake function based on download_checkmd5.py that creates a new target (download_extra_data). Each package CMakeLists can declare some data to be downloaded, which happens when I make that target. What's the best strategy?
I can download them to the source folder and retrieve them with ros::package::getPath(), but that goes against the principle of not touching the source folder. Also, this would probably not work if I were to distribute my package in binary form (as the ros packages are), so it does not seem like a good solution.
I can download them to the build folder, but then how to retrieve them at runtime?
I believe the best would be to download them to the devel space, right? How can I do that? Then how to retrieve them at runtime?
For the moment, as a temporary solution, I am downloading to a path specified by an environment variable, but I am looking for a cleaner solution.

Originally posted by brice rebsamen on ROS Answers with karma: 1001 on 2013-12-12
Post score: 5

Original comments
Comment by Dirk Thomas on 2013-12-12:
My question before answering would be what kind of data are you downloading during the build?

A:

Thanks to Dirk Thomas' answer, I managed to get a solution. Here it is for reference:
1- I download the file to ${CATKIN_DEVEL_PREFIX}/${CATKIN_PACKAGE_SHARE_DESTINATION}
2- in order to find it from my c++ code, I wrote a little helper: https://gist.github.com/bricerebsamen/8679151

Originally posted by brice rebsamen with karma: 1001 on 2014-01-28
This answer was ACCEPTED on the original site
Post score: 2

