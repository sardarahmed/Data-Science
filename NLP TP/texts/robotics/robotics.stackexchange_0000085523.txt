Q:

How to navigate unknown area without map

I would like to navigate an unknown area using a car-like robot without a static map. I currently have a system functioning with both LIDAR and computer vision to detect obstacles and visualize on RVIZ. For navigation, the LIDAR is used in a static map and localizes the cart creating a pose estimate and from there I click a 2D nav goal on RVIZ and it will drive there.
My goal for a temporary demonstration is to completely remove the map and localization aspect and solely drive through the world forwards without hitting any obstacles. The basis behind this is to be able to place this robot anywhere and have it drive around aimlessly wondering for a major demonstration with people walking around the area all day.
My knowledge lacks when it comes to the specifics of navigation but the system is currently configured with the navigation_stack and teb_local_planner and well as the 2D_costmap. This is the beginning stage of my research so I was looking for some assistance in pointing me in the right direction or informing me of feasibility of completing the task described above.
From browsing online, it seems that the 2D_costmap can be utilized in a rolling window that would use the odometry frame with inputs such as wheel encoders but my main area of concern is how I can actually make it drive. What code and where do I even look to have some sort of commands that tell the system to drive and where. The teb_local_planner seems to make a great trajectory and understands the limitations such as turning radius but from my understanding, that requires a nav goal from a global planner that relies on a mapped environment. Any help in pointing me in the right direction would be greatly appreciated.

Originally posted by robots123 on ROS Answers with karma: 21 on 2018-02-24
Post score: 2

A:

When you click on "2D Nav Goal" in rviz you are actually publishing your goal on the topic /move_base_simple/goal.
So if you just want to drive around you can publish some random goals on this topic.
Another approach could be to navigate the robot according to a defined behavior such as wall following/avoiding.
About the 2D_costmap, it will be used by your local_planner to check if the robot can actually go to your goal and in order to avoid the different obstacles (I would also suggest you to check the social navigation layer to navigate with people walking around it should match your application).

Originally posted by Delb with karma: 3907 on 2018-02-26
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by robots123 on 2018-02-27:
Would a 2D nav goal still work without a static map? How would the vehicle know it reached the goal with a rolling window map?
Comment by Delb on 2018-02-28:
Look at this question.
In your application you don't really have fixed goals you just want to navigate so you shouldn't care about reaching a goal or not but just move randomly and avoid obstacles.

