Q:

Proper way to shutdown /rosout (roscore)

Hello,
I have a project where i start gazebo and several other rosnodes.
I want to be able to shut them all down at some point. I have a node that waits for a certain message and then shuts all other nodes down following with a self shutdown call like:
system("rosnode kill NAME_OF_NODE"); // shutdown other nodes
ros::shutdown();                     // shutdown this node

This does work for everything except the /rosout node. The /rosout node always respawns if killed with rosnode kill.
What I tried is to start a roscore in the starting programm before the other roslaunch files are executed, and then at the end, when all nodes finished cleanly I kill the roscore with kill all like:
system("roscore &");                 // start roscore 
...                                  // starting other nodes with roslaunch
system("killall roscore");           // kill roscore

But this does seem like a dirty way. Is there a better way to do this?

Originally posted by JulianR on ROS Answers with karma: 1 on 2017-06-05
Post score: 0

Original comments
Comment by Akhilesh on 2017-06-06:
Hi @Gieseltrud, try http://answers.ros.org/question/250182/terminate-ros-program/#250224

A:

My solution is to use a launch file to start all the relevant nodes, with the "terminator" node set to required="true". When the terminator node exits, it will trigger all of the other nodes to close if they are using things like ros::ok() to determine if they should keep running. This only works when roscore has been started by this launch file.

Originally posted by Dale McConachie with karma: 91 on 2017-06-07
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by JulianR on 2017-06-08:
This does work fine, There still is a red message informing about the Initiating of the shutdown, but I guess that is just how it is.

