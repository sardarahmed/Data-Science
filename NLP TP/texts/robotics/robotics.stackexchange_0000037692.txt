Q:

tf re-boadcaster

I would like a way to publish tf transforms, but using a standard ros::Publisher instead of the tf::TransformBroadcaster.  (I won't go into the reasons why).
The only way I think this can be done is to publish stamped transforms on a designated topic, then having a second node which subscribes to this topic and simply re-publishes them with the transform broadcaster.
Any other ideas?  Is there a standard node that does this already?  (I know about the robot_state_publisher which almost fits my needs).

Originally posted by baxelrod on ROS Answers with karma: 794 on 2012-02-08
Post score: 0

A:

I'm not sure I'm entirely clear on your use case.  I've commented on @Pablo IÃ±igo Blasco answer that you can easily implement the tf protocol.  It's just publishing a tf/TFMessage on the /tf topic.
You can publish it yourself on a topic of your choice, and populate the message yourself using a standard ros::Publisher just as done inside the TransformBroadcaster does internally.  See the source code, ~ 30 lines

Originally posted by tfoote with karma: 58457 on 2012-02-08
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by baxelrod on 2012-02-09:
Thanks for the pointer to the code.  That is kind of what i expected to see after i did some initial testing.  Simply publishing to /tf won't work for me because i will have multiple nodes.

