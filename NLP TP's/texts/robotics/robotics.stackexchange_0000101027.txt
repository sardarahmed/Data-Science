Q:

Should callbacks be simple?

I was wondering what is the best thing to do, write very simple callbacks, or to put almost all code inside callbacks. I don't know if there is a general rule, so if you understand more cleary the consequences of having long callbacks vs long main loops, please clarify this to me.
For example, if I have a controller, in the callback I could simply get the input and save it to process and publish in main loop, or I could calculte the output inside the callback and already publish it. Which one should I use? What are the advantages and disadvantages of each approach?

Originally posted by matosinho on ROS Answers with karma: 61 on 2022-01-13
Post score: 3

A:

I understand that there is a limit to the number of callbacks that can be processed at one time. Therefore, the shorter the callbacks are processed, the better the overall system throughput should tend to be.
I think there is a possibility that completing the process in the callback will result in more readable code. It may also lead to a reduction in global variables.

Originally posted by miura with karma: 1908 on 2022-01-14
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by matosinho on 2022-01-17:
Thank you! For me actually, I think that using functions in mainloop makes it more readable. Also, you can use internal attributes instead of global variables to get the callback result.

