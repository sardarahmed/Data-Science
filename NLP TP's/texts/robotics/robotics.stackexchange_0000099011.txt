Q:

How to read files in a directory?

Hello
I need to read some files from a directory and the std::filesystem does not seems to work. I already tried std::experimental::filesystem but I get the same error  ‘std::filesystem’ has not been declared respectively  ‘std::experimental::filesystem’ has not been declared. Is there any other way to read files?
std::vector<std::string> get_folder_content(std::string path)
{
    std::vector<std::string> files;
    std::filesystem::directory_iterator path_iterator(path);
    for (const auto& entry : path_iterator)
    {
        files.push_back(entry.path().string());
    }
    return files;
}

Originally posted by anonymous74063 on ROS Answers with karma: 16 on 2021-05-06
Post score: 0

Original comments
Comment by gvdhoorn on 2021-05-07:
I'm sorry to close your question, especially since it already has an answer, but this is not a ROS question. It's a general C++ question. Please keep your ROS Answers questions on topic, meaning: they should ask questions about ROS.
For all other questions (about programming, robotics, math, etc), try to find an appropriate forum, such as Stack Overflow, the Ubuntu fora, Robotics Stack Exchange, etc.

A:

I found this c++ implementation of the glob function some time ago and have been using it since:

std::vectorstd::string glob(const std::string& pattern) {
using namespace std;
// glob struct resides on the stack
glob_t glob_result;
memset(&glob_result, 0,
sizeof(glob_result));
// do the glob operation   int
return_value = glob(pattern.c_str(),
GLOB_TILDE, NULL, &glob_result);   if
(return_value != 0) {
globfree(&glob_result);
stringstream ss;
ss << "glob() failed with return_value " << return_value <<
endl;
throw std::runtime_error(ss.str());   }
// collect all the filenames into a
std::liststd::string
vector filenames;   for
(size_t i = 0; i <
glob_result.gl_pathc; ++i) {
filenames.push_back(string(glob_result.gl_pathv[i]));
}   // cleanup
globfree(&glob_result);   // done
return filenames; }

You can call this function as:

filenames = glob("/*.");

Originally posted by Akhil Kurup with karma: 459 on 2021-05-06
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by anonymous74063 on 2021-05-06:
Thanks I gonna try it out.

