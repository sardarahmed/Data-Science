Q:

Why is tutorial code isolated from the package code?

One of the things that threw me off with ROS code organization was that the code for package tutorials is in a separate repository from the package code. Intuitively, it would make sense to have a directory within the package called "tutorials" just as we often have a "test" directory for unit tests.
Why is tutorial code isolated from the package code? Is it bad practice to combine the two?

Originally posted by mirzashah on ROS Answers with karma: 1209 on 2012-12-27
Post score: 2

A:

This is an artifact of the fact that previously stacks were the unit of release and with fast iterations on libraries with tutorials and tutorials being developed separately the isolation was useful.
With the new catkin based packaging allowing independent packages to be in the same repository it is a good time for maintainers to consider bringing the tutorials into the same repository with the source.  (As a separate package so as not to add dependencies to libraries just useful for the tutorials.)
If the development efforts are expected to be significantly out of sync that will be a cost, as the packages in a single repository are required to be versioned together by the release tools, the maintainer might not want to do this.  However as packages stabilize, tutorials can be considered part of core documentation and should be able to moved closer to the core functionality.

Originally posted by tfoote with karma: 58457 on 2012-12-27
This answer was ACCEPTED on the original site
Post score: 3

