Q:

Code style checking, specifically naming convention

Is there a ROS tool that enforces the ROS coding style and in particular the naming conventions?
I am currently using roslint, but it doesn't seem to be checking the variable/class/method naming conventions.

I would like a tool that catches/fixes naming issues (those that don't adhere to a style).  Currently, I catch these issues at code review time, but it would be better if developers had a tool to catch/fix these mistakes themselves.

Originally posted by sedwards on ROS Answers with karma: 1601 on 2014-01-02
Post score: 5

A:

Also likely not an answer you're hoping for, but for C++ there is ClangFormat, which supports customisable style rulesets. Should be available on all platforms that Clang is available on.
By default it reformats any input files using the specified style, but it has options to output replacements as xml, which should allow for inclusion in a Jenkins style CI setup.
With some work, it looks like the ROS_format.xml from the wiki could be ported to ClangFormat format.

Edit:

But will it catch/fix naming issues?

I don't think so (but I'm not sure). One of the few free tools that can do this seems to be vera++, which apparently is now on bitbucket. From what I understand this would need some serious work getting the ROS C++ style configured though (available ruleset here).

Edit2: Codehaus SonarCube seems to have a vera++ plugin, which outputs checkstyle style XML reports, see here for a 'sample'.

Originally posted by gvdhoorn with karma: 86574 on 2014-01-06
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by sedwards on 2014-01-07:
I'm not a stickler for spacing, just naming.  Since the ROS format is based on the google style and ClangFormat for google already exists, this might be OK.  But will it catch/fix naming issues?

