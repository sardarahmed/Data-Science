Q:

What is the difference between message_generation and genmsg?

Hello,
I was following the tutorials and I have a question about the message generation. Once you generate a service with messages you need to modify the package.xml file:
<build_depend>message_generation</build_depend>
<run_depend>message_runtime</run_depend>

That part is cover, I have no problems there. Now, after that, you need to modify the CMakeLists file, you need to add:
find_package(catkin REQUIRED_COMPONENTS roscpp rospy std_msgs message_generation)
...
add_dependencies(<node_name> package_name_generate_messages_cpp)

But then, following the tutorials those two lines have different names for the message generation:
find_package(catkin REQUIRED_COMPONENTS roscpp rospy std_msgs genmsg)
...
add_dependencies(<node_name> package_name_gencpp)

What is the difference between message_generation and genmsg?
In the add_dependencies function, the second function declared is for the messages, but why one is package_name_gencpp and the other package_name_generate_messages_cpp??? I am confused here. So, the name for the message generation dependency can be whatever I want. But where is that defined, how does ROS know the second dependency is for messages???
Tutorial Publisher Subscriber
Tutorial Service Client
Thanks.

Originally posted by Luis Ruiz on ROS Answers with karma: 114 on 2014-04-08
Post score: 2

A:

The later tutorials (from https://github.com/ros/catkin_tutorials) are not up-to-date. (You might fill a ticket for this in the GitHub repository for the maintainer to update the tutorials.) You should only use message_generation and the targets ending in _generate_messages_cpp.
For the target it does not make a difference since they are both identifical. The new one is much more intuitively names then the old abbreviated one (_gencpp).
But for the dependency in your package.xml file it does. genmsg only provides the CMake generator functions, message_generation will actually depend on all default supported generators and makes sure that they are actually present. Otherwise e.g. when building Debians on the farm for a package containing messages it might not have any language specific message generators installed.

Originally posted by Dirk Thomas with karma: 16276 on 2014-04-09
This answer was ACCEPTED on the original site
Post score: 3

