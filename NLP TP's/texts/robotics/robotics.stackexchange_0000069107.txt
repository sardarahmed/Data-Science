Q:

Invoking "make" failed

I'm using Ubuntu 12.04 & ROS Hydro. While going through this tutorial here i encountered the following error upon typing:
catkin_make
asaad@VAIO:~/catkin_ws$ catkin_make
Base path: /home/asaad/catkin_ws
Source space: /home/asaad/catkin_ws/src
Build space: /home/asaad/catkin_ws/build
Devel space: /home/asaad/catkin_ws/devel
Install space: /home/asaad/catkin_ws/install
####
#### Running command: "make cmake_check_build_system" in "/home/asaad/catkin_ws/build"
####
####
#### Running command: "make -j4 -l4" in "/home/asaad/catkin_ws/build"
####
[  0%] [  8%] Built target std_msgs_generate_messages_py
[ 16%] [ 16%] Built target std_msgs_generate_messages_cpp
Building CXX object begginer_tutorials/CMakeFiles/add_two_ints_server.dir/src/add_two_ints_server.cpp.o
Building CXX object begginer_tutorials/CMakeFiles/add_two_ints_client.dir/src/add_two_ints_client.cpp.o
[ 16%] Built target std_msgs_generate_messages_lisp
[ 25%] Built target listener
[ 33%] Built target talker
[ 50%] Built target begginer_tutorials_generate_messages_cpp
[ 83%] Built target begginer_tutorials_generate_messages_py
[100%] Built target begginer_tutorials_generate_messages_lisp
[100%] Built target begginer_tutorials_generate_messages
/home/asaad/catkin_ws/src/begginer_tutorials/src/add_two_ints_server.cpp:2:43: fatal error: beginner_tutorials/AddTwoInts.h: No such file or directory
compilation terminated.
/home/asaad/catkin_ws/src/begginer_tutorials/src/add_two_ints_client.cpp:2:43: fatal error: beginner_tutorials/AddTwoInts.h: No such file or directory
compilation terminated.
make[2]: *** [begginer_tutorials/CMakeFiles/add_two_ints_server.dir/src/add_two_ints_server.cpp.o] Error 1
make[1]: *** [begginer_tutorials/CMakeFiles/add_two_ints_server.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
make[2]: *** [begginer_tutorials/CMakeFiles/add_two_ints_client.dir/src/add_two_ints_client.cpp.o] Error 1
make[1]: *** [begginer_tutorials/CMakeFiles/add_two_ints_client.dir/all] Error 2
make: *** [all] Error 2
Invoking "make" failed

     

I saw the other answers related to this but couldn't find the error myself.
EDITED:
The CMakeLists.txt file contains the following data:
cmake_minimum_required(VERSION 2.8.3)
project(begginer_tutorials)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  roscpp
  rospy
  std_msgs
  message_generation
)

## System dependencies are found with CMake's conventions
# find_package(Boost REQUIRED COMPONENTS system)

## Uncomment this if the package has a setup.py. This macro ensures
## modules and global scripts declared therein get installed
## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html
# catkin_python_setup()

################################################
## Declare ROS messages, services and actions ##
################################################

## To declare and build messages, services or actions from within this
## package, follow these steps:
## * Let MSG_DEP_SET be the set of packages whose message types you use in
##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).
## * In the file package.xml:
##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET
##   * If MSG_DEP_SET isn't empty the following dependencies might have been
##     pulled in transitively but can be declared for certainty nonetheless:
##     * add a build_depend tag for "message_generation"
##     * add a run_depend tag for "message_runtime"
## * In this file (CMakeLists.txt):
##   * add "message_generation" and every package in MSG_DEP_SET to
##     find_package(catkin REQUIRED COMPONENTS ...)
##   * add "message_runtime" and every package in MSG_DEP_SET to
##     catkin_package(CATKIN_DEPENDS ...)
##   * uncomment the add_*_files sections below as needed
##     and list every .msg/.srv/.action file to be processed
##   * uncomment the generate_messages entry below
##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)

## Generate messages in the 'msg' folder
 add_message_files(
   FILES
   Num.msg
  
 )

## Generate services in the 'srv' folder
 add_service_files(
    FILES
    AddTwoInts.srv
 )

## Generate actions in the 'action' folder
# add_action_files(
#   FILES
#   Action1.action
#   Action2.action
# )

## Generate added messages and services with any dependencies listed here
 generate_messages(
   DEPENDENCIES
   std_msgs
 )

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if you package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
  INCLUDE_DIRS include
  LIBRARIES begginer_tutorials
  CATKIN_DEPENDS message_runtime roscpp rospy std_msgs
  DEPENDS system_lib
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
# include_directories(include)
include_directories(
  ${catkin_INCLUDE_DIRS}
)

## Declare a cpp library
# add_library(begginer_tutorials
#   src/${PROJECT_NAME}/begginer_tutorials.cpp
# )

## Declare a cpp executable
# add_executable(begginer_tutorials_node src/begginer_tutorials_node.cpp)

## Add cmake target dependencies of the executable/library
## as an example, message headers may need to be generated before nodes
# add_dependencies(begginer_tutorials_node begginer_tutorials_generate_messages_cpp)

## Specify libraries to link a library or executable target against
# target_link_libraries(begginer_tutorials_node
#   ${catkin_LIBRARIES}
# )

#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
# install(PROGRAMS
#   scripts/my_python_script
#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark executables and/or libraries for installation
# install(TARGETS begginer_tutorials begginer_tutorials_node
#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark cpp header files for installation
# install(DIRECTORY include/${PROJECT_NAME}/
#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
# install(FILES
#   # myfile1
#   # myfile2
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
# )

#############
## Testing ##
#############

## Add gtest based cpp test target and link libraries
# catkin_add_gtest(${PROJECT_NAME}-test test/test_begginer_tutorials.cpp)
# if(TARGET ${PROJECT_NAME}-test)
#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
# endif()

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)

include_directories(include ${catkin_INCLUDE_DIRS})

add_executable(talker src/talker.cpp)
target_link_libraries(talker ${catkin_LIBRARIES})
add_dependencies(talker beginner_tutorials_generate_messages_cpp)

add_executable(listener src/listener.cpp)
target_link_libraries(listener ${catkin_LIBRARIES})
add_dependencies(listener beginner_tutorials_generate_messages_cpp)

add_executable(add_two_ints_server src/add_two_ints_server.cpp)
target_link_libraries(add_two_ints_server ${catkin_LIBRARIES})
add_dependencies(add_two_ints_server beginner_tutorials_gencpp)

add_executable(add_two_ints_client src/add_two_ints_client.cpp)
target_link_libraries(add_two_ints_client ${catkin_LIBRARIES})
add_dependencies(add_two_ints_client beginner_tutorials_gencpp)

Originally posted by Asaad Irfan on ROS Answers with karma: 62 on 2015-08-07
Post score: 0

A:

Well, the node you try to compile (I guess from this Tutorial, not the one you linked) doesn't find the header AddTwoInts.h for including.
Have you (strictly) followed this part of the tutorial for creating msg and srv? Is the AddTwoInts.srv in your beginner_tutorials package?
If this doesn't help you, please post the contents of your CMakeLists.txt (by editing your post above).

EDIT
Alright, the problem seems to be that you actually called the package/directory/project begginer_tutorials.
The error says it cannot in include beginner_tutorials/AddTwoInts.h. Note the different spelling of begginer/beginner.
When you create msgs/srvs, the generated headers are placed in a subfolder with the name of the project.
So please change the include to begginer_tutorials/AddTwoInts.h. This should resolve the issue. (Or, alternatively, rename the package as well as all occurences of begginer with beginner).

Originally posted by mgruhler with karma: 12390 on 2015-08-07
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Asaad Irfan on 2015-08-09:
Yes ,there is a file named AddTwoInts.srv in begginer_tutorials in the begginer_tutorials package at this location:
catkin_ws/src/begginer_tutorials/srv

Yes i followed this part of the tutorial  completely.
Comment by Asaad Irfan on 2015-08-10:
Thank you mig. The spelling error(begginer & beginner) starts from this tutorial & continues here as well. if anyone copies & pastes the text, ERROR!
Comment by mgruhler on 2015-08-10:
So this is solved? (If yes, please accept the answer by clicking on the check mark)
But the correct spelling is beginner and this is consistent throughout the tutorials you linked.
Maybe you had a typo in the catkin_create_pkg command when creating the pkg? If not, where is the error exactly?
Comment by Asaad Irfan on 2015-08-10:
My bad. I was typing 'begginer' in all the previous tutorials and just started copying & pasting from these tutorials so thats why.

