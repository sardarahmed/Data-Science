Q:

No tf between odom and base

I want to obtain the current position (odometry position) of my robot by listening to the tf between odom and the base of the robot (base_footprint). However, even though the tf exists the code cannot find any.
Here is my code:
def get_start_position():
    tf = TransformListener()
    if tf.frameExists("base_footprint") and tf.frameExists("odom"):
        print "Frames exist"
        t = tf.getLatestCommonTime("/base_link", "/map")
        p,q = tf.lookupTransform("/odom", "/base_footprint", t)
        print p
    x = 1
    y = 5.9
    z = 0
    w = 1
    return [x,y,z,w]

And here is my tf tree:

For some reason, the function does not return true tf values instead returns dummy values as specified above.

Originally posted by stevemartin on ROS Answers with karma: 361 on 2019-01-03
Post score: 0

A:

This question comes up a lot. The problem comes from a misunderstanding of how the TransformListener object works, you cannot create it and then query it for transforms straight away.
The object works by listening to the TF topic, so after 100 milliseconds to a second or so it will have collected enough TF messages to be able to correctly respond to transform requests. However if you query it to early before it has had a change to receive many messages then it will not be able to find the transform you're requesting.
The correct way to use this object is to create a single TransformListener object when your node is started then use that object for the lifetime of your node. You can add a one second sleep after creating it to be on the safe side.
Hope this helps.

Originally posted by PeteBlackerThe3rd with karma: 9529 on 2019-01-03
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by stevemartin on 2019-01-03:
Thanks. Would you mind looking at this question? LINK
I do not understand why ros service causes this problem
Comment by stevemartin on 2019-01-03:
@PeteBlackerThe3rd I actually think that initiating TF causes the problem specified in the link above. I declared the tf at the very top and the problem in the link above occurred straight away
Comment by stevemartin on 2019-01-03:
Added a comment to my question in the link above

