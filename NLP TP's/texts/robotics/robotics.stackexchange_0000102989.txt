Q:

Path planning without move_base - just using aruco_tag relative pose

I am trying to calculate a trajectory based on the information I have:

aruco_tag relative position and orientation (relative to camera_link of my robot)

I don't want to use any information from /map and my fixed_frame should be base_footprint . Is it possible to do? Path planning without using any information from /map ?

Originally posted by alperenkeser on ROS Answers with karma: 3 on 2023-02-01
Post score: 0

Original comments
Comment by Mike Scheutzow on 2023-02-11:
Of course it "is possible". Are you trying to drop move_base completely, or only create your own planner for use inside move_base? Are we talking about a local_planner or a global_planner?
Comment by alperenkeser on 2023-02-13:
Thanks for the reply. I would like to do it without move_base if it's possible. I could not find any tutorials or examples for a path planning algorithm without move_base and with the goal pose is given relative to something like camera_link or base_footprint, not map. Because I am trying to do docking using a camera-aruco tag setup and I want to plan a precise path to my goal, aruco tag. If I take the aruco tag's pose with respect to map, it would be less accurate.
I tried to create my own planner also but I cannot understand how could one do so without using move_base. I believe I am talking about both global_planner and a local_planner because I want to create a path to my goal and then I want to navigate through that path BUT my priority is creating a path first. I could deal with navigating it later.
Again, usage of move_base is OK for me if it is going to be easier since I am not experienced in ROS :) Main issue is creating a path between camera_link and aruco_tag.

A:

Here is a basic approach to implementing a solution without using move_base:
"No map" implies you intend to do relative navigation in the robot's frame. For 2D navigation, this means that the goal information you have at each step is: "my goal is at this distance and at this yaw angle." Very important: these values are assumed to be in the base_link frame.
If your sensor reading gives you the goal is in some other frame, you need to transform that sensor-goal to your robot's base_link frame before you use it.
Then you calculate a Twist message which will move the robot closer to the goal, and publish the message to /cmd_vel. You repeat this whole cycle over and over until the robot is "close enough" (or until the robot can't move forward for some reason.)

Originally posted by Mike Scheutzow with karma: 4903 on 2023-02-14
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by alperenkeser on 2023-02-15:
I understood the idea better now. But as far as I understand, your method is like a controller depending on the data coming from my goal's pose (distance and yaw). So it is like a visual servoing? I was hoping more like a trajectory planning kind of method because during the motion of my robot, aruco tag (my goal) could get out of the camera frame easily. But still, thank you very much for your guidance.
Comment by Mike Scheutzow on 2023-02-16:
If you want to pre-plan a path, then you must have a map. And to issue commands to follow a path, you must have some way to estimate your robot's position on that map.

