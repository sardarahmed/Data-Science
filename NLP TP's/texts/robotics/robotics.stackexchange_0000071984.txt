Q:

Moveit motion planning VERY slow

Hello,
I made a custom arm with dynamixel motors that I managed to move it with moveit. However, after planning, when I execute the movement, all the intermediate points are very distant in time (roughly 7 seconds between each point).
In the log below you can find an extract of the goal with 3 sample points respectively at time 0, 7 and 14s. I tried with another goal and I had 8.5 seconds between each intermediate points...
From where this "lag" comes from? do you have an idea?
Thank you very much in advance
        positions: [-0.2684466378799872, -1.1274758790959463, 1.030835089459151, 1.6183497312193513, -0.5108156023659185, -0.9065826456404139]
    velocities: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    accelerations: [0.0004511662190817926, 0.0, 0.0, 0.0, 0.0, 0.0]
    effort: []
    time_from_start: 
      secs: 0
      nsecs: 0
  - 
    positions: [-0.2562400395714328, -1.0762276932709398, 0.9839826590823839, 1.5447893388407326, -0.48759680001145106, -0.8653775109410078]
    velocities: [0.0016593982051817287, 0.006966817898581831, -0.006369246935989043, -0.01, 0.00315642720269342, 0.005601538187469333]
    accelerations: [3.5373454787627456e-19, -2.8298763830101965e-18, 2.59405335109268e-18, 0.0, -1.29702667554634e-18, -3.5373454787627456e-19]
    effort: []
    time_from_start: 
      secs: 7
      nsecs: 356039237
  - 
    positions: [-0.2440334412628784, -1.0249795074459334, 0.9371302287056169, 1.4712289464621136, -0.4643779976569836, -0.8241723762416016]
    velocities: [0.0016593982051817287, 0.006966817898581831, -0.006369246935989043, -0.01, 0.00315642720269342, 0.005601538187469333]
    accelerations: [-3.5373454787627456e-19, 2.8298763830101965e-18, -2.59405335109268e-18, 0.0, 1.29702667554634e-18, 3.5373454787627456e-19]
    effort: []
    time_from_start: 
      secs: 14
      nsecs: 712078475

Originally posted by raphael_leber_cpe on ROS Answers with karma: 16 on 2016-02-12
Post score: 0

Original comments
Comment by dornhege on 2016-02-12:
To be clear, what the question is about: It is not the planning that is slow, but the time parametrization of the resulting plan is resulting in plans that take to long to execute.

A:

Thank you for your answer dornhege. You are right, sorry.
I found my mistake. I had not the expected values in joint_limits.yaml

Originally posted by raphael_leber_cpe with karma: 16 on 2016-02-12
This answer was ACCEPTED on the original site
Post score: 0

