Q:

ResizeNode subscribes and publishes camera info on the same topic

Seems like a dumb question, but I can't find the answer.
I see that image_proc::ResizeNode subscribes to /camera_info, and then generates a new CameraInfo message with the scaled intrinsics. But it publishes this scaled camera info on the the same topic. The messages are identical except for fx, fy, cx and cy. How can a downstream node tell them apart? How does this work with image_transport?
Thanks.

Originally posted by clyde on ROS Answers with karma: 1247 on 2021-10-20
Post score: 0

Original comments
Comment by gvdhoorn on 2021-10-21:
That doesn't sound like what should be happening.

How can a downstream node tell them apart?

it would not be able to. Or at least not in any scalable way.
Could you link to the code (as in: specific lines)? I'm assuming you're looking at the default implementation, which is hosted in a Github repository.
Comment by clyde on 2021-10-22:
ROS2 version uses an image_transport::CameraPublisher and an image_transport::CameraSubscriber:
https://github.com/ros-perception/image_pipeline/blob/c8a1f4fea5902214d8bc4b7562e4199837b4b776/image_proc/src/resize.cpp#L53
Both of these call image_transport::getCameraInfoTopic:
CameraSubscriber: https://github.com/ros-perception/image_common/blob/b2d8d5cbaf3edad81f02c572f073368f7ce17615/image_transport/src/camera_subscriber.cpp#L125
CameraPublisher: https://github.com/ros-perception/image_common/blob/b2d8d5cbaf3edad81f02c572f073368f7ce17615/image_transport/src/camera_publisher.cpp#L92
image_transport::getCameraInfoTopic basically always returns "/camera_info":
https://github.com/ros-perception/image_common/blob/b2d8d5cbaf3edad81f02c572f073368f7ce17615/image_transport/src/camera_common.cpp#L60
This looks like a bug to me. It seems funny that this hasn't been noticed before, though.
Comment by clyde on 2021-10-22:
ROS1 is different... it uses a private node handle for pub and node handle for sub. It's been a while since I've used ROS1, perhaps it's possible to distinguish between them through remapping?
https://github.com/ros-perception/image_pipeline/blob/noetic/image_proc/src/nodelets/resize.cpp
Comment by clyde on 2021-10-25:
Looks like a bug has already been reported: https://github.com/ros-perception/image_pipeline/issues/703

A:

Bug reported here: https://github.com/ros-perception/image_pipeline/issues/703

Originally posted by clyde with karma: 1247 on 2023-05-22
This answer was ACCEPTED on the original site
Post score: 0

