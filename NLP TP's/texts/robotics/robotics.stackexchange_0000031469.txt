Q:

How to use very latest OpenCV version in ROS?

I am trying to use the very latest version of OpenCV in ROS because I want to integrate a critical bugfix from OpenCV. From what I read OpenCV is integrated by some 'magic' mechanism. Is it simply enough to replace my diamondback vision_opencv stack by the latest one from SVN, or do I also have to specify which OpenCV version is magically included?

Originally posted by Julius on ROS Answers with karma: 960 on 2011-05-05
Post score: 3

A:

The make file in vision_opencv/opencv2 seems to contain the URI and svn branch it checks out. You could probably do what you are saying by changing that URI, though I'm guessing and can't confirm that this would work.

Originally posted by Asomerville with karma: 2743 on 2011-05-05
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Julius on 2011-05-06:
True indeed, that's good advice. It's not recommended to mess around with any packaged installation. The steps remain the same, though.
Comment by Eric Perko on 2011-05-06:
You should avoid changing the files included in the debs (the files that are in /opt/ros ) as they will likely be overwritten in the next update to that .deb package. You should instead overlay the vision_opencv stack and make your changes to this local overlay.
Comment by Julius on 2011-05-06:
Yes. I backported latest OpenCV rev 5024 from trunk to aptitude ROS diamondback installation. Applied the following changes (1) SVN_URL="https://code.ros.org/svn/opencv/trunk/opencv", (2) SVN_REVISION="-r5024", (3) disabling out-dated patch "# SVN_PATCH = pythontest.patch". (4) Removed ROS_NOBUILD.
Comment by tfoote on 2011-05-05:
This will work as long as you are building everything dependent on it from source.

