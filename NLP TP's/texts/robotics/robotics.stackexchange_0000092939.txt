Q:

How to connect remote roscore with python in runtime

The following is the implementation using roscpp:
std::map<std::string, std::string> remappings;
remappings["__master"] = master_url;
remappings["__hostname"] = host_url;
ros::init(remappings, "node name");
parement "master_url" and "host_url" come from UI
So how to  implement using python?

Originally posted by ugluo on ROS Answers with karma: 3 on 2019-08-13
Post score: 0

Original comments
Comment by ct2034 on 2019-08-14:
Can you please clarify: What are you trying to achieve? What have you tried? What do you expect to happen and what happens instead? And please make sure your code is correctly formatted.
Comment by ugluo on 2019-08-14:
I want to connect remote roscore with python, The above code implements the function of connecting to a remote roscore using roscpp.
Comment by ugluo on 2019-08-14:
roscpp:
std::map<std::string, std::string=""> remappings;
remappings["__master"] = master_url;
remappings["__hostname"] = host_url;
ros::init(remappings, "node name");
Comment by ugluo on 2019-08-14:
the rospy project come from catkin_create_qt_pkg
catkin_create_qt_pkg test_qt

the code in 'src/qnode.cpp' lline 57-59

A:

I am not familiar with the remapping within the code. The normal way is: You have to set the ROS_MASTER_URI and ROS_HOSTNAME environment variable in the terminal according to https://wiki.ros.org/ROS/NetworkSetup. Then run your python code with rosrun and it will connect to the remote roscore.

Originally posted by ct2034 with karma: 862 on 2019-08-14
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by ugluo on 2019-08-14:
Thanks
I know this solution,but I want to implement it in code like roscpp, the parameters come from the UI
I have tried to use os.system("shell commond") but failed,like this:
os.system('export ROS_MASTER_URI=http://192.168.0.91:11311 ; echo $ROS_MASTER_URI')
os.system('echo $ROS_MASTER_URI')

Comment by ct2034 on 2019-08-14:
I see. You could try https://docs.python.org/2.7/library/os.html#os.putenv
Comment by ugluo on 2019-08-15:
Thanks,  the function of os.putenv() can't set the environment on my own running python,just like the way "launch terminal „ÄÅset environment and run command",
my rusty code in link text
Comment by ct2034 on 2019-08-15:
please try os.putenv("ROS_MASTER_URI", "http://192.168.0.91:11311") (and the same for ROS_HOSTNAME) then you can check with print(os.environ). This seems to be also how init_node gets the params (https://docs.ros.org/melodic/api/rospy/html/rospy.client-pysrc.html#init_node - line 317)
Comment by ugluo on 2019-08-15:
Thank you serserly ,the problem is already solved.
i try to use os.putenv
os.putenv("ROS_MASTER_URI", "http://192.168.0.91:11311")
print(os.environ)
self.node =  rospy.init_node('leap_one_gazebo_control', anonymous=True)
print(os.environ)

then output:
http://localhost:11311
http://localhost:11311

so i print the type(os.environ) and Force modify data of the  dictionary
os.environ['ROS_MASTER_URI'] = 'http://192.168.0.91:11311'
os.environ['ROS_MASTER_IP'] = '192.168.0.91'

tne output
http://192.168.0.91:11311
http://192.168.0.91:11311

Comment by ct2034 on 2019-08-15:
ok, cool. Can you please accept my answer then (click the little check mark)

