Q:

Best open-source pedestrian detection library for commercial use?

Hi there,
I'm looking for the best real-time image-based people detection software that is available for commercial use, and easily integrated to ROS. So preferably C++ with a simple structure and clear documentation. I know the state-of-art in people detection; it's easily available from surveys,  e.g.

What I would like to have is something similar to the algorithms marked M-Q in the image. However, all seem to be shared with a non-commercial license.
Here is what I've come up so far:

OpenCV HOG implementation as ROS package -- however, basic HOG is probably not very accurate https://github.com/angusleigh/hog_haar_person_detection
SPENCER implementation -- again, just basic HOG? Plus, it's an EU project. https://github.com/spencer-project/spencer_people_tracking
Munaro et al -- basic Haar & HOG? https://github.com/ros-industrial/human_tracker

As a bonus, a good tracker that is integrated with the detector would be nice, but not it's not required.

Originally posted by Tommi on ROS Answers with karma: 111 on 2015-08-19
Post score: 2

Original comments
Comment by gvdhoorn on 2015-08-24:
Can you comment on why you feel they "all seem to be shared with a non-commercial license"? Some open-source licenses explicitly allow commercial use, with just the requirement that you mention the use of the those libraries / dependencies. They don't require you to make your work open source.
Comment by Tommi on 2015-08-25:
They explicitly mention that the code is shared for research use only.
Comment by gvdhoorn on 2015-08-25:
All of them? Are these actual open-source licenses then?

A:

I spent some time reading the FPDW and VeryFast papers. The conclusion is that they are mostly performance optimizations and small tweaks, while the fundamental detector is still HOG. Also, the classifier (SVM, NN, decision forest) does not make a huge difference. Therefore, I decided to go with HOG+SVM because it's fast and simple, and I found a good implementation from http://dlib.net. Example: http://blog.dlib.net/2014/02/dlib-186-released-make-your-own-object.html
Dlib uses an improved version of HOG, by Felzenszwalb et al. Also, performance should be better than OpenCV.

Originally posted by Tommi with karma: 111 on 2015-09-14
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by phivu123 on 2017-06-12:
Hi Tommi, thanks a lot for your recommendation. How was you pedestrian detection using dlib? Is it good? Can you share something about the result? I made a brief survey on c++ libraries for pedestrian detection but so far dlib seems to be a feasible one that is better than OpenCV...
Comment by phivu123 on 2017-06-12:
... but very few users share the result on this.
Comment by Tommi on 2017-06-13:
I'm really happy with dlib, it's a good quality library. Nowadays you'd get a better performance with Deep Neural Networks but with a bigger computational cost in general.
Comment by phivu123 on 2017-06-13:
That sounds great, do you know any workable c++ library that supports deep neural network training for pedestrian detection, or can dlib do that? Thanks!
Comment by Tommi on 2017-06-13:
I don't know but you might want to look into Python libraries instead.

