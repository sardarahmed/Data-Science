Q:

Installation from source in XUbuntu 12.10 with urdf

Hello
I'm trying to install gazebo 1.4 on my Xubuntu 12.10 from source code
analyzing the output of "cmake .." I've noticed that URDF module can not be recognized, altough I've added the ros groovy repository to my system.
In particular, I've done the following things:
sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu quantal main" > /etc/apt/sources.list./ros-latest.list'
wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
sudo apt-get update
sudo apt-get install ros-groovy-urdfdom ros-groovy-urdfdom-headers
sudo apt-get install ros-groovy-urdf ros-groovy-urdf-interface ros-groovy-urdf-parser

and then I've run
cmake ..

and also tried
CMAKE_PREFIX_PATH=/opt/ros/groovy/ cmake -DCMAKE_MODULE_PATH=/opt/ros/groovy/share ..

I always obtain that the urdf modules are not found, altought they are installed
moreover, if I disable the "QUIT" flag in the find_package commands of SearchFroStuff.cmake I obtain the next warning:
checking for module 'urdfdom_headers'
package 'urdfdom_headers' not found
urdfdom_headers not found, urdf parser will not be built.
CMake Warning at cmake/SearchForStuff.cmake:258 (find_package):
  Found package configuration file:

    /opt/ros/groovy/share/urdfdom/cmake/urdfdomConfig.cmake

  but it set urdfdom_FOUND to FALSE so package "urdfdom" is considered to be
  NOT FOUND.
Call Stack (most recent call first):
  CMakeLists.txt:142 (include)

(I obtain a similar output for urdfdom_headers and console_bridge
any suggestion?
thanks in advance
SImone

Originally posted by SImone on Gazebo Answers with karma: 33 on 2013-02-11
Post score: 0

A:

The recommended way to build Gazebo (< 1.9.0) with URDF support is to source the ROS setup file, e.g.:
source /opt/ros/groovy/setup.sh
cmake ..

I just tested that sequence with ROS Groovy and Gazebo 1.4.0 and it was able to find the URDF libraries.
But then I tried your, more minimal, approach, of setting CMAKE_PREFIX_PATH and CMAKE_MODULE_PATH on the command line when calling cmake.  That also worked for me.
So your problem might be due to CMake's caching of system requirement search results; maybe you ran cmake once without the right things installed or without the right environment configuration, and the lack of URDF support was cached then retrieved and used in your future runs, when you had everything configured correctly.
Whenever you change something (install or remove a library, or even change the way that you're invoking cmake), it's safest to delete everything in your build directory and start the build from scratch.  Then you're sure that previous search results aren't still in cache.

Originally posted by gerkey with karma: 1414 on 2013-07-23
This answer was ACCEPTED on the original site
Post score: 0

