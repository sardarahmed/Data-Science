Q:

How to write a Tf listener for a maniplutaor

I am looking for a help in writing a TF listner code for a manipulator, which will aid me in finding Forward and Inverse Kinematics. The TF listener tutorial is for turtlesim and i want to write a code for a manipulator.

Originally posted by Sheby 99 on ROS Answers with karma: 1 on 2018-07-08
Post score: 0

A:

Hi,
this is almost the same as for the turtlesim. You can lookup the transformation between arbitrary coordinate frames. So, say you want to find the transformation from your end-effector ee_link to the base of the manipulator base_link. You can do this with (better place it in a try-catch enviroment):
  tf::StampedTransform transform;  
  listener.lookupTransform ("/ee_link", "/base_link", ros::Time::now(), transform);

However, first it would be helpful to open rviz and lookup the names of the coordinate frames, if you didn't do it so far.
I hope, I got your question right, if not, don't hesitate to ask again.
Cheers,
Matthias
Edit: It seems, that you have to complete a few steps more before you need the transformations served by ROS. At first, create a model of your robot. For this purpose you can use Denavitâ€“Hartenberg parameters. This will help you to get the forward kinematikc. The inverse kinematic will be an optimization problem, which can't be solved in a closed form for a six axis robot like yours.
However, maybe you should have a look at this Matlab toolbox by Peter Corke. It is an open-source toolbox which will help you to learn a lot about your task.
Edit 2: Your Robot has 5 axis, not 6. But nonetheless, it should make no difference for you.

Originally posted by matt_do with karma: 43 on 2018-07-09
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Sheby 99 on 2018-07-09:
Thank you so much for the reply basically i have a Youbot Robot for which i have to find Forward and Inverse Kinematics. How would i know whether my TF is working right or not?
I am very new to ROS so kindly ur help will be highly appreciated.

