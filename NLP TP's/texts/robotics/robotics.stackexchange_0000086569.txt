Q:

Subscribing to message and re-publishing only specific part, real time?

Hi everyone,
I am currently working on sending the information from /joint_states to an Arduino, however the information in my message is too large to be sent, even after increasing the buffer.
My plan is to make a program that subscribes to joint_states, scrapes the position array and re-publishes on a different topic. I am new to ROS so I have no idea where to start.
Could someone give me a helping hand? Thank you so much in advance :).

Originally posted by nyxaria on ROS Answers with karma: 13 on 2018-04-16
Post score: 0

A:

It might seem a bit redundant, but that's how I would do it.
(I'm assuming you want to keep everything except the position array)
1- Define a new message. I'm defining it in package myPkg and calling it newMsg.
Header header  
string[] name
float64[] velocity
float64[] effort

2- Write a node that on receiving a message (callback), publishes the data you want.
import rospy  
from myPkg.msg import newMsg  
from sensor_msgs.msg import JointState  

def callback(msg):  
       out.header = msg.header  
       out.velocity = msg.velocity  
       out.effort = msg.effort  
       pub.publish(out) 

rospy.init_node('Scraper')  
sub = rospy.Subscriber('in', JointState, callback)  
pub = rospy.Publisher('out', newMsg)  
rospy.spin()  

Note: If concerned about performance, implement this in the node you're subscribing to.

Originally posted by mohsen with karma: 249 on 2018-04-17
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by gvdhoorn on 2018-04-17:
+1 for the example. That is actually exactly what the transform node does / allows you, but without writing an actual node.
Comment by nyxaria on 2018-04-19:
Thank you, I ended up using your solution as the basis for mine :). Have a great day!

