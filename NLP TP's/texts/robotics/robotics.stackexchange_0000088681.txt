Q:

Setting up your robot using tf, migration to tf2

Hi all,
I am following the tutorial from this link here: http://wiki.ros.org/navigation/Tutorials/RobotSetup/TF
Noticed that it is using tf, however I would like to code it in tf2 seeing I have gone through the tf2 tutorials.
For the broadcaster file I had converted the original tf version which is this:
#include <ros/ros.h>
#include <tf/transform_broadcaster.h>

int main(int argc, char** argv){
  ros::init(argc, argv, "robot_tf_publisher");
  ros::NodeHandle n;

  ros::Rate r(100);

  tf::TransformBroadcaster broadcaster;

  while(n.ok()){
    broadcaster.sendTransform(
      tf::StampedTransform(
        tf::Transform(tf::Quaternion(0, 0, 0, 1), tf::Vector3(0.1, 0.0, 0.2)),
        ros::Time::now(),"base_link", "base_laser"));
    r.sleep();
  }
}

To the tf2 version which I did up here (not sure if I did it correctly):
#include <ros/ros.h>
#include <tf2/LinearMath/Quaternion.h>
#include <tf2_ros/transform_broadcaster.h>
#include <geometry_msgs/TransformStamped.h>

int main(int argc, char** argv){
  ros::init(argc, argv, "robot_tf2_ros_publisher");
  ros::NodeHandle n;

  ros::Rate r(100);

  tf2_ros::TransformBroadcaster broadcaster;
  geometry_msgs::TransformStamped transformStamped;
  
  while(n.ok()){
    transformStamped.header.stamp = ros::Time::now();
    transformStamped.header.frame_id = "base_link";
    transformStamped.child_frame_id = "base_laser";
    transformStamped.transform.translation.x = 0.1;
    transformStamped.transform.translation.y = 0.0;
    transformStamped.transform.translation.z = 0.2;
    transformStamped.transform.rotation.x = 0;
    transformStamped.transform.rotation.y = 0;
    transformStamped.transform.rotation.z = 0;
    transformStamped.transform.rotation.w = 1;
    broadcaster.sendTransform(transformStamped);
    r.sleep();
  }
}

As for the listener file, I'm not sure how to convert it into the tf2 version :(
The original tf version of the listener file is as follows:
#include <ros/ros.h>
#include <geometry_msgs/PointStamped.h>
#include <tf/transform_listener.h>

void transformPoint(const tf::TransformListener& listener){
  //we'll create a point in the base_laser frame that we'd like to transform to the base_link frame
  geometry_msgs::PointStamped laser_point;
  laser_point.header.frame_id = "base_laser";

  //we'll just use the most recent transform available for our simple example
  laser_point.header.stamp = ros::Time();

  //just an arbitrary point in space
  laser_point.point.x = 1.0;
  laser_point.point.y = 0.2;
  laser_point.point.z = 0.0;

  try{
    geometry_msgs::PointStamped base_point;
    listener.transformPoint("base_link", laser_point, base_point);

    ROS_INFO("base_laser: (%.2f, %.2f. %.2f) -----> base_link: (%.2f, %.2f, %.2f) at time %.2f",
        laser_point.point.x, laser_point.point.y, laser_point.point.z,
        base_point.point.x, base_point.point.y, base_point.point.z, base_point.header.stamp.toSec());
  }
  catch(tf::TransformException& ex){
    ROS_ERROR("Received an exception trying to transform a point from \"base_laser\" to \"base_link\": %s", ex.what());
  }
}

int main(int argc, char** argv){
  ros::init(argc, argv, "robot_tf_listener");
  ros::NodeHandle n;

  tf::TransformListener listener(ros::Duration(10));

  //we'll transform a point once every second
  ros::Timer timer = n.createTimer(ros::Duration(1.0), boost::bind(&transformPoint, boost::ref(listener)));

  ros::spin();

}

If anyone would be able to help it would be very much appreciated.

Edit: Followed ur suggestions and changed the code. However I am getting errors :(
Listed the errors below -
/home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp: In function ‘void transformPoint(const tf2_ros::TransformListener&)’:
/home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:20:5: error: ‘tfBuffer’ was not declared in this scope
     tfBuffer.transformPoint("base_link", laser_point, base_point);
     ^
/home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:26:18: error: ‘TransformException’ in namespace ‘tf2_ros’ does not name a type
   catch(tf2_ros::TransformException& ex){
                  ^
In file included from /opt/ros/kinetic/include/ros/ros.h:40:0,
                 from /home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:1:
/home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:27:109: error: ‘ex’ was not declared in this scope
 on trying to transform a point from \"base_laser\" to \"base_link\": %s", ex.what());
                                                                           ^
/opt/ros/kinetic/include/ros/console.h:346:165: note: in definition of macro ‘ROSCONSOLE_PRINT_AT_LOCATION_WITH_FILTER’
 define_location__loc.level_, __FILE__, __LINE__, __ROSCONSOLE_FUNCTION__, __VA_ARGS__
                                                                           ^
/opt/ros/kinetic/include/ros/console.h:379:7: note: in expansion of macro ‘ROSCONSOLE_PRINT_AT_LOCATION’
       ROSCONSOLE_PRINT_AT_LOCATION(__VA_ARGS__); \
       ^
/opt/ros/kinetic/include/ros/console.h:561:35: note: in expansion of macro ‘ROS_LOG_COND’
 #define ROS_LOG(level, name, ...) ROS_LOG_COND(true, level, name, __VA_ARGS__)
                                   ^
/opt/ros/kinetic/include/rosconsole/macros_generated.h:214:24: note: in expansion of macro ‘ROS_LOG’
 #define ROS_ERROR(...) ROS_LOG(::ros::console::levels::Error, ROSCONSOLE_DEFAULT_NAME
                        ^
/home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:27:5: note: in expansion of macro ‘ROS_ERROR’
     ROS_ERROR("Received an exception trying to transform a point from \"base_laser\" 
     ^
robot_setup_tf/CMakeFiles/tf_listener.dir/build.make:62: recipe for target 'robot_setup_tf/CMakeFiles/tf_listener.dir/src/tf_listener.cpp.o' failed
make[2]: *** [robot_setup_tf/CMakeFiles/tf_listener.dir/src/tf_listener.cpp.o] Error 1
CMakeFiles/Makefile2:2227: recipe for target 'robot_setup_tf/CMakeFiles/tf_listener.dir/all' failed
make[1]: *** [robot_setup_tf/CMakeFiles/tf_listener.dir/all] Error 2
Makefile:138: recipe for target 'all' failed
make: *** [all] Error 2
Invoking "make -j4 -l4" failed

My edited code looks as so, not sure what I'm doing wrong :( -
#include <ros/ros.h>
#include <geometry_msgs/PointStamped.h>
#include <tf2_ros/transform_listener.h>

void transformPoint(const tf2_ros::TransformListener& tfListener){
  //we'll create a point in the base_laser frame that we'd like to transform to the base_link frame
  geometry_msgs::PointStamped laser_point;
  laser_point.header.frame_id = "base_laser";

  //we'll just use the most recent transform available for our simple example
  laser_point.header.stamp = ros::Time();

  //just an arbitrary point in space
  laser_point.point.x = 1.0;
  laser_point.point.y = 0.2;
  laser_point.point.z = 0.0;

  try{
    geometry_msgs::PointStamped base_point;
    tfBuffer.transformPoint("base_link", laser_point, base_point);

    ROS_INFO("base_laser: (%.2f, %.2f. %.2f) -----> base_link: (%.2f, %.2f, %.2f) at time %.2f",
        laser_point.point.x, laser_point.point.y, laser_point.point.z,
        base_point.point.x, base_point.point.y, base_point.point.z, base_point.header.stamp.toSec());
  }
  catch(tf2_ros::TransformException& ex){
    ROS_ERROR("Received an exception trying to transform a point from \"base_laser\" to \"base_link\": %s", ex.what());
  }
}

int main(int argc, char** argv){
  ros::init(argc, argv, "robot_tf2_ros_listener");
  ros::NodeHandle n;
  
  tf2_ros::Buffer tfBuffer(ros::Duration(10));
  tf2_ros::TransformListener tfListener(tfBuffer);

  //we'll transform a point once every second
  ros::Timer timer = n.createTimer(ros::Duration(1.0), boost::bind(&transformPoint, boost::ref(tfListener)));

  ros::spin();
}

Edit: Made the changes that you suggested, there's less errors than before tho still have one more error :\
/home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp: In function ‘void transform(const tf2_ros::TransformListener&)’:
/home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:20:14: error: ‘const class tf2_ros::TransformListener’ has no member named ‘transform’
     tfBuffer.transform("base_link", laser_point, base_point);
              ^
robot_setup_tf/CMakeFiles/tf_listener.dir/build.make:62: recipe for target 'robot_setup_tf/CMakeFiles/tf_listener.dir/src/tf_listener.cpp.o' failed
make[2]: *** [robot_setup_tf/CMakeFiles/tf_listener.dir/src/tf_listener.cpp.o] Error 1
CMakeFiles/Makefile2:2227: recipe for target 'robot_setup_tf/CMakeFiles/tf_listener.dir/all' failed
make[1]: *** [robot_setup_tf/CMakeFiles/tf_listener.dir/all] Error 2
Makefile:138: recipe for target 'all' failed
make: *** [all] Error 2
Invoking "make -j4 -l4" failed

My updated code is as follows:
#include <ros/ros.h>
#include <geometry_msgs/PointStamped.h>
#include <tf2_ros/transform_listener.h>

void transform(const tf2_ros::TransformListener& tfBuffer){
  //we'll create a point in the base_laser frame that we'd like to transform to the base_link frame
  geometry_msgs::PointStamped laser_point;
  laser_point.header.frame_id = "base_laser";

  //we'll just use the most recent transform available for our simple example
  laser_point.header.stamp = ros::Time();

  //just an arbitrary point in space
  laser_point.point.x = 1.0;
  laser_point.point.y = 0.2;
  laser_point.point.z = 0.0;

  try{
    geometry_msgs::PointStamped base_point;
    tfBuffer.transform("base_link", laser_point, base_point);

    ROS_INFO("base_laser: (%.2f, %.2f. %.2f) -----> base_link: (%.2f, %.2f, %.2f) at time %.2f",
        laser_point.point.x, laser_point.point.y, laser_point.point.z,
        base_point.point.x, base_point.point.y, base_point.point.z, base_point.header.stamp.toSec());
  }
  catch(tf2::TransformException& ex){
    ROS_ERROR("Received an exception trying to transform a point from \"base_laser\" to \"base_link\": %s", ex.what());
  }
}

int main(int argc, char** argv){
  ros::init(argc, argv, "robot_tf2_ros_listener");
  ros::NodeHandle n;
  
  tf2_ros::Buffer tfBuffer(ros::Duration(10));
  tf2_ros::TransformListener tfListener(tfBuffer);

  //we'll transform a point once every second
  ros::Timer timer = n.createTimer(ros::Duration(1.0), boost::bind(&transform, boost::ref(tfBuffer)));

  ros::spin();
}

Edit: Made change to my code as suggested though got a set of errors -
/home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp: In function ‘void transform(const tf2_ros::Buffer&)’:
/home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:20:60: error: no matching function for call to ‘tf2_ros::Buffer::transform(const char [10], geometry_msgs::PointStamped&, geometry_msgs::PointStamped&) const’
     tfBuffer.transform("base_link", laser_point, base_point);
                                                            ^
In file included from /opt/ros/kinetic/include/tf2_ros/buffer.h:35:0,
                 from /opt/ros/kinetic/include/tf2_ros/transform_listener.h:40,
                 from /home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:3:
/opt/ros/kinetic/include/tf2_ros/buffer_interface.h:123:8: note: candidate: template<class T> T& tf2_ros::BufferInterface::transform(const T&, T&, const string&, ros::Duration) const
     T& transform(const T& in, T& out, 
        ^
/opt/ros/kinetic/include/tf2_ros/buffer_interface.h:123:8: note:   template argument deduction/substitution failed:
/home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:20:60: note:   deduced conflicting types for parameter ‘T’ (‘char [10]’ and ‘geometry_msgs::PointStamped {aka geometry_msgs::PointStamped_<std::allocator<void> >}’)
     tfBuffer.transform("base_link", laser_point, base_point);
                                                            ^
In file included from /opt/ros/kinetic/include/tf2_ros/buffer.h:35:0,
                 from /opt/ros/kinetic/include/tf2_ros/transform_listener.h:40,
                 from /home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:3:
/opt/ros/kinetic/include/tf2_ros/buffer_interface.h:143:7: note: candidate: template<class T> T tf2_ros::BufferInterface::transform(const T&, const string&, ros::Duration) const
     T transform(const T& in,
       ^
/opt/ros/kinetic/include/tf2_ros/buffer_interface.h:143:7: note:   template argument deduction/substitution failed:
/home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:20:60: note:   cannot convert ‘laser_point’ (type ‘geometry_msgs::PointStamped {aka geometry_msgs::PointStamped_<std::allocator<void> >}’) to type ‘const string& {aka const std::__cxx11::basic_string<char>&}’
     tfBuffer.transform("base_link", laser_point, base_point);
                                                            ^
In file included from /opt/ros/kinetic/include/tf2_ros/buffer.h:35:0,
                 from /opt/ros/kinetic/include/tf2_ros/transform_listener.h:40,
                 from /home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:3:
/opt/ros/kinetic/include/tf2_ros/buffer_interface.h:168:8: note: candidate: template<class A, class B> B& tf2_ros::BufferInterface::transform(const A&, B&, const string&, ros::Duration) const
     B& transform(const A& in, B& out,
        ^
/opt/ros/kinetic/include/tf2_ros/buffer_interface.h:168:8: note:   template argument deduction/substitution failed:
/home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:20:60: note:   cannot convert ‘base_point’ (type ‘geometry_msgs::PointStamped {aka geometry_msgs::PointStamped_<std::allocator<void> >}’) to type ‘const string& {aka const std::__cxx11::basic_string<char>&}’
     tfBuffer.transform("base_link", laser_point, base_point);
                                                            ^
In file included from /opt/ros/kinetic/include/tf2_ros/buffer.h:35:0,
                 from /opt/ros/kinetic/include/tf2_ros/transform_listener.h:40,
                 from /home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:3:
/opt/ros/kinetic/include/tf2_ros/buffer_interface.h:192:8: note: candidate: template<class T> T& tf2_ros::BufferInterface::transform(const T&, T&, const string&, const ros::Time&, const string&, ros::Duration) const
     T& transform(const T& in, T& out, 
        ^
/opt/ros/kinetic/include/tf2_ros/buffer_interface.h:192:8: note:   template argument deduction/substitution failed:
/home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:20:60: note:   deduced conflicting types for parameter ‘T’ (‘char [10]’ and ‘geometry_msgs::PointStamped {aka geometry_msgs::PointStamped_<std::allocator<void> >}’)
     tfBuffer.transform("base_link", laser_point, base_point);
                                                            ^
In file included from /opt/ros/kinetic/include/tf2_ros/buffer.h:35:0,
                 from /opt/ros/kinetic/include/tf2_ros/transform_listener.h:40,
                 from /home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:3:
/opt/ros/kinetic/include/tf2_ros/buffer_interface.h:220:7: note: candidate: template<class T> T tf2_ros::BufferInterface::transform(const T&, const string&, const ros::Time&, const string&, ros::Duration) const
     T transform(const T& in, 
       ^
/opt/ros/kinetic/include/tf2_ros/buffer_interface.h:220:7: note:   template argument deduction/substitution failed:
/home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:20:60: note:   cannot convert ‘laser_point’ (type ‘geometry_msgs::PointStamped {aka geometry_msgs::PointStamped_<std::allocator<void> >}’) to type ‘const string& {aka const std::__cxx11::basic_string<char>&}’
     tfBuffer.transform("base_link", laser_point, base_point);
                                                            ^
In file included from /opt/ros/kinetic/include/tf2_ros/buffer.h:35:0,
                 from /opt/ros/kinetic/include/tf2_ros/transform_listener.h:40,
                 from /home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:3:
/opt/ros/kinetic/include/tf2_ros/buffer_interface.h:251:8: note: candidate: template<class A, class B> B& tf2_ros::BufferInterface::transform(const A&, B&, const string&, const ros::Time&, const string&, ros::Duration) const
     B& transform(const A& in, B& out, 
        ^
/opt/ros/kinetic/include/tf2_ros/buffer_interface.h:251:8: note:   template argument deduction/substitution failed:
/home/gavin/catkin_ws/src/robot_setup_tf/src/tf_listener.cpp:20:60: note:   cannot convert ‘base_point’ (type ‘geometry_msgs::PointStamped {aka geometry_msgs::PointStamped_<std::allocator<void> >}’) to type ‘const string& {aka const std::__cxx11::basic_string<char>&}’
     tfBuffer.transform("base_link", laser_point, base_point);
                                                            ^
robot_setup_tf/CMakeFiles/tf_listener.dir/build.make:62: recipe for target 'robot_setup_tf/CMakeFiles/tf_listener.dir/src/tf_listener.cpp.o' failed
make[2]: *** [robot_setup_tf/CMakeFiles/tf_listener.dir/src/tf_listener.cpp.o] Error 1
CMakeFiles/Makefile2:2227: recipe for target 'robot_setup_tf/CMakeFiles/tf_listener.dir/all' failed
make[1]: *** [robot_setup_tf/CMakeFiles/tf_listener.dir/all] Error 2
Makefile:138: recipe for target 'all' failed
make: *** [all] Error 2
Invoking "make -j4 -l4" failed

Edit: The latest set of errors I got after updating the parameters of tfBuffer.transform()
CMakeFiles/tf_listener.dir/src/tf_listener.cpp.o: In function `geometry_msgs::PointStamped_<std::allocator<void> >& tf2_ros::BufferInterface::transform<geometry_msgs::PointStamped_<std::allocator<void> > >(geometry_msgs::PointStamped_<std::allocator<void> > const&, geometry_msgs::PointStamped_<std::allocator<void> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, ros::Duration) const':
tf_listener.cpp:(.text._ZNK7tf2_ros15BufferInterface9transformIN13geometry_msgs13PointStamped_ISaIvEEEEERT_RKS6_S7_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN3ros8DurationE[_ZNK7tf2_ros15BufferInterface9transformIN13geometry_msgs13PointStamped_ISaIvEEEEERT_RKS6_S7_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN3ros8DurationE]+0x69): undefined reference to `ros::Time const& tf2::getTimestamp<geometry_msgs::PointStamped_<std::allocator<void> > >(geometry_msgs::PointStamped_<std::allocator<void> > const&)'
tf_listener.cpp:(.text._ZNK7tf2_ros15BufferInterface9transformIN13geometry_msgs13PointStamped_ISaIvEEEEERT_RKS6_S7_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN3ros8DurationE[_ZNK7tf2_ros15BufferInterface9transformIN13geometry_msgs13PointStamped_ISaIvEEEEERT_RKS6_S7_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN3ros8DurationE]+0x7b): undefined reference to `std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const& tf2::getFrameId<geometry_msgs::PointStamped_<std::allocator<void> > >(geometry_msgs::PointStamped_<std::allocator<void> > const&)'
tf_listener.cpp:(.text._ZNK7tf2_ros15BufferInterface9transformIN13geometry_msgs13PointStamped_ISaIvEEEEERT_RKS6_S7_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN3ros8DurationE[_ZNK7tf2_ros15BufferInterface9transformIN13geometry_msgs13PointStamped_ISaIvEEEEERT_RKS6_S7_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN3ros8DurationE]+0xc8): undefined reference to `void tf2::doTransform<geometry_msgs::PointStamped_<std::allocator<void> > >(geometry_msgs::PointStamped_<std::allocator<void> > const&, geometry_msgs::PointStamped_<std::allocator<void> >&, geometry_msgs::TransformStamped_<std::allocator<void> > const&)'
collect2: error: ld returned 1 exit status
robot_setup_tf/CMakeFiles/tf_listener.dir/build.make:117: recipe for target '/home/gavin/catkin_ws/devel/lib/robot_setup_tf/tf_listener' failed
make[2]: *** [/home/gavin/catkin_ws/devel/lib/robot_setup_tf/tf_listener] Error 1
CMakeFiles/Makefile2:2313: recipe for target 'robot_setup_tf/CMakeFiles/tf_listener.dir/all' failed
make[1]: *** [robot_setup_tf/CMakeFiles/tf_listener.dir/all] Error 2
Makefile:138: recipe for target 'all' failed
make: *** [all] Error 2
Invoking "make -j4 -l4" failed

My CMakeLists.txt file is as follows -
cmake_minimum_required(VERSION 2.8.3)
project(robot_setup_tf)

find_package(catkin REQUIRED COMPONENTS
  roscpp
  tf2
  tf2_ros
  geometry_msgs
)

catkin_package(
)

include_directories(
  ${catkin_INCLUDE_DIRS}
)

add_executable(tf_broadcaster src/tf_broadcaster.cpp)
add_executable(tf_listener src/tf_listener.cpp)
target_link_libraries(tf_broadcaster ${catkin_LIBRARIES})
target_link_libraries(tf_listener ${catkin_LIBRARIES})

Originally posted by gavindvs on ROS Answers with karma: 11 on 2018-08-23
Post score: 1

Original comments
Comment by gvdhoorn on 2018-08-24:
@gavindvs: could I ask you to not post answers unless you are answering your own question? To interact with other posters, please use comments. To update us on things that require more characters (ie: code, console logs, etc), please edit your original question. Use the edit button/link.
Comment by PeteBlackerThe3rd on 2018-08-24:
See my update, there are three errors in your code you need to fix.
Comment by gavindvs on 2018-08-24:
@gvdhoorn: ah ok sorry about that
Comment by gavindvs on 2018-08-24:
@PeteBlackerThe3rd: did the updates you suggested tho am still getting an error :\ Not sure what I'm doing wrong. Edited my original post.
Comment by PeteBlackerThe3rd on 2018-08-25:
Almost there, the type of the parameter passed to the transform function should be tf2_ros::Buffer as below.
void transform(const tf2_ros::Buffer& tfBuffer)

Then I think you'll be there.
Comment by gavindvs on 2018-08-25:
@PeteBlackerThe3rd: made the edit you suggested though got a set of errors, as listed in my latest edit :(
Comment by PeteBlackerThe3rd on 2018-08-26:
That's my mistake this time. The order of the parameters is different to the old transformPoint method. The transform line should be:
tfBuffer.transform(laser_point, base_point, "base_link");
Comment by gavindvs on 2018-08-28:
@PeteBlackerThe3rd changed the parameters tho got a whole string of errors :\ listed them in my latest edit.
Comment by gvdhoorn on 2018-08-28:
@gavindvs: these are all linker errors, so the compiler is now happy, but you appear to not be linking against the required libraries. If you can show your CMakeLists.txt perhaps we can help (be sure to remove all the boilerplate comments first though).
Comment by gavindvs on 2018-08-28:
That's great! have added my CMakeLists.txt file above @gvdhoorn
Comment by gvdhoorn on 2018-08-28:
I'm not sure, but I believe you should add tf2_geometry_msgs to the list of Catkin pkgs that you link against.

A:

There are four things you'll need to change. The creation of the listener will need to be this:
tf2_ros::Buffer tfBuffer(ros::Duration(10));
tf2_ros::TransformListener tfListener(tfBuffer);

You'll have to pass the tfBuffer object to the transformPoint function instead of the listener object.
The transform point operation can be done using the transform method of the buffer object:
tfBuffer.transform("base_link", laser_point, base_point);

Finally the type of the exception object will need to be changed to:
catch (tf2::TransformException &ex)
...

Hope this helps.
UPDATE :
3 things, if you look carefully there are a few differences between your new code and what I suggested.

The namespace of TransformException should be tf2 not tf2_ros
You're still passing the listener object to transform point you need to change this to the Buffer object.
The method used to transform the point is now called transform not transformPoint.

Originally posted by PeteBlackerThe3rd with karma: 9529 on 2018-08-23
This answer was ACCEPTED on the original site
Post score: 1

