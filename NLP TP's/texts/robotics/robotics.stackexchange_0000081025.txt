Q:

Controlling system resources with nice and ionice

I'd like to run nodes with high priority for both cpu time and file i/o time. As found in roslaunch documentation, we can use a launch-prefix to run nice, like this example for rosserial:
<node name="rosserial" pkg="rosserial_python" type="serial_node.py"
    launch-prefix="nice -n -5 ionice -c2 -n0"
    respawn="true" >
    <param name="port" value="/dev/ttyS0" />
    <param name="baud" value="115200" />
</node>

This works if I run nice -n 10 (or any nice value above 0), but requires superuser privileges if I want to increase the priority of the process using a negative nice value. However, this leads into a slew of nastiness with the superuser (e.g. rospy not existing on the PYTHONPATH), even if I use passwordless sudo.
Am I missing some typical way nice is used to elevate process priorities in ROS?

Originally posted by nckswt on ROS Answers with karma: 539 on 2017-05-26
Post score: 1

Original comments
Comment by gvdhoorn on 2017-05-26:
I think the 'nicest' way to do something like this is to give the user roslaunching the capability to set process priorities / niceness, but that might be involved. You could try and see whether sudo -E works.

A:

In looking for answers to my question, it seems like the approach I'm going for is wrong, as setting a user process to a negative nice value can lead to some conflict with system processes. Better to limit other user-space processes' resource usage than to increase a single user process's priority into the system process space.
That said, if anyone else is trying to do this in the future, it should be possible to add a rule in /etc/security/limits.conf to allow user-space procresses to have negative nice values without sudo (but I haven't tested this.)

Originally posted by nckswt with karma: 539 on 2017-05-26
This answer was ACCEPTED on the original site
Post score: 1

