Q:

Building nodes as 32bit on 64 bit machine

Hey everyone!
I am using a node that was developed using a 32 bit closed source library.  I only have access to a 64bit computer, and there is no 64 bit version of the library.  I would like to build my node which depends on the 32 bit library as a 32 bit application in order to make this work.
I found this website which shows how to do it using rosbuild: https://code.ros.org/gf/project/ros/mailman/?_forum_action=ForumMessageBrowse&thread_id=26204&action=ListThreads&mailman_id=20
but I need a solution for catkin.  Any ideas?

Originally posted by Robocop87 on ROS Answers with karma: 255 on 2014-10-02
Post score: 0

A:

That post suggests that setting the -m32 compile and link flags will compile your node as a 32-bit executable.
Since catkin is pure cmake, you should be able to use set_target_properties to add -m32 to the LINK_FLAGS and COMPILE_FLAGS properties on the node in question.
That said, this may not work very well if the ROS libraries that you're trying to link with are 64-bit. You may have to set up a separate workspace and build your node and all of its dependencies in 32-bit mode. In this case, you'll probably just want to set the CMAKE_CXX_FLAGS globally when you call catkin_make.

Originally posted by ahendrix with karma: 47576 on 2014-10-02
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Robocop87 on 2014-10-06:
Sorry for the late response, I'm not familiar at all with cmake and the docs look pretty intimidating.  I'll give them a read and try it out.
Comment by ahendrix on 2014-10-06:
Yeah, cmake can be a bit intimidating, but it's a whole lot better than writing raw makefiles or trying to use autotools, particularly when you have a large project with complex cross-project dependencies.
Comment by Robocop87 on 2014-10-06:
Is it possible to use something like  ia32-libs to let me build my node as 64 bit but use the 32 bit library?
Comment by ahendrix on 2014-10-06:
No. ia32-libs is the older 32-bit compatibility libraries (before Debian had proper multi-arch support). The Kernel is capable of running 32- or 64-bit binaries, but binaries can't switch between 32- and 64-bit mode while running.
Comment by Asan A. on 2021-06-17:
additional comment to above solution
set_target_properties(MyTarget PROPERTIES COMPILE_FLAGS "-m32" LINK_FLAGS "-m32")

