Q:

Making sense of disparity values after applying `StereoSGBM` from OpenCV

I just started with Kitty Stereo Dataset (2015). The first thing I did was compute the disparity using the stereoSGBM class. And here is the rectified input images and the disparity output from the application of stereoSGBM:

As the colorbar indicates, the raw disparity values in the disparity image go from 0 -> 1000. I didn't expect such high values of disparity. How do I interpret these disparity values?
Further, to fill holes in the disparity map, I used cv.ximgproc.createDisparityWLSFilter object. And I get the filtered disparity:

The filtered disparity again has high values in range of ~1000. How to make sense of these disparity values? How do I obtain the correct disparity values (in pixels) ?

A:

Looking into the documentation of StereoSGBM I found the following explaination link.

It says: Some algorithms, like StereoBM or StereoSGBM compute 16-bit fixed point disparity map (where each disparity value has 4 fractional bits).
So, I simply applied 4 right shifts to drop the fractional part using numpy.right_shift() and I get some sensible disparity values.

Note that ideally, one should not throw away the 4 fractional bits.

