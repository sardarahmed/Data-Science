Q:

How can I programmatically set the rosconsole verbosity of an object?

I have a local planner plugin that instantiates a base_local_planner::TrajectoryPlannerROS object and then calls checkTrajectory on it. Specifically, this is the function that gets called eventually: TrajectoryPlanner::checkTrajectory (link to source code)
During execution of my local planner, that function is called a lot in order to evaluate velocity command candidates. As a result, it spams this warning:
ROS_WARN("Invalid Trajectory %f, %f, %f, cost: %f", vx_samp, vy_samp, vtheta_samp, cost);

I know that, from the command line, I can call the set_loggers service of the corresponding node in order to set the logger level to ERROR and thus prevent the spamming.
Is there a way to set the logger level when I instantiate the TrajectoryPlannerROS object in my local planner?
I would like to avoid:

making a service call (whether programmatic or via the command line)
forking base_local_planner and changing the ROS_WARN to ROS_DEBUG

The rosconsole wiki page has some relevant info, but it seems overkill for what I want to achieve. (Although I've never used anything but the ROS_* macros, so it may just be lack of familiarity.)
References:

http://wiki.ros.org/rosconsole
http://answers.ros.org/question/211961/how-to-avoid-invalid-trajectory-cost-1000000-in-dwa-local-planner

Originally posted by spmaniato on ROS Answers with karma: 1788 on 2016-12-18
Post score: 1

A:

The rosconsole page that you link to has a section on setting the logger level that includes some example C++ code for changing the logger level. Is this what you're looking for?
If you want to change the logger level for the entire DWA local planner, you might want to consider switching all of its logger macros to use the named logger macros. This will allow you to the logger level for DWA separately from the rest of your code. This is probably a useful enough change that it would be worth submitting it into the public ROS navigation stack.

Originally posted by ahendrix with karma: 47576 on 2016-12-19
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by spmaniato on 2016-12-19:
This excerpt from example.cpp does look promising: log4cxx::Logger::getLogger(ROSCONSOLE_DEFAULT_NAME".test"); I'll start there. Thanks Austin!

