Q:

Error: 'std_srvs::Empty' is not a namespace

Hey everyone,
I'm currently working through "A Gentle Introduction to ROS" and in the chapter about services the following example is shown:
bool toggleForward(std_srvs::Empty::Request &request, std_srvs::Empty::Response &response){...}
Now I don't want to write the std_srvs::Empty:: all the time and I tried the following:

using std_srvs::Empty::Request;
using std_srvs::Empty::Response;                                                                     
                                                                                                     
bool toggleForward(Request &request, Response &response){...}
But now I'm getting the following errors:
error: ‘std_srvs::Empty’ is not a namespace
 using std_srvs::Empty::Request;
                        ^

error: ‘std_srvs::Empty’ is not a namespace
 using std_srvs::Empty::Response;
                        ^
error: ‘Request’ was not declared in this scope
 bool toggleForward(Request &request, Response &response)
                    ^
 error: ‘request’ was not declared in this scope
 bool toggleForward(Request &request, Response &response)
                             ^
 error: ‘Response’ was not declared in this scope
 bool toggleForward(Request &request, Response &response)
                                      ^
error: ‘response’ was not declared in this scope
 bool toggleForward(Request &request, Response &response)
                                                ^

I don't understand what's happening here. For example, the following works:
using std::cout;
What is the difference between those two?

Originally posted by jolly on ROS Answers with karma: 3 on 2016-12-21
Post score: 0

A:

std is a namespace. But std_srvs::Empty is a type (in the std_srvs namespace), not a namespace itself, so you can't bring Request or Response out by a using declaration.
See this random post on SO that deals with the same issue.

Originally posted by gvdhoorn with karma: 86574 on 2016-12-21
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by gvdhoorn on 2016-12-21:
And just to clarify: this is obviously not a ROS issue, but a general C++ misunderstanding.
Comment by jolly on 2016-12-21:
I just found the header file for the Empty type and now it's completely obvious for me as well. Thank you.

