Q:

RoboEarth detection performance

Hej,
I just got RoboEarth up and running but observe a very bad detection rate. For testing I used a textured box and a redbull can. Both were scanned according to the tutorial. The Box scan looks nice but the detection rate pretty poor. Frome some angles the box is not detected at all. Sometimes it is detected but not very stable, such that it switches very often betwen detected/not detected.
image description http://s14.directupload.net/images/130220/ns8yf6t9.png
The second item is a red bull can. It's scan looks pretty distorted. I scanned it very often but this is the best I got. Probably due to Kinect issues (reflection, angle, noise, ...) This model is not detected at all. Neither with Kinect, nor with the vision detector. image description http://s1.directupload.net/images/130220/cjibm98m.png
So the question is: Is this as good as it gets with RoboEarth or am I missing something here? Is there another working stack out there which performs a better 3D object recognition? (I tried Willowgarages ORC, but it wouldn't work at all)
And some related questions:
How does RoboEarths kinect detector work? It seems, that it just matches bruteforcefully every single model scan against the incomming pointcloud and tries to find a Pose with small error.
Is there a scan postprocessing step (noise reduction, outlier removal, reduction of number of points/complexity, meshing, PCA, low pass filter, ...)? How does noise effect the detection? How many scans are neccessary? Whats the detection range?

Originally posted by stfn on ROS Answers with karma: 287 on 2013-02-20
Post score: 3

A:

You are basically right on how the detection works. The re_kinect_object_detector detection uses SURF features from the camera image. It also compares the depth information from the Kinect for the feature points with the model to discard implausible correspondences. You can find a (rather short) description here.
Note that this means that a badly aligned model will give bad detection results.
Our intent was to provide a fast and computationally cheap way to create object models. So as you probably noticed, the detection rate depends quite heavily on object properties like the texture of the object and the glossyness of the surface. We had good detection rate on a range of ~0.7m to 1.2m.
You might want to try the detection with the model for the game that comes with Kinect cameras (the model has the id "videogames.kinectadventures" in the DB).
Also note that the object recording and -detection is somewhat a side project of RoboEarth stuff. We recently restructured the wiki page to reflect that.

Originally posted by ddimarco with karma: 916 on 2013-02-27
This answer was ACCEPTED on the original site
Post score: 2

