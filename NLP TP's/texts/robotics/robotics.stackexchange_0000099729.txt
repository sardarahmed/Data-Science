Q:

Multiple classes that inherit from rclcpp::Node in one executable

I would like to implement a ROS Node that manages multiple objects which each have their own subscriptions. Now for an object to have its own subscriptions the class needs to inherit from rclcpp::Node. So is it possible to have to compile two different classes that both inherit from rclcpp::Node in one executable or does this break ROS 2 design rules?

Originally posted by max11gen on ROS Answers with karma: 164 on 2021-07-26
Post score: 0

A:

If you make two different classes that derive from rclcpp::Node and create instances of both of them then you will have two different nodes. That is sometimes a valid pattern but it sounds like you probably don't want to do that from your first sentence.

Now for an object to have its own subscriptions the class needs to inherit from rclcpp::Node

This is not accurate, it only needs to have access to a Node object when creating the subscriptions. You could easily create the node object and then pass it to the constructor of these other subscription-holding objects, which would then manage the subscriptions as needed.

Originally posted by jdlangs with karma: 971 on 2021-07-27
This answer was ACCEPTED on the original site
Post score: 2

