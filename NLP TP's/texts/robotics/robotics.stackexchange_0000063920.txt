Q:

Using OMPL for Turtlebot 2

Hi guys, I am very new to ROS.
Now I am trying to implement planners in OMPL to Turtlebot 2.  i.e. using RRT or RRT* in OMPL instead of the global planners offered in ROS.
I have seen this website "Writing A Global Path Planner As Plugin in ROS" http://wiki.ros.org/navigation/Tutorials/Writing%20A%20Global%20Path%20Planner%20As%20Plugin%20in%20ROS
But I still don't know how to use the planners in OMPL. I just know that OMPL.app has a interface which will show me the path. My problem is to use the planners for my Turtlebot.
Anyone knows the detailed steps to do this? Like how to use the API in OMPL. (I am really a rookie)

Originally posted by Tixiao on ROS Answers with karma: 130 on 2014-11-09
Post score: 1

Original comments
Comment by longjianquan on 2017-09-04:
did you slove this problem?

A:

Because the Turtlebot is a differential drive base, it cannot move in all directions, thus in order to get reasonable plans for it with OMPL, you'll need to use a state space that understands the movement of the robot (current options in OMPL are the Dubins curve or ReedsShepp curves, there is an example here: http://ompl.kavrakilab.org/GeometricCarPlanning_8cpp_source.html). You'll need to implement functions to turn the Costmap2D into an OMPL state space, and then figure out how to the output plan from OMPL into a vector of PoseStamped. This is probably a fairly involved project.

Originally posted by fergs with karma: 13902 on 2014-11-09
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Tixiao on 2014-11-09:
Thank you so much for you answer, Fergs. I didn't realize that so many tricky things involved. I think I need to do more research on OMPL and Navigation of ROS and turtlebot.
Comment by fergs on 2014-11-09:
Just a note, the MoveIt code, while quite complex, is one of the best examples of integrating OMPL+ROS.

