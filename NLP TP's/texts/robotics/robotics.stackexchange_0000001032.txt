Q:

How is PIV control performed?

I'm considering experimenting with PIV control instead of PID control. Contrary to PID, PIV control has very little explanation on the internet and literature. There is almost a single source of information explaining the method, which is a technical paper by Parker Motion. 
What I understand from the control method diagram (which is in Laplace domain) is that the control output boils down to the sum of:

Kpp*(integral of position error)
-Kiv*(integral of measured velocity)
-Kpv*(measured velocity)

Am I correct? Thank you. 

A:

It seems to me like there are three basic differences between the classic PID topology and the so-called PIV topology mentioned in the white paper:

Desired velocity is assumed to be proportional to position error, the $K_p$ term regulates this.
The integral error gain $K_i$ works to remove steady state errors in velocity, not position. That is essentially the same thing, however, due to item #1.
The velocity estimate is fed directly through the $K_v$ term (instead of considering the derivative of position error).

In the paper they claim that the main advantage of this topology is that it is easier to tune.
The output of the controller is formed as follows:
$e_\theta=\theta^*-\theta\\
e_\omega = (K_pe_\theta-\hat{\omega})\\
\text{output} = \int K_ie_\omega dt - K_v\hat{\omega}$
Of course, since you will probably be programming this, the integral is replaced by an accumulator variable as follows:
$e_\theta=\theta^*-\theta\\
e_\omega = (K_pe_\theta-\hat{\omega})\\
\text{integral} = \text{integral} + K_ie_\omega \Delta t \\
\text{output} = \text{integral} - K_v\hat{\omega}$

