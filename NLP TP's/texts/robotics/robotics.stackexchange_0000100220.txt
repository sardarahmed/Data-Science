Q:

Waiting for dof_fit/follow_joint_trajectory to come up; Action client not connected: dof_fit/follow_joint_trajectory

hi, when i try to connect moveit to my gazebo simulation i get the following error:
[ WARN] [1633040618.377249905]: Waiting for dof_fit/follow_joint_trajectory to come up
[ERROR] [1633040624.377429395]: Action client not connected: dof_fit/follow_joint_trajectory
[ERROR] [1633040629.027678746]: Unable to connect to move_group action server 'move_group' within allotted time (30s)

i am using noetic ros, ubuntu 18.04, gazebo and moveit.
Mi archivo controllers.yaml luce del siguiente modo:
joint_state_controller:
type: joint_state_controller/JointStateController
  publish_rate: 50
controller_list:
  - name: dof_fit
    action_ns: follow_joint_trajectory
    type: FollowJointTrajectory
    default: true
    joints:
      - Joint_1
      - Joint_2
      - ...
  - name: hand_controller
    action_ns: follow_joint_trajectory
    type: FollowJointTrajectory
    default: true
    parallel: true
    joints:
      - Gripper_Idol_Gear_Joint
      - Gripper_Servo_Gear_Joint

my kimo_control.yaml file:
dof_fit:
    # Publish all joint states -----------------------------------
    joint_state_controller:
      type: joint_state_controller/JointStateController
      publish_rate: 50
    
    # Position Controllers ---------------------------------------
    Joint_1_position_controller:
      type: effort_controllers/JointPositionController
      joint: Joint_1
      pid: {p: 60.0, i: 40.0, d: 0.0}
    Joint_2_position_controller:
      type: effort_controllers/JointPositionController
      joint: Joint_2
      pid: {p: 80.0, i: 60.0, d: 0.0}
    Joint_3_position_controller:
  #..........

a part of the error:
[ INFO] [1633040607.368356602]: About to load: pilz_industrial_motion_planner::PlanningContextLoaderPTP
[ INFO] [1633040607.369259001]: Registered Algorithm [PTP]
[ INFO] [1633040607.369275481]: Using planning interface 'Pilz Industrial Motion Planner'
[ WARN] [1633040612.377062495]: Waiting for dof_fit/follow_joint_trajectory to come up
[ WARN] [1633040618.377249905]: Waiting for dof_fit/follow_joint_trajectory to come up
[ERROR] [1633040624.377429395]: Action client not connected: dof_fit/follow_joint_trajectory
[ERROR] [1633040629.027678746]: Unable to connect to move_group action server 'move_group' within allotted time (30s)
[ INFO] [1633040629.028283349]: Constructing new MoveGroup connection for group 'arm' in namespace ''
[ WARN] [1633040629.392726935]: Waiting for hand_controller/follow_joint_trajectory to come up
[ WARN] [1633040635.392889117]: Waiting for hand_controller/follow_joint_trajectory to come up
[ERROR] [1633040641.393057390]: Action client not connected: hand_controller/follow_joint_trajectory
[ INFO] [1633040641.403387237]: Returned 0 controllers in list
[ INFO] [1633040641.412451398]: Trajectory execution is managing controllers
[ INFO] [1633040641.412487078]: MoveGroup debug mode is ON

This error happens when I try to connect my gazebo simulation with moveit_rviz.launch and start to do movement planning.
Is the choice of controllers in controllers.yaml correct?
action_ns: follow_joint_trajectory
    type: FollowJointTrajectory

What controllers should I choose to control a joint: type: effort_controllers / JointPositionController?
rosnode list:
/arm_controller_spawner
/dof_fit/controller_spawner
/gazebo
/gazebo_gui
/move_group
/robot_state_publisher
/rosout
/rviz_iudc_desktop_pc_18608_6360793226529266128

rostopic list:
/attached_collision_object
/clock
/collision_object
/dof_fit/Gripper_Idol_Gear_Joint_position_controller/command
/dof_fit/Gripper_Idol_Gear_Joint_position_controller/pid/parameter_descriptions
/dof_fit/Gripper_Idol_Gear_Joint_position_controller/pid/parameter_updates
/dof_fit/Gripper_Idol_Gear_Joint_position_controller/state
/dof_fit/Gripper_Servo_Gear_Joint_position_controller/command
/dof_fit/Gripper_Servo_Gear_Joint_position_controller/pid/parameter_descriptions
/dof_fit/Gripper_Servo_Gear_Joint_position_controller/pid/parameter_updates
/dof_fit/Gripper_Servo_Gear_Joint_position_controller/state
/dof_fit/Joint_1_position_controller/command
/dof_fit/Joint_1_position_controller/pid/parameter_descriptions
/dof_fit/Joint_1_position_controller/pid/parameter_updates
/dof_fit/Joint_1_position_controller/state
/dof_fit/Joint_2_position_controller/command
/dof_fit/Joint_2_position_controller/pid/parameter_descriptions
/dof_fit/Joint_2_position_controller/pid/parameter_updates
/dof_fit/Joint_2_position_controller/state
/dof_fit/Joint_3_position_controller/command
/dof_fit/Joint_3_position_controller/pid/parameter_descriptions
/dof_fit/Joint_3_position_controller/pid/parameter_updates
/dof_fit/Joint_3_position_controller/state
/dof_fit/Joint_4_position_controller/command
/dof_fit/Joint_4_position_controller/pid/parameter_descriptions
/dof_fit/Joint_4_position_controller/pid/parameter_updates
/dof_fit/Joint_4_position_controller/state
/dof_fit/Joint_5_position_controller/command
/dof_fit/Joint_5_position_controller/pid/parameter_descriptions
/dof_fit/Joint_5_position_controller/pid/parameter_updates
/dof_fit/Joint_5_position_controller/state
/dof_fit/Joint_6_position_controller/command
/dof_fit/Joint_6_position_controller/pid/parameter_descriptions
/dof_fit/Joint_6_position_controller/pid/parameter_updates
/dof_fit/Joint_6_position_controller/state
/dof_fit/joint_states
/execute_trajectory/cancel
/execute_trajectory/feedback
/execute_trajectory/goal
/execute_trajectory/result
/execute_trajectory/status
/gazebo/link_states
/gazebo/model_states
/gazebo/parameter_descriptions
/gazebo/parameter_updates
/gazebo/performance_metrics
/gazebo/set_link_state
/gazebo/set_model_state
/head_mount_kinect/depth_registered/points
/joint_states
/move_group/cancel
/move_group/display_contacts
/move_group/display_cost_sources
/move_group/display_grasp_markers
/move_group/display_planned_path
/move_group/feedback
/move_group/filtered_cloud
/move_group/goal
/move_group/monitored_planning_scene
/move_group/motion_plan_request
/move_group/plan_execution/parameter_descriptions
/move_group/plan_execution/parameter_updates
/move_group/planning_pipelines/ompl/ompl/parameter_descriptions
/move_group/planning_pipelines/ompl/ompl/parameter_updates
/move_group/planning_scene_monitor/parameter_descriptions
/move_group/planning_scene_monitor/parameter_updates
/move_group/result
/move_group/sense_for_plan/parameter_descriptions
/move_group/sense_for_plan/parameter_updates
/move_group/status
/move_group/trajectory_execution/parameter_descriptions
/move_group/trajectory_execution/parameter_updates
/pickup/cancel
/pickup/feedback
/pickup/goal
/pickup/result
/pickup/status
/place/cancel
/place/feedback
/place/goal
/place/result
/place/status
/planning_scene
/planning_scene_world
/recognized_object_array
/rosout
/rosout_agg
/rviz_iudc_desktop_pc_18608_6360793226529266128/motionplanning_planning_scene_monitor/parameter_descriptions
/rviz_iudc_desktop_pc_18608_6360793226529266128/motionplanning_planning_scene_monitor/parameter_updates
/rviz_moveit_motion_planning_display/robot_interaction_interactive_marker_topic/feedback
/rviz_moveit_motion_planning_display/robot_interaction_interactive_marker_topic/update
/rviz_moveit_motion_planning_display/robot_interaction_interactive_marker_topic/update_full
/sequence_move_group/cancel
/sequence_move_group/feedback
/sequence_move_group/goal
/sequence_move_group/result
/sequence_move_group/status
/tf
/tf_static
/trajectory_execution_event

Originally posted by Arnolvalencia1 on ROS Answers with karma: 3 on 2021-09-30
Post score: 0

Original comments
Comment by Mike Scheutzow on 2021-10-04:
Please edit your description to show us the output of rosnode list and rostopic list. You edit using the "edit" button at the end of your description.
Comment by Arnolvalencia1 on 2021-10-04:
arm_controller appears when a rosnode list is written but when it performs rostopic list the services are not connecting

A:

Do you have any topic name that ends with .../follow_joint_trajectory/goal? If not, you have not started the Action Server.
Did you use the same controller name in gazebo config and in MoveIt config? See 2nd answer to #q296694.

Originally posted by Mike Scheutzow with karma: 4903 on 2021-10-03
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Arnolvalencia1 on 2021-10-04:
the solution was to follow the steps described in the second answer and add to my gazebo simulation the controller like this:
<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" ns="/dof_fit" args="joint_state_controller
                                            arm_controller
                                            Joint_1_position_controller
                                            Joint_2_position_controller
                                            ......"/>

Comment by Mike Scheutzow on 2021-10-05:
Glad you figured it out - I've never found good docs for this ros_control stuff.
Comment by Arnolvalencia1 on 2021-10-05:
I found an interesting template that solves many ros_control problems, I will work on it, I share the link:
https://github.com/PickNikRobotics/ros_control_boilerplate
Comment by Mike Scheutzow on 2021-10-06:
Thanks for the link. I'll take a look at it.

