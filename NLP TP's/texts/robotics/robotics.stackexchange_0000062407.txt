Q:

CMakeLists: problem linking a class defined in a separate file

Hi guys,
I ve defined in my

usb_simulator

folder 3 files with the following structure:

where:

joy_main.cpp

#include <ros/ros.h>
#include "joystick.h"

int main( int argc, char **argv ) {

    ros::init( argc, argv, "usb_simulator" );

    /* create a class: "Joystick" */
    //Joystick usb_sim;   // commented for debug

    ros::spin();
}

is the main file,

joystick.h

#include <ros/ros.h>
#include <sensor_msgs/Joy.h>
#include <geometry_msgs/Twist.h>

#ifndef JOYSTICK_H
#define JOYSTICK_H

class Joystick 
{

private:
    void joystickCallback( const sensor_msgs::Joy &joy ) ;

    ros::NodeHandle nh_;

    int linear_, angular_;
    double l_scale_, a_scale_;

    ros::Publisher cmd_pub_;
    ros::Subscriber joy_sub_;

public: 
    Joystick();
    
};

#endif

and joystick.cpp:

#include "joystick.h"

Joystick::Joystick() :
linear_( 1 ), angular_( 2 ) 
{
    nh_.param( "axis_linear", linear_, linear_ );
    nh_.param( "axis_angular", angular_, angular_ );
    nh_.param( "scale_angular", a_scale_, a_scale_ );
    nh_.param( "scale_linear", l_scale_, l_scale_ );

    cmd_pub_ = nh_.advertise<geometry_msgs::Twist>( "usb_data", 1 );

    joy_sub_ = nh_.subscribe<sensor_msgs::Joy>( "joy", 10, &Joystick::joystickCallback, this );

}

void Joystick::joystickCallback( const sensor_msgs::Joy &joy ) {

    geometry_msgs::Twist vel;
    vel.angular = a_scale_ * joy->axes[angular_];
    vel.linear = l_scale_ * joy->axes[linear_];
    vel_pub_.publish( vel );
}

define a class for the joystick interface.
In my CMakeLists.txt:
cmake_minimum_required(VERSION 2.8.3)
project(usb_simulator)

find_package(catkin REQUIRED COMPONENTS
  joy
  roscpp
  geometry_msgs
)

## Declare a cpp executable
# add_executable(usb_simulator_node src/usb_simulator_node.cpp)
add_executable( usb_simulator src/joy_main.cpp src/joystick.cpp )

## Specify libraries to link a library or executable target against
target_link_libraries( usb_simulator
 ${catkin_LIBRARIES}
)

I defined both cpp files to be added to the executable.
Running catkin_make I get the following error:
/home/wilhem/workspace_ros/src/usb_simulator/src/joystick.cpp: In constructor ‘Joystick::Joystick()’:
/home/wilhem/workspace_ros/src/usb_simulator/src/joystick.cpp:13:94: error: no matching function for call to ‘ros::NodeHandle::subscribe(const char [4], int, void (Joystick::*)(const Joy&), Joystick* const)’
     joy_sub_ = nh_.subscribe<sensor_msgs::Joy>( "joy", 10, &Joystick::joystickCallback, this );
                                                                                              ^
/home/wilhem/workspace_ros/src/usb_simulator/src/joystick.cpp:13:94: note: candidates are:
In file included from /opt/ros/indigo/include/ros/ros.h:45:0,
                 from /home/wilhem/workspace_ros/src/usb_simulator/src/joystick.h:1,
                 from /home/wilhem/workspace_ros/src/usb_simulator/src/joystick.cpp:1:
/opt/ros/indigo/include/ros/node_handle.h:379:14: note: template<class M, class T> ros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(M), T*, const ros::TransportHints&)
   Subscriber subscribe(const std::string& topic, uint32_t queue_size, void(T::*fp)(M), T* obj, 

How can I solve this problem?
Regards

Originally posted by Andromeda on ROS Answers with karma: 893 on 2014-09-06
Post score: 0

Original comments
Comment by Dirk Thomas on 2014-09-06:
Besides your question you should move your header file into a separate "include" folder - actually in a subfolder "include/usb_simulator". You must then also add "include_directories(include)" to your CMake and reference the header in in your code like "#include "usb_simulator/joystick.h"".
Comment by Andromeda on 2014-09-06:
thanks, Should I copy even the joystick.cpp into the include/usb_simulator folder or just the .h file?
In that file how should I modify the CMkaeLists.txt ?? Thanks again

A:

You need a reference to sensor_msgs in your find_package () and also in your package.xml

Originally posted by joq with karma: 25443 on 2014-09-07
This answer was ACCEPTED on the original site
Post score: 1

