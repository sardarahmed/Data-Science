Q:

Why would I want to transform a Pose in Frame A using a Transform From B to C?

Using a bit more detail,
Let's say I have a VectorStamped in with frame_id "A", and then I take a StampedTransform with frame_id "B" and child_id "C". It's perfectly valid ROS for me to use the transform on the vector, but I'm struggling to understand what is the use case or physical interpretation of this operation. I am new to ROS, but I've spoken with two more-experienced users who couldn't give me any reason why and told me it would be erroneous to do so. However, again, it's valid ROS, and documented in several places suggesting it's valid, such as here: http://paulfurgale.info/news/2014/6/9/representing-robot-pose-the-good-the-bad-and-the-ugly

Originally posted by aels on ROS Answers with karma: 23 on 2020-06-15
Post score: 2

A:

That does not sound like a correct application of the transform math and doesn't have a physical interpretation. The transform multiplication primitives are basically matrix operations and do not have checks that enforce frame semantics. You need to make sure that your logic is correct when you write your code.
Note that it's highly recommended to simply use the TransformListener and ask it to transform the data into the coordinate frame you would prefer, instead of manually doing the transform math yourself. That way you don't need to worry about the exact sequence of the transform multiplications the library does that all for you.
The link you point to isn't official documentation, and a first skim if it appears to be correct. Your problem statement above does not reflect what I read in that article.

Originally posted by tfoote with karma: 58457 on 2020-06-15
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by aels on 2020-06-15:
Thanks much! This answered my question. Just wanted to sanity check to see if there was some use of this that I wasn't aware of, and it looks like that is not the case.

