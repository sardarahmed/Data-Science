Q:

Human arm inverse kinematics

Hi I want to implement an human arm robot and a task such as moving a glass between two points  using Robotic Toolbox for Matlab  by Peter Coorke. I'm a student and I'm a newbie in this kind of things so I would find a good reference for solving the inverse kinematics of the human arm and  an algorithm that implements some kind of obstacle avoidance exploiting the redundancy of the manipulator (7dof) using null space motion.  Anyone can suggest me a good reference to follow in this implementation with the toolbox? Thanks

A:

You are tackling two non trivial problem at the same  time
1. Inverse kinematics of an overactuated manipulator
2. Obstacle avoidance using the null space
By definition of the null-space projection the solution you want will only be able to avoid obstacles which are not on the desired Cartesian trajectory to be followed during the task. Think about sliding an object on a table, and the only thing you can do is moving your elbow from up to down, this is the null space motion. If you break the contact with the table it means that you motion went outside of the null space. 
You will realize that you can not avoid much obstacles because our shoulder and wrist rotation limits are quite constrained, typical anthropomorphic arms are a bit better in this respect. But overall  they can not avoid much that way, it is usually preferred to project in the null space additional task like manipulability optimization or joint limit avoidance, look at DeLuca from Roma.
If you want to avoid any obstacle while manipulating, this is a path-planning question where many approach exists, both online and offline based on their computational costs and their local or global range, you can look at Haddadin collision avoidance works.
That being said if you are a total newbie I encourage you to start by a 2D example, like a 4 revolute joints planar manipulators. This will get you familiar with the concepts at hand but for a simpler problem.

