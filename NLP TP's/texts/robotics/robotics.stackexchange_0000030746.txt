Q:

Find the name of package containing a file, given the file's path

I would like to find the package a file is in with a shell command. Background is, I want to use "rospack cflags-only-I " to get a list of directories to look for c++ headers to build ctags for omnicompletion. See this question.
Currently I need to set the pwd of the editor to the package dir. Would be nice to get rid of that limitation.

Originally posted by Felix Endres on ROS Answers with karma: 6468 on 2011-03-28
Post score: 1

A:

I don't know any ros command, but the following script works.
It's quite slow though using rospack list and just checking prefixes (so half filenames will work too).
#!/bin/bash
pkg_file=$1

for i in $(rospack list | awk '{print $2}'); do
   pkg_name=$(basename $i)
   if [[ ${pkg_file} == ${i}* ]]; then
      echo ${pkg_name}
      exit 0
   fi
done

Searching for manifest.xml:
#!/bin/bash
pkg_file=$1
pkg_dir=$(dirname ${pkg_file})

pushd . > /dev/null

cd ${pkg_dir}

while [[ ! -e manifest.xml ]]; do
   cd ..
   if [[ $(pwd) == "/" ]]; then
      break
   fi
done

if [[ -e manifest.xml ]]; then
   echo $(basename `pwd`)
fi

popd > /dev/null

Originally posted by dornhege with karma: 31395 on 2011-03-29
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by tfoote on 2011-03-29:
A directory is a package if it contains a manifest.xml file.
Comment by dornhege on 2011-03-29:
I'm not sure what makes a directory a package, but alternately you could just cd to the file's directory and then do 'cd .." until there is a manifest.xml.

