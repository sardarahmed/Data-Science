Q:

How To Define Special Arm Mechanism in URDF?

I have a concept for an arm that I'm trying to model in URDF and simulate in RViz using Moveit!  The problem is that the joint angle for the second arm segment is dependent on the joint angle of the first arm segment (i.e., if the first segment rotates by theta, then so too will the second joint.  You see this kind of mechanism used on certain desk lamps.  The following YouTube video gives you a visual example of what I'm talking about:
   http://youtu.be/kb7sMt0lyDY

How should I go about modeling this in URDF?  Rather than giving this arm a special treatment in URDF, is doing something in Moveit! an option so as to drive the kinematics of this unique type of mechanism?

Originally posted by daalt on ROS Answers with karma: 159 on 2014-03-17
Post score: 1

A:

Sounds like you could achieve what you want using the 'mimic' urdf tag. Have a look at these related questions: 1, 2, 3, 4.
As can be gathered from these discussions, there have been issues with the 'mimic' tag in the past, but these should hopefully largely be solved by now.

Originally posted by Stefan Kohlbrecher with karma: 24361 on 2014-03-17
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by daalt on 2014-03-20:
Good suggestion.  However, the mimic tag would work if you just wanted to slave one joint to another.  I still want to have some independent control over the second segment.  I forgot to say that both motors will be located at the arm's base and will operate both segments independently via pulleys.
Comment by daalt on 2014-03-20:
I think the mimic tag would work if OFFSET parameter could be tied to second segment's joint angle.  e.g., first arm segment moves X deg relative to the base and second arm segment moves X - Y deg relative to the first arm segment where X and Y are the command joint angles from the motion planner.
Comment by daalt on 2014-03-20:
Is it possible to make the MIMIC OFFSET parameter a variable?  But I think the real solution is do something within TF so that these transformations are modeled correctly and the planning engine has full sight of them.

