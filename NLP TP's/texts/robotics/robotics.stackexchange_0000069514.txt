Q:

running sbpl_lattice_planner on Nvidia Jetson TK1

Hi all,
I have a mobile robot which is navigating around a room, I already have the map of the room. I am using the navigation_stack of ROS. I am using rotary encoders for odometry. I am fusing the data from Rotary encoders and IMU using robot_pose_ekf. I am using amcl for localization and move_base for planning with sbpl_lattice_planner as the global planner. Everything seems to be working on my dell laptop (with intel processor).
Now, when I port everything to Nvidia Jetson TK1, the sbpl_lattice_planner does not seem to be working (the default A* planner works). It is very weird because the exact same code works on the laptop. I highly doubt that it is happening because the time to come up with the plan for sbpl_lattice_planner is less in case of Nvidia Jetson. I feel the problem is there because Nvidia Jetson has an ARM processor whereas my laptop has an intel processor and therefore sbpl_lattice_planner is not able to come up with a plan (or a complete plan) in case of Nvidia Jetson but I am not able to figure out how to resolve this issue. Also, sometimes if I give a goal say 10 m away from the starting position, it only comes up with a plan till 2-3 m from the starting position. See image (I gave the goal on the top right of the room but the the plan is only till couple of meters):

I am using sbpl and sbpl_lattice_planner.
I have tried following but it was of no help:

Decreasing number of SBPL primitives.
Increasing the global_planner timeout.
Decreasing the global_costmap resolution.

Does anyone have any idea why is this happening and how can it be resolved? Let me know if you need more information from my side.
Thanks in advance.
Naman Kumar

Originally posted by Naman on ROS Answers with karma: 1464 on 2015-09-07
Post score: 2

Original comments
Comment by solosito on 2016-02-18:
Hello Naman, did you fix your problem? About SBPL, what pose_follower are you using? Could you show the parameters of your navigation package? I am experiencing some problems with SBPL. Thank you.

A:

There is a bug in SBPL because it expects char to be signed on ARM; you may want to try this patch, and comment on it if it works for you: https://github.com/sbpl/sbpl/pull/27

Originally posted by ahendrix with karma: 47576 on 2015-09-07
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Naman on 2015-09-23:
This worked for me..Thanks a lot! :)

