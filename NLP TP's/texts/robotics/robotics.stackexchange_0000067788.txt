Q:

Are there attributes for license and author tags in catkin?

Like for example:
<license for="libWhatEver">GPLv3</license>
<license for="node">BSD</license>

<author of="libWhatEver">Name</author>
<author of="node">Name</author>

Are there any like that predefined? Can I add custom attributes, will it complain about them and if not would it be recommended to add that?
Regards,
Christian

Originally posted by cyborg-x1 on ROS Answers with karma: 1376 on 2015-05-28
Post score: 1

A:

The format of manifests (package.xml) is documented in REP-127 ('format 1') and REP-140 ('format 2'). In neither do the author or license element define additional attributes like the ones you show in your example (neither REP includes any text that expressly forbids additional attributes though).
Typically, source files for nodes include both a license header and something like an @author .. line in the comment block at the top. This would allow you to express the same information, although it would not be visible in the manifest, nor to any tools that parse the manifests.
PS: it is perfectly possible for a package to have multiple license elements (documented here for format 2 fi), so having files in a package that fall under different licenses is also possible. Again, the file header would contain that information.

Originally posted by gvdhoorn with karma: 86574 on 2015-05-28
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by dornhege on 2015-05-28:
I would assume that the additional attributes should not be necessary. If licensing is split between parts of a  package, these parts should be different packages. Otherwise depending on a package can become really hard if one needs to adhere to licensing. This might be useful for header files.
Comment by gvdhoorn on 2015-05-28:
Sure, but I just wanted to include that it is possible to have a package that contains files that fall under different licenses. Whether that is something that is desirable is something else, but I can imagine situations where it is a necessity (including code that is under a different license fi)
Comment by cyborg-x1 on 2015-05-28:
So why is it possible to have multiple license tags then?
  <!-- One license tag required, multiple allowed, one license per tag -->
  <!-- Commonly used license strings: -->
  <!--   BSD, MIT, Boost Software License, GPLv2, GPLv3, LGPLv2.1, LGPLv3 -->
  <license>TODO</license>

Comment by gvdhoorn on 2015-05-28:\

So why is it possible to have multiple license tags then?

To allow for situations where that is required? I don't really understand your question.
It might not necessarily be something that in normal situations one would want to do, but it is supported because sometimes it is needed.
Comment by cyborg-x1 on 2015-05-28:
For the package, I need it for, it does not really make sense to me to create a library package out of that code, just because of the license, actually I will stay with the given license (GPLv3), but I was just curious. And I still would like to mention the author for the included stuff.
Comment by cyborg-x1 on 2015-05-28:
@gvdhoorn, I was replying to dornhege, who meant to split the package because of the license.
Comment by gvdhoorn on 2015-05-28:
In most cases ROS pkgs do not include the sources of dependencies directly, but depend on libraries or other ROS pkgs. That would avoid the need for multiple licenses, and also for what you propose to do.
For your current situation, you could consider mentioning the author(s) in a readme fi.
Comment by dornhege on 2015-05-28:
For authors multiple author tags are commonly used. If you are just using a library, ideally you produce a ROS wrapper package that builds just that (with proper license, author, and maintainer set). This package is what your own code will use.

