Q:

Unsubsribe from a topic and define a new one runtime(C++)

i'd like to change the name of the topic which I read data from during runtime.
..that seems not to be feasible.
my idea now is the following: if a certain condition is satisfied I unsubscribe from a topic and define a new subscriber (with a new topic) that uses the same callback used by the old subscriber.
Is this feasible?
how can i unsubscribe from a topic?

Originally posted by mateo_7_7 on ROS Answers with karma: 90 on 2013-06-11
Post score: 0

A:

If you subscribe to a new topic using the same callback and store the result in the same Subscriber object, storing that new value in the original variable should unsubscribe the other topic.
EXAMPLE: untested, probably buggy
class Reader
{
public:
  Reader(ros::NodeHandle node)
  {
    node_ = node;
    // subscribe to original topic
    topic_ = node.subscribe("first_topic", 10,
                            &Reader::callback, (Reader *) this);
  }

private:
  void callback(const std_msgs::String::ConstPtr &msg)
  {
    if (msg->data == "switch")
      {
        // subscribe to other topic
        topic_ = node_.subscribe("next_topic", 10,
                                 &Reader::callback, (Reader *) this);
      }
    else
      {
        // log message from current topic
        ROS_INFO_STREAM(msg->data);
      }
  }

  // class variables
  ros::NodeHandle node_;
  ros::Subscriber topic_;           // current topic subscription
};

int main(int argc, char **argv)
{
  ros::init(argc, argv, "your_node");
  ros::NodeHandle node;
  Reader read(node);
  ros::spin();
  return 0;
}

Originally posted by joq with karma: 25443 on 2013-06-11
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by mateo_7_7 on 2013-06-11:
so changing the topic name (changing the string) runtime should be sufficient to unsubscribe from a topic and start subscribing from another...but, as i understood, it's not allowed in ROS actually.
Comment by dornhege on 2013-06-12:
Just make a new subscription in the same we you did the original one.
Comment by mateo_7_7 on 2013-06-12:
..can you post an example please?

