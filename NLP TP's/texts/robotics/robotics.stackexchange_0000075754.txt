Q:

Which part of ROS navigation is responsible for path correction?

I've been traveling around ROS' navigation stack, looking for the path correction code and I couldn't find it.
I am using a kobuki iClebo's TurtleBot platform, along with kinect instead of laser scan.
I am pretty new to robotics and ROS, so I might need to understand first:
-There is the global planner (let's say A-star/Djikstra in my case) which is responsible for the Global Path
-There is the local planner (DWA/base_local_planner) which, alongside with the obstacle updates to the map by /scan topic, is responsible for obstacle avoidance and hopefully path correction (?)
-There is the move_base which I think acts as a "manager" for both of the above

Now, I couldn't find anywhere in those three the part that is responsible for path correction - the procedure of understanding where you are (localization), understanding where you were suppose to be (given by one of the planners) and giving control commands in order to close the gap between the two.

Originally posted by meirela on ROS Answers with karma: 3 on 2016-08-11
Post score: 0

A:

There isn't one module that's responsible for "path correction"; it's actually an interaction between two different parts of the system.
AMCL uses lidar and odometry information to estimate the position of the robot within the world. It corrects for drift in the odometry and publishes a TF transform between the global map frame and the odometry frame.
The local planner receives the estimated position of the robot and tries to create a colliision-free trajectory and a command that moves the robot toward and along the global plan. The result is that this corrects for any drift of the robot or motors.

Originally posted by ahendrix with karma: 47576 on 2016-08-11
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by aarontan on 2018-07-04:
From your answer, you are suggesting that the local planner is capable of avoiding obstacles without replanning of the global plan?
Comment by ahendrix on 2018-07-05:
The move_base framework gives the local planners some leeway to choose a different path or abort, but each local planner will implement that slightly differently. That isn't really the topic of this question, so if you want more details I suggest you ask a new question.
Comment by aarontan on 2018-07-05:
@ahendrix, ok will do, please check my latest question and let me know if you know anything!

