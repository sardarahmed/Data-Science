Q:

Hector Nav Msgs build error - in Eclipse

I am new to ROS, and Linux, but have experience with Eclipse in windows environment.
I have a few nodes (including Hector SLAM catkin) all functioning using ROS_MAKE and ROSRUN from the terminal. I know the code is OK.
Now working to setup eclipse, and am to the point where the nodes will compile in Eclipse so I have worked out the obvious dependencies issue that plague many people including myself. (using this page: wiki.ros.org/ODEs#Eclipse)
Error now is that in some of the build files the get_pkg_map is being called but not getting returned and instead generates error that CMAKE_PREFIX_PATH environment variable isn't set. Exact error wording is below.
I have added the CMAKE_PREFIX_PATH environment variable to Eclipse and set it to same value as echo'd by terminal. "/home/linux/catkin_ws/devel:/opt/ros/jade"
Can you point me towards what I am missing? I apologize if this belongs in an Eclipse forum but the files generating the errors are part of ROS so thought better to start here. Appreciate any help you can provide.

[ 24%] Generating EusLisp manifest code for hector_nav_msgs
cd /home/linux/catkin_ws/build/hector_slam-catkin/hector_nav_msgs && ../../catkin_generated/env_cached.sh /usr/bin/python /opt/ros/jade/share/geneus/cmake/../../../lib/geneus/gen_eus.py -m -o /home/linux/catkin_ws/devel/share/roseus/ros/hector_nav_msgs hector_nav_msgs nav_msgs std_msgs
Traceback (most recent call last):
ERROR:  Neither the environment variable CMAKE_PREFIX_PATH is set nor was a list of paths passed.
  File "/opt/ros/jade/lib/python2.7/dist-packages/geneus/geneus_main.py", line 133, in genmain
    pkg_map = get_pkg_map()
  File "/opt/ros/jade/lib/python2.7/dist-packages/geneus/geneus_main.py", line 55, in get_pkg_map
    for ws in workspaces.get_spaces():
  File "/usr/lib/python2.7/dist-packages/catkin_pkg/workspaces.py", line 52, in get_spaces
    raise RuntimeError('Neither the environment variable CMAKE_PREFIX_PATH is set nor was a list of paths passed.')
RuntimeError: Neither the environment variable CMAKE_PREFIX_PATH is set nor was a list of paths passed.
make[2]: Leaving directory `/home/linux/catkin_ws/build'
make[2]: *** [/home/linux/catkin_ws/devel/share/roseus/ros/hector_nav_msgs/manifest.l] Error 3
make[1]: Leaving directory `/home/linux/catkin_ws/build'
make[1]: *** [hector_slam-catkin/hector_nav_msgs/CMakeFiles/hector_nav_msgs_generate_messages_eus.dir/all] Error 2
make: *** [all] Error 2

UPADTED: Forgot the setup info. This is on Ubuntu 14.04, ROS JADE, Mars2 Eclipse Linux 32 bit

Originally posted by billy on ROS Answers with karma: 1850 on 2016-05-16
Post score: 0

A:

If you are really starting I recommend you to use qtcreator instead of eclipse. It has a very good integration with cmake and therefore catkin (I have worked with both)
You can use the same CMakeLists.txt file as "project file" and you can generate the outputs in the same build folder you do with catkin_make.

Originally posted by Pablo Iñigo Blasco with karma: 2982 on 2016-05-16
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by billy on 2016-05-18:
I'd hate to give up on Eclipse, especially after spending so much effort on it already...I know...sunk costs. I don't see a lot of support in ROS world for QT. If it's even 10% as complicated as eclipse, it would still be way too complicated to navigate on my own. Have you seen any good tutorials?
Comment by Pablo Iñigo Blasco on 2016-06-04:
The point here is that you do not work with qt, you work with CMAKE, that is all... Ros is totally based in cmake...
Additionally, it is not true that ROS does not support too much qt, the most important visual tools in ros are developed in qt: rqt, rviz, rqt_console, rqt_plot, etc..
Comment by billy on 2016-06-08:
So I never got eclipse fixed so working without any debugger still. My comment about ROS and QT support was a question about tutorials like there are with Eclipse. I'll take a closer look at it. But to be sure, does Qt allow single-stepping through code when working with ROS
Comment by Pablo Iñigo Blasco on 2016-06-09:
You can debug with single stepping in qtcreator.
you only have to add the -DCMAKE_BUILD_TYPE=Debug in the Cmake build command
Comment by billy on 2016-06-22:
Thanks Pablo, I'll come back to it eventually and see if QT works for me.

