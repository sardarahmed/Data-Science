Q:

Can not write an instance of `rosbag::MessageInstance` to a `rosbag::Stream`

Consider the following peace of code:
for (rosbag::View::iterator m=view.begin(); m!=view.end(); m++){
        m->write(stream);
}

Where stream is a variable of type rosbag::Stream. When I run the code I get the error:
In file included from *.cpp:6:0:
  /opt/ros/indigo/include/rosbag/bag.h: In instantiation of ‘void rosbag::Bag::readMessageDataIntoStream(const rosbag::IndexEntry&, Stream&) const [with Stream = rosbag::BZ2Stream]’:
  /opt/ros/indigo/include/rosbag/message_instance.h:170:5:   required from ‘void rosbag::MessageInstance::write(Stream&) const [with Stream = rosbag::BZ2Stream]’
  *.cpp:194:21:   required from here
  /opt/ros/indigo/include/rosbag/bag.h:367:118: error: ‘class rosbag::BZ2Stream’ has no member named ‘advance’
               memcpy(stream.advance(data_size), current_buffer_->getData() + index_entry.offset + bytes_read, data_size);

As you can see, internally ros library tries to call a method named .advance() on type rosbag::Stream. Now if we check the class reference for rosbag::Stream we can see that there is no method named advance() but rather advanceOffset(uint64_t nbytes) which looks like exactly what the library tries to call internally (at least the signature implies that this is what the library needs)
None of the derived classes rosbag::UncompressedStream nor rosbag::BZ2Stream have a method named advance().
Why do I get the above mentioned error and how can I fix it?

Originally posted by abarbarosie on ROS Answers with karma: 76 on 2014-10-23
Post score: 0

A:

I'm not sure that's the appropriate way to use the rosbag API to read messages from one bag file and write them to another.
The last time I did this, my code looked something like:
rosbag::Bag output("output.bag", rosbag::bagmode::Write);

rosbag::Bag input("input.bag");
rosbag::View view(input, rosbag::TopicQuery("numbers"));

BOOST_FOREACH(rosbag::MessageInstance const m, view)
{
    output.write(m.getTopic(), m.getTime(), m, m.getConnectionHeader());
}

output.close();
input.close();

Originally posted by ahendrix with karma: 47576 on 2014-10-24
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by abarbarosie on 2014-10-24:
But that's just copying from one bag file to another... What if you need to interpret the message in your program?
Comment by ahendrix on 2014-10-24:
I assumed that you were working with MessageInstances because you didn't need to interpret the data, or were doing so elsewhere.
Comment by ahendrix on 2014-10-24:
The rosbag API and the rosbag_storage API provide an rich API for extracting messages from bag files.

