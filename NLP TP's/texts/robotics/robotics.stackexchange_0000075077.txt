Q:

Usage of test_commit and test_pull_requests in rosdistro file

Where can we find the usage of test_commits and test_pull_requests tags in rosdistro file?
Looking at rep-0143 they look so useful. However, after I turned test_pull_requests on for a package, I've not seen nor received anything regarding pull requests with ROS buildfarm. Are we supposed to get emails? Or is the github PR page supposed to get updated? Or is there specific website to look at about the result?
And I wanted to document this once I resolve this question, but where's the best place to be? I'm inclined to change the title of this wiki page so that it can talk a bit more general stuff about rosdistro usage.
Related question

Update 7/11/2016

you need to give the GitHub user used by Jenkins access to setup web hooks

I'm not sure if I understand this correctly, nor the wiki page that says the following:

The GitHub org unit where the repository is located must grant access to the user ros-pull-request-builder in order to allow Jenkins to setup the necessary web hooks.

What is grant access here might be my question. On https://github.com/%OUR_ORG%/%REPO%/settings/collaboration, I just gave a write access to ros-pull-request-builder to our repo, which I feel a little too much. but since the repo is open to public granting read access doesn't make sense to me. Could you be specific about what needs to be done?

Update2 7/11/2016
Sorry but still not sure.

I gave @ros-pull-request-builder an admin access. Then add a comment @ros-pull-request-builder retest this please in a pull request.

(Though nt sure if this is right thing to do) Also I added the following at https://github.com/%OUR_ORG%/%REPO%/settings/hooks, with jenkins url http://jenkins.ros.org:8080/github-webhook

Jenkins (GitHub plugin)
Jenkins (Git plugin)

I don't see anything happens, and on the github hook page, both of the above is indicated as "This hook has never been triggered`.

Originally posted by 130s on ROS Answers with karma: 10937 on 2016-07-07
Post score: 0

Original comments
Comment by Dirk Thomas on 2016-07-11:
When you change the permission it doesn't retrigger Jenkins to try to establish the webhook. Please add a link to the job and I can manually reconfigure it. Otherwise it happens automatically every night.
Comment by Dirk Thomas on 2016-07-11:
The two webhooks you manually created look incorrect. I would not recommend trying to configure that manually but let Jenkins handle the webhook creation.
Comment by 130s on 2016-07-12:
Sorry I tried but couldn't spot the job on http://jenkins.ros.org:8080. The PR I'm testing is https://github.com/tork-a/rtmros_nextage/pull/242 if that helps.
Comment by Dirk Thomas on 2016-07-12:
Are you referring to this job: http://build.ros.org/view/Ipr/job/Ipr__rtmros_nextage__ubuntu_trusty_amd64/ If yes, the ros-pull-request-builder use has no permissions on that org unit and therefore can't setup the webhook.
Comment by Dirk Thomas on 2016-07-12:
If you rely on your manual webhook you might want to look at https://developer.github.com/webhooks/testing/ on how to test if it works. Btw. the server is build.ros.org and not jenkins.ros.org (which is only a redirect).
Comment by 130s on 2016-07-13:
Turned out that the server's URL was the key for me. Now webhook seems to have been triggered. Thank you Dirk!

A:

One of the bloom tutorials describes the process to enable pull request jobs for your repo: http://wiki.ros.org/buildfarm/Pull%20request%20testing
I assume you are missing the 1.1 Prerequisite a step. You need to give the GitHub user used by Jenkins access to setup web hooks to notify Jenkins about pull requests and changes to them.
Update: I have updated the wiki page with a reference to the Jenkins plugin and repeating the requirements documented there.

Jenkins uses the Pull Request Builder plugin to setup the webhooks which trigger Jenkins for new or updated pull requests and report back the status.
Therefore the GitHub org unit where the repository is located must grant push, pull and administrative rights to the user ros-pull-request-builder.
(You can setup the webhook manually to avoid the need for administrative rights.
Then the Jenkins user only  needs push and pull access.)

Originally posted by Dirk Thomas with karma: 16276 on 2016-07-07
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by 130s on 2016-07-11:
Thanks, I updated OP to ask a bit further.
Comment by Dirk Thomas on 2016-07-11:
I updated the answer.
Comment by 130s on 2016-07-11:
Hm, still trying. I added "Update2" in my op for more question.

