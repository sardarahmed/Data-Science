Q:

load calibration parameters into camera_info

I am using the Intel RealSense R200 for my vision based project. I have managed to run the stereo calibration for the infrared stream and I have also obtained the calibration data file (.yaml) for the left and right infrared stream.
Currently, I am subscribing to the raw left and right infrared stream ('/camera/ir/image_raw' and '/camera/ir2/camera_info') from the default nodelet (r200_nodelet_default.launch)
I would like to know how do I load the calibration parameters that I have obtained into the respective camera_info topics namely ('/camera/ir/camera_info' and '/camera/ir2/camera_info') so I can run the stereo_image_proc to obtain the rectified infrared stream.

Originally posted by timku on ROS Answers with karma: 1 on 2016-11-18
Post score: 0

A:

Dear timku,
the standard way is to use the camera_info_manager (wiki).
BTW I'm quite confused by your goal: the Intel RealSense R200 manage the stereo vision by itself and its node provide the disparity map, depth point cloud and camera_info. So you don't need to calibrate it: this is a task for the camera itself.
Greetings
Alessandro

Originally posted by afranceson with karma: 497 on 2016-11-18
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by timku on 2016-11-18:
Hi Alessandro,
Do you have any example of using the camera_info_manager as I can't seem to find any example online. Do you mean that the camera is factory calibrated?
Comment by timku on 2016-11-18:
And I have managed to sync the left and right IR stream topic and would like to generate the disparity map through stereo_image_proc. However, the disparity window freeze after using the image_view disparity view method. Is this the proper method?
Comment by afranceson on 2016-11-18:
The stereo_image_proc node is designed to elaborate two images taken at same time from two different and separated camera (like two webcam) in order to create a disparity map and 3D point cloud.
The RealSense R200 instead is a stereo camera and produce those info by itself.
Comment by afranceson on 2016-11-18:
This means that the algorithm provided in stereo_image_proc is INSIDE the RealSense. Look at the topic published by the realsense_camera node:
depth/camera_info (sensor_msgs/CameraInfo)
depth/image_raw (sensor_msgs/Image) - basically the disparity map
depth/points (sensor_msgs/PointCloud2)
Comment by timku on 2016-11-18:
Ok, thanks for the above infor! That clearly clarify some of my doubts on the Realsense camera!
Comment by timku on 2016-11-18:
Btw, I am working on my final year project (vision-based obstacle detection in GPS-denied outdoor environment) using the RealSense R200 through selecting appropriate stereo detector and stereo matching algorithms. After which, I will generate the disparity/depth map to detect any nearby obstacle.
Comment by timku on 2016-11-18:
Just to check is there any feature detector function and stereo matching algorithms that is inside the ROS package? Or I can just use the OpenCV library in ROS?
Comment by afranceson on 2016-11-18:
I guess this is a task for the Point Could Library. As OpenCV also PCL has a porting in ROS: see its wiki page. More info about PCL here.

