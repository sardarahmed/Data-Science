Q:

Is it possible to do *ros_msg?

Hi Community,
I am working on a project that involves me defining various ROS msgs most of which are nested with other msgs that I have defined. Anyhow my question is regarding passing these ROS msgs within functions. I create a Ptr to a message, fill in values in it and then push it on a list. Since I create a Ptr to a ros_msg, in order to push it to a list I use *ros_msg, similar to any C++ data structure. I was wondering if this is correct, since it compiles without any errors.
Thanks
Ammar

Originally posted by Ammar on ROS Answers with karma: 289 on 2012-09-12
Post score: 0

A:

I think the better practice would just be to store the pointers themselves. Pushing *msg onto a list will create a (maybe unnecessary) copy of the entire message, whereas copying just the pointer object is cheap. It's also memory-safe because they are shared pointers and there is therefore no worry about the object being deleted or needing an "owner" to free the memory at the end.
Then to access any message data members, just use the standard c++ -> syntax (ptr->member) in place of (*ptr).member

Originally posted by jdlangs with karma: 971 on 2012-09-12
This answer was ACCEPTED on the original site
Post score: 1

