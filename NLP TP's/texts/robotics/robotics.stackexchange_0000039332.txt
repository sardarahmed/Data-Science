Q:

JointTrajectoryActionController, does it allocate heap resources?

Hi all,
The JointTrajectoryActionController implementation now contains two action servers, which subscribe to, and publish ROS topics. I'm under the impression that the heap allocations associated to these publishers/subscribers are taking place in the realtime control thread. Is this true?, or am I missing something in the code where a separate thread is spun for this?.
OTOH, the old (non-action) topic interface inherited from the deprecated JointSplineTrajectoryController uses realtime_tools::RealtimePublisher, so those publishers/subscribers do perform their resource allocations in a separate thread.
TIA

Originally posted by Adolfo Rodriguez T on ROS Answers with karma: 3907 on 2012-04-05
Post score: 0

A:

In the current electric implementation, the action servers are actually instantiated in the init method which is called outside the real time loop. When an action goal comes in, the callbacks are executed in the thread that is calling spin (the main thread, not the real time thread for the PR2). The goal callback then sets the goal for the controller running in the realtime loop (joint_trajectory_action_controller.cpp, line 985).

Originally posted by Lorenz with karma: 22731 on 2012-04-05
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Adolfo Rodriguez T on 2012-04-08:
I was missing the greater picture, as I was looking for the non-realtime spinner thread in the controller code, instead of in the pr2_controller_manager infrastructure. Thanks for pointing that out.

