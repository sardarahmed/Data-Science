Q:

Alternatives for (not working) nested substitution arguments for roslaunch

I´m currently changing the launch file setup on a project and would like to do something like
<include file="$(find $(env ROBOT_TYPE)_config)/launch/planning_config.launch">

This doesn´t appear to be possible. There is a workaround by creating one launch file per robot type and referencing that, but I was wondering if there are other options that I missed and that do not require creating one launch file per robot type. I´m hoping I´m missing some otherwise obvious simple alternative here ;)

Originally posted by Stefan Kohlbrecher on ROS Answers with karma: 24361 on 2013-09-20
Post score: 3

A:

I've had the same issue and never found a real solution. One thing that may be a work around is to use xacro ( http://wiki.ros.org/xacro ) to generate the launch files for each robot.  You can run xacro from makefiles (at least in rosbuild you could ).

Originally posted by sedwards with karma: 1601 on 2013-09-22
This answer was ACCEPTED on the original site
Post score: 2

