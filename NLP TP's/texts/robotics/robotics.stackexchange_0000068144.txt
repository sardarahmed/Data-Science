Q:

camera 1394 uses wrong video mode

We are using a camera134 with a .yaml file in which we set the video_mode parameter to 640x480_yuv422.
calling "rosparam get /camera1394/video_mode" returns this value so we are certain that it is read from the .yaml file correctly. But the image we get seems to be in the wrong format, since "rostopic echo /camera/image_raw/encoding" returns rgb8 as the format value.
Any ideas on where there might be something wrong?

Originally posted by Team_TAPS on ROS Answers with karma: 25 on 2015-06-17
Post score: 1

A:

The driver converts many different camera-specific encodings to the common-used RGB8 for use in the ROS image pipeline.
That simplifies image processing of data from many different devices.
All supported ROS Image message encodings are defined in the sensor_msgs/image_encodings.h header.
EDIT: Since YUV422 is not a supported ROS Image format, there is no way for a ROS driver to produce Image messages in that format.
If you want to process the YUV422 image directly, you'll need to write your own program and not use ROS Image messages. If you decide to do that, I recommend the excellent libdc1394 for accessing the camera hardware.

Originally posted by joq with karma: 25443 on 2015-06-19
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Stopfer on 2015-06-20:
@joq: How do we get and yuv422 encoded image?
We don't want to have an RGB8 encoded image, which means that the conversion is absolutely unnecessary!
Comment by Stopfer on 2015-06-23:
@joq: Good to know. It absolutely wasn't clear for us, that ROS actually does not support to transmit YUV422 encoded images.
We already have a software which is using libdc1394. Our initial motivation to use ROS was to save the effort for adapting our software in case of an update in the libdc1394

