Q:

Connect two HDL32e together

Hey,
I have two HDL 32e velodyne laser scanners and I connected using a switch to my computer.
I ran the velodyne package and I'm getting the pointcloud.
The problem is both the pointclouds of the different HDL's are getting combined.
Is there a possibility to seperate the pointclouds as I want to use tf and build a map?

Originally posted by b-sriram on ROS Answers with karma: 105 on 2016-03-16
Post score: 2

A:

It looks like there is a parameter called device_ip:
  private_nh.param("device_ip", devip, std::string(""));
  if(!devip.empty())
    ROS_INFO_STREAM("Set device ip to " << devip << ", only accepting packets from this address." );
  input_->setDeviceIP(devip); 

https://github.com/ros-drivers/velodyne/blob/master/velodyne_driver/src/driver/driver.cc#L111
It isn't used by any of the launch files, so you would have to add it to nodelet_manager.launch (and pass it down from a launch file that includes that one), and then you would launch it separately for each ip, and likely put each launch into a separate namespace.  If you get it working you should try to get the changes merged into the repository.

Originally posted by lucasw with karma: 8729 on 2016-03-16
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by joq on 2016-03-18:
That parameter was added fairly recently. A pull request adding it to the appropriate launch files would be welcome.
Comment by b-sriram on 2016-03-22:
hi @lucasw, thanks, I managed to get it working.
@joq I don't know how to do a "pull request". I can share the changes with you.
Comment by lucasw on 2016-03-22:
You probably just git cloned https://github.com/ros-drivers/velodyne.git and made changes to it?  You could paste the changes into an answer here (they won't fit in comments), but I highly recommend making a github account if you don't have one, and then you fork the velodyne repository...
Comment by lucasw on 2016-03-22:
... then git clone it and copy your changes in, and then after pushing them in there will be a green pull request button on your github velodyne page.
Comment by joq on 2016-03-22:
Yes, it's really not hard, and it saves a lot of time for a busy maintainer (like me). :-)

