Q:

How to modify dependency list when building a package from source?

I am using Ubuntu 16.04 ARM and have installed ros-desktop onto my system. However, I am looking to point the rviz package to our own GL implementation instead of mesa. To do so, I am following the instructions to build rviz from source. But I am clueless about where and how to modify the dependency list to incorporate the new GL library. Can someone please help me figure out how to go about it. Thanks in advance.

Originally posted by sam26 on ROS Answers with karma: 231 on 2017-04-12
Post score: 1

A:

I guess you should be looking at the files CMakeLists.txt and package.xml of the rviz package
[UPDATE]
If what you want is to substitute OpenGL for your own awesome implementation of GL (lets call it myAwesomeGL) I would do the following:

Create (if you don't already have it) a FindMyAwesomeGL.cmake file and install it so that cmake can find it.
In the file package.xml substitute:

this
<build_depend>opengl</build_depend>
...
<run_depend>opengl</run_depend>

for
<build_depend>myawesomegl</build_depend>
...
<run_depend>myawesomegl</run_depend>

In the file CMakeLists.txt substitute:

this:
find_package(OpenGL REQUIRED)

for this
find_package(MyAwesomeGL REQUIRED)

and int all CMakeLists.txt in all subsequent directories substitute all occurrences of
${OPENGL_INCLUDE_DIR}
${OPENGL_LIBRARIES}

for
${MYAWESOMEGL_INCLUDE_DIR}
${MYAWESOMEGL_LIBRARIES}

Originally posted by Martin Peris with karma: 5625 on 2017-04-12
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by sam26 on 2017-04-12:
but where in CMakelists.txt would I change the path of openGL library ? Do I have to explicitly set the library path?
Comment by sam26 on 2017-04-13:
Thanks for the detailed response but I don't quite get what you mean by creating a cmake file. I already have the library files (.so) of myawesomeGL besides mesa .So wouldn't setting the env variable OPENGL_LIBRARY in CMakelists.txt to find the path to myawesomeGL instead of mesa be sufficient?
Comment by sam26 on 2017-04-13:
If not the above, something in similar lines? where I don't have to build myawesomeGL from scratch but make use of my already existing .so files to fool rviz.
Comment by Martin Peris on 2017-04-13:
I think you misunderstood what I meant, you don't need to rebuild myawesomeGL just "tell" cmake how to find it by creating the appropriate FindMyAwesomeGL.cmake file. Regarding your suggestions, well... God kills a few kittens when one does things like that, but it should work ;)

