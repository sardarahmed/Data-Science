Q:

Correct way of sending messages using roslibjs

I am runing my roscore in heroku container and it launches on some ip adress. Now, I want to create a simple web page where user can send some commands. So these commands can be then serialized from JSON into ros messages using roslibjs plugin. The question is:
Where exactly does the roslibjs sends the serialized messages? Do I need to simply specify the IP location of running roscore? (ROS_MASTER_URI)
P.S. I have read this tutorial: http://wiki.ros.org/roslibjs/Tutorials/BasicRosFunctionality
but just want to be sure that I have understood it correctly.

Originally posted by stevemartin on ROS Answers with karma: 361 on 2018-10-18
Post score: 0

A:

Do I need to simply specify the IP location of running roscore? (ROS_MASTER_URI)

No, you need to specify the IP of the running instance of rosbridge_server. There is a good chance those two are identical, but read on.
That component is responsible for opening the web socket and receiving and sending messages to and from the remote system (ie: bridge the ROS and external system).
That is also shown in the last section ("Running the Example") of the tutorial you link.

So to be really technical: you could run the rosbridge_server node on a different system from where your roscore is running. In that case you would have to update ROS_MASTER_URI for rosbridge_server to point to the PC / VM running roscore. But it's not a typical setup and probably not one you should be looking into, unless you have requirements that make this .. well .. a requirement.

Originally posted by gvdhoorn with karma: 86574 on 2018-10-18
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by stevemartin on 2018-10-18:
The goal I am trying to achieve is to receive a goal destination from an html webpage, then serialize into ros message and do the navigation and send to another websoocket some ros messages.
Comment by gvdhoorn on 2018-10-18:
Yes? I'm not sure how that would change my answer?
Can you clarify?
Comment by stevemartin on 2018-10-18:
I was just giving what I am trying to achieve and asking whether using rosbridge and rosjslib is the correct choice?
Comment by gvdhoorn on 2018-10-18:
Sending action goals should definitely be possible, yes. See RobotWebTools for some more info.
What I'm wondering about is what you gain by running just roscore in a container. Where is the rest of your application? How are you managing multiple instances?
Comment by stevemartin on 2018-10-19:
@gvdhoorn My application is inside that container. It is not an empty roscore my whole ros is running there.
Comment by stevemartin on 2018-10-19:
@gvdhoorn But instead of using that library can I use libraries from C++/Python to communicate with an external server?
Comment by gvdhoorn on 2018-10-19:
Perhaps you should more clearly describe what you want to achieve. It's not clear to me in which direction data should flow or what sort of systems you are looking to integrate with.
Comment by stevemartin on 2018-10-19:
@gvdhoom I have a web server which holds odometry values of a robot. I want to create a ros node which will use GET method to retrieve the odometry in json format and then I just manually advertise the values into ros /odom topic
Comment by gvdhoorn on 2018-10-19:
I would suggest to write a Python node that uses the requests library to run the GETs in a while loop, converts and then publishes the Odom msgs.
You already know this probably but GETs in a loop is really inefficient.

