Q:

check for active state of topic

Hi,
I have 2 nodes, 1 publishing the topic, 1 subscribing to that topic. Current situation is that when I start the subscribing node, the values that will be read from the topic are initialized to 0. After reading from the topic, they get the correct values, but when the topic stops publishing they keep that value which may no longer be correct. In that case I want the values set to 0 again. How can I (from within the subscribing node, i.e. not using the rostopic command) check if the publishing topic is still active ?
Thanks

Originally posted by hvn on ROS Answers with karma: 72 on 2013-12-06
Post score: 0

A:

The values "on the topic" will not be 0 when the topic is not active and will not stay at the last value when de-activated again. When a topic is not active (this is also the way to check) it will not send any data.
So the very likely explanation for the values being 0 and staying at their value is that this is a logic that you do in you subscriber node. Here, you can change everything to your intended behavior.

Originally posted by dornhege with karma: 31395 on 2013-12-06
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by hvn on 2013-12-06:
From your answer it seems I didn't describe it good enough. After reading from the topic, the values are not 0 anymore but have a value such as 0.60. After the topic stops, no more data is received. Shouldn't the value change to something else then, instead of staying 0.60 ? Or is this up to my own code ?
Comment by dornhege on 2013-12-06:
If there are no more publishers to a topic, there is no more value. How you interpret that is up to you. Keep the latest value, set it to a default or handle explicitly that there is no more data. This depends on what you need.
Comment by hvn on 2013-12-06:
What I've tried is setting the default in the callback with a boolean, but that is no use since without the topic, the callback isn't called. Doing it in the constructor doesn't work either and doing it inside run() the values change so quickly that the default situation is kept. Any suggestions ?
Comment by dornhege on 2013-12-06:
This is you code logic after the ROS calls. You'll need to implement your desired behavior. I don't know what your want and nothing about your code.
Comment by hvn on 2013-12-06:
Point taken. Thanks for replying.

