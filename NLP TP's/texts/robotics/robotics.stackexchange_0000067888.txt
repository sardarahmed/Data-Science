Q:

Custom robot dashboard

I am looking for a simple way to build virtual dashboard (teach pendant) for industrial robot.
What I basically need is a GUI application with several buttons where I can emulate such things like emergency button, dead man's handle, axes selection and actuation, and others.
rqt_reconfigure is not an option since buttons are not supported.
Probably the rqt_robot_dashboard is what I need, but unfortunatelly there are neither tutorials nor documentation available. The link to Python API docs is broken either.
Any suggestions?
P.S. I am on ROS Indigo now.
Thanks

Originally posted by Boris on ROS Answers with karma: 3060 on 2015-06-03
Post score: 1

A:

The API link is broken indeed, but you can get the some docs at:
http://docs.ros.org/indigo/api/rqt_robot_dashboard/html/
Furthermore, it is maybe worthwhile to look at other robots' dashboards and take and adapt the existing bits and pieces, e.g. the youbot dashboard:
https://github.com/youbot/youbot-ros-pkg/tree/master/youbot_diagnostics/youbot_dashboard
or the turtlebot dashboard: https://github.com/yujinrobot/kobuki_desktop/tree/indigo/kobuki_dashboard

Originally posted by daenny with karma: 376 on 2015-06-03
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by cyborg-x1 on 2015-06-03:
I somehow think the dashboards are not really nice everybody is reinventing the wheel, there is nothing really reusable. For example everybody does it's own diagnostics message for the laptop battery while there would be actually a node like laptop_battery_monitor in ros-drivers ...
Comment by cyborg-x1 on 2015-06-03:
Maybe a reconfigurable widget for a single or multiple buttons would be nice, and having a rqt_button message... or something like that...
Comment by Boris on 2015-06-04:
@daenny Thanks! I have seen that page with API, but was confused by empty Main page.
Comment by Boris on 2015-06-04:
@cyborg-x1 I agree, there should be a simpler way to define such simple things. I will try to adopt Qt Quick with its markup language (QML) it looks very promising. But I am not sure if Indigo and Jade depend on Qt5.

