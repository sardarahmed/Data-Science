Q:

What is the correct way to do stuff before a node is shutdown?

I want to do some shutting down code for my node.
It is important that I am still fully connected to ROS while that is happening, so putting stuff just after the main loop is not an option.
Currently I would pass NoSigIntHandler to ros::init,
install my own SIGINT handler, do stuff there and then call ros::shutdown.
Is this correct, i.e. the intended way or is there a better solution?
Update: I tested this and it works fine for pressing Ctrl-C even from roslaunch. For me this is OK right now.
The only thing that does not work is what Lorenz hinted at: rosnode kill seems to use another method, I get:
[ WARN] [1329394338.937166789, 61.017000000]: Shutdown request received.
[ WARN] [1329394338.937223749, 61.017000000]: Reason given for shutdown: [user request]
and my SIGINT handler is not called.
I could try to work around this by checking ros::isShuttingDown and trying to shutdown my stuff while that is happening, but that doesn't seem safe to me.

Originally posted by dornhege on ROS Answers with karma: 31395 on 2012-02-15
Post score: 22

Original comments
Comment by Lorenz on 2012-02-15:
I see at least one (possible) problem with your solution: will it handle a rosnode kill command, i.e. a shutdown triggered via xmlrpc? I don't know a better solution though.
Comment by joq on 2012-02-15:
Seems reasonable to me.
Comment by dornhege on 2012-02-15:
@Lorenz: Depends on what rosnode kill does. Does it send SIGINT/SIGTERM? I'll play around with this tomorrow.
Comment by Lorenz on 2012-02-16:
Rosnode kill cannot send SIGINT if the node is not owned by the user executing rosnode or if the node is running on a different computer. As far as I know, it uses the shutdown XMLRPC call (http://www.ros.org/wiki/ROS/Slave_API).
Comment by dornhege on 2012-02-16:
Yep, just found that out by trying. The only question left would be: Is it possible to hook in there and stop the shutdown until I am done. I'm OK with Ctrl-C handling for now as I don't use rosnode kill.

A:

There are two normal ways to tell a node to shut down:

SIGINT signal. Used by roslaunch or when you do Ctrl-C.
Shutdown XMLRPC call. Used by rosnode kill.

If you want to cover all your bases, you need to override roscpp's handlers for both. In practice, most people seem to just override SIGINT, probably because it's actually documented and rosnode kill is less-used.
What roscpp really needs is an "on shutdown" callback. That's ticketed here: https://code.ros.org/trac/ros/ticket/3417
In the meantime, it is possible (if a little messy) to do this correctly. An example is the nodelet.cpp code. The relevant parts look like:
#include <signal.h>
#include <ros/ros.h>
#include <ros/xmlrpc_manager.h>

// Signal-safe flag for whether shutdown is requested
sig_atomic_t volatile g_request_shutdown = 0;

// Replacement SIGINT handler
void mySigIntHandler(int sig)
{
  g_request_shutdown = 1;
}

// Replacement "shutdown" XMLRPC callback
void shutdownCallback(XmlRpc::XmlRpcValue& params, XmlRpc::XmlRpcValue& result)
{
  int num_params = 0;
  if (params.getType() == XmlRpc::XmlRpcValue::TypeArray)
    num_params = params.size();
  if (num_params > 1)
  {
    std::string reason = params[1];
    ROS_WARN("Shutdown request received. Reason: [%s]", reason.c_str());
    g_request_shutdown = 1; // Set flag
  }

  result = ros::xmlrpc::responseInt(1, "", 0);
}

int main(int argc, char** argv)
{
  // Override SIGINT handler
  ros::init(argc, argv, "MyNode", ros::init_options::NoSigintHandler);
  signal(SIGINT, mySigIntHandler);

  // Override XMLRPC shutdown
  ros::XMLRPCManager::instance()->unbind("shutdown");
  ros::XMLRPCManager::instance()->bind("shutdown", shutdownCallback);

  // Create publishers, subscribers, etc.

  // Do our own spin loop
  while (!g_request_shutdown)
  {
    // Do non-callback stuff

    ros::spinOnce();
    usleep(100000);
  }

  // Do pre-shutdown tasks

  ros::shutdown();
}

Originally posted by Patrick Mihelich with karma: 4336 on 2012-02-16
This answer was ACCEPTED on the original site
Post score: 21

Original comments
Comment by cpagravel on 2017-04-19:
Is this in the documentation? I couldn't find it. If not, it should be added, IMO.
Comment by lucasw on 2017-07-13:
There ought to be a ros::NodeHandler nh; in there in order for the node to appear under rosnode list and be rosnode killable.
Comment by lucasw on 2017-07-13:
Also http://docs.ros.org/kinetic/api/nodelet/html/nodelet_8cpp_source.html#l00314 could replace the dead nodelet.cpp link, but is also more complicated.
Comment by khaiyichin on 2019-10-25:
does anyone know if that ticket (https://code.ros.org/trac/ros/ticket/3417) still exists?
Comment by Proc√≥pio on 2019-10-25:
@khaiyichin it does not exist. Bear in mind that this discussion is 7 years old.

