Q:

Is test_depend actually used for anything?

Under catkin (in hydro), package.xml files can have "test_depend" entries.  This seems like a good idea, as sometimes our tests have dependencies that the rest of our code does not have. HOWEVER, I can't see any way that those test_depend entries are actually used or referenced by the catkin build machinery or rosdep or anything.  Are they just there to be informative to developers who want to run tests?  Or does catkin actually download and install those dependencies when you type "catkin run_tests"?  Or do those dependencies get installed when you use "rosdep install"?
I see in the documentation http://wiki.ros.org/catkin/package.xml and http://wiki.ros.org/catkin/conceptual_overview#Dependency_Management specifics on when one should declare test_depend-encies, but I don't see any mention of what is actually done with them.  What are the consequences of putting them in?  Leaving them out?
Is this a feature that is yet to be implemented, or is it implemented and not documented?  Or do I just need help finding the docs?
(The motivation for this question is that I'm trying to automate the running of tests with Travis, and my package has some test_dependencies which are not build_dependencies, and I want to make sure the test script installs the test dependencies, since Travis runs essentially on a blank machine every time.)
Thanks!

Originally posted by hersh on ROS Answers with karma: 1351 on 2014-01-07
Post score: 5

A:

REP-140, which @joq authored and whose definition is implemented into Groovy onward,  should answer the question raised here.
Making <test_depend> easier to use

With format one, <test_depend> could not co-exist with other types of dependencies, nor could testing-only packages provide any build or configuration information.

For example, rostest defines an add_rostest() CMake command. Using it required a <build_depend>rostest</build_depend>, even though it was only needed when testing is enabled. Even worse, also declaring <test_depend>rostest</test_depend> was considered an error.

With format two, a <test_depend> for rostest works as expected, no separate <build_depend> is required in that case. That assumes that the configure step is done with the flag CATKIN_ENABLE_TESTING being set and that the package correctly uses the flag to disable all configuration of unit tests. Moreover, packages needed for several reasons may now be declared using any desired combination of dependency types, including <test_depend>.

Originally posted by 130s with karma: 10937 on 2015-12-08
This answer was ACCEPTED on the original site
Post score: 1

