Q:

GUI: Rendring is very slow

HI, everybody,
I use gazebo to simulate a robot made by my labratory.But, strangely, the GUI of gzclient is quite slow.
A simple world was placed into the gazebo(1.4), and the physics process is smooth with Real Time Factor hover around 1.0. However, I found that the gzclient is quite slow, and the gzclient cause a high CPU load.
About my computer:
CPU: i7-3770
GPU: GTX670
Memory: 16G
and the GPU driver seems work well. I have test it with 'glxgrears', and achieved about 22000fps.
I don't understant why gzclient is such slow. the fps of the GUI is no more then 2Hz. Anybody have ideas about this?

Originally posted by igo on Gazebo Answers with karma: 11 on 2013-05-03
Post score: 1

Original comments
Comment by hsu on 2013-05-03:
can you check which package your libGL.so belongs to?
Comment by pcdangio on 2013-05-23:
I am having the same issue.  I am using a world file with a very small town of buildings.  The GUI takes nearly a minute to load,and then the entire GUI renders at less than 5fps (including the menus).  Using i7 CPU, GTX690 GPU, and 32GB of RAM.  I ran glxinfo and verified that opengl is being rendered through my nvidia drivers.  I also tried changing the libGL.so simlink under /usr/lib/i386-linux-gnu to point to the nvidia libGL.so instead of the mesa one.  No luck.

A:

I had a big issue with this as well that I was finally able to solve. Basically, if your OpenGL is out of date or from the wrong vendor, you will end up with a massive drop in framerate. For Intel cards, you want the Open Source version, I know the latest (Mesa 9.0+) works well on 12.04.
A simple command at the terminal ($/usr/lib/nux/unity_support_test -p) will tell you your OpenGL version. A couple of examples (Note that I have an Intel card on this machine):
BAD:

$ /usr/lib/nux/unity_support_test -p
OpenGL vendor string:   Tungsten Graphics, Inc
OpenGL renderer string: Mesa DRI Intel(R) Sandybridge Mobile
OpenGL version string:  3.0 Mesa 8.0.4

Not software rendered:  yes
Not blacklisted:        yes
GLX fbconfig:           yes
GLX texture from pixmap:  yes
GL npot or rect textures: yes
GL vertex program:      yes
GL fragment program:    yes
GL vertex buffer object:  yes
GL framebuffer object:  yes
GL version is 1.4+:     yes

Unity 3D supported:     yes

GOOD:

$ /usr/lib/nux/unity_support_test -p

OpenGL vendor string:   Intel Open Source Technology Center
OpenGL renderer string: Mesa DRI Intel(R) Sandybridge Mobile x86/MMX/SSE2
OpenGL version string:  3.0 Mesa 9.0.3

Not software rendered:    yes
Not blacklisted:          yes
GLX fbconfig:             yes
GLX texture from pixmap:  yes
GL npot or rect textures: yes
GL vertex program:        yes
GL fragment program:      yes
GL vertex buffer object:  yes
GL framebuffer object:    yes
GL version is 1.4+:       yes

Unity 3D supported:       yes

To solve read ‘Configuring your graphics card’ at the following link, the process is different depending on your graphics card vendor (AMD and Nvidia are discussed here as well):
http://steamcommunity.com/app/221410/discussions/1/882965118609963322/
For Intel cards, do the following (This is how I got my machine from the BAD to the GOOD state, the increase in rendering performance was pretty drastic):
https://support.steampowered.com/kb_article.php?ref=5452-IOSM-1474

Originally posted by Nick Eckenstein with karma: 59 on 2013-08-27
This answer was ACCEPTED on the original site
Post score: 1

