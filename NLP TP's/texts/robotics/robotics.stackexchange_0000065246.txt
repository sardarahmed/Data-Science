Q:

Push_back doesn't work

hi everyone,
i'm writing a node that could save 3 coordinate and then add a point to a pointcloud.
i'm trying to use pushback for the array of points in the cloud, this is the code:
struct stru
{
   float x,y,z;
};

sensor_msgs::PointCloud output;

mypoints.x = input->pose.position.x;
mypoints.y = input->pose.position.y;
mypoints.z = input->pose.position.z;
output.points.push_back(mypoints);

and the catkin_make give me this error:
/home/jacopo/catkin_ws/src/beginner_tutorials/src/svocloud.cpp: In member function ‘void SubAndPub::callback(const ConstPtr&)’:
/home/jacopo/catkin_ws/src/beginner_tutorials/src/svocloud.cpp:56:39: error: no matching function for call to ‘std::vector<geometry_msgs::Point32_<std::allocator<void> >, std::allocator<geometry_msgs::Point32_<std::allocator<void> > > >::push_back(stru&)’
/home/jacopo/catkin_ws/src/beginner_tutorials/src/svocloud.cpp:56:39: note: candidate is:
/usr/include/c++/4.6/bits/stl_vector.h:826:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = geometry_msgs::Point32_<std::allocator<void> >, _Alloc = std::allocator<geometry_msgs::Point32_<std::allocator<void> > >, std::vector<_Tp, _Alloc>::value_type = geometry_msgs::Point32_<std::allocator<void> >]
/usr/include/c++/4.6/bits/stl_vector.h:826:7: note:   no known conversion for argument 1 from ‘stru’ to ‘const value_type& {aka const geometry_msgs::Point32_<std::allocator<void> >&}’

i'm missing something about push_back but cannot understand what....
do somebody could help me??
thanks!

Originally posted by JacoPisa on ROS Answers with karma: 110 on 2015-01-19
Post score: -2

A:

push_back expects the pushed data to be of the type defined by the std::vector that handle the array. PointCloud points array is defined as an array of geometry_msgs/Point32 so you have to use it instead of your custom data structure.
PointCloud doc : http://docs.ros.org/api/sensor_msgs/html/msg/PointCloud.html
EDIT :
If you want to display several markers, you may look at MarkerArray message. If you just want to convert from Point to Point32, you may just fill fields with the corresponding data (the structure are the same), and checking that your conversion doesn't lose data (from float64 to float32)
You should really have a look at message documentation : http://wiki.ros.org/geometry_msgs, http://wiki.ros.org/sensor_msgs, ... so that you can choose the relevant message for you application.

Originally posted by Erwan R. with karma: 697 on 2015-01-19
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by JacoPisa on 2015-01-19:
yes that's right!
but i'm doing that for converting the coordinate from a marker, for including it into a pointcloud.
the pointcloud rappresent it with the geometry_msgs/Point32, but in the marker the coordinate are
geometry_msgs/Point.
how i can convert one in another format??
Comment by Erwan R. on 2015-01-19:
Edited my answer, see above.
Comment by JacoPisa on 2015-01-19:
reading about the pointcloud messages, i find this: "It is recommeded to use Point wherever possible instead of Point32."
can i choose that after using pointcloud?? how??
if that is not possible, i'm trying to do what you've said, but x=y where x is float32 and y float64 is not working,how i can do?

