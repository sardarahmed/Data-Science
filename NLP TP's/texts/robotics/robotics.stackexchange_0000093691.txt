Q:

Hokuyo doesn't publish a frame,Error: Ingoring transform for child_frame_id "laser_2"

I am using Ubuntu 16.04 and ROS Kinetic. I am trying to visualize two lidar data on rviz at the same time. I connected to the lidars by using following launch file.
<launch>
<master auto="start"/>
<node name="urg1" pkg="urg_node" type="urg_node">
    <param name="ip_address" value="192.168.1.10" />
    <remap from="scan" to="/scan1" />
    <param name="frame_id" type="string" value="laser_1" />
</node>

<node name="urg2" pkg="urg_node" type="urg_node">
    <param name="ip_address" value="192.168.1.11" />
    <remap from="scan" to="/scan2" />
    <param name="frame_id" type="string" value="laser_2" />
</node>

After I run the launch file above, I checked published topics by using rostopic list
/diagnostics
/laser_status
/rosout
/rosout_agg
/scan1
/scan2
/urg1/parameter_descriptions
/urg1/parameter_updates
/urg2/parameter_descriptions
/urg2/parameter_updates

After that I checked published frames by using rosrun tf tf_monitor. The result is empty.
RESULTS: for all Frames
Frames:
All Broadcasters:

Finally I run my second launch file to create a TF tree and run rviz which is given bellow:
<?xml version="1.0"?> 
<launch>  
    <arg name="model"/>  
    <arg name="gui" default="false"/>   
    <arg name="rvizconfig" default="$(find model)/rviz/urdf.rviz"/>
 
    <param name="robot_description" command="$(find xacro)/xacro.py $(find model)/urdf/$(arg model)"/>   
    <param name="use_gui" value="$(arg gui)"/>
 
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>
    <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="0 0 0 0 0 0 0 base_link laser_1 100" />
     <node pkg="tf" type="static_transform_publisher" name="link2_broadcaster" args="0 0 0 0 0 0 0 hokuyo_2 laser_2 100" />
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true"/>
 
</launch>

I give my URDF file as input. The URDF file is given bellow:
    <?xml version="1.0" ?>
<robot name="agv">

  <material name="red">
    <color rgba="0.8 0 0 1"/>
  </material>
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <!-- Base link -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="1.54 1.05 0.3"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <geometry>
        <box size="1.54 1.05 0.3"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="150"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0"
               iyy="1.0" iyz="0.0"
               izz="1.0"/>
    </inertial>
  </link>

  <!-- Wheels -->
  <link name="right_wheel_1">
    <visual>
      <geometry>
        <cylinder radius="0.1" length="0.05"/>
      </geometry>
      <material name="black"/>
      <origin xyz="0 0 0" rpy="0 1.57 1.57"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.1" length="0.05"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 1.57 1.57"/>
    </collision>
    <inertial>
      <mass value="5"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0"
               iyy="1.0" iyz="0.0"
               izz="1.0"/>
    </inertial>
  </link>

  <joint name="base_to_right_wheel_1" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel_1"/>
    <axis xyz="0 1 0" rpy="0 0 0"/>
    <origin xyz=".67 -0.57 -0.15" rpy="0 0 0"/>
  </joint>

  <link name="right_wheel_2">
    <visual>
      <geometry>
        <cylinder radius="0.1" length="0.05"/>
      </geometry>
      <material name="black"/>
      <origin xyz="0 0 0" rpy="0 1.57 1.57"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.1" length="0.05"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 1.57 1.57"/>
    </collision>
    <inertial>
      <mass value="150"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0"
               iyy="1.0" iyz="0.0"
               izz="1.0"/>
    </inertial>
  </link>

  <joint name="base_to_right_wheel_2" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel_2"/>
    <axis xyz="0 1 0" rpy="0 0 0"/>
    <origin xyz="-.67 -0.57 -0.15" rpy="0 0 0"/>
  </joint>

  <link name="left_wheel_1">
    <visual>
      <geometry>
        <cylinder radius="0.1" length="0.05"/>
      </geometry>
      <material name="black"/>
      <origin xyz="0 0 0" rpy="0 1.57 1.57"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.1" length="0.05"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 1.57 1.57"/>
    </collision>
    <inertial>
      <mass value="150"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0"
               iyy="1.0" iyz="0.0"
               izz="1.0"/>
    </inertial>
  </link>

  <joint name="base_to_left_wheel_1" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel_1"/>
    <axis xyz="0 1 0" rpy="0 0 0"/>
    <origin xyz=".67 0.57 -0.15" rpy="0 0 0"/>
  </joint>

  <link name="left_wheel_2">
    <visual>
      <geometry>
        <cylinder radius="0.1" length="0.05"/>
      </geometry>
      <material name="black"/>
      <origin xyz="0 0 0" rpy="0 1.57 1.57"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.1" length="0.05"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 1.57 1.57"/>
    </collision>
    <inertial>
      <mass value="150"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0"
               iyy="1.0" iyz="0.0"
               izz="1.0"/>
    </inertial>
  </link>

  <joint name="base_to_left_wheel_2" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel_2"/>
    <axis xyz="0 1 0" rpy="0 0 0"/>
    <origin xyz="-.67 0.57 -0.15" rpy="0 0 0"/>
  </joint>

  <!-- Hokuyo Lidars -->
  <link name="hokuyo_1">
    <visual>
      <geometry>
        <mesh filename="package://model/urdf/hokuyo.dae"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://model/urdf/hokuyo.dae"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </collision>
    <inertial>
      <mass value="150"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0"
               iyy="1.0" iyz="0.0"
               izz="1.0"/>
    </inertial>
  </link>

  <joint name="hokuyo_joint_1" type="fixed">
    <parent link="base_link"/>
    <child link="hokuyo_1"/>
    <axis xyz="0 0 0" rpy="0 0 0"/>
    <origin xyz=".77 0 0" rpy="0 0 0"/>
  </joint>

  <link name="hokuyo_2">
    <visual>
      <geometry>
        <mesh filename="package://model/urdf/hokuyo.dae"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://model/urdf/hokuyo.dae"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </collision>
    <inertial>
      <mass value="150"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0"
               iyy="1.0" iyz="0.0"
               izz="1.0"/>
    </inertial>
  </link>

  <joint name="hokuyo_joint_2" type="fixed">
    <parent link="base_link"/>
    <child link="hokuyo_2"/>
    <axis xyz="0 0 0" rpy="0 0 0"/>
    <origin xyz="-.77 0 0" rpy="0 0 0"/>
  </joint>

</robot>

As a result I couldn't visualize the lidars. Only my models is visualized. I got following error from terminal:
 [ERROR] [1572508317.068440122]: Ignoring transform for child_frame_id "laser_1" from authority
 "unknown_publisher" because of a nan value in the transform (0,000000
 0,000000 0,000000) (-nan -nan -nan -nan) 
 [ERROR] [1572508317.068520660]: Ignoring transform for child_frame_id
 "laser_1" from authority "unknown_publisher" because of an
 invalid quaternion in the transform (-nan -nan -nan -nan) 
 [ERROR] [1572508317.074797641]: Ignoring transform for child_frame_id "laser_2" from authority "unknown_publisher" because of a nan value in the transform (0,000000 0,000000 0,000000) (-nan -nan -nan -nan) 
 [ERROR] [1572508317.074868838]: Ignoring transform for child_frame_id "laser_2" from authority "unknown_publisher" because of an invalid quaternion in the transform (-nan -nan -nan -nan)

I think problem occurs because of the urg_node doesn't publish a frame. So how can I solve it?

https://ibb.co/ZL9y4R8
Note: I checked a previously asked question and I fixed my URDF file according to it but it didn't worked for me.

Originally posted by wallybeam on ROS Answers with karma: 57 on 2019-10-31
Post score: 0

A:

You error comes from your second launch file :
<node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="0 0 0 0 0 0 0 base_link laser_1 100" />
<node pkg="tf" type="static_transform_publisher" name="link2_broadcaster" args="0 0 0 0 0 0 0 hokuyo_2 laser_2 100" />

Here you specify as arguments 7 zeros meaning you define the position and orientation using 3 postion coordiantes and a quaternion : {x; y; z; q_x; q_y; q_z; q_w}. The problem is that a default quaternion is not 4 zeros but the field q_w has to be set to 1. (Here is an online visualizer for quaternions that I find really useful).
So you have two options :

Propperly initialize your two quaternions :
 <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="0 0 0 0 0 0 1 base_link laser_1 100" />
 <node pkg="tf" type="static_transform_publisher" name="link2_broadcaster" args="0 0 0 0 0 0 1 hokuyo_2 laser_2 100" />

Change the argument and use roll, pitch and yaw instead of a quaternion arguments are then {x; y; z; roll; pitch; yaw} :
 <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="0 0 0 0 0 0 base_link laser_1 100" />
 <node pkg="tf" type="static_transform_publisher" name="link2_broadcaster" args="0 0 0 0 0 0 hokuyo_2 laser_2 100" />

Originally posted by Delb with karma: 3907 on 2019-10-31
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by wallybeam on 2019-10-31:
Great visualizer, perfect explanation and answer. Thanks a lot

