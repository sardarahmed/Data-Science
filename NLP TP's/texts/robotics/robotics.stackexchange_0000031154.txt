Q:

How to convert cv::Mat to sensor_msgs::Image::Ptr?

I was wondering about how to publish cv:Mat. The tutorial wiki
http://www.ros.org/wiki/cv_bridge/Tutorials/UsingCvBridgeToConvertBetweenROSImagesAndOpenCVImages
didn't give me an answer and following code seems working, but I suppose there are a way to do this
without using old CvBridge interface.
        IplImage out_msg = sal_float_image;
        sensor_msgs::CvBridge bridge_;
        sensor_msgs::Image::Ptr saliency_msg = bridge_.cvToImgMsg(&out_msg, "passthrough");

        saliency_img_pub.publish(saliency_msg);

Originally posted by Kei Okada on ROS Answers with karma: 1186 on 2011-04-19
Post score: 4

A:

cv::Mat by itself does not contain all of the information that sensor_msgs::Image does, namely the encoding (e.g. bgr8 vs rgb8) and the header (time stamp and tf frame). So you create a cv_bridge::CvImage object to convert:
#include <cv_bridge/cv_bridge.h>
#include <sensor_msgs/image_encodings.h>

cv_bridge::CvImage out_msg;
out_msg.header   = in_msg->header; // Same timestamp and tf frame as input image
out_msg.encoding = sensor_msgs::image_encodings::TYPE_32FC1; // Or whatever
out_msg.image    = sal_float_image; // Your cv::Mat

saliency_img_pub.publish(out_msg.toImageMsg());

It's a little verbose; in the future we could add constructors to CvImage to streamline this. Note that forgetting to set the header fields is a common bug when using the old CvBridge.

Originally posted by Patrick Mihelich with karma: 4336 on 2011-04-20
This answer was ACCEPTED on the original site
Post score: 16

Original comments
Comment by Kei Okada on 2011-04-22:
Thanks, this is exactly what I want to know. Need to update wiki?
Comment by andrestoga on 2015-12-09:
Hi, but what if you don't have the input message? what information can you set to the header?

