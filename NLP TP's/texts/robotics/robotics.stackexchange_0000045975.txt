Q:

make without rebuilding everything everytime

In my package I defined a library which is linked to my executable.. the cmakelists file looks like this:
...
rosbuild_add_library(mylib src/lib_src.cpp) #in the real cmake I have lot of sources in the library
rosbuild_add_executable(myexe src/exe_src.cpp)
target_link_libraries(myexe mylib)
...
When I run make everything is compiled. But if I run make again, everything is compiled again, even if nothing was modified.
Is it possible to compile only the changed parts? In my case would be fine to recompile the changed executable without recompiling the unchanged (and huge) library.
Thanks

Originally posted by Francesco Sacchi on ROS Answers with karma: 203 on 2012-11-21
Post score: 4

Original comments
Comment by Lorenz on 2012-11-22:
Make should only compile your code if something changed. Without more information it's hard to guess a reason for the recompilation of everything.
Comment by Francesco Sacchi on 2012-11-22:
Happy to hear that I am not expecting strange things :D
which kind of information should I provide to help the debug?
Comment by Lorenz on 2012-11-22:
For instance the actual snapshot in CMakeLists.txt you are using, not just something simplified. Also watch your clock and check the modification dates of your files. Are they maybe in the future?
Comment by Francesco Sacchi on 2012-11-22:
heres my cmakelists: https://gist.github.com/4131480
timestamps are ok..

A:

Finally, after hours I have an answer..
The problem is in the cfg files.
You must be sure that the filename matches the third parameter of the last line of the file, the one with the exit statement.
For example if the last line is:
exit(gen.generate(PACKAGE, "dummy", "myNameIsImportant"))
the file name must be myNameIsImportant.cfg
I did not find this information in the documentation/tutorials...

Originally posted by Francesco Sacchi with karma: 203 on 2012-11-22
This answer was ACCEPTED on the original site
Post score: 12

Original comments
Comment by Lorenz on 2012-11-22:
Good work! Feel free to add this information to the wiki and tutorials.
Comment by Martin GÃ¼nther on 2012-11-22:
Yes, excellent find!

