Q:

How to apply Inverse Kinematics with angle constrained servos?

I want to implement Inverse Kinematics and i understand the inverse jacobian method but the servos i have only have a range from -90 to +90 degrees, how can i implement this detail in the algorithm? I can't simply set each joint to its maximum/minimum if the calculated angle is above/below the constraints because if i do future calculations will not understand that the maximum angle is not the correct path

A:

The Inverse Kinematics (IK) solver needs to be aware of the joint bounds in order to provide always a feasible solution lying in the allowed range.
In literature, there are essentially two diverse methodologies to deal with constrained IK in a principled way:

The Gradient Projection method that makes use of the null space of the Jacobian to establish a secondary task that attempts to keep joints far from their constraints while converging to the solution of the primary task. See for example [1]. You can resort to tools like KDL.
Nonlinear optimization techniques that inherently deal with bounded search regions and thus demonstrate to outperform other approaches. Nowadays, computational resources are such that these demanding techniques can be run even in real-time. See [2], [3] and [4]. Tools implementing this approach are for example TRAC-IK, iKin (tutorial is available) and iDynTree.

References
[1] H.-Y. Lee, B.-J. Yi, Y. Choi, “A Realistic Joint Limit Algorithm for
Kinematically Redundant Manipulators,” IEEE International
Conference on Control, Automation and Systems, 2007.
[2] P. Beeson, B. Ames, "TRAC-IK: An open-source library for improved solving of generic inverse kinematics," IEEE-RAS International Conference on Humanoid Robots, 2015.
[3] U. Pattacini, F. Nori, L. Natale, G. Metta, G. Sandini, "An experimental evaluation of a novel minimum-jerk cartesian controller for humanoid robots," IEEE-RSJ International Conference on Intelligent Robots and Systems, 2010.
[4] https://robotics.stackexchange.com/a/10008/6941

