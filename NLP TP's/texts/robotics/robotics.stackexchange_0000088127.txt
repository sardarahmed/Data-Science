Q:

custom field type for ROS msg

We're trying to read a radar udp packet and one of the data types is of a RadarDetection[] type which is not supported by ROS (because its a custom type) the size of each index is 224 bits, one solution Im thinking of is :
-creating a message that contains int64[4] RadarDetection_custom and then use that message as a field type to represent the RadarDetection type but with 256 bits instead 224
I am not confident that this solution will work and I was wondering if there is a better solution than this

Originally posted by mohthepro on ROS Answers with karma: 1 on 2018-07-25
Post score: 0

Original comments
Comment by Geoff on 2018-07-25:
Could you reformat your question with more punctuation and more information about the data you want to send? You should also check your numbers. int64[3] would only hold 192 bits, not 256, and where did "215" come from?
Comment by mohthepro on 2018-07-26:
Sorry I meant int64[4], and I reformatted the question to make it easier to read, the 215 bits is just the size of the field type that I am receiving from the radar's UDP packets, I dont know why the radar manufacturers made it like so

A:

An array of int8 28 values long will give you 224 bits. This is the usual approach to storing a binary blob such as your RadarDetection type. It will be presented as a boost::array of int8_t, which you can get the raw pointer to and read into your data type. See the msg data types page for more information.

Originally posted by Geoff with karma: 4203 on 2018-07-25
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by mohthepro on 2018-07-26:
is there any difference between int8[28] and what I suggested with int64[4] other than less wasted space?
Comment by PeteBlackerThe3rd on 2018-07-26:
In some ways no. In fact they will probably take exactly the same space in memory due to the way compilers work. However semantically int64 implies a particular encoding that the data probably doesn't have whereas an array of bytes is the standard encoding of raw binary data.
Comment by PeteBlackerThe3rd on 2018-07-26:
So it's a convention really but your code will be more meaningful to other developers of you use a buffer of bytes.

