Q:

Difficulty using pcl tutorial in ros

Hi,
I am trying to use pcl in ros, on groovy (ubuntu 12.04 64 bit).  I have followed the tutorial here for setting up a package, and have copy-pasted the code verbatim from here (Template Alignment).
Unfortunately, when I try to catkin_make this tutorial, I get a very hard to parse output, with references to tokens I'm not even using (maybe they're in the includes?):
Can someone explain to me how to interpret this output for future reference, and explain to me why it's not compiling?
Edit: I've added my CMakeLists.txt and package.xml files.  Example2.cpp is what I'm trying to build as an executable.  I've noticed there's a pcl-1.6 folder under ROS that it looks like I might need to include, but I don't know how to do this without it barking at me.
CMakeLists.txt:
cmake_minimum_required(VERSION 2.8.3)
project(my_pcl_tutorial)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  pcl
  pcl_ros
  roscpp
  sensor_msgs
)

## System dependencies are found with CMake's conventions
# find_package(Boost REQUIRED COMPONENTS system)

## Uncomment this if the package has a setup.py. This macro ensures
## modules and global scripts declared therein get installed
## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html
# catkin_python_setup()

#######################################
## Declare ROS messages and services ##
#######################################

## Generate messages in the 'msg' folder
# add_message_files(
#   FILES
#   Message1.msg
#   Message2.msg
# )

## Generate services in the 'srv' folder
# add_service_files(
#   FILES
#   Service1.srv
#   Service2.srv
# )

## Generate added messages and services with any dependencies listed here
# generate_messages(
#   DEPENDENCIES
#   sensor_msgs
# )

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if you package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
#  INCLUDE_DIRS include
#  LIBRARIES my_pcl_tutorial
#  CATKIN_DEPENDS pcl pcl_ros roscpp sensor_msgs
#  DEPENDS system_lib
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
# include_directories(include)
include_directories(
  ${catkin_INCLUDE_DIRS}
)

## Declare a cpp library
# add_library(my_pcl_tutorial
#   src/${PROJECT_NAME}/my_pcl_tutorial.cpp
# )

## Declare a cpp executable
# add_executable(my_pcl_tutorial_node src/my_pcl_tutorial_node.cpp)
add_executable(example src/example.cpp)
add_executable(example2 src/example2.cpp)
target_link_libraries(example ${catkin_LIBRARIES})

## Add cmake target dependencies of the executable/library
## as an example, message headers may need to be generated before nodes
# add_dependencies(my_pcl_tutorial_node my_pcl_tutorial_generate_messages_cpp)

## Specify libraries to link a library or executable target against
# target_link_libraries(my_pcl_tutorial_node
#   ${catkin_LIBRARIES}
# )

#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
# install(PROGRAMS
#   scripts/my_python_script
#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark executables and/or libraries for installation
# install(TARGETS my_pcl_tutorial my_pcl_tutorial_node
#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark cpp header files for installation
# install(DIRECTORY include/${PROJECT_NAME}/
#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
# install(FILES
#   # myfile1
#   # myfile2
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
# )

#############
## Testing ##
#############

## Add gtest based cpp test target and link libraries
# catkin_add_gtest(${PROJECT_NAME}-test test/test_my_pcl_tutorial.cpp)
# if(TARGET ${PROJECT_NAME}-test)
#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
# endif()

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)

Package.xml:
<?xml version="1.0"?>
<package>
  <name>my_pcl_tutorial</name>
  <version>0.0.0</version>
  <description>The my_pcl_tutorial package</description>

  <!-- One maintainer tag required, multiple allowed, one person per tag --> 
  <!-- Example:  -->
  <!-- <maintainer email="jane.doe@example.com">Jane Doe</maintainer> -->
  <maintainer email="aespielberg@todo.todo">aespielberg</maintainer>

  <!-- One license tag required, multiple allowed, one license per tag -->
  <!-- Commonly used license strings: -->
  <!--   BSD, MIT, Boost Software License, GPLv2, GPLv3, LGPLv2.1, LGPLv3 -->
  <license>TODO</license>

  <!-- Url tags are optional, but mutiple are allowed, one per tag -->
  <!-- Optional attribute type can be: website, bugtracker, or repository -->
  <!-- Example: -->
  <!-- <url type="website">http://ros.org/wiki/my_pcl_tutorial</url> -->

  <!-- Author tags are optional, mutiple are allowed, one per tag -->
  <!-- Authors do not have to be maintianers, but could be -->
  <!-- Example: -->
  <!-- <author email="jane.doe@example.com">Jane Doe</author> -->

  <!-- The *_depend tags are used to specify dependencies -->
  <!-- Dependencies can be catkin packages or system dependencies -->
  <!-- Examples: -->
  <!-- Use build_depend for packages you need at compile time: -->
  <!--   <build_depend>message_generation</build_depend> -->
  <!-- Use buildtool_depend for build tool packages: -->
  <!--   <buildtool_depend>catkin</buildtool_depend> -->
  <!-- Use run_depend for packages you need at runtime: -->
  <!--   <run_depend>message_runtime</run_depend> -->
  <!-- Use test_depend for packages you need only for testing: -->
  <!--   <test_depend>gtest</test_depend> -->
  <buildtool_depend>catkin</buildtool_depend>
  <build_depend>pcl_ros</build_depend>
  <build_depend>pcl</build_depend>
  <build_depend>roscpp</build_depend>
  <build_depend>sensor_msgs</build_depend>
  <run_depend>pcl_ros</run_depend>
  <run_depend>pcl</run_depend>
  <run_depend>roscpp</run_depend>
  <run_depend>sensor_msgs</run_depend>

  <!-- The export tag contains other, unspecified, tags -->
  <export>
    <!-- You can specify that this package is a metapackage here: -->
    <!-- <metapackage/> -->

    <!-- Other tools can request additional information be placed here -->

  </export>
</package>

CMakeFiles/example2.dir/src/example2.cpp.o: In function `pcl::PCDReader::PCDReader()':
example2.cpp:(.text._ZN3pcl9PCDReaderC2Ev[_ZN3pcl9PCDReaderC5Ev]+0x1f): undefined reference to `vtable for pcl::PCDReader'
CMakeFiles/example2.dir/src/example2.cpp.o: In function `pcl::PCDReader::~PCDReader()':
example2.cpp:(.text._ZN3pcl9PCDReaderD2Ev[_ZN3pcl9PCDReaderD5Ev]+0x13): undefined reference to `vtable for pcl::PCDReader'
CMakeFiles/example2.dir/src/example2.cpp.o: In function `pcl::PCDWriter::write(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, sensor_msgs::PointCloud2_<std::allocator<void> > const&, Eigen::Matrix<float, 4, 1, 0, 4, 1> const&, Eigen::Quaternion<float, 0> const&, bool)':
example2.cpp:(.text._ZN3pcl9PCDWriter5writeERKSsRKN11sensor_msgs12PointCloud2_ISaIvEEERKN5Eigen6MatrixIfLi4ELi1ELi0ELi4ELi1EEERKNS9_10QuaternionIfLi0EEEb[pcl::PCDWriter::write(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, sensor_msgs::PointCloud2_<std::allocator<void> > const&, Eigen::Matrix<float, 4, 1, 0, 4, 1> const&, Eigen::Quaternion<float, 0> const&, bool)]+0x43): undefined reference to `pcl::PCDWriter::writeBinary(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, sensor_msgs::PointCloud2_<std::allocator<void> > const&, Eigen::Matrix<float, 4, 1, 0, 4, 1> const&, Eigen::Quaternion<float, 0> const&)'
example2.cpp:(.text._ZN3pcl9PCDWriter5writeERKSsRKN11sensor_msgs12PointCloud2_ISaIvEEERKN5Eigen6MatrixIfLi4ELi1ELi0ELi4ELi1EEERKNS9_10QuaternionIfLi0EEEb[pcl::PCDWriter::write(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, sensor_msgs::PointCloud2_<std::allocator<void> > const&, Eigen::Matrix<float, 4, 1, 0, 4, 1> const&, Eigen::Quaternion<float, 0> const&, bool)]+0x6a): undefined reference to `pcl::PCDWriter::writeASCII(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, sensor_msgs::PointCloud2_<std::allocator<void> > const&, Eigen::Matrix<float, 4, 1, 0, 4, 1> const&, Eigen::Quaternion<float, 0> const&, int)'
CMakeFiles/example2.dir/src/example2.cpp.o: In function `pcl::Registration<pcl::PointXYZ, pcl::PointXYZ>::setInputTarget(boost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> const> const&)':
example2.cpp:(.text._ZN3pcl12RegistrationINS_8PointXYZES1_E14setInputTargetERKN5boost10shared_ptrIKNS_10PointCloudIS1_EEEE[pcl::Registration<pcl::PointXYZ, pcl::PointXYZ>::setInputTarget(boost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> const> const&)]+0x65): undefined reference to `pcl::console::print(pcl::console::VERBOSITY_LEVEL, char const*, ...)'
CMakeFiles/example2.dir/src/example2.cpp.o: In function `pcl::SampleConsensusInitialAlignment<pcl::PointXYZ, pcl::PointXYZ, pcl::FPFHSignature33>::setTargetFeatures(boost::shared_ptr<pcl::PointCloud<pcl::FPFHSignature33> const> const&)':
example2.cpp:(.text._ZN3pcl31SampleConsensusInitialAlignmentINS_8PointXYZES1_NS_15FPFHSignature33EE17setTargetFeaturesERKN5boost10shared_ptrIKNS_10PointCloudIS2_EEEE[pcl::SampleConsensusInitialAlignment<pcl::PointXYZ, pcl::PointXYZ, pcl::FPFHSignature33>::setTargetFeatures(boost::shared_ptr<pcl::PointCloud<pcl::FPFHSignature33> const> const&)]+0x74): undefined reference to `pcl::console::print(pcl::console::VERBOSITY_LEVEL, char const*, ...)'
CMakeFiles/example2.dir/src/example2.cpp.o: In function `pcl::SampleConsensusInitialAlignment<pcl::PointXYZ, pcl::PointXYZ, pcl::FPFHSignature33>::setSourceFeatures(boost::shared_ptr<pcl::PointCloud<pcl::FPFHSignature33> const> const&)':
example2.cpp:(.text._ZN3pcl31SampleConsensusInitialAlignmentINS_8PointXYZES1_NS_15FPFHSignature33EE17setSourceFeaturesERKN5boost10shared_ptrIKNS_10PointCloudIS2_EEEE[pcl::SampleConsensusInitialAlignment<pcl::PointXYZ, pcl::PointXYZ, pcl::FPFHSignature33>::setSourceFeatures(boost::shared_ptr<pcl::PointCloud<pcl::FPFHSignature33> const> const&)]+0x71): undefined reference to `pcl::console::print(pcl::console::VERBOSITY_LEVEL, char const*, ...)'
CMakeFiles/example2.dir/src/example2.cpp.o: In function `pcl::Feature<pcl::PointXYZ, pcl::Normal>::initCompute()':
example2.cpp:(.text._ZN3pcl7FeatureINS_8PointXYZENS_6NormalEE11initComputeEv[pcl::Feature<pcl::PointXYZ, pcl::Normal>::initCompute()]+0x5b): undefined reference to `pcl::console::print(pcl::console::VERBOSITY_LEVEL, char const*, ...)'
example2.cpp:(.text._ZN3pcl7FeatureINS_8PointXYZENS_6NormalEE11initComputeEv[pcl::Feature<pcl::PointXYZ, pcl::Normal>::initCompute()]+0xb6): undefined reference to `pcl::console::print(pcl::console::VERBOSITY_LEVEL, char const*, ...)'
CMakeFiles/example2.dir/src/example2.cpp.o:example2.cpp:(.text._ZN3pcl7FeatureINS_8PointXYZENS_6NormalEE11initComputeEv[pcl::Feature<pcl::PointXYZ, pcl::Normal>::initCompute()]+0x30d): more undefined references to `pcl::console::print(pcl::console::VERBOSITY_LEVEL, char const*, ...)' follow
CMakeFiles/example2.dir/src/example2.cpp.o: In function `pcl::KdTreeFLANN<pcl::PointXYZ, flann::L2_Simple<float> >::~KdTreeFLANN()':
example2.cpp:(.text._ZN3pcl11KdTreeFLANNINS_8PointXYZEN5flann9L2_SimpleIfEEED2Ev[_ZN3pcl11KdTreeFLANNINS_8PointXYZEN5flann9L2_SimpleIfEEED5Ev]+0x20): undefined reference to `pcl::KdTreeFLANN<pcl::PointXYZ, flann::L2_Simple<float> >::cleanup()'
CMakeFiles/example2.dir/src/example2.cpp.o: In function `pcl::KdTreeFLANN<pcl::FPFHSignature33, flann::L2_Simple<float> >::~KdTreeFLANN()':
example2.cpp:(.text._ZN3pcl11KdTreeFLANNINS_15FPFHSignature33EN5flann9L2_SimpleIfEEED2Ev[_ZN3pcl11KdTreeFLANNINS_15FPFHSignature33EN5flann9L2_SimpleIfEEED5Ev]+0x20): undefined reference to `pcl::KdTreeFLANN<pcl::FPFHSignature33, flann::L2_Simple<float> >::cleanup()'
CMakeFiles/example2.dir/src/example2.cpp.o: In function `void pcl::detail::FieldMapper<pcl::PointXYZ>::operator()<pcl::fields::x>()':
example2.cpp:(.text._ZN3pcl6detail11FieldMapperINS_8PointXYZEEclINS_6fields1xEEEvv[void pcl::detail::FieldMapper<pcl::PointXYZ>::operator()<pcl::fields::x>()]+0x1a1): undefined reference to `pcl::console::print(pcl::console::VERBOSITY_LEVEL, char const*, ...)'
CMakeFiles/example2.dir/src/example2.cpp.o: In function `void pcl::detail::FieldMapper<pcl::PointXYZ>::operator()<pcl::fields::y>()':
example2.cpp:(.text._ZN3pcl6detail11FieldMapperINS_8PointXYZEEclINS_6fields1yEEEvv[void pcl::detail::FieldMapper<pcl::PointXYZ>::operator()<pcl::fields::y>()]+0x1a1): undefined reference to `pcl::console::print(pcl::console::VERBOSITY_LEVEL, char const*, ...)'
CMakeFiles/example2.dir/src/example2.cpp.o: In function `void pcl::detail::FieldMapper<pcl::PointXYZ>::operator()<pcl::fields::z>()':
example2.cpp:(.text._ZN3pcl6detail11FieldMapperINS_8PointXYZEEclINS_6fields1zEEEvv[void pcl::detail::FieldMapper<pcl::PointXYZ>::operator()<pcl::fields::z>()]+0x1a1): undefined reference to `pcl::console::print(pcl::console::VERBOSITY_LEVEL, char const*, ...)'
CMakeFiles/example2.dir/src/example2.cpp.o:(.rodata._ZTVN3pcl6search17OrganizedNeighborINS_8PointXYZEEE[vtable for pcl::search::OrganizedNeighbor<pcl::PointXYZ>]+0x48): undefined reference to `pcl::search::OrganizedNeighbor<pcl::PointXYZ>::nearestKSearch(pcl::PointXYZ const&, int, std::vector<int, std::allocator<int> >&, std::vector<float, std::allocator<float> >&) const'
CMakeFiles/example2.dir/src/example2.cpp.o:(.rodata._ZTVN3pcl6search17OrganizedNeighborINS_8PointXYZEEE[vtable for pcl::search::OrganizedNeighbor<pcl::PointXYZ>]+0x68): undefined reference to `pcl::search::OrganizedNeighbor<pcl::PointXYZ>::radiusSearch(pcl::PointXYZ const&, double, std::vector<int, std::allocator<int> >&, std::vector<float, std::allocator<float> >&, unsigned int) const'
CMakeFiles/example2.dir/src/example2.cpp.o:(.rodata._ZTVN3pcl11KdTreeFLANNINS_8PointXYZEN5flann9L2_SimpleIfEEEE[vtable for pcl::KdTreeFLANN<pcl::PointXYZ, flann::L2_Simple<float> >]+0x10): undefined reference to `pcl::KdTreeFLANN<pcl::PointXYZ, flann::L2_Simple<float> >::setInputCloud(boost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> const> const&, boost::shared_ptr<std::vector<int, std::allocator<int> > const> const&)'
CMakeFiles/example2.dir/src/example2.cpp.o:(.rodata._ZTVN3pcl11KdTreeFLANNINS_8PointXYZEN5flann9L2_SimpleIfEEEE[vtable for pcl::KdTreeFLANN<pcl::PointXYZ, flann::L2_Simple<float> >]+0x28): undefined reference to `pcl::KdTreeFLANN<pcl::PointXYZ, flann::L2_Simple<float> >::nearestKSearch(pcl::PointXYZ const&, int, std::vector<int, std::allocator<int> >&, std::vector<float, std::allocator<float> >&) const'
CMakeFiles/example2.dir/src/example2.cpp.o:(.rodata._ZTVN3pcl11KdTreeFLANNINS_8PointXYZEN5flann9L2_SimpleIfEEEE[vtable for pcl::KdTreeFLANN<pcl::PointXYZ, flann::L2_Simple<float> >]+0x40): undefined reference to `pcl::KdTreeFLANN<pcl::PointXYZ, flann::L2_Simple<float> >::radiusSearch(pcl::PointXYZ const&, double, std::vector<int, std::allocator<int> >&, std::vector<float, std::allocator<float> >&, unsigned int) const'
CMakeFiles/example2.dir/src/example2.cpp.o:(.rodata._ZTVN3pcl9VoxelGridINS_8PointXYZEEE[vtable for pcl::VoxelGrid<pcl::PointXYZ>]+0x28): undefined reference to `pcl::VoxelGrid<pcl::PointXYZ>::applyFilter(pcl::PointCloud<pcl::PointXYZ>&)'
CMakeFiles/example2.dir/src/example2.cpp.o:(.rodata._ZTVN3pcl11PassThroughINS_8PointXYZEEE[vtable for pcl::PassThrough<pcl::PointXYZ>]+0x28): undefined reference to `pcl::PassThrough<pcl::PointXYZ>::applyFilter(pcl::PointCloud<pcl::PointXYZ>&)'
CMakeFiles/example2.dir/src/example2.cpp.o:(.rodata._ZTVN3pcl11KdTreeFLANNINS_15FPFHSignature33EN5flann9L2_SimpleIfEEEE[vtable for pcl::KdTreeFLANN<pcl::FPFHSignature33, flann::L2_Simple<float> >]+0x10): undefined reference to `pcl::KdTreeFLANN<pcl::FPFHSignature33, flann::L2_Simple<float> >::setInputCloud(boost::shared_ptr<pcl::PointCloud<pcl::FPFHSignature33> const> const&, boost::shared_ptr<std::vector<int, std::allocator<int> > const> const&)'
CMakeFiles/example2.dir/src/example2.cpp.o:(.rodata._ZTVN3pcl11KdTreeFLANNINS_15FPFHSignature33EN5flann9L2_SimpleIfEEEE[vtable for pcl::KdTreeFLANN<pcl::FPFHSignature33, flann::L2_Simple<float> >]+0x28): undefined reference to `pcl::KdTreeFLANN<pcl::FPFHSignature33, flann::L2_Simple<float> >::nearestKSearch(pcl::FPFHSignature33 const&, int, std::vector<int, std::allocator<int> >&, std::vector<float, std::allocator<float> >&) const'
CMakeFiles/example2.dir/src/example2.cpp.o:(.rodata._ZTVN3pcl11KdTreeFLANNINS_15FPFHSignature33EN5flann9L2_SimpleIfEEEE[vtable for pcl::KdTreeFLANN<pcl::FPFHSignature33, flann::L2_Simple<float> >]+0x40): undefined reference to `pcl::KdTreeFLANN<pcl::FPFHSignature33, flann::L2_Simple<float> >::radiusSearch(pcl::FPFHSignature33 const&, double, std::vector<int, std::allocator<int> >&, std::vector<float, std::allocator<float> >&, unsigned int) const'
CMakeFiles/example2.dir/src/example2.cpp.o:(.rodata._ZTVN3pcl14FPFHEstimationINS_8PointXYZENS_6NormalENS_15FPFHSignature33EEE[vtable for pcl::FPFHEstimation<pcl::PointXYZ, pcl::Normal, pcl::FPFHSignature33>]+0x38): undefined reference to `pcl::FPFHEstimation<pcl::PointXYZ, pcl::Normal, pcl::FPFHSignature33>::computeFeature(pcl::PointCloud<pcl::FPFHSignature33>&)'
CMakeFiles/example2.dir/src/example2.cpp.o:(.rodata._ZTVN3pcl16NormalEstimationINS_8PointXYZENS_6NormalEEE[vtable for pcl::NormalEstimation<pcl::PointXYZ, pcl::Normal>]+0x38): undefined reference to `pcl::NormalEstimation<pcl::PointXYZ, pcl::Normal>::computeFeature(pcl::PointCloud<pcl::Normal>&)'
CMakeFiles/example2.dir/src/example2.cpp.o: In function `pcl::search::OrganizedNeighbor<pcl::PointXYZ>::setInputCloud(boost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> const> const&, boost::shared_ptr<std::vector<int, std::allocator<int> > const> const&)':
example2.cpp:(.text._ZN3pcl6search17OrganizedNeighborINS_8PointXYZEE13setInputCloudERKN5boost10shared_ptrIKNS_10PointCloudIS2_EEEERKNS5_IKSt6vectorIiSaIiEEEE[pcl::search::OrganizedNeighbor<pcl::PointXYZ>::setInputCloud(boost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> const> const&, boost::shared_ptr<std::vector<int, std::allocator<int> > const> const&)]+0x1ce): undefined reference to `pcl::search::OrganizedNeighbor<pcl::PointXYZ>::estimateProjectionMatrix()'
CMakeFiles/example2.dir/src/example2.cpp.o: In function `pcl::registration::TransformationEstimationSVD<pcl::PointXYZ, pcl::PointXYZ>::estimateRigidTransformation(pcl::PointCloud<pcl::PointXYZ> const&, std::vector<int, std::allocator<int> > const&, pcl::PointCloud<pcl::PointXYZ> const&, Eigen::Matrix<float, 4, 4, 0, 4, 4>&)':
example2.cpp:(.text._ZN3pcl12registration27TransformationEstimationSVDINS_8PointXYZES2_E27estimateRigidTransformationERKNS_10PointCloudIS2_EERKSt6vectorIiSaIiEES7_RN5Eigen6MatrixIfLi4ELi4ELi0ELi4ELi4EEE[pcl::registration::TransformationEstimationSVD<pcl::PointXYZ, pcl::PointXYZ>::estimateRigidTransformation(pcl::PointCloud<pcl::PointXYZ> const&, std::vector<int, std::allocator<int> > const&, pcl::PointCloud<pcl::PointXYZ> const&, Eigen::Matrix<float, 4, 4, 0, 4, 4>&)]+0x93): undefined reference to `pcl::console::print(pcl::console::VERBOSITY_LEVEL, char const*, ...)'
CMakeFiles/example2.dir/src/example2.cpp.o: In function `pcl::registration::TransformationEstimationSVD<pcl::PointXYZ, pcl::PointXYZ>::estimateRigidTransformation(pcl::PointCloud<pcl::PointXYZ> const&, std::vector<int, std::allocator<int> > const&, pcl::PointCloud<pcl::PointXYZ> const&, std::vector<int, std::allocator<int> > const&, Eigen::Matrix<float, 4, 4, 0, 4, 4>&)':
example2.cpp:(.text._ZN3pcl12registration27TransformationEstimationSVDINS_8PointXYZES2_E27estimateRigidTransformationERKNS_10PointCloudIS2_EERKSt6vectorIiSaIiEES7_SC_RN5Eigen6MatrixIfLi4ELi4ELi0ELi4ELi4EEE[pcl::registration::TransformationEstimationSVD<pcl::PointXYZ, pcl::PointXYZ>::estimateRigidTransformation(pcl::PointCloud<pcl::PointXYZ> const&, std::vector<int, std::allocator<int> > const&, pcl::PointCloud<pcl::PointXYZ> const&, std::vector<int, std::allocator<int> > const&, Eigen::Matrix<float, 4, 4, 0, 4, 4>&)]+0x92): undefined reference to `pcl::console::print(pcl::console::VERBOSITY_LEVEL, char const*, ...)'
CMakeFiles/example2.dir/src/example2.cpp.o: In function `pcl::PassThrough<pcl::PointXYZ>::applyFilter(std::vector<int, std::allocator<int> >&)':
example2.cpp:(.text._ZN3pcl11PassThroughINS_8PointXYZEE11applyFilterERSt6vectorIiSaIiEE[pcl::PassThrough<pcl::PointXYZ>::applyFilter(std::vector<int, std::allocator<int> >&)]+0x1f): undefined reference to `pcl::PassThrough<pcl::PointXYZ>::applyFilterIndices(std::vector<int, std::allocator<int> >&)'
CMakeFiles/example2.dir/src/example2.cpp.o: In function `pcl::SampleConsensusInitialAlignment<pcl::PointXYZ, pcl::PointXYZ, pcl::FPFHSignature33>::computeTransformation(pcl::PointCloud<pcl::PointXYZ>&, Eigen::Matrix<float, 4, 4, 0, 4, 4> const&)':
example2.cpp:(.text._ZN3pcl31SampleConsensusInitialAlignmentINS_8PointXYZES1_NS_15FPFHSignature33EE21computeTransformationERNS_10PointCloudIS1_EERKN5Eigen6MatrixIfLi4ELi4ELi0ELi4ELi4EEE[pcl::SampleConsensusInitialAlignment<pcl::PointXYZ, pcl::PointXYZ, pcl::FPFHSignature33>::computeTransformation(pcl::PointCloud<pcl::PointXYZ>&, Eigen::Matrix<float, 4, 4, 0, 4, 4> const&)]+0x6a): undefined reference to `pcl::console::print(pcl::console::VERBOSITY_LEVEL, char const*, ...)'
example2.cpp:(.text._ZN3pcl31SampleConsensusInitialAlignmentINS_8PointXYZES1_NS_15FPFHSignature33EE21computeTransformationERNS_10PointCloudIS1_EERKN5Eigen6MatrixIfLi4ELi4ELi0ELi4ELi4EEE[pcl::SampleConsensusInitialAlignment<pcl::PointXYZ, pcl::PointXYZ, pcl::FPFHSignature33>::computeTransformation(pcl::PointCloud<pcl::PointXYZ>&, Eigen::Matrix<float, 4, 4, 0, 4, 4> const&)]+0x7e): undefined reference to `pcl::console::print(pcl::console::VERBOSITY_LEVEL, char const*, ...)'
example2.cpp:(.text._ZN3pcl31SampleConsensusInitialAlignmentINS_8PointXYZES1_NS_15FPFHSignature33EE21computeTransformationERNS_10PointCloudIS1_EERKN5Eigen6MatrixIfLi4ELi4ELi0ELi4ELi4EEE[pcl::SampleConsensusInitialAlignment<pcl::PointXYZ, pcl::PointXYZ, pcl::FPFHSignature33>::computeTransformation(pcl::PointCloud<pcl::PointXYZ>&, Eigen::Matrix<float, 4, 4, 0, 4, 4> const&)]+0xca): undefined reference to `pcl::console::print(pcl::console::VERBOSITY_LEVEL, char const*, ...)'
example2.cpp:(.text._ZN3pcl31SampleConsensusInitialAlignmentINS_8PointXYZES1_NS_15FPFHSignature33EE21computeTransformationERNS_10PointCloudIS1_EERKN5Eigen6MatrixIfLi4ELi4ELi0ELi4ELi4EEE[pcl::SampleConsensusInitialAlignment<pcl::PointXYZ, pcl::PointXYZ, pcl::FPFHSignature33>::computeTransformation(pcl::PointCloud<pcl::PointXYZ>&, Eigen::Matrix<float, 4, 4, 0, 4, 4> const&)]+0xde): undefined reference to `pcl::console::print(pcl::console::VERBOSITY_LEVEL, char const*, ...)'
CMakeFiles/example2.dir/src/example2.cpp.o: In function `pcl::FeatureFromNormals<pcl::PointXYZ, pcl::Normal, pcl::FPFHSignature33>::initCompute()':
example2.cpp:(.text._ZN3pcl18FeatureFromNormalsINS_8PointXYZENS_6NormalENS_15FPFHSignature33EE11initComputeEv[pcl::FeatureFromNormals<pcl::PointXYZ, pcl::Normal, pcl::FPFHSignature33>::initCompute()]+0x47): undefined reference to `pcl::console::print(pcl::console::VERBOSITY_LEVEL, char const*, ...)'
CMakeFiles/example2.dir/src/example2.cpp.o:example2.cpp:(.text._ZN3pcl18FeatureFromNormalsINS_8PointXYZENS_6NormalENS_15FPFHSignature33EE11initComputeEv[pcl::FeatureFromNormals<pcl::PointXYZ, pcl::Normal, pcl::FPFHSignature33>::initCompute()]+0x92): more undefined references to `pcl::console::print(pcl::console::VERBOSITY_LEVEL, char const*, ...)' follow
collect2: ld returned 1 exit status
make[2]: *** [devel/lib/my_pcl_tutorial/example2] Error 1
make[1]: *** [CMakeFiles/example2.dir/all] Error 2
make: *** [all] Error 2

Originally posted by aespielberg on ROS Answers with karma: 113 on 2013-11-22
Post score: 0

A:

That is a link error, meaning you are using symbols in your headers which you are not linking against. From the symbols which are missing I would guess you are not linking against PCL correctly. You should post your package.xml and CMakeLists.txt.
EDIT:
You never call target_link_libraries(example2 ${catkin_LIBRARIES}), so that is why you get linker errors.

Originally posted by William with karma: 17335 on 2013-11-22
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by aespielberg on 2013-11-25:
I've added the requested documents.
Comment by aespielberg on 2013-12-01:
Wow, yeah, I really messed that one up, huh?  Thanks!

