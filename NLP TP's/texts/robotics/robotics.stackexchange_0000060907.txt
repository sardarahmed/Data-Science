Q:

ApproximateTime Policy error

hi, I used to hydro distribution of ros. I want to use ApproximateTime Policy but I'm getting the following error, why I am getting this error?
thanks
error:
In file included from /opt/ros/hydro/include/ros/serialization.h:37:0,
                 from /opt/ros/hydro/include/ros/publisher.h:34,
                 from /opt/ros/hydro/include/ros/node_handle.h:32,
                 from /opt/ros/hydro/include/ros/ros.h:45,
                 from /home/esetron/catkin_ws/src/sabir/src/sabir_node.cpp:190:
/opt/ros/hydro/include/ros/message_traits.h: In static member function ‘static ros::Time ros::message_traits::TimeStamp<M, typename boost::enable_if<ros::message_traits::HasHeader<M> >::type>::value(const M&) [with M = pcl::PointCloud<pcl::PointXYZRGB>]’:
/opt/ros/hydro/include/message_filters/sync_policies/approximate_time.h:167:89:   instantiated from ‘void message_filters::sync_policies::ApproximateTime<M0, M1, M2, M3, M4, M5, M6, M7, M8>::checkInterMessageBound() [with int i = 0, M0 = pcl::PointCloud<pcl::PointXYZRGB>, M1 = sensor_msgs::Image_<std::allocator<void> >, M2 = message_filters::NullType, M3 = message_filters::NullType, M4 = message_filters::NullType, M5 = message_filters::NullType, M6 = message_filters::NullType, M7 = message_filters::NullType, M8 = message_filters::NullType]’
/opt/ros/hydro/include/message_filters/sync_policies/approximate_time.h:218:7:   instantiated from ‘void message_filters::sync_policies::ApproximateTime<M0, M1, M2, M3, M4, M5, M6, M7, M8>::add(const typename boost::mpl::at_c<typename message_filters::PolicyBase<M0, M1, M2, M3, M4, M5, M6, M7, M8>::Events, i>::type&) [with int i = 0, M0 = pcl::PointCloud<pcl::PointXYZRGB>, M1 = sensor_msgs::Image_<std::allocator<void> >, M2 = message_filters::NullType, M3 = message_filters::NullType, M4 = message_filters::NullType, M5 = message_filters::NullType, M6 = message_filters::NullType, M7 = message_filters::NullType, M8 = message_filters::NullType, typename boost::mpl::at_c<typename message_filters::PolicyBase<M0, M1, M2, M3, M4, M5, M6, M7, M8>::Events, i>::type = ros::MessageEvent<const pcl::PointCloud<pcl::PointXYZRGB> >]’
/opt/ros/hydro/include/message_filters/synchronizer.h:358:5:   instantiated from ‘void message_filters::Synchronizer<Policy>::cb(const typename boost::mpl::at_c<typename Policy::Events, i>::type&) [with int i = 0, Policy = message_filters::sync_policies::ApproximateTime<pcl::PointCloud<pcl::PointXYZRGB>, sensor_msgs::Image_<std::allocator<void> > >, typename boost::mpl::at_c<typename Policy::Events, i>::type = ros::MessageEvent<const pcl::PointCloud<pcl::PointXYZRGB> >]’
/opt/ros/hydro/include/message_filters/synchronizer.h:290:5:   instantiated from ‘void message_filters::Synchronizer<Policy>::connectInput(F0&, F1&, F2&, F3&, F4&, F5&, F6&, F7&, F8&) [with F0 = message_filters::Subscriber<pcl::PointCloud<pcl::PointXYZRGB> >, F1 = message_filters::Subscriber<sensor_msgs::Image_<std::allocator<void> > >, F2 = message_filters::NullFilter<message_filters::NullType>, F3 = message_filters::NullFilter<message_filters::NullType>, F4 = message_filters::NullFilter<message_filters::NullType>, F5 = message_filters::NullFilter<message_filters::NullType>, F6 = message_filters::NullFilter<message_filters::NullType>, F7 = message_filters::NullFilter<message_filters::NullType>, F8 = message_filters::NullFilter<message_filters::NullType>, Policy = message_filters::sync_policies::ApproximateTime<pcl::PointCloud<pcl::PointXYZRGB>, sensor_msgs::Image_<std::allocator<void> > >]’
/opt/ros/hydro/include/message_filters/synchronizer.h:282:5:   instantiated from ‘void message_filters::Synchronizer<Policy>::connectInput(F0&, F1&, F2&, F3&, F4&, F5&, F6&, F7&) [with F0 = message_filters::Subscriber<pcl::PointCloud<pcl::PointXYZRGB> >, F1 = message_filters::Subscriber<sensor_msgs::Image_<std::allocator<void> > >, F2 = message_filters::NullFilter<message_filters::NullType>, F3 = message_filters::NullFilter<message_filters::NullType>, F4 = message_filters::NullFilter<message_filters::NullType>, F5 = message_filters::NullFilter<message_filters::NullType>, F6 = message_filters::NullFilter<message_filters::NullType>, F7 = message_filters::NullFilter<message_filters::NullType>, Policy = message_filters::sync_policies::ApproximateTime<pcl::PointCloud<pcl::PointXYZRGB>, sensor_msgs::Image_<std::allocator<void> > >]’
/opt/ros/hydro/include/message_filters/synchronizer.h:275:5:   [ skipping 2 instantiation contexts ]
/opt/ros/hydro/include/message_filters/synchronizer.h:261:5:   instantiated from ‘void message_filters::Synchronizer<Policy>::connectInput(F0&, F1&, F2&, F3&, F4&) [with F0 = message_filters::Subscriber<pcl::PointCloud<pcl::PointXYZRGB> >, F1 = message_filters::Subscriber<sensor_msgs::Image_<std::allocator<void> > >, F2 = message_filters::NullFilter<message_filters::NullType>, F3 = message_filters::NullFilter<message_filters::NullType>, F4 = message_filters::NullFilter<message_filters::NullType>, Policy = message_filters::sync_policies::ApproximateTime<pcl::PointCloud<pcl::PointXYZRGB>, sensor_msgs::Image_<std::allocator<void> > >]’
/opt/ros/hydro/include/message_filters/synchronizer.h:254:5:   instantiated from ‘void message_filters::Synchronizer<Policy>::connectInput(F0&, F1&, F2&, F3&) [with F0 = message_filters::Subscriber<pcl::PointCloud<pcl::PointXYZRGB> >, F1 = message_filters::Subscriber<sensor_msgs::Image_<std::allocator<void> > >, F2 = message_filters::NullFilter<message_filters::NullType>, F3 = message_filters::NullFilter<message_filters::NullType>, Policy = message_filters::sync_policies::ApproximateTime<pcl::PointCloud<pcl::PointXYZRGB>, sensor_msgs::Image_<std::allocator<void> > >]’
/opt/ros/hydro/include/message_filters/synchronizer.h:247:5:   instantiated from ‘void message_filters::Synchronizer<Policy>::connectInput(F0&, F1&, F2&) [with F0 = message_filters::Subscriber<pcl::PointCloud<pcl::PointXYZRGB> >, F1 = message_filters::Subscriber<sensor_msgs::Image_<std::allocator<void> > >, F2 = message_filters::NullFilter<message_filters::NullType>, Policy = message_filters::sync_policies::ApproximateTime<pcl::PointCloud<pcl::PointXYZRGB>, sensor_msgs::Image_<std::allocator<void> > >]’
/opt/ros/hydro/include/message_filters/synchronizer.h:240:5:   instantiated from ‘void message_filters::Synchronizer<Policy>::connectInput(F0&, F1&) [with F0 = message_filters::Subscriber<pcl::PointCloud<pcl::PointXYZRGB> >, F1 = message_filters::Subscriber<sensor_msgs::Image_<std::allocator<void> > >, Policy = message_filters::sync_policies::ApproximateTime<pcl::PointCloud<pcl::PointXYZRGB>, sensor_msgs::Image_<std::allocator<void> > >]’
/opt/ros/hydro/include/message_filters/synchronizer.h:160:5:   instantiated from ‘message_filters::Synchronizer<Policy>::Synchronizer(const Policy&, F0&, F1&) [with F0 = message_filters::Subscriber<pcl::PointCloud<pcl::PointXYZRGB> >, F1 = message_filters::Subscriber<sensor_msgs::Image_<std::allocator<void> > >, Policy = message_filters::sync_policies::ApproximateTime<pcl::PointCloud<pcl::PointXYZRGB>, sensor_msgs::Image_<std::allocator<void> > >]’
/home/esetron/catkin_ws/src/sabir/src/sabir_node.cpp:241:106:   instantiated from here
/opt/ros/hydro/include/ros/message_traits.h:219:56: error: could not convert ‘m.pcl::PointCloud<pcl::PointXYZRGB>::header.pcl::PCLHeader::stamp’ from ‘const uint64_t {aka const long unsigned int}’ to ‘ros::Time’
make[2]: *** [sabir/CMakeFiles/sabir_node.dir/src/sabir_node.cpp.o] Error 1
make[1]: *** [sabir/CMakeFiles/sabir_node.dir/all] Error 2
make: *** [all] Error 2
Invoking "make" failed

my code:
  #include <ros/ros.h>
        #include <iostream>
         #include <pcl_conversions/pcl_conversions.h>
         #include <sensor_msgs/PointCloud2.h>
        #include <pcl/point_cloud.h>
        #include <pcl/point_types.h>
        #include <pcl/filters/passthrough.h>
        #include <pcl/filters/voxel_grid.h>
        #include <pcl_ros/point_cloud.h>
        
        #include <message_filters/subscriber.h>
        #include <message_filters/synchronizer.h>
        #include <message_filters/sync_policies/approximate_time.h>
        #include <sensor_msgs/Image.h>
        
        void cloud_cb(const pcl::PointCloud<pcl::PointXYZRGB>::ConstPtr& input, const sensor_msgs::Image::ConstPtr& depth)
        {
            pcl::PointCloud<pcl::PointXYZRGB>::Ptr cloud_filtered(new pcl::PointCloud<pcl::PointXYZRGB>);
            pcl::PointCloud<pcl::PointXYZRGB>::Ptr cloud_pass(new pcl::PointCloud<pcl::PointXYZRGB>);
            
            pcl::VoxelGrid<pcl::PointXYZRGB> sor;
                pcl::PassThrough<pcl::PointXYZRGB> pass_through_filter;
        
            
            //pass through filter
            pass_through_filter.setInputCloud (input);
            pass_through_filter.filter (*cloud_pass);
            
            //voxel grid filter
            sor.setInputCloud(cloud_pass);
            sor.setLeafSize(0.5, 0.5, 0.5);
            sor.filter(*cloud_filtered);
            }
        
        int main (int argc, char** argv){
        // Initialize ROS
        ros::init (argc, argv, "example");
        ros::NodeHandle nh;
        
            message_filters::Subscriber<pcl::PointCloud<pcl::PointXYZRGB> > point_subscriber(nh, "/camera/depth/points", 1);
            message_filters::Subscriber<sensor_msgs::Image> depth_subscriber(nh, "/camera/depth/image", 1);
            
            typedef message_filters::sync_policies::ApproximateTime<pcl::PointCloud<pcl::PointXYZRGB>, sensor_msgs::Image> MySyncPolicy;
            
            message_filters::Synchronizer<MySyncPolicy> sync(MySyncPolicy(10), point_subscriber, depth_subscriber);
        
            sync.registerCallback(boost::bind(&cloud_cb, _1, _2));
          
        // Spin
        ros::spin ();
        }

Originally posted by hamdi on ROS Answers with karma: 73 on 2014-07-17
Post score: 1

A:

You cannot create a message_filters::subscriber like
message_filters::Subscriber<pcl::PointCloud<pcl::PointXYZRGB> >

because pcl::PointCloud<pcl::PointXYZRGB>  itself is not a message type. Try using
message_filters::Subscriber<sensor_msgs::PointCloud2>

and convert to pcl::PointCloud<pcl::PointXYZRGB> in your callback....

Originally posted by Wolf with karma: 7555 on 2014-11-11
This answer was ACCEPTED on the original site
Post score: 1

