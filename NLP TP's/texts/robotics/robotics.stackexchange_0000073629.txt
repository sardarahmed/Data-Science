Q:

pcl library linking problem

Hi,
I am facing a linking problem between pcl and ROS. I am using Ubuntu 14.04 and QtCreator. I am trying to convert the laser data to OpenCV image, now I have the pointcoud2 so I need to convert it to ros image and afterwards to OpenCV image. I am getting this error message:
/home/horczech/robohockey/src/player/src/playnode.cpp:91: error: 'toROSMsg' is not a member of 'pcl'
       pcl::toROSMsg (cloud, pclImage); //convert the cloud
       ^

And the row where I am including necessary library is underscored and when I hover obove it with my mouse it is saying that "pcl/io/pcd_io.h : No such file or directory "
When I run catkin make I am getting this message:
horczech@Ubuntu:~/robohockey$ catkin_make
Base path: /home/horczech/robohockey
Source space: /home/horczech/robohockey/src
Build space: /home/horczech/robohockey/build
Devel space: /home/horczech/robohockey/devel
Install space: /home/horczech/robohockey/install
####
#### Running command: "make cmake_check_build_system" in "/home/horczech/robohockey/build"
####
####
#### Running command: "make -j4 -l4" in "/home/horczech/robohockey/build"
####
[  0%] [  0%] [  0%] [  0%] Built target roscpp_generate_messages_cpp
Built target topic_tools_generate_messages_lisp
Built target geometry_msgs_generate_messages_py
Built target sensor_msgs_generate_messages_py
[  0%] [  0%] Built target roscpp_generate_messages_lisp
[  0%] Built target roscpp_generate_messages_eus
Built target roscpp_generate_messages_py
[  0%] Built target tf_generate_messages_py
[  0%] [  0%] [  0%] Built target rosgraph_msgs_generate_messages_cpp
Built target geometry_msgs_generate_messages_cpp
Built target sensor_msgs_generate_messages_lisp
[  0%] Built target sensor_msgs_generate_messages_cpp
[  0%] Built target tf_generate_messages_eus
[  0%] Built target std_msgs_generate_messages_lisp
[  0%] Built target std_msgs_generate_messages_eus
[  0%] Built target sensor_msgs_generate_messages_eus
[  0%] Built target std_msgs_generate_messages_cpp
[  0%] [  0%] Built target rosgraph_msgs_generate_messages_py
Built target dynamic_reconfigure_generate_messages_eus
[  0%] Built target geometry_msgs_generate_messages_lisp
[  0%] Built target geometry_msgs_generate_messages_eus
[  0%] [  0%] Built target rosgraph_msgs_generate_messages_eus
Built target std_msgs_generate_messages_py
[  0%] Built target rosgraph_msgs_generate_messages_lisp
[  0%] [  0%] Built target tf_generate_messages_lisp
Built target dynamic_reconfigure_generate_messages_py
[  0%] Built target tf_generate_messages_cpp
[  0%] Built target nodelet_generate_messages_lisp
[  0%] [  0%] Built target actionlib_generate_messages_eus
Built target actionlib_generate_messages_lisp
[  0%] [  0%] Built target actionlib_generate_messages_cpp
Built target pcl_msgs_generate_messages_py
[  0%] Built target actionlib_generate_messages_py
[  0%] Built target actionlib_msgs_generate_messages_eus
[  0%] [  0%] Built target actionlib_msgs_generate_messages_cpp
Built target nodelet_generate_messages_eus
[  0%] [  0%] Built target actionlib_msgs_generate_messages_lisp
Built target tf2_msgs_generate_messages_eus
[  0%] [  0%] Built target tf2_msgs_generate_messages_lisp
Built target dynamic_reconfigure_generate_messages_lisp
[  0%] Built target pcl_ros_gencfg
[  0%] [  0%] [  0%] Built target actionlib_msgs_generate_messages_py
Built target topic_tools_generate_messages_cpp
Built target pcl_msgs_generate_messages_eus
[  0%] Built target dynamic_reconfigure_generate_messages_cpp
[  0%] [  0%] Built target nodelet_generate_messages_cpp
Built target tf2_msgs_generate_messages_cpp
[  0%] Built target nodelet_generate_messages_py
[  0%] Built target bond_generate_messages_eus
[  0%] [  0%] Built target bond_generate_messages_lisp
Built target tf2_msgs_generate_messages_py
[  0%] Built target dynamic_reconfigure_gencfg
[  0%] Built target pcl_msgs_generate_messages_lisp
[  0%] Built target bond_generate_messages_cpp
[  0%] [  0%] Built target pcl_msgs_generate_messages_cpp
[  0%] Built target topic_tools_generate_messages_eus
Built target bond_generate_messages_py
[  0%] Built target topic_tools_generate_messages_py
[  3%] Automoc for target referee_node
[  3%] Built target referee_node_automoc
[  3%] [  3%] Built target _referee_generate_messages_check_deps_TeamReady
Built target _referee_generate_messages_check_deps_SendColor
[  3%] [  3%] Built target gazebo_msgs_generate_messages_cpp
Built target _referee_generate_messages_check_deps_SendDimensions
[  3%] Built target gazebo_msgs_generate_messages_py
[  3%] Built target trajectory_msgs_generate_messages_py
[  3%] Built target gazebo_msgs_generate_messages_eus
[  3%] Built target std_srvs_generate_messages_lisp
[  3%] [  3%] Built target trajectory_msgs_generate_messages_cpp
Built target trajectory_msgs_generate_messages_eus
[  3%] [  3%] Built target std_srvs_generate_messages_py
Built target trajectory_msgs_generate_messages_lisp
[  3%] [  3%] Built target std_srvs_generate_messages_cpp
Built target std_srvs_generate_messages_eus
[  3%] [ 15%] Built target referee_generate_messages_eus
Built target gazebo_msgs_generate_messages_lisp
[ 31%] [ 31%] [ 40%] Built target referee_generate_messages_cpp
Built target referee_generate_messages_lisp
Built target tuw_gazebo_ros_utils
[ 43%] Building CXX object player/CMakeFiles/player_node.dir/src/playnode.cpp.o
[ 56%] Built target referee_generate_messages_py
[ 56%] Built target tuw_gazebo_plugins_gencfg
[ 59%] Built target init_game_node
[ 62%] Built target tuw_gazebo_ros_gpu_laser
[ 68%] [ 68%] Built target tuw_gazebo_ros_diff_drive
Built target tuw_gazebo_ros_imu9dof
[ 68%] Built target referee_generate_messages
[ 71%] Built target tuw_gazebo_ros_laser
[100%] Built target referee_node
/home/horczech/robohockey/src/player/src/playnode.cpp: In function ‘void perception_callback(const ConstPtr&, const ConstPtr&)’:
/home/horczech/robohockey/src/player/src/playnode.cpp:91:7: error: ‘toROSMsg’ is not a member of ‘pcl’
       pcl::toROSMsg (cloud, pclImage); //convert the cloud
       ^
make[2]: *** [player/CMakeFiles/player_node.dir/src/playnode.cpp.o] Error 1
make[1]: *** [player/CMakeFiles/player_node.dir/all] Error 2
make: *** [all] Error 2
Invoking "make -j4 -l4" failed

My CMakeLists looks like that, the linking code is the same as from the pcl webside. I have no idea where is the problem. (The code I added are at the bottom)
cmake_minimum_required(VERSION 2.8.3)
project(player)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  roscpp
  std_msgs
  sensor_msgs
  geometry_msgs
  image_transport
  cv_bridge
  message_filters
  laser_geometry #ADDED BY MARTIN
  tf #ADDED BY MARTIN
  pcl_ros #ADDED BY MARTIN
  PCL  #ADDED BY MARTIN
 
)

## System dependencies cl_rosare found with CMake's conventions
# find_package(Boost REQUIRED COMPONENTS system)
find_package(OpenCV REQUIRED)

## Uncomment this if the package has a setup.py. This macro ensures
## modules and global scripts declared therein get installed
## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html
# catkin_python_setup()

################################################
## Declare ROS messages, services and actions ##
################################################

## To declare and build messages, services or actions from within this
## package, follow these steps:
## * Let MSG_DEP_SET be the set of packages whose message types you use in
##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).
## * In the file package.xml:
##   * add a build_depend tag for "message_generation"
##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET
##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in
##     but can be declared for certainty nonetheless:
##     * add a run_depend tag for "message_runtime"
## * In this file (CMakeLists.txt):
##   * add "message_generation" and every package in MSG_DEP_SET to
##     find_package(catkin REQUIRED COMPONENTS ...)
##   * add "message_runtime" and every package in MSG_DEP_SET to
##     catkin_package(CATKIN_DEPENDS ...)
##   * uncomment the add_*_files sections below as needed
##     and list every .msg/.srv/.action file to be processed
##   * uncomment the generate_messages entry below
##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)

## Generate messages in the 'msg' folder
# add_message_files(
#   FILES
#   Message1.msg
#   Message2.msg
# )

## Generate services in the 'srv' folder
# add_service_files(
#   FILES
#   Service1.srv
#   Service2.srv
# )

## Generate actions in the 'action' folder
# add_action_files(
#   FILES
#   Action1.action
#   Action2.action
# )

## Generate added messages and services with any dependencies listed here
# generate_messages(
#   DEPENDENCIESCMAKE_PREFIX_PATH
#   std_msgs
# )

##################################ou will need t##############
## Declare ROS dynamic reconfigure parameters ##
##############################################those##

## To declare and build dynamic reconfigure parameters within this
## package, follow these steps:
## * In the file package.xml:
##   * add a build_depend and a run_depend tag for "dynamic_reconfigure"
## * In this file (CMakeLists.txt):
##   * add "dynamic_reconfigure" to
##     find_package(catkin REQUIRED COMPONENTS ...)
##   * uncomment the "generate_dynamic_reconfigure_options" section below
##     and list every .cfg file to be processed

## Generate dynamic reconfigure parameters in the 'cfg' folder
# generate_dynamic_reconfigure_options(
#   cfg/DynReconf1.cfg
#   cfg/DynReconf2.cfg
# )

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if you package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
#  INCLUDE_DIRS include
#  LIBRARIES robohockey
#  CATKIN_DEPENDS roscpp std_msgs
#  DEPENDS system_lib
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
# include_directories(include)
include_directories(
  ${catkin_INCLUDE_DIRS}
  ${OpenCV_INCLUDE_DIRS}

)

## Declare a C++ library
# add_library(robohockey
#   src/${PROJECT_NAME}/robohockey.cpp
# )

## Add cmake target dependencies of the library
## as an example, code may need to be generated before libraries
## either from message generation or dynamic reconfigure
# add_dependencies(robohockey ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})

## Declare a C++ executable
add_executable(player_node src/playnode.cpp)

## Add cmake target dependencies of the executable
## same as for the library above
add_dependencies(player_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})

## Specify libraries to link a library or executable target against
target_link_libraries(player_node
  ${catkin_LIBRARIES}
  ${OpenCV_LIBRARIES}
  #${PCL_LIBRARIES} #ADDED BY MARTIN
)

#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
# install(PROGRAMS
#   scripts/my_python_script
#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark executables and/or libraries for installation
# install(TARGETS robohockey robohockey_node
#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark cpp header files for installation
# install(DIRECTORY include/${PROJECT_NAME}/
#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
# install(FILES
#   # myfile1
#   # myfile2tfListener
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
# )

#############
## Testing ##
#############

## Add gtest based cpp test target and link libraries
# catkin_add_gtest(${PROJECT_NAME}-test test/test_robohockey.cpp)
# if(TARGET ${PROJECT_NAME}-test)
#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
# endif()

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)

###ADDED BY MARTIN
find_package(Eigen3 REQUIRED) 
include_directories(${EIGEN3_INCLUDE_DIR})

find_package(PCL 1.7 REQUIRED)
include_directories(${PCL_INCLUDE_DIRS})
link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})
target_link_libraries (player_node ${PCL_LIBRARIES})

Can anyone help?
Thank you in advance,
Martin

Originally posted by horczech on ROS Answers with karma: 33 on 2016-04-28
Post score: 1

A:

This is not a linker error, but a build error.
The error tells you that it does not find a specific header file.
Afaik, pcl::toRosMsg is defined in the pcl_conversions package.
Add this to the CMakeLists.txt, and include pcl_conversions.h in the file where you use the toRosMsg call.
Also, please clean the CMakeLists.txt up, before posting here ;-) i.e. remove all the commented parts.
I'd also recomend to have all the stuff at the end in the respective calls where it belongs, e.g. uncomment the PCL part here:
target_link_libraries(player_node
  ${catkin_LIBRARIES}
  ${OpenCV_LIBRARIES}
  #${PCL_LIBRARIES} #ADDED BY MARTIN
)

instead of having this below again...

Originally posted by mgruhler with karma: 12390 on 2016-04-28
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by horczech on 2016-04-28:
thank you very much !

