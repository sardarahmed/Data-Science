Q:

Cannot find custom Launch file

I'm trying to use a custom launch file from http://wiki.ros.org/rtabmap_ros/Tutorials/RemoteMapping and  no matter what I've tried, I can't get the launch file to show without launching it from the folder it exists in.
#Works
$ cd ~/catkin_ws/src/rtabmap_ros/launch
$ roslaunch freenect_throttle.launch

#Does Not Work
$ cd ~/
$ roslaunch freenect_throttle.launch

In fact, in the terminal if I type $ roslaunch freen and hit tab twice I'm given two freenect options but not the launch file I'm looking for.
I've tried manually putting in the launch file:
$ roslaunch freenect_throttle.launch
[freenect_throttle.launch] is not a launch file name
The traceback for the exception was written to the log file

ROS is sourced, catkin_ws is sourced, all my other apps work but this is being a stickler.
I've also tried:
$ cd ~/catkin_ws/
$ catkin_make

and a step further:
$ catkin_make install

and then resourced the setup.bash
$ source devel/setup.bash

and still no luck. What am I missing?
** EDIT ** for Thomas D
$ roslaunch rtabmap_ros freenect_throttle.launch
[freenect_throttle.launch] is neither a launch file in package [rtabmap] nor is [rtabmap] a launch file name
The traceback for the exception was written to the log file
So I went back and rebuilt rtabmap
$ sudo make install
[sudo] password for ubuntu: 
[  5%] Built target rtabmap_utilite
[  6%] Built target res_tool
[ 39%] Built target rtabmap_core
[ 86%] Built target rtabmap_gui
[ 88%] Built target rtabmap
[ 89%] Built target consoleApp
[ 89%] Built target imagesJoiner
[ 90%] Built target extractObject
[ 90%] Built target camera
[ 90%] Built target rgbd_camera
[ 91%] Built target stereoEval
[ 92%] Built target databaseViewer
[ 92%] Built target epipolar_geometry
[ 92%] Built target odometryViewer
[ 92%] Built target dataRecorder
[ 93%] Built target calibration
[ 93%] Built target bow_mapping
[ 95%] Built target rgbd_mapping
[ 98%] Built target wifi_mapping
[100%] Built target noEventsExample
Install the project...
-- Install configuration: "Release"
-- Up-to-date: /home/ubuntu/catkin_ws/devel/lib/arm-linux-gnueabihf/rtabmap-0.11/RTABMapConfig.cmake
-- Up-to-date: /home/ubuntu/catkin_ws/devel/lib/arm-linux-gnueabihf/rtabmap-0.11/RTABMapConfigVersion.cmake
-- Up-to-date: /home/ubuntu/catkin_ws/devel/share/rtabmap/package.xml

...

-- Up-to-date: /home/ubuntu/catkin_ws/devel/bin/rtabmap-odometryViewer
-- Up-to-date: /home/ubuntu/catkin_ws/devel/bin/rtabmap-dataRecorder
-- Up-to-date: /home/ubuntu/catkin_ws/devel/bin/rtabmap-calibration

I re-sourced but saw no change. So the bigger problem has become that I cannot run rtabmap via ros! Do rtabmap and rtabmap_ros need to be in different catkin folders?

Originally posted by jacksonkr_ on ROS Answers with karma: 396 on 2016-04-22
Post score: 0

Original comments
Comment by spmaniato on 2016-04-22:
In which directory do you end up (pwd) after a roscd rtabmap_ros ?? Also, could you post the output of echo $ROS_PACKAGE_PATH please? This may be a workspace overlaying issue.
Comment by jacksonkr_ on 2016-04-22:
pwd for roscd rtabmap_ros is ~/catkin_ws/src/rtabmap_ros and ROS_PACKAGE_PATH is /home/ubuntu/catkin_ws/src:/opt/ros/indigo/share:/opt/ros/indigo/stacks
Comment by spmaniato on 2016-04-23:
OK, these look good. I was gonna ask about roslaunch rtabmap_ros [tab-tab] but, reading the comments underneath Thomas' answer, I think you already did that.
Comment by jacksonkr_ on 2016-04-23:
Yep. This is a tricky one which makes me think it's something very simple. I may need to start from scratch on a fresh install but I'm hoping someone will enlighten me. After all, knowing the root cause is much more valuable to me than being ignorant to the issue.

A:

For this particular situation, here is what worked for me.
Install rtabmap first:
$ cd ~
$ git clone https://github.com/introlab/rtabmap.git rtabmap
$ cd rtabmap/build
$ cmake -DCMAKE_INSTALL_PREFIX=~/catkin_ws/devel ..
$ make -j4
$ make install

the DCMAKE_INSTALL_PREFIX is what solved my issue. I don't know why creating my own catkin_ws did not work but I suspect I was missing something simple.
Install rtabmap_ros second:
$ cd ~/catkin_ws
$ git clone https://github.com/introlab/rtabmap_ros.git src/rtabmap_ros
$ catkin_make

in this second step you've used the catkin_ws folder that was created by the rtabmap install. I added my freenect_throttle.launch to catkin_ws/src/rtabmap_ros/launch folder and then re-ran catkin_make inside the parent catkin_ws folder.
All documentation for rtabmap, rtabmap_ros, and `` can be found in the following links:

rtabmap homepage
Installing rtabmap
Installing rtabmap_ros
Using rtabmap with a remote machine

Note: You get an issue on the freenect_throttle.launch when you first run it because one of the xml comments is not closed correctly, close the comment and it will run fine. I've attached what the corrected launch file below
<launch>
  <include file="$(find freenect_launch)/launch/freenect.launch">
     <arg name="depth_registration" value="True" />
  </include>

  <arg name="rate"  default="5"/>
  <arg name="decimation"  default="1"/> 
  <!-- Reduce the image size, e.g., 2 means "width/2 x height/2". -->

  <!-- Use same nodelet used by Freenect/OpenNI -->
  <group ns="camera">
    <node pkg="nodelet" type="nodelet" name="data_throttle" args="load rtabmap_ros/data_throttle camera_nodelet_manager" output="screen">
      <param name="rate" type="double" value="$(arg rate)"/>
      <param name="decimation" type="int" value="$(arg decimation)"/>

      <remap from="rgb/image_in"       to="rgb/image_rect_color"/>
      <remap from="depth/image_in"     to="depth_registered/image_raw"/>
      <remap from="rgb/camera_info_in" to="rgb/camera_info"/>

      <remap from="rgb/image_out"       to="data_throttled_image"/>
      <remap from="depth/image_out"     to="data_throttled_image_depth"/>
      <remap from="rgb/camera_info_out" to="data_throttled_camera_info"/>
    </node>
  </group>      
</launch>

Originally posted by jacksonkr_ with karma: 396 on 2016-04-24
This answer was ACCEPTED on the original site
Post score: 0

