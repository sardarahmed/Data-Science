Q:

Possible to use git submodules for bloom?

Is it possible to use git submodules in repositories for releasing packages via bloom?
I used it in a package and it succeeded for the devel-build (even on Jenkins), but now the build seems to fail for the binarydeb-jobs because it can't find files from the submodule.
Thanks and best regards,
Sebastian

Originally posted by Sebastian Kasperski on ROS Answers with karma: 1658 on 2014-05-21
Post score: 1

A:

I think you've answered the question yourself: it doesn't work.
Using git submodules requires extra submodule init and checkout steps that probably don't happen anywhere along the release pipeline.
Working with git submodules tends to be tricky and error-prone, and most of the developers I've met do their best to stay away from them.
Bloom is generally designed to import your codebase from your upstream repository, massage it to produce a git-buildpakage(GBP) repository for each version of Ubuntu you're releasing into, and make that repository available to the build farm.
If you're trying to use git submodules in the GBP repository, don't.
If your upstream repository uses submodules, you'll either have to extend bloom to support submodules, or release the submodules in your project directly.

Originally posted by ahendrix with karma: 47576 on 2014-05-21
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by alextoind on 2017-06-20:
I've bumped into the same problem and I think the behavior is still the same as three years ago. @Sebastian Kasperski, have you found another workaround?
Comment by Sebastian Kasperski on 2017-07-10:
Unfortunately not. I had to add my library-code (the previous sub-module) to the ros-package directly, which is not a nice solution at all.

