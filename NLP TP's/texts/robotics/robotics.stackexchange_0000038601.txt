Q:

High Stdev issue using laser_height_estimation

I was trying to use laser_height_estimation, nevertheless, I obtained the following warning(It's an error, indeed):
[ WARN] [1331374177.626411632]: Stdev of height readings too big to determine height, skipping (stdev is 4.373286, max is 0.100000)
[ WARN] [1331374177.826413613]: Stdev of height readings too big to determine height, skipping (stdev is 4.359676, max is 0.100000)
[ WARN] [1331374178.026414126]: Stdev of height readings too big to determine height, skipping (stdev is 4.382531, max is 0.100000)

Is this a limitation of this package when we have a high standard deviation or any remedy for this one?
Thanks in advance.

Originally posted by alfa_80 on ROS Answers with karma: 1053 on 2012-03-09
Post score: 0

A:

Looks like you are feeding your complete laserscan into the laser_height_estimation. Since this package does not automatically detect beams corresponding to ground-readings, you have to manually restrict your laserscan to contain only beams, that typically hit the ground. (5-10 degrees looking straight down on the floor)
You should try the laser_scan_splitter and configure it to publish three groups according to your laser scanner. Lets say your scanner is facing straight down (i.e. the middle of the scan hits the ground directly beneath the mav) and let n be the number of the beams in one scan, you should create groups with (n-10)/2, 10 and again (n-10)/2 beams and use the second group as input for the height estimator.

Originally posted by Ben_S with karma: 2510 on 2012-03-10
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by alfa_80 on 2012-03-10:
This warning I obtained when I restricted my laser scanner to have a field of view of 90 deg that pointing downwards. It is the same like what you've explained I think, or do I still need to group them into three?
Comment by Ben_S on 2012-03-10:
90 degrees is way too much. You should try something like 5 to 10 degrees like i said. You have to make sure, that your scan contains nothing else than ground readings. (And that your transforms are correct of course. The estimator needs to know, that the scanner is pointing downwards.)
Comment by Ben_S on 2012-03-10:
If you can restrict it to that field of view in your driver, you dont need the scan_splitter. That was just a hint how you could easily get a scan with the desired direction and field of view without losing the ability to use the complete scan in another node.
Comment by alfa_80 on 2012-03-10:
I've tried both with 10 degree and 6 degree FOV, but then, it complaints because of missing transform. With 90 degree, there's no such missing transform. I agree, with 90 degree is too much, but how do I fix it? Any thought?
Comment by alfa_80 on 2012-03-10:
And with 10 and 6 deg FOV, I still received the error "[ WARN] [1331404549.797437213]: Stdev of height readings too big to determine height, skipping (stdev is 1.741402, max is 0.100000)
"
Comment by Ben_S on 2012-03-10:
How do you exactly limit the FOV of your scanner? This should have no influence on the transforms at all. Did you check your scanresult with rviz? All visible points of the scan have to be on (almost) the same z-level beneath the robot. This should show if there are problems with angles in the scan.
Comment by alfa_80 on 2012-03-11:
The way I did it, e.g. for 6 degree FOV, I just regard points that resides in the middle, that means considering points from 528 to 552 because I have 1080 points per scan line with 0.25 angular resolution(or angle increment). Looking at the rviz, it seems to be there with that much of FOV.
Comment by alfa_80 on 2012-03-11:
and beneath the robot as you described.
Comment by Ben_S on 2012-03-11:
Can you provide a little bag of this? That seems to be the simpler approach than asking for tons of possible problems in short comments. :-) Btw: Do you use an IMU and feed that input into the height estimator? If so, try disabling it. (Only for testing if there might be tf-problems with that)
Comment by alfa_80 on 2012-03-11:
@Ben_S: Thanks a lot for your kind help, but, at the moment, I'll stop for a while tweaking this. Instead, I wanna fix laser_scan_matcher issue that seems strange for the time being..

