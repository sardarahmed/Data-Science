Q:

ros1_bridge does not support sensor_msgs/msg/Image

Hi,
I wanted to transport sensors_msgs/msg/Image from a ros2(eloquent)  node to a ros1(melodic) node so
I did the following steps in this exact same order

Installed melodic from debian packages based on this
http://wiki.ros.org/melodic/Installation/Ubuntu
Installed eloquent from debian packages based on this
https://index.ros.org/doc/ros2/Installation/Eloquent/Linux-Install-Debians/
After this I have realized that when installing eloquent certain packages were removed  from the melodic workspace (e.g gazebo_ros, image_pupline, rqt and a lot of others) ... so I removed melodic and installed it again like in step 1
After this both workspaces seemed fine to me and I installed ros1_bridge with sudo apt install ros-eloquent-ros1-bridge
I tried to follow the ros1_bridge tutorials that i found on the linke below. Example1 worked just fine
https://github.com/ros2/ros1_bridge/blob/master/README.md
When trying Example2 it gave me the following error:
failed to create 2to1 bridge for topic '/image' with ROS 2 type 'sensor_msgs/msg/Image' and ROS 1 type '': No template specialization for the pair
check the list of supported pairs with the --print-pairs option
I printed the support pairs which gave the following list.
Supported ROS 2 <=> ROS 1 message type conversion pairs:

'builtin_interfaces/msg/Duration' (ROS 2) <=> 'std_msgs/Duration' (ROS 1)
'builtin_interfaces/msg/Time' (ROS 2) <=> 'std_msgs/Time' (ROS 1)
'diagnostic_msgs/msg/DiagnosticArray' (ROS 2) <=> 'diagnostic_msgs/DiagnosticArray' (ROS 1)
'diagnostic_msgs/msg/DiagnosticStatus' (ROS 2) <=> 'diagnostic_msgs/DiagnosticStatus' (ROS 1)
'diagnostic_msgs/msg/KeyValue' (ROS 2) <=> 'diagnostic_msgs/KeyValue' (ROS 1)
'geometry_msgs/msg/Accel' (ROS 2) <=> 'geometry_msgs/Accel' (ROS 1)
'geometry_msgs/msg/AccelStamped' (ROS 2) <=> 'geometry_msgs/AccelStamped' (ROS 1)
'geometry_msgs/msg/AccelWithCovariance' (ROS 2) <=> 'geometry_msgs/AccelWithCovariance' (ROS 1)
'geometry_msgs/msg/AccelWithCovarianceStamped' (ROS 2) <=> 'geometry_msgs/AccelWithCovarianceStamped' (ROS 1)
'geometry_msgs/msg/Inertia' (ROS 2) <=> 'geometry_msgs/Inertia' (ROS 1)
'geometry_msgs/msg/InertiaStamped' (ROS 2) <=> 'geometry_msgs/InertiaStamped' (ROS 1)
'geometry_msgs/msg/Point' (ROS 2) <=> 'geometry_msgs/Point' (ROS 1)
'geometry_msgs/msg/Point32' (ROS 2) <=> 'geometry_msgs/Point32' (ROS 1)
'geometry_msgs/msg/PointStamped' (ROS 2) <=> 'geometry_msgs/PointStamped' (ROS 1)
'geometry_msgs/msg/Polygon' (ROS 2) <=> 'geometry_msgs/Polygon' (ROS 1)
'geometry_msgs/msg/PolygonStamped' (ROS 2) <=> 'geometry_msgs/PolygonStamped' (ROS 1)
'geometry_msgs/msg/Pose' (ROS 2) <=> 'geometry_msgs/Pose' (ROS 1)
'geometry_msgs/msg/Pose2D' (ROS 2) <=> 'geometry_msgs/Pose2D' (ROS 1)
'geometry_msgs/msg/PoseArray' (ROS 2) <=> 'geometry_msgs/PoseArray' (ROS 1)
'geometry_msgs/msg/PoseStamped' (ROS 2) <=> 'geometry_msgs/PoseStamped' (ROS 1)
'geometry_msgs/msg/PoseWithCovariance' (ROS 2) <=> 'geometry_msgs/PoseWithCovariance' (ROS 1)
'geometry_msgs/msg/PoseWithCovarianceStamped' (ROS 2) <=> 'geometry_msgs/PoseWithCovarianceStamped' (ROS 1)
'geometry_msgs/msg/Quaternion' (ROS 2) <=> 'geometry_msgs/Quaternion' (ROS 1)
'geometry_msgs/msg/QuaternionStamped' (ROS 2) <=> 'geometry_msgs/QuaternionStamped' (ROS 1)
'geometry_msgs/msg/Transform' (ROS 2) <=> 'geometry_msgs/Transform' (ROS 1)
'geometry_msgs/msg/TransformStamped' (ROS 2) <=> 'geometry_msgs/TransformStamped' (ROS 1)
'geometry_msgs/msg/Twist' (ROS 2) <=> 'geometry_msgs/Twist' (ROS 1)
'geometry_msgs/msg/TwistStamped' (ROS 2) <=> 'geometry_msgs/TwistStamped' (ROS 1)
'geometry_msgs/msg/TwistWithCovariance' (ROS 2) <=> 'geometry_msgs/TwistWithCovariance' (ROS 1)
'geometry_msgs/msg/TwistWithCovarianceStamped' (ROS 2) <=> 'geometry_msgs/TwistWithCovarianceStamped' (ROS 1)
'geometry_msgs/msg/Vector3' (ROS 2) <=> 'geometry_msgs/Vector3' (ROS 1)
'geometry_msgs/msg/Vector3Stamped' (ROS 2) <=> 'geometry_msgs/Vector3Stamped' (ROS 1)
'geometry_msgs/msg/Wrench' (ROS 2) <=> 'geometry_msgs/Wrench' (ROS 1)
'geometry_msgs/msg/WrenchStamped' (ROS 2) <=> 'geometry_msgs/WrenchStamped' (ROS 1)
'rcl_interfaces/msg/Log' (ROS 2) <=> 'rosgraph_msgs/Log' (ROS 1)
'rosgraph_msgs/msg/Clock' (ROS 2) <=> 'rosgraph_msgs/Clock' (ROS 1)
'std_msgs/msg/Bool' (ROS 2) <=> 'std_msgs/Bool' (ROS 1)
'std_msgs/msg/Byte' (ROS 2) <=> 'std_msgs/Byte' (ROS 1)
'std_msgs/msg/ByteMultiArray' (ROS 2) <=> 'std_msgs/ByteMultiArray' (ROS 1)
'std_msgs/msg/Char' (ROS 2) <=> 'std_msgs/Char' (ROS 1)
'std_msgs/msg/ColorRGBA' (ROS 2) <=> 'std_msgs/ColorRGBA' (ROS 1)
'std_msgs/msg/Empty' (ROS 2) <=> 'std_msgs/Empty' (ROS 1)
'std_msgs/msg/Float32' (ROS 2) <=> 'std_msgs/Float32' (ROS 1)
'std_msgs/msg/Float32MultiArray' (ROS 2) <=> 'std_msgs/Float32MultiArray' (ROS 1)
'std_msgs/msg/Float64' (ROS 2) <=> 'std_msgs/Float64' (ROS 1)
'std_msgs/msg/Float64MultiArray' (ROS 2) <=> 'std_msgs/Float64MultiArray' (ROS 1)
'std_msgs/msg/Header' (ROS 2) <=> 'std_msgs/Header' (ROS 1)
'std_msgs/msg/Int16' (ROS 2) <=> 'std_msgs/Int16' (ROS 1)
'std_msgs/msg/Int16MultiArray' (ROS 2) <=> 'std_msgs/Int16MultiArray' (ROS 1)
'std_msgs/msg/Int32' (ROS 2) <=> 'std_msgs/Int32' (ROS 1)
'std_msgs/msg/Int32MultiArray' (ROS 2) <=> 'std_msgs/Int32MultiArray' (ROS 1)
'std_msgs/msg/Int64' (ROS 2) <=> 'std_msgs/Int64' (ROS 1)
'std_msgs/msg/Int64MultiArray' (ROS 2) <=> 'std_msgs/Int64MultiArray' (ROS 1)
'std_msgs/msg/Int8' (ROS 2) <=> 'std_msgs/Int8' (ROS 1)
'std_msgs/msg/Int8MultiArray' (ROS 2) <=> 'std_msgs/Int8MultiArray' (ROS 1)
'std_msgs/msg/MultiArrayDimension' (ROS 2) <=> 'std_msgs/MultiArrayDimension' (ROS 1)
'std_msgs/msg/MultiArrayLayout' (ROS 2) <=> 'std_msgs/MultiArrayLayout' (ROS 1)
'std_msgs/msg/String' (ROS 2) <=> 'std_msgs/String' (ROS 1)
'std_msgs/msg/UInt16' (ROS 2) <=> 'std_msgs/UInt16' (ROS 1)
'std_msgs/msg/UInt16MultiArray' (ROS 2) <=> 'std_msgs/UInt16MultiArray' (ROS 1)
'std_msgs/msg/UInt32' (ROS 2) <=> 'std_msgs/UInt32' (ROS 1)
'std_msgs/msg/UInt32MultiArray' (ROS 2) <=> 'std_msgs/UInt32MultiArray' (ROS 1)
'std_msgs/msg/UInt64' (ROS 2) <=> 'std_msgs/UInt64' (ROS 1)
'std_msgs/msg/UInt64MultiArray' (ROS 2) <=> 'std_msgs/UInt64MultiArray' (ROS 1)
'std_msgs/msg/UInt8' (ROS 2) <=> 'std_msgs/UInt8' (ROS 1)
'std_msgs/msg/UInt8MultiArray' (ROS 2) <=> 'std_msgs/UInt8MultiArray' (ROS 1)
Supported ROS 2 <=> ROS 1 service type conversion pairs:
'diagnostic_msgs/srv/AddDiagnostics' (ROS 2) <=> 'diagnostic_msgs/AddDiagnostics' (ROS 1)
'diagnostic_msgs/srv/SelfTest' (ROS 2) <=> 'diagnostic_msgs/SelfTest' (ROS 1)
'example_interfaces/srv/AddTwoInts' (ROS 2) <=> 'roscpp_tutorials/TwoInts' (ROS 1)

Apparantly it does not contain sensors_msgs so no wonder it did not work...
I tried the same but building the ROS2 workspace from source
https://index.ros.org/doc/ros2/Installation/Eloquent/Linux-Development-Setup/
With this, also Example 2 worked for me. when I printed the supported pairs it also gave me a much longer list.
One thing I also realized: in Example 2 the tutorial tells me to source
. workspace-with-bridge'install/setup.bash
which seems like it assumes i have built the ros2 workspace from source including ros1_bridge.
The introduction of the readme states
"The bridge provided with the prebuilt ROS 2 binaries includes support for common ROS interfaces (messages/services), such as the interface packages listed in the ros2/common_interfaces repository and tf2_msgs"
so based on this sentence it should work from prebuilt packages as well.
I would like to resolve this contradiction so I would be glad if somebody could help me.

Originally posted by tlaci on ROS Answers with karma: 48 on 2019-11-28
Post score: 0

A:

It looks like a bug, I faced the same issue when Dashing was released.
Once https://github.com/ros2-gbp/ros1_bridge-release/pull/6 is merged ans released the bridge should support all the "default" messages

Originally posted by marguedas with karma: 3606 on 2019-11-29
This answer was ACCEPTED on the original site
Post score: 1

