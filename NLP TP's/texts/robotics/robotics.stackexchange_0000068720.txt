Q:

opencv3.0 ros indigo

Hi,
I want to use opencv 3.0.0 in ros but I have troubles linking my code. When install ros-indigo-desktop-full there are dependencies to opencv2.4 for some pkg like cv_bridge or image_pipeline.
When linking my program seems to find opencv 3 but there are conflicts with opencv 2.4:
/usr/bin/ld: warning: libopencv_imgproc.so.3.0, needed by /usr/local/lib/libopencv_calib3d.so.3.0.0, may conflict with libopencv_imgproc.so.2.4
Built target disparity_node

Once I run the program there are seg fault without any reason.
Every pkg which depends on opencv2.4 in ros/opt/share/ are like
$ grep -r 'libopencv_videostab.so.2.4.8' /opt/ros/indigo/*

.
  /opt/ros/indigo/lib/pkgconfig/cv_bridge.pc:Libs: -L/opt/ros/indigo/lib -lcv_bridge -l:/usr/lib/x86_64-linux-gnu/libopencv_videostab.so.2.4.8 -l:/usr/lib/x86_64-linux-gnu/libopencv_video.so.2.4.8 -l:/usr/lib/x86_64-linux-gnu/libopencv_superres.so.2.4.8 -l:/usr/lib/x86_64-linux-gnu/libopencv_stitching.so.2.4.8 -l:/usr/lib/x86_64-linux-gnu/libopencv_photo.so.2.4.8 -l:/usr/lib/x86_64-linux-gnu/libopencv_ocl.so.2.4.8 -l:/usr/lib/x86_64-linux-gnu/libopencv_objdetect.so.2.4.8 -l:/usr/lib/x86_64-linux-gnu/libopencv_ml.so.2.4.8 -l:/usr/lib/x86_64-linux-gnu/libopencv_legacy.so.2.4.8 -l:/usr/lib/x86_64-linux-gnu/libopencv_imgproc.so.2.4.8 -l:/usr/lib/x86_64-linux-gnu/libopencv_highgui.so.2.4.8 -l:/usr/lib/x86_64-linux-gnu/libopencv_gpu.so.2.4.8 -l:/usr/lib/x86_64-linux-gnu/libopencv_flann.so.2.4.8 -l:/usr/lib/x86_64-linux-gnu/libopencv_features2d.so.2.4.8 -l:/usr/lib/x86_64-linux-gnu/libopencv_core.so.2.4.8 -l:/usr/lib/x86_64-linux-gnu/libopencv_contrib.so.2.4.8 -l:/usr/lib/x86_64-linux-gnu/libopencv_calib3d.so.2.4.8

I want to know if there is an option to change every dependency from opencv2.4 to opencv3.0. and if it is autogenerated code, where and how can I change the config file.
Or if it is possible to include some statement in my CMakeLists.txt to use opencv3.0 instead of use opencv2.4
Best regards.

Originally posted by pmarinplaza on ROS Answers with karma: 330 on 2015-07-16
Post score: 3

A:

I'm mostly certain you would have to recompile image_pipeline and cv_bridge against 3.0 also.
If possible you can exclude build dependencies on image_pipeline and cv_bridge from your opencv 3.0 dependent node.  There is no problem with two different nodes being linked to different versions of opencv since they are different executables, but I'm guessing you want cv_bridge to do image conversions (though those aren't too hard to duplicate with your own code, even cut and paste right out of cv_bridge source).
Another thing is you want your system to default to the standard opencv libraries that ros is built against, but in the cmake for the 3.0 node have it do some extra steps to go find 3.0 installed into a non standard location.

Originally posted by lucasw with karma: 8729 on 2015-07-16
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by pmarinplaza on 2015-07-20:
I've uninstalled both pkg and try to compile but other error appear related with boost libraries. Once I fix this problem I update the answer if works or not.
Thanks!
Comment by pmarinplaza on 2015-07-20:
I mark this post as answered because it works. Compile good with the last source of cv_bridge (is already prepared for opencv3) and other pkg compiled from source. I still have problems with rviz and cuda libraries linking while compiling :( but this is other problem. Thank you a lot.
Comment by marilia15 on 2015-10-06:
same warning libopencv_imgproc.so.2.4 and  libopencv_core.so.2.4   VS  3.0 version. So I want to link only opencv3 with your solution, but I do not understand how to. The solution is recompile image_pipeline and cv_bridge? How can I do that?
Comment by chartersCruz on 2016-01-18:
Hi Guys, I am following Marilia15 request. Can you please be more specific on how can we recompile image_pipeline and cv_bridge? Thank you for your assistance
Comment by Jangwon on 2016-03-10:
Hi, you can clone cv_bridge and image_pipeline source code from the following git hub. https://github.com/ros-perception/image_pipeline
https://github.com/ros-perception/vision_opencv
Clone them in your src directory, then you can recompile them. I hope this helps.
Comment by Pototo on 2016-11-03:
how do I unistall opencv. It seems that the turtlebot people install opencv 3.0 as default making my packages crash cause I use opencv 2.4

