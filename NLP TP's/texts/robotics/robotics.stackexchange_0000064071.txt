Q:

Trying to make a debian package

Hi,
I'm working with Rviz/MoveIt! to plan my robots movement. However I want/have to make the use of Rviz/MoveIt! easier for my colleagues and less experienced users. I am aiming at editing the ros-hydro-moveit-ros-visualization package.
I already found the source code of the package and I have also found what I wanted to change. However now I'm stuck.
To install the changed source code I first have to convert it to a debian package. I tried several methods and how-to's that I've found on google, but none of them give me the desired result. Or I get errors when trying to compile/convert or the build of the .deb file I made doesn't share any similarities to the original .deb file I got from packages.ros.org.
For example my .deb doesn't install in the /opt/ros/hydro folder. Also my .deb file doesn't have any library files etc.
In short the .deb files I managed to make only have the original source code files in it.
How do I make a correct .deb file that installs in the correct folder, has the correct library files etc?

Originally posted by firebird40 on ROS Answers with karma: 3 on 2014-11-17
Post score: 0

Original comments
Comment by firebird40 on 2014-11-17:
A small correction to my question. With less experienced users I mean end-users of the robot. The current Motion Planning plug-in, that is located in the moveit-ros-visualization package, is great for experiment and develop environments, but not for simple end-users.

A:

You really shouldn't try to edit existing debs. You'll confuse anyone who's expecting to have the upstream version, and your changes may be overwritten by an update if the package maintainer releases a new version.
There are a few things that you can try:

If you have bugfixes or new features in the upstream package, submit them as a pull request. They'll benefit the rest of the community, in addition to your colleagues.
If you're just adding configuration files or launch scripts that don't have to be part of the upstream package, consider creating your own package. You can then distribute or release your package as you see fit.

EDIT
Once you have your own ROS package that you would like to release (build debs), you can create a release repository with bloom and either release that package to the ROS build farm through bloom, or build debs locally: http://answers.ros.org/question/173804/generate-deb-from-ros-package/

Originally posted by ahendrix with karma: 47576 on 2014-11-17
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by firebird40 on 2014-11-17:
I'm not trying to make it a part of the upstream package. As you said I can consider creating my own package. That is what I am doing. But to test it all and everything I first have to know how I can convert the source code to a .deb file so I can install it and try it.

