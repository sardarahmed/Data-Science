Q:

How to load pcd pointcloud into librviz RenderPanel?

I have a librviz instance running in a qt window thanks to http://docs.ros.org/jade/api/librviz_tutorial/html/index.html.  I would assume I use http://wiki.ros.org/pcl_ros to convert the loaded pcd data into a PointCloud2, but then how do I add that to the rviz::VisualizationManager?

Originally posted by lucasw on ROS Answers with karma: 8729 on 2016-01-29
Post score: 0

A:

It looks like the answer is in http://answers.ros.org/question/191721/librviz-display-sensor_msgslaserscan/ -  I need to set the PointCloud2 Display to subscribe to a topic, then publish to that topic with the pcd converted into a ros message.
Having the same node publish and subscribe to itself within an rqt plugin, while keeping namespaces distinct from potential other instances of the same node requires a few more details, I chose to use the private node handle:
std::string name = "my_point_cloud";
std::string topic = getPrivateNodeHandle() + "/" + name;
rviz::Display*display = manager->createDisplay("rviz/PointCloud2", QString::fromStdString(name), true);
pub = getPrivateNodeHandle().advertise<pcl::PointCloud<pcl::PointXYZRGBNormal> >(name, 1);
display->subProp("Topic")->setValue(QString::fromStdString(topic));

I was hoping that I could get data directly into the custom rviz window without publishing or subscribing... it would be nice to have access controls and permissions on topics, or mark them hidden.

Originally posted by lucasw with karma: 8729 on 2016-02-01
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by ahendrix on 2016-02-01:
You could probably do something similar by writing a new display type; mostly based on the existing PointCloud2 display but with the changes you need.
Comment by lucasw on 2016-02-01:
I did try out processMessage() but it is protected, it may be as simple as having a subclass with a public method to access that.

