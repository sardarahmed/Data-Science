Q:

Is it necessary to create an entire class for a subscriber?

I'm new to ROS and I've been working with joy. I can not seem to get my code working. The main different between my code and the example code from the ROSNodeTutorialC++ is that instead of creating a node class, I just simply have global variables setup that get assigned from a launch file and then on line 30:
ros::Subscriber sub_message = n.subscribe(topic.c_str(), 1000, &NodeExample::messageCallback, node_example);

I have done the following:
ros::Subscriber sub_message = n.subscribe("joy", 10, callbackFunction);

Which is then followed by:
while (n.ok())
{
    ros::spinOnce();
    r.sleep();
}

Is it possible that because I'm not using a class my code is not operating as I thought it was or is it most likely another issue?

Originally posted by WarGravy on ROS Answers with karma: 3 on 2014-08-07
Post score: 0

Original comments
Comment by gvdhoorn on 2014-08-07:
Using classes is not a requirement no. But without the actual -- complete -- code, or a minimal working example, we cannot really determine what could be causing your issue. You could be running into issues with variable scopes, fi. Could you update your question with the relevant information?
Comment by gvdhoorn on 2014-08-07:
Also: how is it that you reference NodeExample::messageCallback when you are not using classes?
Comment by WarGravy on 2014-08-07:
Thank you gvdhoorn, I eventually found out that my bashrc file was not setup correctly and my node was not showing up in the list so there was some other stuff I had to do to get everything fixed. My code is up and running now.

A:

The first and most basic tutorial about C++ subscribers you should have read does not implement an own class.
So, simple answer: No, it's not necessary.

Originally posted by BennyRe with karma: 2949 on 2014-08-07
This answer was ACCEPTED on the original site
Post score: 3

