Q:

Path planning for car-like robots

Hi,
I am developing a path-planner for a 4 wheeled car-like robot. I have a 2D map of the environment with the initial coordinates of the robot and the final coordinates known. A straight-forward solution would be to use A* or any general path planning algorithm like it, but the challenge I see is in ensuring that the curvature in the path is achievable by a 4 wheeled (non-holonomic) robot.
Also, as a second step, the robot uses a visual marker (hung on a wall in front of it) to localize itself. So the path planned should ensure that the robot's heading is such that the marker is always in view.
Does ROS have packages that I could use or take ideas out of ?
Thanks,
Sagnik

Originally posted by Sagnik on ROS Answers with karma: 184 on 2011-11-01
Post score: 2

A:

We use the sbpl lattice planner (http://www.ros.org/wiki/sbpl_lattice_planner) on our four wheel drive/steering Hector UGV. You can specify the allowed motion primitives as described in the documentation. The plan will then only consist of valid motion for you Ackermann-steered vehicle. The only problem then is to follow this trajectory exactly, which move_base doesn't do in my experience.
See also this answer:
http://answers.ros.org/question/27/how-can-i-use-the-navigation-stack-on-a-carlike

Originally posted by Stefan Kohlbrecher with karma: 24361 on 2011-11-01
This answer was ACCEPTED on the original site
Post score: 7

Original comments
Comment by ben on 2011-11-28:
Also - when setting the goal in rviz - make sure that the global frame of the world is  '/map'.
Comment by ben on 2011-11-28:
You don't need a tutorial that is specific to the sbpl_lattice_planner. You should look at the documentation for the navigation stack (move_base etc.). The lattice planner is just one of many different global planners that could be used - and they are all interfaced with in the same way.
Comment by Sagnik on 2011-11-28:
I tried setting a goal using RViz but it doesn't seem to work. If you could point to some tutorial demonstrating the usage of sbpl_lattice_planner, that would be great. Thanks !
Comment by Sagnik on 2011-11-28:
Hi,  I was able to install sbpl lattice planner as suggested and could run the move_base_sbpl_fake_localization_2.5cm.launch file (Section 2.2 of http://www.ros.org/wiki/sbpl_lattice_planner ). But how do I actually go ahead and set a goal and see a plan being generated ?

