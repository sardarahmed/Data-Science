Q:

How can I do a Networking between ROS (Linux) and a C++ Program running on Windows?

The C++ program has been made in Visual C++. How can I establish a network with my program and ROS but without having ROS on Windows?, I mean a directly conexion between my program in VC++ and ROS.
I know that ROS can run on Windows, but my goal is not do a network between ROS on windows and ROS on Linux.
I have already created a Client/Server code in C++, so I think that I can implement that code in ROS (with cpp) and my program  just to send/recieve messages between them. Is it possible just configure a network on ROS? I mean to set up IP, port, protocol.
I would appreciate your help with tips or example of codes.
Thanks.

Originally posted by Alfredo Rodriguez on ROS Answers with karma: 1 on 2013-01-13
Post score: 0

Original comments
Comment by Alfredo Rodriguez on 2013-01-14:
If I do that "dbworth" recomended me, can I use functions of ROS just to obtain values from a device with a ROS driver and then use the TCP connection to send that value to the VC++ program (Computer running on Windows)? I mean send that value to process it in the program in VC++.
Comment by Alfredo Rodriguez on 2013-01-14:
My goal is just send values (that are obtained from a device connected with ROS, for example a sensor) from ROS on Linux to a VC++ program on Windows and process those values in that VC++ program.
Comment by dbworth on 2013-01-14:
Of course, you can write a little node that subscribes to a topic, then in the callback it writes the data to some variable.  Then in the while loop (mentioned below) it sends the current value out via non-ROS TCP socket.
Comment by Alfredo Rodriguez on 2013-01-17:
Is there a format message to subscribe to a topic? How can I do it?  Thanks.
Comment by dbworth on 2013-01-17:
Okay, step 1 is to do all the ROS Tutorials. It is important. Then make a new package to read the sensor. Write the CPP code for your new node, and get it to print the sensor data to terminal window. Then you can add the code for creating a TCP socket in Linux, and output that data on a socket.

A:

You can simply run a ROS Node on Linux that receives both ROS messages and messages on a standard TCP/IP socket.
Google search for TCP sockets programming for Linux, and winsock programming for VC++. You create a simple TCP socket connection and pass data back and forth. In the ROS node, you have a loop like:
while (ROS::OK) { 
   do stuff in loop 
}

So you put the sockets code in there. The system can be uni-directional (one way communication) of even bi-directional (both ways) works fine.

Originally posted by dbworth with karma: 1103 on 2013-01-13
This answer was ACCEPTED on the original site
Post score: 6

