Q:

arm_navigation stack

I'm fairly new to ROS and especially the arm_navigation stack and was just wondering if there's a simpler method to determine the inverse kinematics of a custom/undefined manipulator than described in the Running arm navigation on non-PR2 arm, which describes altering the pr2_arm_kinematics stack's services and source to suit a custom manipulator.
I followed the arm_navigation tutorials and in the inverse kinematics tutorial the source requires services "pr2_right_arm_kinematics/get_ik_solver_info" and "pr2_right_arm_kinematics/get_ik", which I'm sure are only relevant to the pr2 - as is in the description of the pr2_arm_kinematics stack. Likewise with the iROS tutorial and all other's I've found.
Thanks in advance
EDIT: The reason I am not a fan of this method is than I have a 5 DOF robot, not 7. meaning I would have to go through several ~500 line source code files to adapt the code. Or I could go the ineloquent task of added 2 fixed joints and nonexistant links

Originally posted by ocli on ROS Answers with karma: 215 on 2012-05-24
Post score: 1

Original comments
Comment by ocli on 2012-05-24:
I have used the Planning Description Configuration Wizard to attempt to set up the IK solver relevant to my robot, but the tutorial [Inverse kinematics for the PR2 arms] uses pr2 services to determine the IK, which is 7DOF, and cannot suit 5DOF.
Comment by dornhege on 2012-05-24:
The wizard should setup kinematics for your robot, not for the PR2.
Comment by ocli on 2012-05-27:
OK I think I misunderstood the tutorials. It almost works now, just working on a few new problems to do with package dependencies etc. Thanks for the time though

A:

You should definitely check out the Planning Description Configuration Wizard Tutorial.

Originally posted by David Lu with karma: 10932 on 2012-05-24
This answer was ACCEPTED on the original site
Post score: 0

