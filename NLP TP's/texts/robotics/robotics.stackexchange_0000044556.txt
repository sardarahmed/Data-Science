Q:

Synchronization with 8 incoming channels, registerCallback boost::bind -> compilation error

Hi all,
UPDATE: I found a workaround which I posted at the end of this question
I try to use ApproximateTime Synchronization with 8 channels, but I get a compilation error. Strangely it works with 4.
Here's some of the code:
(The error is at sync_->registerCallback(boost::bind(&S2::filter_image, this,  _1, _2, _3, _4, _5, _6, _7, _8, "ok")); )
class S2 {
    ros::NodeHandle nh_;
    
    image_transport::ImageTransport image_transporter_;
    boost::unordered_map<std::string, boost::shared_ptr<image_transport::SubscriberFilter> > response_; //images from C1

    //Synchronizer
    typedef message_filters::sync_policies::ApproximateTime<sensor_msgs::Image, sensor_msgs::Image,
        sensor_msgs::Image, sensor_msgs::Image,
        sensor_msgs::Image, sensor_msgs::Image,
        sensor_msgs::Image, sensor_msgs::Image> syncPolicy;

    typedef message_filters::Synchronizer<syncPolicy> mySynchronizer;
    boost::shared_ptr<mySynchronizer>  sync_;

public:

    S2(ros::NodeHandle nh): image_transporter_(nh) {
        nh_ = nh;
        read_parameters();
    }

    void read_parameters(){

    //Subscribe to C1 images
        
            sync_.reset( new mySynchronizer ( syncPolicy(10),
                *C1_response_[subscribe_strings.at(0)].get(),
                *C1_response_[subscribe_strings.at(1)].get(),
                    *C1_response_[subscribe_strings.at(2)].get(),
                    *C1_response_[subscribe_strings.at(3)].get(),
                    *C1_response_[subscribe_strings.at(4)].get(),
                    *C1_response_[subscribe_strings.at(5)].get(),
                    *C1_response_[subscribe_strings.at(6)].get(),
                    *C1_response_[subscribe_strings.at(7)].get()));             
            sync_->registerCallback(boost::bind(&S2::filter_image, this,  _1, _2, _3, _4, _5, _6, _7, _8, "ok"));

            

    }

    void filter_image(const sensor_msgs::ImageConstPtr& original_image1, const sensor_msgs::ImageConstPtr& original_image2,
            const sensor_msgs::ImageConstPtr& original_image3, const sensor_msgs::ImageConstPtr& original_image4,std::string name){

    }

};

int main(int argc, char **argv){

  ros::init(argc, argv, "S2_node");
  ros::NodeHandle nh;

    S2 s2(nh);
ros::spin();
    return 0;
}

The error I get is:
S2_new_node.cpp: In member function ‘void S2::read_parameters()’:
S2_new_node.cpp:88:102: error: no matching function for call to ‘bind(void (S2::*)(const ImageConstPtr&, const ImageConstPtr&, const ImageConstPtr&, const ImageConstPtr&, std::string), S2* const, boost::arg<1>&, boost::arg<2>&, boost::arg<3>&, boost::arg<4>&, boost::arg<5>&, boost::arg<6>&, boost::arg<7>&, boost::arg<8>&, const char [3])’
/work/ros/hmax/src/S2_new_node.cpp:88:102: note: candidates are:
/usr/include/boost/bind/bind.hpp:1298:5: note: template<class R, class F> boost::_bi::bind_t<R, F, boost::_bi::list0> boost::bind(F)
/usr/include/boost/bind/bind.hpp:1306:5: note: template<class R, class F, class A1> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_1<A1>::type> boost::bind(F, A1)
/usr/include/boost/bind/bind.hpp:1314:5: note: template<class R, class F, class A1, class A2> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_2<A1, A2>::type> boost::bind(F, A1, A2)
/usr/include/boost/bind/bind.hpp:1322:5: note: template<class R, class F, class A1, class A2, class A3> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_3<A1, A2, A3>::type> boost::bind(F, A1, A2, A3)
/usr/include/boost/bind/bind.hpp:1330:5: note: template<class R, class F, class A1, class A2, class A3, class A4> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_4<A1, A2, A3, A4>::type> boost::bind(F, A1, A2, A3, A4)
/usr/include/boost/bind/bind.hpp:1338:5: note: template<class R, class F, class A1, class A2, class A3, class A4, class A5> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_5<A1, A2, A3, A4, A5>::type> boost::bind(F, A1, A2, A3, A4, A5)
/usr/include/boost/bind/bind.hpp:1346:5: note: template<class R, class F, class A1, class A2, class A3, class A4, class A5, class A6> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_6<A1, A2, A3, A4, A5, A6>::type> boost::bind(F, A1, A2, A3, A4, A5, A6)
/usr/include/boost/bind/bind.hpp:1354:5: note: template<class R, class F, class A1, class A2, class A3, class A4, class A5, class A6, class A7> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_7<A1, A2, A3, A4, A5, A6, A7>::type> boost::bind(F, A1, A2, A3, A4, A5, A6, A7)
/usr/include/boost/bind/bind.hpp:1362:5: note: template<class R, class F, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_8<A1, A2, A3, A4, A5, A6, A7, A8>::type> boost::bind(F, A1, A2, A3, A4, A5, A6, A7, A8)
/usr/include/boost/bind/bind.hpp:1370:5: note: template<class R, class F, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_9<A1, A2, A3, A4, A5, A6, A7, A8, A9>::type> boost::bind(F, A1, A2, A3, A4, A5, A6, A7, A8, A9)
/usr/include/boost/bind/bind.hpp:1380:5: note: template<class R, class F> boost::_bi::bind_t<R, F, boost::_bi::list0> boost::bind(boost::type<R>, F)
/usr/include/boost/bind/bind.hpp:1388:5: note: template<class R, class F, class A1> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_1<A1>::type> boost::bind(boost::type<R>, F, A1)
/usr/include/boost/bind/bind.hpp:1396:5: note: template<class R, class F, class A1, class A2> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_2<A1, A2>::type> boost::bind(boost::type<R>, F, A1, A2)
/usr/include/boost/bind/bind.hpp:1404:5: note: template<class R, class F, class A1, class A2, class A3> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_3<A1, A2, A3>::type> boost::bind(boost::type<R>, F, A1, A2, A3)
/usr/include/boost/bind/bind.hpp:1412:5: note: template<class R, class F, class A1, class A2, class A3, class A4> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_4<A1, A2, A3, A4>::type> boost::bind(boost::type<R>, F, A1, A2, A3, A4)
/usr/include/boost/bind/bind.hpp:1420:5: note: template<class R, class F, class A1, class A2, class A3, class A4, class A5> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_5<A1, A2, A3, A4, A5>::type> boost::bind(boost::type<R>, F, A1, A2, A3, A4, A5)
/usr/include/boost/bind/bind.hpp:1428:5: note: template<class R, class F, class A1, class A2, class A3, class A4, class A5, class A6> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_6<A1, A2, A3, A4, A5, A6>::type> boost::bind(boost::type<R>, F, A1, A2, A3, A4, A5, A6)
/usr/include/boost/bind/bind.hpp:1436:5: note: template<class R, class F, class A1, class A2, class A3, class A4, class A5, class A6, class A7> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_7<A1, A2, A3, A4, A5, A6, A7>::type> boost::bind(boost::type<R>, F, A1, A2, A3, A4, A5, A6, A7)
/usr/include/boost/bind/bind.hpp:1444:5: note: template<class R, class F, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_8<A1, A2, A3, A4, A5, A6, A7, A8>::type> boost::bind(boost::type<R>, F, A1, A2, A3, A4, A5, A6, A7, A8)
/usr/include/boost/bind/bind.hpp:1452:5: note: template<class R, class F, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9> boost::_bi::bind_t<R, F, typename boost::_bi::list_av_9<A1, A2, A3, A4, A5, A6, A7, A8, A9>::type> boost::bind(boost::type<R>, F, A1, A2, A3, A4, A5, A6, A7, A8, A9)
/usr/include/boost/bind/bind.hpp:1464:5: note: template<class F> boost::_bi::bind_t<boost::_bi::unspecified, F, boost::_bi::list0> boost::bind(F)
/usr/include/boost/bind/bind.hpp:1472:5: note: template<class F, class A1> boost::_bi::bind_t<boost::_bi::unspecified, F, typename boost::_bi::list_av_1<A1>::type> boost::bind(F, A1)
/usr/include/boost/bind/bind.hpp:1480:5: note: template<class F, class A1, class A2> boost::_bi::bind_t<boost::_bi::unspecified, F, typename boost::_bi::list_av_2<A1, A2>::type> boost::bind(F, A1, A2)
/usr/include/boost/bind/bind.hpp:1488:5: note: template<class F, class A1, class A2, class A3> boost::_bi::bind_t<boost::_bi::unspecified, F, typename boost::_bi::list_av_3<A1, A2, A3>::type> boost::bind(F, A1, A2, A3)
/usr/include/boost/bind/bind.hpp:1496:5: note: template<class F, class A1, class A2, class A3, class A4> boost::_bi::bind_t<boost::_bi::unspecified, F, typename boost::_bi::list_av_4<A1, A2, A3, A4>::type> boost::bind(F, A1, A2, A3, A4)
/usr/include/boost/bind/bind.hpp:1504:5: note: template<class F, class A1, class A2, class A3, class A4, class A5> boost::_bi::bind_t<boost::_bi::unspecified, F, typename boost::_bi::list_av_5<A1, A2, A3, A4, A5>::type> boost::bind(F, A1, A2, A3, A4, A5)
/usr/include/boost/bind/bind.hpp:1512:5: note: template<class F, class A1, class A2, class A3, class A4, class A5, class A6> boost::_bi::bind_t<boost::_bi::unspecified, F, typename boost::_bi::list_av_6<A1, A2, A3, A4, A5, A6>::type> boost::bind(F, A1, A2, A3, A4, A5, A6)
/usr/include/boost/bind/bind.hpp:1520:5: note: template<class F, class A1, class A2, class A3, class A4, class A5, class A6, class A7> boost::_bi::bind_t<boost::_bi::unspecified, F, typename boost::_bi::list_av_7<A1, A2, A3, A4, A5, A6, A7>::type> boost::bind(F, A1, A2, A3, A4, A5, A6, A7)
/usr/include/boost/bind/bind.hpp:1528:5: note: template<class F, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8> boost::_bi::bind_t<boost::_bi::unspecified, F, typename boost::_bi::list_av_8<A1, A2, A3, A4, A5, A6, A7, A8>::type> boost::bind(F, A1, A2, A3, A4, A5, A6, A7, A8)
/usr/include/boost/bind/bind.hpp:1536:5: note: template<class F, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9> boost::_bi::bind_t<boost::_bi::unspecified, F, typename boost::_bi::list_av_9<A1, A2, A3, A4, A5, A6, A7, A8, A9>::type> boost::bind(F, A1, A2, A3, A4, A5, A6, A7, A8, A9)
/usr/include/boost/bind/bind_cc.hpp:17:5: note: template<class R> boost::_bi::bind_t<R, R (*)(), boost::_bi::list0> boost::bind(R (*)())
/usr/include/boost/bind/bind_cc.hpp:26:5: note: template<class R, class B1, class A1> boost::_bi::bind_t<R, R (*)(B1), typename boost::_bi::list_av_1<A1>::type> boost::bind(R (*)(B1), A1)
/usr/include/boost/bind/bind_cc.hpp:35:5: note: template<class R, class B1, class B2, class A1, class A2> boost::_bi::bind_t<R, R (*)(B1, B2), typename boost::_bi::list_av_2<A1, A2>::type> boost::bind(R (*)(B1, B2), A1, A2)
/usr/include/boost/bind/bind_cc.hpp:46:5: note: template<class R, class B1, class B2, class B3, class A1, class A2, class A3> boost::_bi::bind_t<R, R (*)(B1, B2, B3), typename boost::_bi::list_av_3<A1, A2, A3>::type> boost::bind(R (*)(B1, B2, B3), A1, A2, A3)
/usr/include/boost/bind/bind_cc.hpp:57:5: note: template<class R, class B1, class B2, class B3, class B4, class A1, class A2, class A3, class A4> boost::_bi::bind_t<R, R (*)(B1, B2, B3, B4), typename boost::_bi::list_av_4<A1, A2, A3, A4>::type> boost::bind(R (*)(B1, B2, B3, B4), A1, A2, A3, A4)
/usr/include/boost/bind/bind_cc.hpp:68:5: note: template<class R, class B1, class B2, class B3, class B4, class B5, class A1, class A2, class A3, class A4, class A5> boost::_bi::bind_t<R, R (*)(B1, B2, B3, B4, B5), typename boost::_bi::list_av_5<A1, A2, A3, A4, A5>::type> boost::bind(R (*)(B1, B2, B3, B4, B5), A1, A2, A3, A4, A5)
/usr/include/boost/bind/bind_cc.hpp:79:5: note: template<class R, class B1, class B2, class B3, class B4, class B5, class B6, class A1, class A2, class A3, class A4, class A5, class A6> boost::_bi::bind_t<R, R (*)(B1, B2, B3, B4, B5, B6), typename boost::_bi::list_av_6<A1, A2, A3, A4, A5, A6>::type> boost::bind(R (*)(B1, B2, B3, B4, B5, B6), A1, A2, A3, A4, A5, A6)
/usr/include/boost/bind/bind_cc.hpp:90:5: note: template<class R, class B1, class B2, class B3, class B4, class B5, class B6, class B7, class A1, class A2, class A3, class A4, class A5, class A6, class A7> boost::_bi::bind_t<R, R (*)(B1, B2, B3, B4, B5, B6, B7), typename boost::_bi::list_av_7<A1, A2, A3, A4, A5, A6, A7>::type> boost::bind(R (*)(B1, B2, B3, B4, B5, B6, B7), A1, A2, A3, A4, A5, A6, A7)
/usr/include/boost/bind/bind_cc.hpp:101:5: note: template<class R, class B1, class B2, class B3, class B4, class B5, class B6, class B7, class B8, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8> boost::_bi::bind_t<R, R (*)(B1, B2, B3, B4, B5, B6, B7, B8), typename boost::_bi::list_av_8<A1, A2, A3, A4, A5, A6, A7, A8>::type> boost::bind(R (*)(B1, B2, B3, B4, B5, B6, B7, B8), A1, A2, A3, A4, A5, A6, A7, A8)
/usr/include/boost/bind/bind_cc.hpp:112:5: note: template<class R, class B1, class B2, class B3, class B4, class B5, class B6, class B7, class B8, class B9, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9> boost::_bi::bind_t<R, R (*)(B1, B2, B3, B4, B5, B6, B7, B8, B9), typename boost::_bi::list_av_9<A1, A2, A3, A4, A5, A6, A7, A8, A9>::type> boost::bind(R (*)(B1, B2, B3, B4, B5, B6, B7, B8, B9), A1, A2, A3, A4, A5, A6, A7, A8, A9)
/usr/include/boost/bind/bind_mf_cc.hpp:20:5: note: template<class R, class T, class A1> boost::_bi::bind_t<R, boost::_mfi::mf0<R, T>, typename boost::_bi::list_av_1<A1>::type> boost::bind(R (T::*)(), A1)
/usr/include/boost/bind/bind_mf_cc.hpp:30:5: note: template<class R, class T, class A1> boost::_bi::bind_t<R, boost::_mfi::cmf0<R, T>, typename boost::_bi::list_av_1<A1>::type> boost::bind(R (T::*)()const, A1)
/usr/include/boost/bind/bind_mf_cc.hpp:43:5: note: template<class R, class T, class B1, class A1, class A2> boost::_bi::bind_t<R, boost::_mfi::mf1<R, T, B1>, typename boost::_bi::list_av_2<A1, A2>::type> boost::bind(R (T::*)(B1), A1, A2)
/usr/include/boost/bind/bind_mf_cc.hpp:54:5: note: template<class R, class T, class B1, class A1, class A2> boost::_bi::bind_t<R, boost::_mfi::cmf1<R, T, B1>, typename boost::_bi::list_av_2<A1, A2>::type> boost::bind(R (T::*)(B1)const, A1, A2)
/usr/include/boost/bind/bind_mf_cc.hpp:67:5: note: template<class R, class T, class B1, class B2, class A1, class A2, class A3> boost::_bi::bind_t<R, boost::_mfi::mf2<R, T, B1, B2>, typename boost::_bi::list_av_3<A1, A2, A3>::type> boost::bind(R (T::*)(B1, B2), A1, A2, A3)
/usr/include/boost/bind/bind_mf_cc.hpp:78:5: note: template<class R, class T, class B1, class B2, class A1, class A2, class A3> boost::_bi::bind_t<R, boost::_mfi::cmf2<R, T, B1, B2>, typename boost::_bi::list_av_3<A1, A2, A3>::type> boost::bind(R (T::*)(B1, B2)const, A1, A2, A3)
/usr/include/boost/bind/bind_mf_cc.hpp:91:5: note: template<class R, class T, class B1, class B2, class B3, class A1, class A2, class A3, class A4> boost::_bi::bind_t<R, boost::_mfi::mf3<R, T, B1, B2, B3>, typename boost::_bi::list_av_4<A1, A2, A3, A4>::type> boost::bind(R (T::*)(B1, B2, B3), A1, A2, A3, A4)
/usr/include/boost/bind/bind_mf_cc.hpp:102:5: note: template<class R, class T, class B1, class B2, class B3, class A1, class A2, class A3, class A4> boost::_bi::bind_t<R, boost::_mfi::cmf3<R, T, B1, B2, B3>, typename boost::_bi::list_av_4<A1, A2, A3, A4>::type> boost::bind(R (T::*)(B1, B2, B3)const, A1, A2, A3, A4)
/usr/include/boost/bind/bind_mf_cc.hpp:115:5: note: template<class R, class T, class B1, class B2, class B3, class B4, class A1, class A2, class A3, class A4, class A5> boost::_bi::bind_t<R, boost::_mfi::mf4<R, T, B1, B2, B3, B4>, typename boost::_bi::list_av_5<A1, A2, A3, A4, A5>::type> boost::bind(R (T::*)(B1, B2, B3, B4), A1, A2, A3, A4, A5)
/usr/include/boost/bind/bind_mf_cc.hpp:126:5: note: template<class R, class T, class B1, class B2, class B3, class B4, class A1, class A2, class A3, class A4, class A5> boost::_bi::bind_t<R, boost::_mfi::cmf4<R, T, B1, B2, B3, B4>, typename boost::_bi::list_av_5<A1, A2, A3, A4, A5>::type> boost::bind(R (T::*)(B1, B2, B3, B4)const, A1, A2, A3, A4, A5)
/usr/include/boost/bind/bind_mf_cc.hpp:139:5: note: template<class R, class T, class B1, class B2, class B3, class B4, class B5, class A1, class A2, class A3, class A4, class A5, class A6> boost::_bi::bind_t<R, boost::_mfi::mf5<R, T, B1, B2, B3, B4, B5>, typename boost::_bi::list_av_6<A1, A2, A3, A4, A5, A6>::type> boost::bind(R (T::*)(B1, B2, B3, B4, B5), A1, A2, A3, A4, A5, A6)
/usr/include/boost/bind/bind_mf_cc.hpp:150:5: note: template<class R, class T, class B1, class B2, class B3, class B4, class B5, class A1, class A2, class A3, class A4, class A5, class A6> boost::_bi::bind_t<R, boost::_mfi::cmf5<R, T, B1, B2, B3, B4, B5>, typename boost::_bi::list_av_6<A1, A2, A3, A4, A5, A6>::type> boost::bind(R (T::*)(B1, B2, B3, B4, B5)const, A1, A2, A3, A4, A5, A6)
/usr/include/boost/bind/bind_mf_cc.hpp:163:5: note: template<class R, class T, class B1, class B2, class B3, class B4, class B5, class B6, class A1, class A2, class A3, class A4, class A5, class A6, class A7> boost::_bi::bind_t<R, boost::_mfi::mf6<R, T, B1, B2, B3, B4, B5, B6>, typename boost::_bi::list_av_7<A1, A2, A3, A4, A5, A6, A7>::type> boost::bind(R (T::*)(B1, B2, B3, B4, B5, B6), A1, A2, A3, A4, A5, A6, A7)
/usr/include/boost/bind/bind_mf_cc.hpp:174:5: note: template<class R, class T, class B1, class B2, class B3, class B4, class B5, class B6, class A1, class A2, class A3, class A4, class A5, class A6, class A7> boost::_bi::bind_t<R, boost::_mfi::cmf6<R, T, B1, B2, B3, B4, B5, B6>, typename boost::_bi::list_av_7<A1, A2, A3, A4, A5, A6, A7>::type> boost::bind(R (T::*)(B1, B2, B3, B4, B5, B6)const, A1, A2, A3, A4, A5, A6, A7)
/usr/include/boost/bind/bind_mf_cc.hpp:187:5: note: template<class R, class T, class B1, class B2, class B3, class B4, class B5, class B6, class B7, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8> boost::_bi::bind_t<R, boost::_mfi::mf7<R, T, B1, B2, B3, B4, B5, B6, B7>, typename boost::_bi::list_av_8<A1, A2, A3, A4, A5, A6, A7, A8>::type> boost::bind(R (T::*)(B1, B2, B3, B4, B5, B6, B7), A1, A2, A3, A4, A5, A6, A7, A8)
/usr/include/boost/bind/bind_mf_cc.hpp:198:5: note: template<class R, class T, class B1, class B2, class B3, class B4, class B5, class B6, class B7, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8> boost::_bi::bind_t<R, boost::_mfi::cmf7<R, T, B1, B2, B3, B4, B5, B6, B7>, typename boost::_bi::list_av_8<A1, A2, A3, A4, A5, A6, A7, A8>::type> boost::bind(R (T::*)(B1, B2, B3, B4, B5, B6, B7)const, A1, A2, A3, A4, A5, A6, A7, A8)
make[3]: Leaving directory `/work/ros/hmax/build'
/usr/include/boost/bind/bind_mf_cc.hpp:211:5: note: template<class R, class T, class B1, class B2, class B3, class B4, class B5, class B6, class B7, class B8, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9> boost::_bi::bind_t<R, boost::_mfi::mf8<R, T, B1, B2, B3, B4, B5, B6, B7, B8>, typename boost::_bi::list_av_9<A1, A2, A3, A4, A5, A6, A7, A8, A9>::type> boost::bind(R (T::*)(B1, B2, B3, B4, B5, B6, B7, B8), A1, A2, A3, A4, A5, A6, A7, A8, A9)
make[2]: Leaving directory `/work/ros/hmax/build'
make[1]: Leaving directory `/work/ros/hmax/build'
/usr/include/boost/bind/bind_mf_cc.hpp:222:5: note: template<class R, class T, class B1, class B2, class B3, class B4, class B5, class B6, class B7, class B8, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9> boost::_bi::bind_t<R, boost::_mfi::cmf8<R, T, B1, B2, B3, B4, B5, B6, B7, B8>, typename boost::_bi::list_av_9<A1, A2, A3, A4, A5, A6, A7, A8, A9>::type> boost::bind(R (T::*)(B1, B2, B3, B4, B5, B6, B7, B8)const, A1, A2, A3, A4, A5, A6, A7, A8, A9)
/usr/include/boost/bind/bind_mf2_cc.hpp:21:5: note: template<class Rt2, class R, class T, class A1> boost::_bi::bind_t<Rt2, boost::_mfi::mf0<R, T>, typename boost::_bi::list_av_1<A1>::type> boost::bind(boost::type<R>, R (T::*)(), A1)
/usr/include/boost/bind/bind_mf2_cc.hpp:31:5: note: template<class Rt2, class R, class T, class A1> boost::_bi::bind_t<Rt2, boost::_mfi::cmf0<R, T>, typename boost::_bi::list_av_1<A1>::type> boost::bind(boost::type<R>, R (T::*)()const, A1)
/usr/include/boost/bind/bind_mf2_cc.hpp:44:5: note: template<class Rt2, class R, class T, class B1, class A1, class A2> boost::_bi::bind_t<Rt2, boost::_mfi::mf1<R, T, B1>, typename boost::_bi::list_av_2<A1, A2>::type> boost::bind(boost::type<R>, R (T::*)(B1), A1, A2)
/usr/include/boost/bind/bind_mf2_cc.hpp:55:5: note: template<class Rt2, class R, class T, class B1, class A1, class A2> boost::_bi::bind_t<Rt2, boost::_mfi::cmf1<R, T, B1>, typename boost::_bi::list_av_2<A1, A2>::type> boost::bind(boost::type<R>, R (T::*)(B1)const, A1, A2)
/usr/include/boost/bind/bind_mf2_cc.hpp:68:5: note: template<class Rt2, class R, class T, class B1, class B2, class A1, class A2, class A3> boost::_bi::bind_t<Rt2, boost::_mfi::mf2<R, T, B1, B2>, typename boost::_bi::list_av_3<A1, A2, A3>::type> boost::bind(boost::type<R>, R (T::*)(B1, B2), A1, A2, A3)
/usr/include/boost/bind/bind_mf2_cc.hpp:79:5: note: template<class Rt2, class R, class T, class B1, class B2, class A1, class A2, class A3> boost::_bi::bind_t<Rt2, boost::_mfi::cmf2<R, T, B1, B2>, typename boost::_bi::list_av_3<A1, A2, A3>::type> boost::bind(boost::type<R>, R (T::*)(B1, B2)const, A1, A2, A3)
/usr/include/boost/bind/bind_mf2_cc.hpp:92:5: note: template<class Rt2, class R, class T, class B1, class B2, class B3, class A1, class A2, class A3, class A4> boost::_bi::bind_t<Rt2, boost::_mfi::mf3<R, T, B1, B2, B3>, typename boost::_bi::list_av_4<A1, A2, A3, A4>::type> boost::bind(boost::type<R>, R (T::*)(B1, B2, B3), A1, A2, A3, A4)
/usr/include/boost/bind/bind_mf2_cc.hpp:103:5: note: template<class Rt2, class R, class T, class B1, class B2, class B3, class A1, class A2, class A3, class A4> boost::_bi::bind_t<Rt2, boost::_mfi::cmf3<R, T, B1, B2, B3>, typename boost::_bi::list_av_4<A1, A2, A3, A4>::type> boost::bind(boost::type<R>, R (T::*)(B1, B2, B3)const, A1, A2, A3, A4)
/usr/include/boost/bind/bind_mf2_cc.hpp:116:5: note: template<class Rt2, class R, class T, class B1, class B2, class B3, class B4, class A1, class A2, class A3, class A4, class A5> boost::_bi::bind_t<Rt2, boost::_mfi::mf4<R, T, B1, B2, B3, B4>, typename boost::_bi::list_av_5<A1, A2, A3, A4, A5>::type> boost::bind(boost::type<Rt2>, R (T::*)(B1, B2, B3, B4), A1, A2, A3, A4, A5)
/usr/include/boost/bind/bind_mf2_cc.hpp:127:5: note: template<class Rt2, class R, class T, class B1, class B2, class B3, class B4, class A1, class A2, class A3, class A4, class A5> boost::_bi::bind_t<Rt2, boost::_mfi::cmf4<R, T, B1, B2, B3, B4>, typename boost::_bi::list_av_5<A1, A2, A3, A4, A5>::type> boost::bind(boost::type<Rt2>, R (T::*)(B1, B2, B3, B4)const, A1, A2, A3, A4, A5)
/usr/include/boost/bind/bind_mf2_cc.hpp:140:5: note: template<class Rt2, class R, class T, class B1, class B2, class B3, class B4, class B5, class A1, class A2, class A3, class A4, class A5, class A6> boost::_bi::bind_t<Rt2, boost::_mfi::mf5<R, T, B1, B2, B3, B4, B5>, typename boost::_bi::list_av_6<A1, A2, A3, A4, A5, A6>::type> boost::bind(boost::type<Rt2>, R (T::*)(B1, B2, B3, B4, B5), A1, A2, A3, A4, A5, A6)
/usr/include/boost/bind/bind_mf2_cc.hpp:151:5: note: template<class Rt2, class R, class T, class B1, class B2, class B3, class B4, class B5, class A1, class A2, class A3, class A4, class A5, class A6> boost::_bi::bind_t<Rt2, boost::_mfi::cmf5<R, T, B1, B2, B3, B4, B5>, typename boost::_bi::list_av_6<A1, A2, A3, A4, A5, A6>::type> boost::bind(boost::type<Rt2>, R (T::*)(B1, B2, B3, B4, B5)const, A1, A2, A3, A4, A5, A6)
/usr/include/boost/bind/bind_mf2_cc.hpp:164:5: note: template<class Rt2, class R, class T, class B1, class B2, class B3, class B4, class B5, class B6, class A1, class A2, class A3, class A4, class A5, class A6, class A7> boost::_bi::bind_t<Rt2, boost::_mfi::mf6<R, T, B1, B2, B3, B4, B5, B6>, typename boost::_bi::list_av_7<A1, A2, A3, A4, A5, A6, A7>::type> boost::bind(boost::type<Rt2>, R (T::*)(B1, B2, B3, B4, B5, B6), A1, A2, A3, A4, A5, A6, A7)
/usr/include/boost/bind/bind_mf2_cc.hpp:175:5: note: template<class Rt2, class R, class T, class B1, class B2, class B3, class B4, class B5, class B6, class A1, class A2, class A3, class A4, class A5, class A6, class A7> boost::_bi::bind_t<Rt2, boost::_mfi::cmf6<R, T, B1, B2, B3, B4, B5, B6>, typename boost::_bi::list_av_7<A1, A2, A3, A4, A5, A6, A7>::type> boost::bind(boost::type<Rt2>, R (T::*)(B1, B2, B3, B4, B5, B6)const, A1, A2, A3, A4, A5, A6, A7)
/usr/include/boost/bind/bind_mf2_cc.hpp:188:5: note: template<class Rt2, class R, class T, class B1, class B2, class B3, class B4, class B5, class B6, class B7, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8> boost::_bi::bind_t<Rt2, boost::_mfi::mf7<R, T, B1, B2, B3, B4, B5, B6, B7>, typename boost::_bi::list_av_8<A1, A2, A3, A4, A5, A6, A7, A8>::type> boost::bind(boost::type<Rt2>, R (T::*)(B1, B2, B3, B4, B5, B6, B7), A1, A2, A3, A4, A5, A6, A7, A8)
/usr/include/boost/bind/bind_mf2_cc.hpp:199:5: note: template<class Rt2, class R, class T, class B1, class B2, class B3, class B4, class B5, class B6, class B7, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8> boost::_bi::bind_t<Rt2, boost::_mfi::cmf7<R, T, B1, B2, B3, B4, B5, B6, B7>, typename boost::_bi::list_av_8<A1, A2, A3, A4, A5, A6, A7, A8>::type> boost::bind(boost::type<Rt2>, R (T::*)(B1, B2, B3, B4, B5, B6, B7)const, A1, A2, A3, A4, A5, A6, A7, A8)
/usr/include/boost/bind/bind_mf2_cc.hpp:212:5: note: template<class Rt2, class R, class T, class B1, class B2, class B3, class B4, class B5, class B6, class B7, class B8, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9> boost::_bi::bind_t<Rt2, boost::_mfi::mf8<R, T, B1, B2, B3, B4, B5, B6, B7, B8>, typename boost::_bi::list_av_9<A1, A2, A3, A4, A5, A6, A7, A8, A9>::type> boost::bind(boost::type<Rt2>, R (T::*)(B1, B2, B3, B4, B5, B6, B7, B8), A1, A2, A3, A4, A5, A6, A7, A8, A9)
/usr/include/boost/bind/bind_mf2_cc.hpp:223:5: note: template<class Rt2, class R, class T, class B1, class B2, class B3, class B4, class B5, class B6, class B7, class B8, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9> boost::_bi::bind_t<Rt2, boost::_mfi::cmf8<R, T, B1, B2, B3, B4, B5, B6, B7, B8>, typename boost::_bi::list_av_9<A1, A2, A3, A4, A5, A6, A7, A8, A9>::type> boost::bind(boost::type<Rt2>, R (T::*)(B1, B2, B3, B4, B5, B6, B7, B8)const, A1, A2, A3, A4, A5, A6, A7, A8, A9)
/usr/include/boost/bind/bind.hpp:1728:1: note: template<class A1, class M, class T> boost::_bi::bind_t<typename boost::_bi::dm_result<M T::*, A1>::type, boost::_mfi::dm<M, T>, typename boost::_bi::list_av_1<A1>::type> boost::bind(M T::*, A1)
make[3]: *** [CMakeFiles/S2_new_node.dir/src/S2_new_node.o] Error 1
make[2]: *** [CMakeFiles/S2_new_node.dir/all] Error 2
make[1]: *** [all] Error 2
make: *** [all] Error 2

Any clue why this happens?
Might it have something to do with using boost 1.46?
Cheers,
Andreas
EDIT: WORKAROUND FOUND
The problem doesn't occur, when I'm not using a class:
int main(int argc, char** argv)
{
  ros::init(argc, argv, "S2_synchronized");
  ros::NodeHandle nh_;

  read_parameters(nh_);

  message_filters::Subscriber<Image> image1_sub(nh_, "/c1_response/8", 1);
  message_filters::Subscriber<Image> image2_sub(nh_, "/c1_response/10", 1);
  message_filters::Subscriber<Image> image3_sub(nh_, "/c1_response/12", 1);
  message_filters::Subscriber<Image> image4_sub(nh_, "/c1_response/14", 1);
  message_filters::Subscriber<Image> image5_sub(nh_, "/c1_response/16", 1);
  message_filters::Subscriber<Image> image6_sub(nh_, "/c1_response/18", 1);
  message_filters::Subscriber<Image> image7_sub(nh_, "/c1_response/20", 1);
  message_filters::Subscriber<Image> image8_sub(nh_, "/c1_response/22", 1);

  typedef sync_policies::ApproximateTime<Image, Image, Image, Image, Image, Image, Image, Image> MySyncPolicy;
  // ApproximateTime takes a queue size as its constructor argument, hence MySyncPolicy(10)
  Synchronizer<MySyncPolicy> sync(MySyncPolicy(10), image1_sub, image2_sub, image3_sub, image4_sub, image5_sub, image6_sub, image7_sub, image7_sub);
  sync.registerCallback(boost::bind(&callback, _1, _2, _3, _4, _5, _6, _7, _8));

  ros::spin();
  return 0;
}

Originally posted by andreas on ROS Answers with karma: 168 on 2012-10-02
Post score: 0

A:

Can you try if it works with 6 and 7 chanels? I suspect that boost::bind is just not implemented for so many parameters. Maybe you will have to implement your callback as a functor object manually, e.g. create the following nestet struct in your class S2 and use it as callback:
struct FilterFunctor {
  S2 *self_;
  const std::string &name_;

  FilterFunctor(S2 *self, const std::string &name) 
    : self_(self), name_(name) {}
    
  void operator()(const sensor_msgs::ImageConstPtr& original_image1, const sensor_msgs::ImageConstPtr& original_image2,
            const sensor_msgs::ImageConstPtr& original_image3, const sensor_msgs::ImageConstPtr& original_image4) {
    ...
  }
};

Originally posted by Lorenz with karma: 22731 on 2012-10-02
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by andreas on 2012-10-02:
It works with 6 and works with 7.
I will try it with the functor object, or just split the callback up to twice four channels.
Thanks!
Comment by andreas on 2012-10-02:
Or maybe is it possible to somehow use registerCallback without bind?
Comment by Lorenz on 2012-10-02:
Yes. The functor above basically shows you how to implement it without bind.

