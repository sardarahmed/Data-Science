Q:

Why does robot_state_publisher skip publishing fixed joints

When attempting to do transforms on a kinematic model managed by robot_state_publisher I've noticed that fixed joints do not get published along with the tf data produced by publishTransforms.
This causes problems in anything relying on the transform chain like, among other things, rviz.
Why does this happen?

Originally posted by Asomerville on ROS Answers with karma: 2743 on 2011-10-25
Post score: 2

A:

It turns out as of Electric, the semantics of publishTransforms have changed and there is a separate call to publish fixed joints/transforms:

publishFixedTransforms

Change happened here:
https://kforge.ros.org/robotmodel/robot_model/rev/5a3604a9031f

Originally posted by Asomerville with karma: 2743 on 2011-10-25
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Asomerville on 2011-12-12:
I got the impression from the wiki/tutorial that library was meant for end users/counts a public API. Not so?
Comment by Wim on 2011-12-12:
When you use the robot state publisher as a ROS node, the functionality should not have changed, and all old code should still work. If you are using the internal API of the state publisher, then this is indeed a breaking change.
Comment by Asomerville on 2011-12-12:
That makes sense, but the semantics seem to have changed from diamondback to electric with no change in signature/warning. That would cause silent failure in code written to the old semantics. Not sure if it makes sense to file a ticket now, as any fix would cause a second semantic change. Opinion?
Comment by tfoote on 2011-12-12:
This allows you to not publish the fixed transforms as fast as the dynamic ones, saving bandwidth.

