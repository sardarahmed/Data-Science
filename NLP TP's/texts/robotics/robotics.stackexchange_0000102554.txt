Q:

About the Point Cloud Coordinate System Issued by the RGB-D Camera

I found a strange problem when I used the turbobot3 simulation.Why The point cloud direction published by camera_rgb_optical_frame is upward.

Originally posted by wugeshenhuaking on ROS Answers with karma: 35 on 2022-10-16
Post score: 0

A:

There are established conventions for the frame's x, y and z-axis for a camera image. Please read this page:
https://www.ros.org/reps/rep-0103.html
If you are in a hurry, search for _optical.

Originally posted by Mike Scheutzow with karma: 4903 on 2022-10-16
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by wugeshenhuaking on 2022-10-17:
@Mike Scheutzow Does this mean that I must transform the point cloud released by this coordinate system into a common coordinate system under ROS. Then I can do related work, such as filtering too high or too low point clouds. Then transform the processed point cloud inverse coordinates back to _optical frame.
Comment by Mike Scheutzow on 2022-10-17:
Does this mean that I must transform the point cloud released by this coordinate system into a common coordinate system under ROS
Yes, but it is easy to implement if the camera is in your TF tree: use tf2_ros Buffer.transform() to convert each point into the TF frame you want to work in (typically base_link or map.)
For a robot-mounted camera, your TF usually looks something like base_link -> camera_base -> camera_optical. The camera_optical origin is at corner of the image sensor inside the camera body.
Typically you won't need to transform the data points back to camera_optical frame, but nothing stops you from doing so.

