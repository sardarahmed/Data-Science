Q:

how to bind a callback to include a MessageEvent

I am trying to use MessageEvent to get topic information in a callback.  While I have referred to the example here
and here
I can't figure out how to use boost::bind to tell the subscriber to give me both the PointCloud message and the MessageEvent. Is there an example of this somewhere? Here is what I have, which is definitely wrong:
  sub_cloud_ = nh_.subscribe<sensor_msgs::PointCloud2>
              (input_topic_, 1, 
                boost::bind(&HapticNode::cloudCallback, this, _1, _2));

  void HapticNode::cloudCallback(const sensor_msgs::PointCloud2ConstPtr &input, 
                       const ros::MessageEvent<std_msgs::String const>& event)
  {
    std::string topic;
    const std::string& publisher_name = event.getPublisherName();
    ros::M_string connection_header = event.getConnectionHeader();
    topic = connection_header["topic"];

    ROS_INFO("Got a cloud on topic %s in frame %s with %d points!",
             topic.c_str(), 
             input->header.frame_id.c_str(), 
             input->width*input->height);
  }

Originally posted by aleeper on ROS Answers with karma: 573 on 2011-03-28
Post score: 2

A:

I think you want to use the getMessage method of the MessageEvent instance that you have. Adapting the example from the documentation,
void callback(const ros::MessageEvent<sensor_msgs::PointCloud2 const>& event)
{
  const std::string& publisher_name = event.getPublisherName();
  const ros::M_string& header = event.getConnectionHeader();
  ros::Time receipt_time = event.getReceiptTime();
  
  const sensor_msgs::PointCloud2& input = event.getMessage();

  ROS_INFO("Got a cloud on topic %s in frame %s with %d points!",
           topic.c_str(), 
           input.header.frame_id.c_str(), 
           input.width*input.height);
}

Originally posted by Patrick Bouffard with karma: 2264 on 2011-03-28
This answer was ACCEPTED on the original site
Post score: 1

