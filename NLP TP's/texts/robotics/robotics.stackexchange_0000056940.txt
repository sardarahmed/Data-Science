Q:

rosrun ambiguities after migrating to hydro

I'm currently migrating from fuerte to hydro (on an Ubuntu 12.04).
In a first step, I kept all my old packages dry and managed to build them in hydro.
Running the system on the other hand seems to be more complicated.
I'm using my own, slightly altered versions of some popular packages such as move_base.
To tell whether to use the original move_base or my version I used to change the include order in ROS_PACKAGE_PATH, which worked fine.
The hydro version of rosrun, however, reports an ambiguity:
[rosrun] You have chosen a non-unique executable, please pick one of the following:
1) /opt/ros/hydro/lib/move_base/move_base
2) /path/to/my/version/of/move_base/bin/move_base
#? 

If I try to call move_base from roslaunch, it will choose option 1 per default.
I've got the same problem with move_base plugins. Once I tell rosrun to load my version of move_base, it will still load move_base plugins from hydro.
Is there a way to tell hydro to load packages from ROS_PACKAGE_PATH per default?
echo $ROS_PACKAGE_PATH returns:
/home/incubed/robotics/incubed-ros-pkg:/opt/ros/hydro/share:/opt/ros/hydro/stacks

Originally posted by madmax on ROS Answers with karma: 496 on 2014-01-29
Post score: 2

Original comments
Comment by ahendrix on 2014-01-29:
What is your ROS_PACKAGE_PATH set to?
Comment by madmax on 2014-01-29:
/home/incubed/robotics/incubed-ros-pkg:/opt/ros/hydro/share:/opt/ros/hydro/stacks

A:

Use CMAKE_PREFIX_PATH to order catkin workspaces. Note, I am assuming you have a catkin version of move_base. Catkin workspaces seem to be explored first in the rosrun script. If it's a "dry" move_base, you need to uninstall the package or rename the executable in /opt/ros/hydro/lib/[package]/[node].

Originally posted by Constantin S with karma: 296 on 2014-01-30
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Mate Wolfram on 2014-01-31:
working on the same problem... "export CMAKE_PREFIX_PATH=" helps, the rosrun ambiguity is resolved. However, pluginlib still has trouble loading trajectory planner (also my own version & dry): Exception: MultiLibraryClassLoader: Could not create class of type base_local_planner::TrajectoryPlannerROS
Comment by Constantin S on 2014-01-31:
Mate - This could be for a variety of reasons. Since its a dynamically loaded library, you could be missing dependencies at runtime, especially if you're using an older version of move_base.... check your LD_LIBRARY_PATH and PATH variables. A good way to check them is to source a catkin workspaces and see how they get set. Also do an ldd on the plugin file that holds that class. I don't remember what it was called off the top of my head. You'll see what the dependencies are. I don't know your linux level, but these dependencies will resolved using LD_LIBRARY_PATH. Here's some great info on that: http://tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html

