Q:

Advantage of adding costmap_2d::ObstacleLayer plugin to global costmap

I was going through this Husky Navigation tutorial. This tutorial allows us how to navigate the Husky bot without using a map.
It has 3 yaml files for configuring the costmaps -  costmap_global_laser.yaml (for global costmap) , costmap_local.yaml (for local costmap) and costmap_common.yaml (for both global and local costmap).
This is how costmap_local.yaml looks-
global_frame: odom
rolling_window: true

plugins:
  - {name: obstacles_laser,           type: "costmap_2d::ObstacleLayer"}
  - {name: inflation,                        type: "costmap_2d::InflationLayer"}

This is  how costmap_global_laser.yaml looks-
global_frame: odom
rolling_window: true
track_unknown_space: true

plugins:
  - {name: obstacles_laser,           type: "costmap_2d::ObstacleLayer"}
  - {name: inflation,                       type: "costmap_2d::InflationLayer"}

Why have we added an costmap_2d:ObstacleLayer to the costmap_global_laser.yaml  when it is already included in the costmap_local.yaml? Are there any advantages in terms of path planning?

Originally posted by skpro19 on ROS Answers with karma: 310 on 2020-12-25
Post score: 0

A:

The "costmap_2d:ObstacleLayer" in global costmap will "add" obstacle into global costmap, which resultes that global planner will plan a path to avoid that obstacle

Originally posted by drtritm with karma: 187 on 2021-01-12
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by skpro19 on 2021-01-12:
Makes sense. Thanks!

