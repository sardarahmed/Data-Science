Q:

Linear Motion Control for quadrotor (clarification)

I've posted a question regarding this matter that I couldn't solve. I'm reading this paper, the authors state 

Linear $x$ and $y$ Motion Control: From the mathematical model one can see
  that the motion through the axes $x$ and $y$ depends on $U_{1}$. In fact $U_{1}$ is
  the total thrust vector oriented to obtain the desired linear motion.
  If we consider $U_{x}$ and $U_{y}$ the orientations of $U_{1}$ responsible for the
  motion through x and y axis respectively, we can then extract from
  formula (18) the roll and pitch angles necessary to compute the
  controls $U_{x}$ and $U_{y}$ ensuring the Lyapunov function to be negative
  semi-definite ( see Fig. 2).

The paper is very clear except in the linear motion control. They didn't explicitly state the equations for extracting the angles. The confusing part is when they say 

we can then extract from
  formula (18) the roll and pitch angles necessary to compute the
  controls $U_{x}$ and $U_{y}$

where formula (18) is
$$
U_{x} = \frac{m}{U_{1}} (\cos\phi \sin\theta \cos\psi + \sin\phi \sin\psi) \\
U_{y} = \frac{m}{U_{1}} (\cos\phi \sin\theta \sin\psi - \cos\phi \cos\psi) \\
$$
It seems to me that the roll and pitch angles depend on $U_{x}$ and $U_{y}$, therefore we compute the roll and pitch angles based on the $U_{x}$ and $U_{y}$ to control the linear motion. 

A:

I reckon that the equations you raised in your previous post, in the assumption of small angles, already give us the intuition that $U_1$ is used to keep the height $z$ as desired, so that what is left to us to control the linear displacement $x$ and $y$ of the quadcopter is the roll $\phi$ and pitch $\theta$.
Therefore, your last equation to find out the desired $\phi_d$ and $\theta_d$ as function of linear acceleration $\ddot{\hat{x}}_d$ and $\ddot{\hat{y}}_d$ is correct.
Of course, then, you'll impose some tracking behavior such as the one I've seen in your script that relates the linear acceleration with the displacement error, something like the well known impedance control law: $\ddot{\hat{x}}_d=K_p\left(x_d-x\right)+K_d\dot{x}$. Note how $\ddot{\hat{x}}_d \neq \frac{d^2x_d}{dt^2}$.
In this case it is evident how you don't employ the yaw $\psi$ for the linear displacement: it's simply kept constant. It is usually used for more complicated maneuvers indeed.
If the small angle assumption does no longer hold, then you're forced to rely on the Eq.(6) described in the paper you cited, which still doesn't change too much the story.
I don't know how familiar you're with Simulink, but it'd be much easier to simulate this system by means of it.

