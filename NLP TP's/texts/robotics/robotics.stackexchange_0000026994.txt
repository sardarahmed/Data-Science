Q:

gzserver segfaults upon startup

Hi all
I have just installed Gazebo 2.2.1 from source.  When attempting to start the server ($ gzserver), the program appears to do nothing for ~30 seconds then has a segmentation fault.  The program output and backtrace is as follows:
(gdb) run
Starting program: /home/jake/Builds/gazebo/build/gazebo/gzserver 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[New Thread 0x7fffe0103700 (LWP 12683)]
Gazebo multi-robot simulator, version 2.2.1
Copyright (C) 2012-2014 Open Source Robotics Foundation.
Released under the Apache 2 License.
http://gazebosim.org

[New Thread 0x7fffdf639700 (LWP 12684)]
[New Thread 0x7fffdee38700 (LWP 12685)]
Msg Waiting for master
Msg Connected to gazebo master @ http://127.0.0.1:11345
Msg Publicized address: 10.0.0.36
Warning [ModelDatabase.cc:334] Getting models from[http://gazebosim.org/models/]. This may take a few seconds.
[New Thread 0x7fffde42b700 (LWP 12686)]
[Thread 0x7fffde42b700 (LWP 12686) exited]
[New Thread 0x7fffde42b700 (LWP 12687)]
[Thread 0x7fffde42b700 (LWP 12687) exited]
[New Thread 0x7fffde42b700 (LWP 12688)]
[Thread 0x7fffde42b700 (LWP 12688) exited]
*** Large number of similar lines removed for clarity ***
[New Thread 0x7fffde42b700 (LWP 12803)]
[Thread 0x7fffde42b700 (LWP 12803) exited]
[New Thread 0x7fffde42b700 (LWP 12804)]
[Thread 0x7fffde42b700 (LWP 12804) exited]
[New Thread 0x7fffde42b700 (LWP 12805)]
[Thread 0x7fffde42b700 (LWP 12805) exited]

Program received signal SIGSEGV, Segmentation fault.
strlen () at ../sysdeps/x86_64/strlen.S:106
106 ../sysdeps/x86_64/strlen.S: No such file or directory.
(gdb) bt
#0  strlen () at ../sysdeps/x86_64/strlen.S:106
#1  0x00007ffff2e5f7a0 in mkdirhier () from /usr/lib/libtar.so.0
#2  0x00007ffff2e5e19d in tar_extract_dir () from /usr/lib/libtar.so.0
#3  0x00007ffff2e5e3fb in tar_extract_file () from /usr/lib/libtar.so.0
#4  0x00007ffff2e5fc32 in tar_extract_all () from /usr/lib/libtar.so.0
#5  0x00007ffff7b96a1a in gazebo::common::ModelDatabase::GetModelPath (this=this@entry=0x64f4e0 <SingletonT<gazebo::common::ModelDatabase>::GetInstance()::t>, _uri=..., 
    _forceDownload=_forceDownload@entry=true) at /home/jake/Builds/gazebo/gazebo/common/ModelDatabase.cc:510
#6  0x00007ffff7bad0a9 in gazebo::common::SystemPaths::FindFileURI (this=this@entry=0x64fd40 <SingletonT<gazebo::common::SystemPaths>::GetInstance()::t>, _uri=...)
    at /home/jake/Builds/gazebo/gazebo/common/SystemPaths.cc:279
#7  0x00007ffff7bad527 in gazebo::common::SystemPaths::FindFile (this=this@entry=0x64fd40 <SingletonT<gazebo::common::SystemPaths>::GetInstance()::t>, _filename=..., 
    _searchLocalPath=_searchLocalPath@entry=true) at /home/jake/Builds/gazebo/gazebo/common/SystemPaths.cc:303
#8  0x00007ffff7b7fd07 in gazebo::common::find_file (_file=...) at /home/jake/Builds/gazebo/gazebo/common/CommonIface.cc:58
#9  0x000000000043ca7c in operator()<std::basic_string<char>, std::basic_string<char> (*)(const std::basic_string<char>&), boost::_bi::list1<const std::basic_string<char>&> > (
    this=<optimised out>, f=<optimised out>, a=<synthetic pointer>) at /usr/include/boost/bind/bind.hpp:243
#10 operator()<std::basic_string<char> > (a1=..., this=<optimised out>) at /usr/include/boost/bind/bind_template.hpp:47
#11 boost::detail::function::function_obj_invoker1<boost::_bi::bind_t<std::string, std::string (*)(std::string const&), boost::_bi::list1<boost::arg<1> > >, std::string, std::string const&>::invoke (function_obj_ptr=..., a0=...) at /usr/include/boost/function/function_template.hpp:132
#12 0x00007ffff5e47bef in sdf::findFile(std::string const&, bool, bool) () from /usr/lib/x86_64-linux-gnu/libsdformat.so.2
#13 0x00007ffff5e0823a in sdf::readXml(TiXmlElement*, boost::shared_ptr<sdf::Element>) () from /usr/lib/x86_64-linux-gnu/libsdformat.so.2
#14 0x00007ffff5e0812f in sdf::readXml(TiXmlElement*, boost::shared_ptr<sdf::Element>) () from /usr/lib/x86_64-linux-gnu/libsdformat.so.2
#15 0x00007ffff5e0b0cb in sdf::readDoc(TiXmlDocument*, boost::shared_ptr<sdf::SDF>, std::string const&) () from /usr/lib/x86_64-linux-gnu/libsdformat.so.2
#16 0x00007ffff5e0bc25 in sdf::readFile(std::string const&, boost::shared_ptr<sdf::SDF>) () from /usr/lib/x86_64-linux-gnu/libsdformat.so.2
#17 0x00000000004261bd in gazebo::Server::LoadFile (this=this@entry=0x6be690, _filename=..., _physics=...) at /home/jake/Builds/gazebo/gazebo/Server.cc:294
#18 0x0000000000427b91 in gazebo::Server::ParseArgs (this=this@entry=0x6be690, argc=argc@entry=1, argv=argv@entry=0x7fffffffd818) at /home/jake/Builds/gazebo/gazebo/Server.cc:257
#19 0x0000000000420e24 in main (argc=1, argv=0x7fffffffd818) at /home/jake/Builds/gazebo/gazebo/server_main.cc:40
(gdb)

gzclient works fine - I tested by connecting it to an instance of gzserver running on a different computer.
Additionally, I have tried compiling Gazebo 1.9.5, but the error remained the same.
System specs:
OS: XUbuntu 14.04 64-bit
Graphics: Nvidia GeForce GTX 765M (Running with Bumblebee and Nvidia drivers) 
ROS version: Hydro (Compiled from source, known working)

Thanks in advance.

Originally posted by jake.anq on Gazebo Answers with karma: 1 on 2014-04-22
Post score: 0

A:

After looking around in gdb a bit more, I solved the problem by manually copying the contents of the .gazebo/models directory from the computer that had a working gzserver to the one that did not work.  It all seems to work properly now, although I am still puzzled as to why it is still segfaulting.
For anyone else who comes across this problem, the files required are the .tar.gz archives in the sun/ and ground_plane/ folders found here: http://gazebosim.org/models/

Originally posted by jake.anq with karma: 1 on 2014-04-22
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Jose Luis Rivero on 2014-04-25:
Thanks for the answer. Could you please check as valid by cliking the tick signal?

