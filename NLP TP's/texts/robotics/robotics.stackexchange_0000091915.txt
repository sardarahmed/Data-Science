Q:

Problem with building navigation stack

I am using ROS melodic on Ubuntu 18.04 in Nvidia Jetson Nano. I am trying to building navigation from the code in github. I get the following error.
[ 98%] Built target planner
In file included from /home/nano/ws/src/navigation/move_base/src/move_base.cpp:38:0:
/home/nano/ws/src/navigation/move_base/include/move_base/move_base.h:64:41: error: ‘move_base_msgs’ was not declared in this scope
   typedef actionlib::SimpleActionServer<move_base_msgs::MoveBaseAction> MoveBaseActionServer;
                                         ^~~~~~~~~~~~~~
/home/nano/ws/src/navigation/move_base/include/move_base/move_base.h:64:41: note: suggested alternative: ‘move_base_EXPORTS’
   typedef actionlib::SimpleActionServer<move_base_msgs::MoveBaseAction> MoveBaseActionServer;
                                         ^~~~~~~~~~~~~~
                                         move_base_EXPORTS
/home/nano/ws/src/navigation/move_base/include/move_base/move_base.h:64:71: error: template argument 1 is invalid
   typedef actionlib::SimpleActionServer<move_base_msgs::MoveBaseAction> MoveBaseActionServer;
                                                                       ^
/home/nano/ws/src/navigation/move_base/include/move_base/move_base.h:163:28: error: ‘move_base_msgs’ does not name a type; did you mean ‘move_base_EXPORTS’?
       void executeCb(const move_base_msgs::MoveBaseGoalConstPtr& move_base_goal);
                            ^~~~~~~~~~~~~~
                            move_base_EXPORTS
/home/nano/ws/src/navigation/move_base/include/move_base/move_base.h:163:64: error: expected unqualified-id before ‘&’ token
       void executeCb(const move_base_msgs::MoveBaseGoalConstPtr& move_base_goal);
                                                                ^
/home/nano/ws/src/navigation/move_base/include/move_base/move_base.h:163:64: error: expected ‘)’ before ‘&’ token
/home/nano/ws/src/navigation/move_base/include/move_base/move_base.h:163:64: error: expected ‘;’ at end of member declaration
/home/nano/ws/src/navigation/move_base/include/move_base/move_base.h:163:66: error: ‘move_base_goal’ does not name a type; did you mean ‘move_base_EXPORTS’?
       void executeCb(const move_base_msgs::MoveBaseGoalConstPtr& move_base_goal);
                                                                  ^~~~~~~~~~~~~~
                                                                  move_base_EXPORTS
In file included from /usr/include/boost/bind.hpp:22:0,
                 from /opt/ros/melodic/include/ros/publisher.h:35,
                 from /opt/ros/melodic/include/ros/node_handle.h:32,
                 from /opt/ros/melodic/include/ros/ros.h:45,
                 from /home/nano/ws/src/navigation/move_base/include/move_base/move_base.h:43,
                 from /home/nano/ws/src/navigation/move_base/src/move_base.cpp:38:
/usr/include/boost/bind/bind.hpp: In instantiation of ‘struct boost::_bi::result_traits<boost::_bi::unspecified, void (move_base::MoveBase::*)(...) &>’:
/usr/include/boost/bind/bind.hpp:1284:48:   required from ‘class boost::_bi::bind_t<boost::_bi::unspecified, void (move_base::MoveBase::*)(...) &, boost::_bi::list2<boost::_bi::value<move_base::MoveBase*>, boost::arg<1> > >’
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:60:110:   required from here
/usr/include/boost/bind/bind.hpp:75:37: error: ‘void (move_base::MoveBase::*)(...) &’ is not a class, struct, or union type
     typedef typename F::result_type type;
                                     ^~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp: In constructor ‘move_base::MoveBase::MoveBase(tf2_ros::Buffer&)’:
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:60:118: error: new initializer expression list treated as compound expression [-fpermissive]
 s_ = new MoveBaseActionServer(ros::NodeHandle(), "move_base", boost::bind(&MoveBase::executeCb, this, _1), false);
                                                                                                                 ^
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:95:44: error: ‘move_base_msgs’ was not declared in this scope
     action_goal_pub_ = action_nh.advertise<move_base_msgs::MoveBaseActionGoal>("goal", 1);
                                            ^~~~~~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:95:44: note: suggested alternative: ‘move_base_EXPORTS’
     action_goal_pub_ = action_nh.advertise<move_base_msgs::MoveBaseActionGoal>("goal", 1);
                                            ^~~~~~~~~~~~~~
                                            move_base_EXPORTS
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:95:34: error: parse error in template argument list
     action_goal_pub_ = action_nh.advertise<move_base_msgs::MoveBaseActionGoal>("goal", 1);
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:95:89: error: no matching function for call to ‘ros::NodeHandle::advertise<<expression error> >(const char [5], int)’
     action_goal_pub_ = action_nh.advertise<move_base_msgs::MoveBaseActionGoal>("goal", 1);
                                                                                         ^
In file included from /opt/ros/melodic/include/ros/ros.h:45:0,
                 from /home/nano/ws/src/navigation/move_base/include/move_base/move_base.h:43,
                 from /home/nano/ws/src/navigation/move_base/src/move_base.cpp:38:
/opt/ros/melodic/include/ros/node_handle.h:249:15: note: candidate: template<class M> ros::Publisher ros::NodeHandle::advertise(const string&, uint32_t, bool)
     Publisher advertise(const std::string& topic, uint32_t queue_size, bool latch = false)
               ^~~~~~~~~
/opt/ros/melodic/include/ros/node_handle.h:249:15: note:   template argument deduction/substitution failed:
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:95:89: error: template argument 1 is invalid
     action_goal_pub_ = action_nh.advertise<move_base_msgs::MoveBaseActionGoal>("goal", 1);
                                                                                         ^
In file included from /opt/ros/melodic/include/ros/ros.h:45:0,
                 from /home/nano/ws/src/navigation/move_base/include/move_base/move_base.h:43,
                 from /home/nano/ws/src/navigation/move_base/src/move_base.cpp:38:
/opt/ros/melodic/include/ros/node_handle.h:315:13: note: candidate: template<class M> ros::Publisher ros::NodeHandle::advertise(const string&, uint32_t, const SubscriberStatusCallback&, const SubscriberStatusCallback&, const VoidConstPtr&, bool)
   Publisher advertise(const std::string& topic, uint32_t queue_size,
             ^~~~~~~~~
/opt/ros/melodic/include/ros/node_handle.h:315:13: note:   template argument deduction/substitution failed:
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:95:89: error: template argument 1 is invalid
     action_goal_pub_ = action_nh.advertise<move_base_msgs::MoveBaseActionGoal>("goal", 1);
                                                                                         ^
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:169:10: error: request for member ‘start’ in ‘*((move_base::MoveBase*)this)->move_base::MoveBase::as_’, which is of non-class type ‘move_base::MoveBaseActionServer {aka int}’
     as_->start();
          ^~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp: In member function ‘void move_base::MoveBase::goalCB(const ConstPtr&)’:
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:268:5: error: ‘move_base_msgs’ has not been declared
     move_base_msgs::MoveBaseActionGoal action_goal;
     ^~~~~~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:269:5: error: ‘action_goal’ was not declared in this scope
     action_goal.header.stamp = ros::Time::now();
     ^~~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:269:5: note: suggested alternative: ‘action_goal_pub_’
     action_goal.header.stamp = ros::Time::now();
     ^~~~~~~~~~~
     action_goal_pub_
/home/nano/ws/src/navigation/move_base/src/move_base.cpp: In member function ‘bool move_base::MoveBase::planService(nav_msgs::GetPlan::Request&, nav_msgs::GetPlan::Response&)’:
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:342:13: error: request for member ‘isActive’ in ‘*((move_base::MoveBase*)this)->move_base::MoveBase::as_’, which is of non-class type ‘move_base::MoveBaseActionServer {aka int}’
     if(as_->isActive()){
             ^~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp: At global scope:
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:638:34: error: ‘move_base_msgs’ does not name a type; did you mean ‘move_base_EXPORTS’?
   void MoveBase::executeCb(const move_base_msgs::MoveBaseGoalConstPtr& move_base_goal)
                                  ^~~~~~~~~~~~~~
                                  move_base_EXPORTS
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:638:70: error: expected unqualified-id before ‘&’ token
   void MoveBase::executeCb(const move_base_msgs::MoveBaseGoalConstPtr& move_base_goal)
                                                                      ^
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:638:70: error: expected ‘)’ before ‘&’ token
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:638:72: error: expected initializer before ‘move_base_goal’
   void MoveBase::executeCb(const move_base_msgs::MoveBaseGoalConstPtr& move_base_goal)
                                                                        ^~~~~~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp: In member function ‘bool move_base::MoveBase::executeCycle(geometry_msgs::PoseStamped&, std::vector<geometry_msgs::PoseStamped_<std::allocator<void> > >&)’:
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:800:5: error: ‘move_base_msgs’ has not been declared
     move_base_msgs::MoveBaseFeedback feedback;
     ^~~~~~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:801:5: error: ‘feedback’ was not declared in this scope
     feedback.base_position = current_position;
     ^~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:802:10: error: request for member ‘publishFeedback’ in ‘*((move_base::MoveBase*)this)->move_base::MoveBase::as_’, which is of non-class type ‘move_base::MoveBaseActionServer {aka int}’
     as_->publishFeedback(feedback);
          ^~~~~~~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:848:14: error: request for member ‘setAborted’ in ‘*((move_base::MoveBase*)this)->move_base::MoveBase::as_’, which is of non-class type ‘move_base::MoveBaseActionServer {aka int}’
         as_->setAborted(move_base_msgs::MoveBaseResult(), "Failed to pass global plan to the controller.");
              ^~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:848:25: error: ‘move_base_msgs’ has not been declared
         as_->setAborted(move_base_msgs::MoveBaseResult(), "Failed to pass global plan to the controller.");
                         ^~~~~~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:883:16: error: request for member ‘setSucceeded’ in ‘*((move_base::MoveBase*)this)->move_base::MoveBase::as_’, which is of non-class type ‘move_base::MoveBaseActionServer {aka int}’
           as_->setSucceeded(move_base_msgs::MoveBaseResult(), "Goal reached.");
                ^~~~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:883:29: error: ‘move_base_msgs’ has not been declared
           as_->setSucceeded(move_base_msgs::MoveBaseResult(), "Goal reached.");
                             ^~~~~~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:968:18: error: request for member ‘setAborted’ in ‘*((move_base::MoveBase*)this)->move_base::MoveBase::as_’, which is of non-class type ‘move_base::MoveBaseActionServer {aka int}’
             as_->setAborted(move_base_msgs::MoveBaseResult(), "Failed to find a valid control. Even after executing recovery behaviors.");
                  ^~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:968:29: error: ‘move_base_msgs’ has not been declared
             as_->setAborted(move_base_msgs::MoveBaseResult(), "Failed to find a valid control. Even after executing recovery behaviors.");
                             ^~~~~~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:972:18: error: request for member ‘setAborted’ in ‘*((move_base::MoveBase*)this)->move_base::MoveBase::as_’, which is of non-class type ‘move_base::MoveBaseActionServer {aka int}’
             as_->setAborted(move_base_msgs::MoveBaseResult(), "Failed to find a valid plan. Even after executing recovery behaviors.");
                  ^~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:972:29: error: ‘move_base_msgs’ has not been declared
             as_->setAborted(move_base_msgs::MoveBaseResult(), "Failed to find a valid plan. Even after executing recovery behaviors.");
                             ^~~~~~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:976:18: error: request for member ‘setAborted’ in ‘*((move_base::MoveBase*)this)->move_base::MoveBase::as_’, which is of non-class type ‘move_base::MoveBaseActionServer {aka int}’
             as_->setAborted(move_base_msgs::MoveBaseResult(), "Robot is oscillating. Even after executing recovery behaviors.");
                  ^~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:976:29: error: ‘move_base_msgs’ has not been declared
             as_->setAborted(move_base_msgs::MoveBaseResult(), "Robot is oscillating. Even after executing recovery behaviors.");
                             ^~~~~~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:989:14: error: request for member ‘setAborted’ in ‘*((move_base::MoveBase*)this)->move_base::MoveBase::as_’, which is of non-class type ‘move_base::MoveBaseActionServer {aka int}’
         as_->setAborted(move_base_msgs::MoveBaseResult(), "Reached a case that should not be hit in move_base. This is a bug, please report it.");
              ^~~~~~~~~~
/home/nano/ws/src/navigation/move_base/src/move_base.cpp:989:25: error: ‘move_base_msgs’ has not been declared
         as_->setAborted(move_base_msgs::MoveBaseResult(), "Reached a case that should not be hit in move_base. This is a bug, please report it.");
                         ^~~~~~~~~~~~~~
navigation/move_base/CMakeFiles/move_base.dir/build.make:62: recipe for target 'navigation/move_base/CMakeFiles/move_base.dir/src/move_base.cpp.o' failed
make[2]: *** [navigation/move_base/CMakeFiles/move_base.dir/src/move_base.cpp.o] Error 1
CMakeFiles/Makefile2:11641: recipe for target 'navigation/move_base/CMakeFiles/move_base.dir/all' failed
make[1]: *** [navigation/move_base/CMakeFiles/move_base.dir/all] Error 2
Makefile:140: recipe for target 'all' failed
make: *** [all] Error 2
Invoking "make -j4 -l4" failed

Adding my CMakeLists.txt
  cmake_minimum_required(VERSION 2.8.3)
project(move_base)

find_package(catkin REQUIRED
    COMPONENTS
        actionlib
        base_local_planner
        clear_costmap_recovery
        cmake_modules
        costmap_2d
        dynamic_reconfigure
        geometry_msgs
        message_generation
        move_base_msgs
        nav_core
        nav_msgs
        navfn
        pluginlib
        roscpp
        rospy
        rotate_recovery
        std_srvs
        tf2_geometry_msgs
        tf2_ros
)
find_package(Eigen3 REQUIRED)
add_definitions(${EIGEN3_DEFINITIONS})

# dynamic reconfigure
generate_dynamic_reconfigure_options(
    cfg/MoveBase.cfg
)

catkin_package(
    CATKIN_DEPENDS
        dynamic_reconfigure
        geometry_msgs
        move_base_msgs
        nav_msgs
        roscpp
)

include_directories(
    include
    ${catkin_INCLUDE_DIRS}
    ${EIGEN3_INCLUDE_DIRS}
)

# move_base
add_library(move_base
  src/move_base.cpp
)
target_link_libraries(move_base
    ${Boost_LIBRARIES}
    ${catkin_LIBRARIES}
    )
add_dependencies(move_base ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})

add_executable(move_base_node
  src/move_base_node.cpp
)
add_dependencies(move_base_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
target_link_libraries(move_base_node move_base)
set_target_properties(move_base_node PROPERTIES OUTPUT_NAME move_base)

install(
    TARGETS
        move_base
        move_base_node
    ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
    LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
    RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
)

## Mark cpp header files for installation
install(DIRECTORY include/${PROJECT_NAME}/
  DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
  FILES_MATCHING PATTERN "*.h"
)

Originally posted by Veera Ragav on ROS Answers with karma: 240 on 2019-06-05
Post score: 0

Original comments
Comment by gvdhoorn on 2019-06-05:
It will probably help forum members help you if you could provide some more details on how you've setup your development environment. Which code you cloned, which version, how you dealt with dependencies, which build tool your using, etc.

A:

sudo apt-get install ros-melodic-move-base-msgs should solve your problem. If not, add your CMakeLists.txt to your question, that'll help

Originally posted by kosmastsk with karma: 210 on 2019-06-06
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Veera Ragav on 2019-06-06:
I know that that command will work. I had added my CMakeLists.txt.
Comment by stevemacenski on 2019-06-06:
Did you do rosdep to install all your dependencies before compiling?
Comment by Veera Ragav on 2019-06-06:
I remember doing rosdep init and rosdep update during ros installation. Is this different from that? If so how do I do that?
Comment by stevemacenski on 2019-06-06:
Those steps just setup rosdep to be used, you have to invoke rosdep like:
rosdep install --from-paths src --ignore-src -r -y
Comment by gvdhoorn on 2019-06-06:
@Veera Ragav: you could take a look at #q252478 for the general workflow when building packages from source. If you're building entire stacks from source, you'll want to use rosinstall_generator.

