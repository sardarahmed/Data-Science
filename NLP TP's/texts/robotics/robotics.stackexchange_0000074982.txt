Q:

Ros::InvalidNameException on negative radian limit value [Closed]

Hello,
I am at the stage where I can set up moveit and do some motion planning on my custom robot model.
I have executed the moveit setup assistant and specified the URDF with no problems. I generated the package, made it, installed it, etc.
However when I launch the move_group.launch (or the demo.launch as well) I receive this exception:
...: Loading robot model 'Robot_Arm.SLDASM'...
terminate called after throwing an instance of 'ros::InvalidNameException'
what(): Character [-] at element [45] is not valid in Graph Resource Name [/robot_description_planning/joint_limits/Base-Servo2/max_position]. Valid characters are a-z, A-Z, 0-9, / and _.

and then it detects the process has died and I get dumped out.
If I launch the demo.launch, Rviz does load but I get no model shown, and it has an error about NO PLANNING LIBRARY LOADED and there is nothing to select in the dropdown. I have a feeling this may all be related.
This error seems to be because I have set my limits as -x to y radians for my servos. This is necessary I think.
Why doesn't it like negative radian values for limits?
And what is the best way to fix this?
I have thought about redesigning my URDF to make servo limits between 0 and 3.1 radians, if it is possible to do this.
<robot
  name="Robot_Arm.SLDASM">
  <link
    name="base_link">
    <inertial>
      <origin
        xyz="0.00071683 0.020356 0.0337"
        rpy="0 0 0" />
      <mass
        value="0" />
      <inertia
        ixx="0"
        ixy="0"
        ixz="0"
        iyy="0"
        iyz="0"
        izz="0" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm2/meshes/base_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.75294 0.75294 0.75294 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm2/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>
  <link
    name="Servo2">
    <inertial>
      <origin
        xyz="0.0022691 0.018959 -0.0094813"
        rpy="0 0 0" />
      <mass
        value="0" />
      <inertia
        ixx="0"
        ixy="0"
        ixz="0"
        iyy="0"
        iyz="0"
        izz="0" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm2/meshes/Servo2.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.75294 0.75294 0.75294 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm2/meshes/Servo2.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Base-Servo2"
    type="revolute">
    <origin
      xyz="0.00012 0.0001411 0.0744"
      rpy="1.5708 0 0" />
    <parent
      link="base_link" />
    <child
      link="Servo2" />
    <axis
      xyz="0 -1 0" />
    <limit
      lower="-1.5"
      upper="1.5"
      effort="0"
      velocity="0" />
  </joint>
  <link
    name="Upper_Arm">
    <inertial>
      <origin
        xyz="-0.0013475 0.053 9.5019E-16"
        rpy="0 0 0" />
      <mass
        value="0" />
      <inertia
        ixx="0"
        ixy="0"
        ixz="0"
        iyy="1.1301E-05"
        iyz="0"
        izz="0" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm2/meshes/Upper_Arm.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.75294 0.75294 0.75294 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm2/meshes/Upper_Arm.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Servo2-Upper_Arm"
    type="revolute">
    <origin
      xyz="0 0.0205 0.0003089"
      rpy="-0.022042 0 0" />
    <parent
      link="Servo2" />
    <child
      link="Upper_Arm" />
    <axis
      xyz="1 0 0" />
    <limit
      lower="-1.5"
      upper="1.5"
      effort="0"
      velocity="0" />
  </joint>
  <link
    name="Elbow">
    <inertial>
      <origin
        xyz="0.0021211 0.0018754 -0.0077595"
        rpy="0 0 0" />
      <mass
        value="0" />
      <inertia
        ixx="0"
        ixy="0"
        ixz="0"
        iyy="0"
        iyz="0"
        izz="0" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm2/meshes/Elbow.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.75294 0.75294 0.75294 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm2/meshes/Elbow.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Elbow-Upper_Arm"
    type="revolute">
    <origin
      xyz="0 0.106 0"
      rpy="0.022042 0 0" />
    <parent
      link="Upper_Arm" />
    <child
      link="Elbow" />
    <axis
      xyz="-1 0 0" />
    <limit
      lower="-1.5"
      upper="1.5"
      effort="0"
      velocity="0" />
  </joint>
  <link
    name="Forearm">
    <inertial>
      <origin
        xyz="0.0090503 0.001012 0.035128"
        rpy="0 0 0" />
      <mass
        value="0" />
      <inertia
        ixx="0"
        ixy="0"
        ixz="0"
        iyy="0"
        iyz="0"
        izz="0" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm2/meshes/Forearm.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.75294 0.75294 0.75294 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm2/meshes/Forearm.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Forearm-Elbow"
    type="revolute">
    <origin
      xyz="0 0.00085 0.027641"
      rpy="0 0 0" />
    <parent
      link="Elbow" />
    <child
      link="Forearm" />
    <axis
      xyz="0 0 -1" />
    <limit
      lower="-1.5"
      upper="1.5"
      effort="0"
      velocity="0" />
  </joint>
  <link
    name="Servo5">
    <inertial>
      <origin
        xyz="0.0087662 -0.011628 0.0018928"
        rpy="0 0 0" />
      <mass
        value="0" />
      <inertia
        ixx="0"
        ixy="0"
        ixz="0"
        iyy="0"
        iyz="0"
        izz="0" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm2/meshes/Servo5.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.75294 0.75294 0.75294 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm2/meshes/Servo5.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Servo5-Forearm"
    type="revolute">
    <origin
      xyz="0 -2E-05 0.102"
      rpy="-0.0030679 0 0" />
    <parent
      link="Forearm" />
    <child
      link="Servo5" />
    <axis
      xyz="1 0 0" />
    <limit
      lower="-2.2"
      upper="0.7"
      effort="0"
      velocity="0" />
  </joint>
  <link
    name="Wrist">
    <inertial>
      <origin
        xyz="0.0012629 -0.023189 0.0098626"
        rpy="0 0 0" />
      <mass
        value="0" />
      <inertia
        ixx="0"
        ixy="0"
        ixz="0"
        iyy="0"
        iyz="0"
        izz="0" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm2/meshes/Wrist.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.75294 0.75294 0.75294 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm2/meshes/Wrist.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Wrist-Servo5"
    type="revolute">
    <origin
      xyz="0.0068789 -0.04595 0.00085"
      rpy="2.7751E-15 0 0" />
    <parent
      link="Servo5" />
    <child
      link="Wrist" />
    <axis
      xyz="0 -1 0" />
    <limit
      lower="-1.5"
      upper="1.5"
      effort="0"
      velocity="0" />
  </joint>
</robot>

Originally posted by karlhm76 on ROS Answers with karma: 43 on 2016-07-04
Post score: 0

Original comments
Comment by karlhm76 on 2016-07-04:
Unless there is an easier way, I think the fastest way to resolve this is to reconstruct my solidworks model so all servos are in the 0 position to begin with, rather than the home position
Then, the home position can be created as a pose later on.

A:

Why doesn't it like negative radian values for limits? And what is the best way to fix this?

I don't think this has anything to do with specifying negative limits for your joints, that is perfectly well supported (would be very strange if it weren't).
As the error tells you, a name containing a - is not allowed. Looking at your urdf, I see joint names like Base-Servo2. MoveIt uses the names of the joints as part of parameter names, and those cannot contain dashes. You can see the offending parameter name in the error message:
robot_description_planning/joint_limits/Base-Servo2/max_position

I think if you change the joint names, things will start to work.
You can find more about what are considered valid names in ROS on wiki/Names.
PS: besides the illegal dash, I'd also recommend you don't use capitals anywhere: not in names of xacro/urdf entities (ie: joints, links), but also not in filenames or extensions. Rationale: if there are never any capitals, you cannot by mistake use the wrong capitalisation anywhere. Seeing as Linux FS are case-sensitive, that is a good thing.

Edit:

reconstruct my solidworks model so all servos are in the 0 position to begin with, rather than the home position. Then, the home position can be created as a pose later on.

If I may suggest, I would do this in any case. By convention, ROS urdfs are modelled with the robot in its zero position, which isn't necessarily its home position. Zero poses for robots typically don't change (as that would mean changing the positions of encoders on joints), home positions do. By coupling the urdf to your home position, you'd have to update the urdf whenever the home position changes.

Originally posted by gvdhoorn with karma: 86574 on 2016-07-04
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by karlhm76 on 2016-07-04:
Thanks I'll give it a try, i don't want to redo the whole model.
Looking closely i can see now that position 45 in that string is the - in the name. I was thinking it was the value it was referring to.
Cheers!
Comment by gvdhoorn on 2016-07-05:\

i don't want to redo the whole model.

well, that is up to you of course. There are some bits in ROS that will assume your urdf is modelled with the robot at its zero position though (like the joint_state_publisher fi).
Comment by karlhm76 on 2016-07-06:
Renamed the joints and success! Thanks for all the help.

