Q:

How to follow a nav_msgs/path?

Hello,
I am using this package to publish an astroid path.
I would like my robot to be able to follow this published path, I was wondering if anyone have a clue about how to approach this problem?
If I would like to redefine the path to something similar to a sine wave, how would I go about that?
Thank you,
Aaron

Originally posted by aarontan on ROS Answers with karma: 135 on 2018-06-27
Post score: 2

Original comments
Comment by jayess on 2018-06-27:
Have you taken a look at the navigation stack?
Comment by jayess on 2018-06-27:
Please don't crosspost. It wastes time and effort of everyone. Please see our support page.
Comment by aarontan on 2018-06-27:
Oh okay, sorry I did not know about that but I understand now.
And yes I have looked at the navigation stack however I am not sure how to integrate move_base with a published path message. I am wondering if anyone have experience with this before and could provide me with some pointers.
Thanks
Comment by Ahmed_Desoky on 2020-07-20:
I have the same problem.
Are you finished and solve this problem?
Thanks
Comment by gregbowers on 2023-06-22:
Hello
To make your robot follow a published path:
-Publish the desired path using the package you have.
-Subscribe to the published path in your robot's control system.
-Extract the necessary path information from the received message.
-Implement a control algorithm that interprets the path information and generates appropriate commands for the robot.
-Execute the control commands in your robot's hardware or simulation environment.

A:

Basically, you have three options.

Write your own "planner" that follows the path. This can actually be a simple controller without any collision avoidance and should be straightforward.
You can write a GlobalPlannerPlugin to move_base that subscribes to the path you create (or creates it itself) and then passes it down to the local planner. There are quite some questions about this (e.g. here or here). Then you have the full capabilities of move_base available later on
Use move_base_flex. This exposes additional actions which should let you do what you want directly. See this question for details.

I personally have done 1 (pretty easy) and 2 (works quite will). EVen though I haven't tested it, I'd say 3 would be the way to go now (though move_base_flex is currently still not very stable, but quite actively developed).

EDIT
About option 1: No, there are no tutorials (that I know of). Just create a subscriber to your path message, and try to follow this using a simple controller. Most basic way would be to implement a simple P[I][D]-controller that trys to stay on the path with a fixed x-velocity (in my experience, PD is totally fine for such a task). If your robot is a differential drive, this is the easiest way.
About option 2: The link to the tutorial is in one of the linked answers above. For reference.

Originally posted by mgruhler with karma: 12390 on 2018-06-28
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by aarontan on 2018-06-28:
Thank you for your reply, I am interested in the first two options, do you have any tutorials on how to achieve this?
Comment by mgruhler on 2018-06-29:
see edit above.
Comment by hanks on 2021-03-19:
@mgruhler Hey, I have created a package that computes a global path and I want to execute option 2 from your answer where the global plugin subscribes to this path being published and passes it down to the local planner but am unable to implement it. Here is the code of the plugin I've written to subscribe to the global path and use it but it doesn't work - https://drive.google.com/drive/folders/1kyLQqCFD5ex7VnVXjuRbn9Bn8XsO1fZX?usp=sharing
Please let me know what should I do to solve this.
Comment by mgruhler on 2021-03-19:
no. Post a new question including your code, describe what you are trying to do, what you have tried so far and where you are stuck...
Comment by hanks on 2021-03-19:
@mgruhler Here is my new question - https://answers.ros.org/question/374307/how-to-use-a-subscriber-in-a-global-planner-plugin/

