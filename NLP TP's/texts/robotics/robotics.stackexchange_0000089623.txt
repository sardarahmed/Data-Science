Q:

Best way of implementing a GUI

Hey everyone,
I've spent the better part of last week trying something with no success, so I've figured I'd ask the experts:
Currently I'm working with a roof-mounted laser scanner. I've managed to extract all the  relevant moving objects (non-wall and non-ground) and assign them to individual clusters.
After that I wrote a function which tells me whether or not two clusters are TOO close or not.
Now what I'm trying to do is create my own "GUI", which on the on hand incorporates what I'm seeing in RVIZ right now ( all the markers, the pointcloud, etc)
but also some sort off Button that lights up green or red, depending on  whether two objects are in fact too close to each other  or not. It's a simple introduction to a more complex problem I'm tackling.
Now my question is, is there a way to do it with rqt_gui, or would it be more feasible to do so in with qtcreator?
I'm struggling to find the right approach.
Rqt_gui has an nice way of implementing rviz, but I can't figure out how to add my "custom" plugin ( the light-button).
Thanks in advance!

Originally posted by th6262 on ROS Answers with karma: 50 on 2018-11-16
Post score: 0

A:

I think you're best bet would be writing a dockable panel plugin for RVIZ. There is a good tutorial here with source code that should compile and run out of the box. I used this a few months ago to extend RVIZ myself, it's fairly straightforward to make quite powerful add-ons.
You don't have to go through the pain of building a new GUI from scratch and you can link it in to the other tools in RVIZ.

Originally posted by PeteBlackerThe3rd with karma: 9529 on 2018-11-16
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by th6262 on 2018-11-16:
perfect, thank you! will get into it. was hoping for someone who already did it to reply, thanks for that ! :)

