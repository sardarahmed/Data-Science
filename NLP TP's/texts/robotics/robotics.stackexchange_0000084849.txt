Q:

Two nodes subscribed to each other that should count do not start unless I force a publisher

Here is the code for the first node called /first which is subscribed to /second_channel and publishes to /first_channel
#!/usr/bin/env python
import rospy
from std_msgs.msg import Int32
rospy.init_node('second')
bar = rospy.Publisher('first_channel', Int32, queue_size=10)
count = 0
def callback(msg):
     count = msg.data
     print count

bar.publish(count+1)

sub = rospy.Subscriber('second_channel', Int32, callback)
bar.publish(count)
rospy.spin()

Here is the code for the second node called /second which is subscribed to /first_channel and publishes to /second_channel
#!/usr/bin/env python
import rospy
from std_msgs.msg import Int32
rospy.init_node('first')
foo = rospy.Publisher('second_channel', Int32, queue_size=10)
count = 0
def callback(msg):
    count = msg.data
    print count
    foo.publish(count+1)

sub = rospy.Subscriber('first_channel', Int32, callback)
rospy.spin()

When I start both of these in terminal, they are running without anything published and the rqt_graph command shows that they are subscribed to each other. But when I run: 'rostopic pub -1 /first_channel std_msgs/Int32 2' both nodes start passing the counter back and forth correctly. How can I make the passing back and forth start?

Originally posted by hstusnick on ROS Answers with karma: 3 on 2018-01-22
Post score: 0

A:

Setting up subscriptions takes time.
Make both of them wait until there is at least one subscriber to their topic.
Use Publisher::getNumSubscribers() for that.
Some related questions:

#q11167: How do I publish exactly one message?
#q32952: With rospy, messages don't seem to be recieved if published soon after creating the publisher
#q82536: ROS misses some messages

Originally posted by gvdhoorn with karma: 86574 on 2018-01-22
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by gvdhoorn on 2018-01-22:
Note also that there is no guarantee of delivery anywhere in ROS 1 pub-sub. So if you have data that absolutely must get to 'the other side', pub-sub is perhaps not what you should use.

