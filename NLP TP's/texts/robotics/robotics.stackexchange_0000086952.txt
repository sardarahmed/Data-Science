Q:

rviz keeps displaying initial pose

When I use rviz, the initial state of the robot persists throughout the entire session.  In the picture below, the robot started stretched out parallel to the ground then moved up into the higher pose.  Everything in rviz seems to work fine but it would be nice to (a) know what's causing this artifact, and (b) not have that pose cluttering the view.  Can you help me?

Originally posted by raequin on ROS Answers with karma: 368 on 2018-05-14
Post score: 0

Original comments
Comment by fvd on 2018-09-05:
I haven't seen this happen. Have you tried deactivating elements of the Rviz display and/or adjusting alpha values to see which object the dead pose belongs to? Does it have TF frames? Check out the tree. If nothing else works, can you post your Rviz tab, URDF and SRDF?
Comment by raequin on 2018-09-07:
Thanks.  That helped.  I'll put it in an answer.

A:

Thanks to the suggestion by @fvd, I unchecked the "Visual Enabled" box under Displays --> RobotState.  That solved the problem!

Originally posted by raequin with karma: 368 on 2018-09-07
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by gvdhoorn on 2018-09-07:
I don't think this is a solution.
If with "Visual Enabled" you mean the checkbox under the "Robot Model" display, then that would indicate that something is not right with your TF setup.
Comment by raequin on 2018-09-07:
Thanks for the input!  If there's a problem in my setup then it's present in the universal_robot package too.  If I run their gazebo and moveit launch files, followed by rviz rviz the same behavior occurs and is eliminated by unchecking Displays --> RobotState --> Visual Enabled.
Comment by gvdhoorn on 2018-09-07:
I'm not saying you're wrong, but those pkgs are used by a lot of people daily and this is the first report that I see mentioning this.
Comment by raequin on 2018-09-07:
Ha ha, I ought to have written, "your gazebo and moveit launch files" :)  That package (and the driver) has been wonderful for us!
Comment by gvdhoorn on 2018-09-08:
No problem. And I cannot take credit for all of it. It's been a combined effort of quite a nr of people together with the entire ROS community.
I would still recommend to debug why the Robot Model display doesn't correctly reflect the actual pose of your robot.
Comment by raequin on 2018-09-09:
To clarify: rviz correctly displays the actual pose of the robot, it's just that the initial pose is continuously displayed too.  That's what unchecking Visual Enabled resolved.
Comment by gvdhoorn on 2018-09-10:\

rviz correctly displays the actual pose of the robot

But which display is showing it?
The Robot Model display, or the one from MoveIt? Those are two different things.
Comment by raequin on 2018-09-10:
The two displays that show the UR10 are RobotState and PlanningScene.  The former never updates and so I uncheck Visual Enabled.  The latter correctly reflects the actual pose of the manipulator.
Comment by raequin on 2018-09-13:
This is hijacking my thread, but since we are talking about the universal_robot package: would it be possible to change from PositionJointInterface to EffortJointInterface for the UR joint control?  I'm working on resolving a problem with manipulating objects in Gazebo and I want to try that.
Comment by gvdhoorn on 2018-09-13:
For Gazebo: sure, you can definitely change that locally. As to making it the default: effort controllers need pid tuning and additionally we don't have any such control capability with the real robots. That is why it's currently set to position.
Comment by raequin on 2018-09-14:
Cool.  If you have a minute, I'd appreciate pointers on changing that.  I figure it will include replacing PositionJointInterface with EffortJointInterface in ur.transmission.xacro but beyond that I'm unsure.
Comment by raequin on 2018-09-14:
PS --- Do you know why this tutorial (http://gazebosim.org/tutorials/?tut=ros_control) states that "the <hardwareInterface> must be included in both the <joint> and <actuator> tags," yet ur.transmission.xacro only has it in the <joint> tag?
Comment by gvdhoorn on 2018-09-14:
You could probably take a look at ros-industrial/universal_robot#227.
Comment by raequin on 2018-09-14:
Thanks!  Following those modifications allowed me to see that using PositionJointInterface is the source for the unrealistic interaction between the UR and the Gazebo environment.  For a long time I've been messing with kp, max_vel, etc. so I'm happy to have that question answered.

