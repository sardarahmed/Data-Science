Q:

Handling long actions in rclpy (with cancellation)

The Fibonacci action demo is nice, but it doesn't support cancellation.
I added a custom cancel_callback, called it from ros2 action send_goal, and tried to cancel by hitting ctrl-C, but it doesn't seem to work. I suspect that's because execute_callback is blocking.
What is a preferred pattern for handling long-running actions in rclpy with cancellation? Any examples / demos / tutorials?
Thanks.

Originally posted by clyde on ROS Answers with karma: 1247 on 2022-11-17
Post score: 1

A:

Whoops, I looked at the rclpy demos,
but forgot about the rclpy examples.
There are several server examples showing how to build long-running action servers that handle cancellation. They work well w/ the client examples, as well as ros2 action send_goal.
In looking at the server code, I see a few patterns:

execute_callback contains a call to time.sleep() to simulate a long-running action
execute_callback blocks until the goal has been reached, or a cancellation request has been received
the trick is to use a MultiThreadedExecutor and a ReentrantCallbackGroup: these allow the server to receive and process cancellation requests while the goal is executing
in some cases the execute_callback is marked async, but this doesn't matter, since it never yields (never awaits)

Thanks.

Originally posted by clyde with karma: 1247 on 2022-11-19
This answer was ACCEPTED on the original site
Post score: 0

