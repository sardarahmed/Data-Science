Q:

Compiler issues using Raspberry Pi 4B

I am a newbie at ROS, so there is a lot of things to learn.
I successfully installed Ubuntu Server 22.04 and ROS2 Humble on my Raspberry Pi 4B (2GB).
When trying to build the examples with colcon, the system after some time gets extremely slow having almost no reaction anymore.
I found out, that the root cause is not enough memory when 4 compiler runs are executed in parallel. I tried to enforce only one compiler instance by

export CMAKE_BUILD_PARALLEL_LEVEL=1

but this did not help. There is still 4 compiler instances running at the same time.
Can anyone explain me how to block parallel compiler runs?
Current status still does not work:
colcon build --symlink-install --executor sequential --event-handlers console_direct+ --cmake-args -DCMAKE_BUILD_PARALLEL_LEVEL=1 --cmake-force-configure --cmake-clean-first --packages-select composition --parallel-workers 1
Starting >>> composition
-- Found ament_cmake: 1.3.6 (/opt/ros/humble/share/ament_cmake/cmake)
-- Override CMake install command with custom implementation using symlinks instead of copying resources
-- Found example_interfaces: 0.9.3 (/home/ubuntu/ros2/install/example_interfaces/share/example_interfaces/cmake)
-- Found rosidl_generator_c: 3.1.5 (/opt/ros/humble/share/rosidl_generator_c/cmake)
-- Found rosidl_adapter: 3.1.5 (/opt/ros/humble/share/rosidl_adapter/cmake)
-- Found rosidl_generator_cpp: 3.1.5 (/opt/ros/humble/share/rosidl_generator_cpp/cmake)
-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
-- Found rclcpp: 16.0.7 (/opt/ros/humble/share/rclcpp/cmake)
-- Found rmw_implementation_cmake: 6.1.1 (/opt/ros/humble/share/rmw_implementation_cmake/cmake)
-- Found rmw_fastrtps_cpp: 6.2.5 (/opt/ros/humble/share/rmw_fastrtps_cpp/cmake)
-- Using RMW implementation 'rmw_fastrtps_cpp' as default
-- Found rclcpp_components: 16.0.7 (/opt/ros/humble/share/rclcpp_components/cmake)
-- Found ament_lint_auto: 0.12.9 (/opt/ros/humble/share/ament_lint_auto/cmake)
-- Found python_cmake_module: 0.10.0 (/opt/ros/humble/share/python_cmake_module/cmake)
-- Using PYTHON_EXECUTABLE: /usr/bin/python3    
-- Using PYTHON_INCLUDE_DIRS: /usr/include/python3.10
-- Using PYTHON_LIBRARIES: /usr/lib/aarch64-linux-gnu/libpython3.10.so
-- Added test 'copyright' to check source files copyright and LICENSE
-- Added test 'cppcheck' to perform static code analysis on C / C++ code
-- Configured cppcheck include dirs: /home/ubuntu/ros2/src/demos/composition/include
-- Configured cppcheck exclude dirs and/or files: 
-- Added test 'cpplint' to check C / C++ code against the Google style
-- Configured cpplint exclude dirs and/or files: 
-- Added test 'flake8' to check Python code syntax and style conventions
-- Added test 'lint_cmake' to check CMake code style
-- Added test 'pep257' to check Python code against some of the docstring style conventions in PEP 257
-- Added test 'uncrustify' to check C / C++ code style
-- Configured uncrustify additional arguments: 
-- Added test 'xmllint' to check XML markup files
-- Configuring done
-- Generating done                              
-- Build files have been written to: /home/ubuntu/ros2/build/composition
[ 12%] Building CXX object CMakeFiles/talker_component.dir/src/talker_component.cpp.o
[ 12%] Building CXX object CMakeFiles/listener_component.dir/src/listener_component.cpp.o
[ 25%] Building CXX object CMakeFiles/node_like_listener_component.dir/src/node_like_listener_component.cpp.o
[ 25%] Building CXX object CMakeFiles/server_component.dir/src/server_component.cpp.o
gmake[2]: *** [CMakeFiles/listener_component.dir/build.make:76: CMakeFiles/listener_component.dir/src/listener_component.cpp.o] Interrupt
gmake[2]: *** [CMakeFiles/node_like_listener_component.dir/build.make:76: CMakeFiles/node_like_listener_component.dir/src/node_like_listener_component.cpp.o] Interrupt
gmake[2]: *** [CMakeFiles/talker_component.dir/build.make:76: CMakeFiles/talker_component.dir/src/talker_component.cpp.o] Interrupt
gmake[1]: *** [CMakeFiles/Makefile2:177: CMakeFiles/listener_component.dir/all] Interrupt
gmake[2]: *** [CMakeFiles/server_component.dir/build.make:76: CMakeFiles/server_component.dir/src/server_component.cpp.o] Interrupt
gmake[1]: *** [CMakeFiles/Makefile2:151: CMakeFiles/talker_component.dir/all] Interrupt
gmake[1]: *** [CMakeFiles/Makefile2:203: CMakeFiles/node_like_listener_component.dir/all] Interrupt
gmake[1]: *** [CMakeFiles/Makefile2:229: CMakeFiles/server_component.dir/all] Interrupt
gmake: *** [Makefile:146: all] Interrupt

command.log shows:
Invoking command in '/home/ubuntu/ros2/build/composition': AMENT_PREFIX_PATH=/home/ubuntu/ros2/install/example_interfaces:${AMENT_PREFIX_PATH} CMAKE_PREFIX_PATH=/home/ubuntu/ros2/install/example_interfaces:/opt/ros/humble LD_LIBRARY_PATH=/home/ubuntu/ros2/install/example_interfaces/lib:${LD_LIBRARY_PATH} PYTHONPATH=/home/ubuntu/ros2/install/example_interfaces/local/lib/python3.10/dist-packages:${PYTHONPATH} /usr/bin/cmake /home/ubuntu/ros2/src/demos/composition -DCMAKE_BUILD_PARALLEL_LEVEL=1 -DAMENT_CMAKE_SYMLINK_INSTALL=1 -DCMAKE_INSTALL_PREFIX=/home/ubuntu/ros2/install/composition
Invoked command in '/home/ubuntu/ros2/build/composition' returned '0': AMENT_PREFIX_PATH=/home/ubuntu/ros2/install/example_interfaces:${AMENT_PREFIX_PATH} CMAKE_PREFIX_PATH=/home/ubuntu/ros2/install/example_interfaces:/opt/ros/humble LD_LIBRARY_PATH=/home/ubuntu/ros2/install/example_interfaces/lib:${LD_LIBRARY_PATH} PYTHONPATH=/home/ubuntu/ros2/install/example_interfaces/local/lib/python3.10/dist-packages:${PYTHONPATH} /usr/bin/cmake /home/ubuntu/ros2/src/demos/composition -DCMAKE_BUILD_PARALLEL_LEVEL=1 -DAMENT_CMAKE_SYMLINK_INSTALL=1 -DCMAKE_INSTALL_PREFIX=/home/ubuntu/ros2/install/composition
Invoking command in '/home/ubuntu/ros2/build/composition': AMENT_PREFIX_PATH=/home/ubuntu/ros2/install/example_interfaces:${AMENT_PREFIX_PATH} CMAKE_PREFIX_PATH=/home/ubuntu/ros2/install/example_interfaces:/opt/ros/humble LD_LIBRARY_PATH=/home/ubuntu/ros2/install/example_interfaces/lib:${LD_LIBRARY_PATH} PYTHONPATH=/home/ubuntu/ros2/install/example_interfaces/local/lib/python3.10/dist-packages:${PYTHONPATH} /usr/bin/cmake --build /home/ubuntu/ros2/build/composition --clean-first -- -j4 -l4
Invoked command in '/home/ubuntu/ros2/build/composition' returned '-2': AMENT_PREFIX_PATH=/home/ubuntu/ros2/install/example_interfaces:${AMENT_PREFIX_PATH} CMAKE_PREFIX_PATH=/home/ubuntu/ros2/install/example_interfaces:/opt/ros/humble LD_LIBRARY_PATH=/home/ubuntu/ros2/install/example_interfaces/lib:${LD_LIBRARY_PATH} PYTHONPATH=/home/ubuntu/ros2/install/example_interfaces/local/lib/python3.10/dist-packages:${PYTHONPATH} /usr/bin/cmake --build /home/ubuntu/ros2/build/composition --clean-first -- -j4 -l4

So it looks like colcon is overriding my CMake setup configuration by command line option -j4 for the build command.
I already have specified --executor sequential and parallel-workers 1 but I assume they are just used by colcon not to process packages in parallel.
So, what I miss is a possibility to tell colcon not to pass the -j4 option by command line.
Solution finally was found by setting MAKEFLAGS.
Thanks to all of you helping to get to the solution!

A:

Finally found a solution looking at the source code of colcon_cmake:

colcon is using the number of cpu cores in case there is no MAKEFLAGS
already defining (see code below).

So, in my case the solution was:
export MAKEFLAGS="-j 1"

colcon_cmake/build.py:
def _get_make_arguments(self, env):
"""
Get the make arguments to limit the number of simultaneously run jobs.
    The arguments are chosen based on the `cpu_count`, e.g. -j4 -l4.

    :param dict env: a dictionary with environment variables
    :returns: list of make arguments
    :rtype: list of strings
    """
    # check MAKEFLAGS for -j/--jobs/-l/--load-average arguments
    makeflags = env.get('MAKEFLAGS', '')
    regex = (
        r'(?:^|\s)'
        r'(-?(?:j|l)(?:\s*[0-9]+|\s|$))'
        r'|'
        r'(?:^|\s)'
        r'((?:--)?(?:jobs|load-average)(?:(?:=|\s+)[0-9]+|(?:\s|$)))'
    )
    matches = re.findall(regex, makeflags) or []
    matches = [m[0] or m[1] for m in matches]
    if matches:
        # do not extend make arguments, let MAKEFLAGS set things
        return []
    # Use the number of CPU cores
    jobs = os.cpu_count()
    with suppress(AttributeError):
        # consider restricted set of CPUs if applicable
        jobs = min(jobs, len(os.sched_getaffinity(0)))
    if jobs is None:
        # the number of cores can't be determined
        return []
    return [
        '-j{jobs}'.format_map(locals()),
        '-l{jobs}'.format_map(locals()),
    ]

