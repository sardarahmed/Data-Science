Q:

Is sensor timestamp can modify robot_pose_ekf accuracy?

Hello,
I'm using a visual odometry working on a workstation connected by wifi to the Turtlebot. I have synchronized the time in the workstation related to the turtlebot with:
sudo ntpdate tutlebot_IP writed on one workstation terminal. But maybe it's still a time lag.
Therefore my question is, If the /vo is published with a timestamp lag compared with odom and imu timestamp, is it possible to impact the accuracy of the robot_pose_ekf algorithm.
related old topic:
http://answers.ros.org/question/64441/robot_pose_ekf-wrong-output-with-good-input/

Originally posted by jep31 on ROS Answers with karma: 411 on 2013-06-23
Post score: 0

A:

If the timestamps are lagged, data association might be wrong.
Where do you get the images for vo from? Are they from the robot? In that case, you can/should just use those timestamps for the vo as the correspond to the time the image was taken, which is the relevant time.

Originally posted by dornhege with karma: 31395 on 2013-06-24
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by jep31 on 2013-06-24:
It comes from workstation. The Kinect is fixed in the room and locates the turtlebot. So the kinect is connected to the workstation and not to the robot. I'm not be able to compile ar_pose on turtlebot (ros electric and ubuntu 10.04 LTS). Is there solution to work with a localization on workstation?
Comment by dornhege on 2013-06-24:
In that case its best to keep the timestamps synched. Depending on your time frame the initial sync might be sufficient. The chrony package is usually used to keep timestamps in sync.
Comment by jep31 on 2013-06-24:
Ekf output are right now very bad and I'm looking for a reason. I'm already using chrony (ntpdate command) to keep in sync. Do you think a small lag is sufficient to disturb ekf ? If I do 1 whole turn, I have a small but sufficient error to have a large difference when I go forward then.

