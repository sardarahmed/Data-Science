Q:

Global planner with taking into account the robot footprint

Hello all,
I was wondering if it exists a global planner which takes into account the robot's footprint and also can be an alternative to the navfn global_planner?
Thanks a lot,

Originally posted by Mobile_robot on ROS Answers with karma: 264 on 2018-07-05
Post score: 0

A:

The global planner of the navigation stack makes use of a costmap to make its global plan, provided by the costmap_2d plugin. You can change the parameters that are provided to costmap_2d to take the footprint of the robot into account, by either passing the robot_radius or robot_footprint parameter to the move_base_node when you launch it.
You can see how this could be done by taking a look at the turtlebot_navigation package, specifically how parameters are passed to the move_base_node in the move_base.launch.xml file.
In this package, the robot_radius parameter is set in the costmap_common_parameters.yaml file.

Originally posted by nathan with karma: 111 on 2018-07-05
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Mobile_robot on 2018-07-09:
Thanks a lot @nathan and sorry for late answer, I was trying your proposition. Actually, in my case, the global costmap does not take into account the FootPrint when I define it as a Polygone but it takes it into account when I define it as a Circle.
Comment by bageltz on 2019-10-30:
If I understand correctly- for simplicity and efficiency reasons, default global planner assumes the robot is circular and generates the global plan in configuration space. By that, it adds the radius buffer along all the static/dynamic obstacles, and treat the robot as a single point object in the planning algorithm. That's why it seems to only honor circular footprint instead of a polygon one.

