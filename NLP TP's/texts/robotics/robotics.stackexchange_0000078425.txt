Q:

MoveIt: Is there a trajectory-cache?

Hello!
For my current project on picking with a UR, I'm looking for a cache for planned paths. Some movements (e.g. from the put position back to a start position) are repeated for every object and the planning needs some time (around 2 seconds) which I'd like to save by storing plans in a DB (doesn't even need to be persistent) so that if I request the same start and end-joints I can look up the trajectory and execute it directly (assuming a constant collision environment).
Is there something available or do I have to implement it?

Originally posted by PickBot on ROS Answers with karma: 123 on 2017-01-18
Post score: 2

A:

Hi PickBot,
I am pretty sure there is no standard trajectory-cache available at this time. I have also had the need for something similar (but it had to be persistent) and have implemented it using .yaml files on disk and a pre-defined set of joint states as start/goal states. You might be able to find something on github for your application, but I don't know of any.

Originally posted by rbbg with karma: 1823 on 2017-01-19
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by PickBot on 2017-01-19:
Thanks! Any hints on what you learnt during the implementation?
Comment by rbbg on 2017-01-19:
It's tricky to figure out exactly when a query is equivalent as the joint states naturally vary with to some degree, so you need some kind of threshold. Sometimes we would plan a very short path to a (close) pre-defined state to ensure the robot will be at that state when the trajectory starts.
Comment by rbbg on 2017-01-19:
Also, if you do intend on storing the trajectories to disk, it's easiest to use rosbags. The implementation we wrote is online and can be found here: apc16delft_motion (note: we used yaml instead of rosbags)
Comment by PickBot on 2017-01-19:
That's also what I planned. I have a drop position and would generate a set of start points above the box so that I first plan to the closest start point and execute the stored trajectory afterwards.
Comment by PickBot on 2017-01-19:
Thanks for the link. I saw the delft run at the APC this year and even had a look at the ROSCON-slides but I didn't find code for the cache.

