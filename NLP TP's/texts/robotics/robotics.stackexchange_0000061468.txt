Q:

Virtual Corridor for Robot Navigation, Updating CostMap

Hello,
I'm asking this question again, in case there were some new thoughts from the ROS community
I'm trying to add a "virtual" corridor along the waypoints generated by the global planner (waypoints are in the middle of the virtual corridor), so the robot never leaves this "virtual" corridor when it's moving between the waypoints using a local planner. For example, if during the robot's navigation within this corridor, an obstacle appears in front of the robot and covers the entire width of the corridor, the robot should stop (Although there might be free spaces outside this virtual corridor), and if the obstacle did not cover the entire corridor, the robot should replan and find an alternative path which is still within the virtual corridor.
Apparently, the default local planners (DWA, or Trajectory Rollout) in the ROS Navigation Stack do not support such a functionality.
is it possible to manually update the costmap (using the layered costmap?), so everything outside the certain distance of the global path (i.e. outside the virtual corridor) become obstacles, so that the robot never leaves the virtual corridor?
Or any other thoughts on how to implement this feature?
Thanks

Originally posted by ROSCMBOT on ROS Answers with karma: 651 on 2014-08-04
Post score: 1

Original comments
Comment by ahendrix on 2014-08-04:
Previous question: http://answers.ros.org/question/172984/robot-navigation-within-a-corridor/ .

A:

To create boundaries during exploration, I drew a polygon on a costmap layer: https://github.com/paulbovbel/frontier_exploration/blob/hydro-devel/plugins/bounded_explore_layer.cpp#L180. You could do something similar with your corridor, and include the layer in your local navigation costmaps.
However, if you're trying to prevent your robot from traveling a certain distance away from the global planner's waypoints, it looks like you should be making a change at the local planner level, instead of on the costmaps. The local planner is the only construct that has direct access to the global planner's waypoint path (take a look at how move_base works).
If you dig into DWA, maybe you could add a new restriction on the trajectory search, to disqualify trajectories that would leave this 'corridor'.

Originally posted by paulbovbel with karma: 4518 on 2014-08-05
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by ROSCMBOT on 2014-08-06:
The issue is with the replanning mode. I'd like the robot stay within the 'original' virtual corridor, even when it is replanning in the environment. So the new computed global path (or waypoints) after replanning should still be within the original corridor built on the old global path (or waypoints)
Comment by paulbovbel on 2014-08-06:
Sounds like you have a cycle in your information flow, which wouldn't work out of the box with move base. You could probably rig it together with a service connection from a modified local planner to a custom costmap layer.

