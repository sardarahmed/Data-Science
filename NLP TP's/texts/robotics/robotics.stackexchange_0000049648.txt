Q:

OpenCv troubles

Hello, I'm trying to build the "tum_ardrone" package. I get the following error:
/usr/bin/ld: skipping incompatible /usr/local/lib/libopencv_ml.so when searching for -lopencv_ml
/usr/bin/ld: cannot find -lopencv_ml
/usr/bin/ld: skipping incompatible /opt/ros/fuerte/lib/libopencv_nonfree.so when searching for -lopencv_nonfree
/usr/bin/ld: skipping incompatible /usr/local/lib/libopencv_nonfree.so when searching for -lopencv_nonfree
/usr/bin/ld: cannot find -lopencv_nonfree
/usr/bin/ld: skipping incompatible /opt/ros/fuerte/lib/libopencv_objdetect.so when searching for -lopencv_objdetect
/usr/bin/ld: skipping incompatible /usr/local/lib/libopencv_objdetect.so when searching for -lopencv_objdetect
/usr/bin/ld: cannot find -lopencv_objdetect
/usr/bin/ld: skipping incompatible /opt/ros/fuerte/lib/libopencv_photo.so when searching for -lopencv_photo
/usr/bin/ld: skipping incompatible /usr/local/lib/libopencv_photo.so when searching for -lopencv_photo
/usr/bin/ld: cannot find -lopencv_photo
/usr/bin/ld: skipping incompatible /opt/ros/fuerte/lib/libopencv_stitching.so when searching for -lopencv_stitching
/usr/bin/ld: skipping incompatible /usr/local/lib/libopencv_stitching.so when searching for -lopencv_stitching
/usr/bin/ld: cannot find -lopencv_stitching
/usr/bin/ld: skipping incompatible /opt/ros/fuerte/lib/libopencv_ts.so when searching for -lopencv_ts
/usr/bin/ld: skipping incompatible /usr/local/lib/libopencv_ts.so when searching for -lopencv_ts
/usr/bin/ld: cannot find -lopencv_ts
/usr/bin/ld: skipping incompatible /opt/ros/fuerte/lib/libopencv_video.so when searching for -lopencv_video
...and so on.
I have installed opencv following the raccomandations on the official page. (I have installed it in a directory in my ~, maybe it's the reason it does not work).
Thanks for any help!

Originally posted by jacky_90 on ROS Answers with karma: 101 on 2013-03-22
Post score: 0

A:

Is that an error you get using catkin_make? In your CmakeLists.txt are you using a cmake find module for openCV? As in:
find_package(OpenCV REQUIRED)

Then later
target_link_libraries(your_executable_name ${OpenCV_LIBS} ${catkin_LIBRARIES})

I've had to do that when working with the ARDrone.

Originally posted by mechanicalmanb with karma: 86 on 2014-07-13
This answer was ACCEPTED on the original site
Post score: 0

