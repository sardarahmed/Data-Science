Q:

Cartesian velocity control of robot arm

I have a 6DOF robot arm, and would like to start driving the end effector around with a joystick.  I think the most natural way to do this would be to map my joystick axes to Cartesian velocities of the end effector.  I have tried executing very small paths in the desired directions using MoveGroupCommander.compute_cartesian_path(), but I end up getting very jumpy results.  Are there any facilities built into MoveIt or otherwise to help me do this?

Originally posted by rand on ROS Answers with karma: 38 on 2015-02-01
Post score: 0

A:

I actually found a good solution to this in the code for pr2_teleop_general. The basic idea is to:

Grab the current robot state using RobotCommander.get_current_state()
Call the GetPositionFK service of your move_group to get the the end effector position using this state as input.
Scale your Cartesian velocity by a constant and add it onto this position. Call the GetPositionIK service of your move_group to get an inverse kinematics solution for this.
Subtract your current joint angles from the IK joint angles, and multiply by some constant to get a velocity for every joint.

Originally posted by rand with karma: 38 on 2015-02-02
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by sangfuu on 2015-04-07:
rand, did this method worked for you or did you find something else?
I am trying to do the same thing with my 7DOF robot. Thanks

