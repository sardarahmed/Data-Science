Q:

Is it better/prefered to combine nodelets programmatically or in a launch file?

Is there an advantage to combining nodelets programmatically? I noticed that stereo_image_proc does this and was surprised.
I'm attempting to chain image processing using nodelets to avoid the serialization overhead, and want to combine with stereo_image_proc, but was confused as to whether there was any reason I shouldn't just load up all of the constituent nodelets in a launch file.

Originally posted by Asomerville on ROS Answers with karma: 2743 on 2011-05-04
Post score: 4

A:

@kwc is right, there's no advantage, infact if you do it in code you have to rewrite all of the remapping logic done by roslaunch, thus it's actually noteably not recommended.
The image processing work was done to work around ros ticket 3470 It's been fixed on trunk and should be out in the next release, allowing the image pipeline work to be simplified.

Originally posted by tfoote with karma: 58457 on 2011-05-05
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Patrick Mihelich on 2011-09-21:
stereo_image_proc only does this for backwards compatibility. The stereo_image_proc node predates nodelets, so I couldn't just replace it with a launch file. Certainly in Electric it's possible to write a simple launch file that replicates the stereo_image_proc node.
Comment by Asomerville on 2011-05-05:
Does this imply that building the stereo_image_proc stack is not possible from a launch file in diamondback?

