Q:

Localiztion in Nav2d is very poor on Turtlebot 2 with default configuration

Dear all,
I am running the nav2d tutorial 3 on the turtlebot with Kinect sensor. the working is fine except for the localization.
the robot keeps on localizing and every time the map is shifted little. due to this the same obstacles are mapped several times which results in a map full of black spots making it unnavigable.
I suspected error in odom so i combined Robot_Pose_Ekf but the output robot_pose_ekf/odom_combined is not used by any of the nodes! The tf frame is being published for the odom by the robot_pose_ekf.
I tried changing the min_particle & max_particle sizes with a lot of values, its little better with values 1000000 & 4000000 but not satisfatory. Any bigger value makes the system very slow.
Would you please help in finetunning the parameters to have a good map.
Thanks in advance:)

Originally posted by Yesh88 on ROS Answers with karma: 1 on 2015-09-07
Post score: 0

A:

If you are building a map (by using the mapper-node), you don't need a separate localizer (particle-filter). So I would suggest to remove the localizer and robot_pose_ekf and directly use the robots odometry in the mapper.

Originally posted by Sebastian Kasperski with karma: 1658 on 2015-09-08
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Yesh88 on 2015-09-08:
I did not find the localizer node seperately in the launch file of nav2d. there are nodes for mapper "", GetMap, Explore, SetGoal & operator but not for localization.
I am new to ROS so I would appreciate if you could give me details. Thank you,
Comment by Sebastian Kasperski on 2015-09-08:
The mapper node implements SLAM (Simultaneous Localization and Mapping), so it builds a map and localizes the robot within the map, so you only need the nodes from the tutorial3 launch file (minus the simulator) and your robot driver, nothing else.
Comment by Yesh88 on 2015-09-08:
i cross checked the launch files and tutorial 2 & tutorial 3 of nav 2d. i am following tutorial 3, which does not have the selflocalization node. i suspect the shift in map while mapping is caused by SLAM itself. Is my understanding correct? is there a way to fine tune it to have a good map?
Comment by Sebastian Kasperski on 2015-09-08:
So there is really no particle filter running on your system now? Then it might help to do a "rosrun tf view_frames" on your robot and check if any transformations are missing or double-published. Have you checked whether the odometry gives resonable results?
Comment by Yesh88 on 2015-09-08:
The tf tree looks good, with one single connected tree. map(/mapper)->offset(mapper)->odom_fused(robot_pose_ekf)->base_footprint(robot_state_publisher) etc.
The topic /odom is subsribed  by robot_pose_ekf & mobile_base_nodelet_manager. /robot_pose_ekf.odom_combined is not subscribed by any one.
Comment by Yesh88 on 2015-09-08:
Would you please tell me how i could verify the odom output? Thanks a lot for taking time & helping me out.
Comment by Yesh88 on 2015-09-08:
i doubt that there is particle filter is still running, maybe from SLAMs itself, because there are parametes in the mapper.yaml with regard to localization & changing the values of min_particles & max_particles changes the map quality as mentioned in the first post.
Comment by Sebastian Kasperski on 2015-09-08:
The mapper uses a particle filter in a multi-robot setup, that's why these parameters exist. They should have no influence at all in your setup. (Make sure that robot_id is set to 1)
Comment by Sebastian Kasperski on 2015-09-08:
About the odometry: You can show TF in RVIZ and then move the robot around (e.g. with a remote-control) and check if the odom_fused -> base_footprint transform behaves as expected.

