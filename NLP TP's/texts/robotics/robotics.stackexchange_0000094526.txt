Q:

TF2 Transform Unpublished Frame

Pretty basic question regarding TF2. I have a static camera with a known transform from the base of my robot. With the camera I am detecting a marker in my scene and getting a transform from the camera to the marker. Without broadcasting this new transform frame, how do I find the transform from the base to the marker?
Sorry if this is obvious, but all the methods I can find (lookupTransform for example) don't seem to perform this. I realize I could manually write the math to make this transform but it seems that there is a more idiomatic way to accomplish this.
Thanks

Originally posted by rklutz on ROS Answers with karma: 17 on 2020-01-28
Post score: 0

Original comments
Comment by gvdhoorn on 2020-01-28:
Not an answer, but would publishing the known transform as a static TF not be incredibly useful (and additionally make things like lookupTransform(..) and transformPose(..) work also)? If you're not publishing the transform for efficiency reasons: static transforms are only published once.
Comment by rklutz on 2020-01-28:
Well in my case the marker will potentially move during runtime so I can't use a static publisher. And yes, I was looking to avoid publishing for efficiency reasons. Thanks for the help!
Comment by gvdhoorn on 2020-01-28:
I was referring to this:

I have a static camera with a known transform from the base of my robot.

but re-reading your question I see you want to avoid publishing the transform from camera to marker. Not from robot to camera.

A:

If you express that transform in one of the linear math libraries, such as Eigen or Bullet. Then with your known transform from the base to the camera you can use the transform chaining by multiplication to compute the net transform.
Certainly you can do the math yourself too, but using one of the linear math libraries already supported will be much less likely to have errors.

Originally posted by tfoote with karma: 58457 on 2020-01-28
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by rklutz on 2020-01-28:
Ok, so there isn't a more idiomatic way to accomplish this using only the TF2 library? I'm might just have to go that route then...
Comment by tfoote on 2020-01-28:
tf's API is designed to provide you with the ability to lookup transforms and interact well with whatever linear math library is of your preference. It's not designed to replace a linear math library.
Comment by gvdhoorn on 2020-01-29:\

[TF2] is not designed to replace a linear math library.

this is something I see many people assume actually.
It may be something that needs clarification.

