Q:

ros_canopen driver for schunk_lwa4p does not execute trajectory

Hi,
I want to move my schunk lwa4p arm. I am using ros_canopen and schunk_robots, as well as a self-written action client to interact with the joint_trajectory_controller.
My goal requests seem to arrive at the action server, so there should be no communication error. I suggest, there is something wrong with my message formatting.
I have tried several things:
First: single waypoint, only fill in desired joint positions and stamp header with ros::Time::now(). Driver node shows a warning:
[ WARN] [1424969414.252450021]: Dropping all 1 trajectory point(s), as they occur before the current time.
Last point is 0.008s in the past.

Then, same setting, but no manual time stamp:
[ WARN] [1424969347.854240213]: Dropping all 1 trajectory point(s), as they occur before the current time.
Last point is 0.000s in the past.

Why is the trajectory not executed when the last waypoint is not in the past and is not executed when it lies in the past? Where should my waypoint lie? When I change the time stamp to be ros::Time::now() + ros::Duration(0.01), the warning does not show but the trajectory is not executed anyway.
I thought, maybe it has to do with the time_from_start parameter set in the trajectory_msgs::JointTrajectoryPoint message for each waypoint. But this parameter seems to have no influence in my case.
When I send a message containing multiple waypoints, I get an error:
[ERROR] [1424969209.710584142]: Trajectory message contains waypoints that are not strictly increasing in time.

Could somebody please tell me, what I am doing wrong? I think, I am missing some detail but have no idea, what.
Thank you in advance,
Marcel

Originally posted by Marcel Usai on ROS Answers with karma: 200 on 2015-02-26
Post score: 0

A:

ros_canopen does not execute the trajectory, it just forwards commands from ros_control to CANopen hardware.
The trajectory controller (from ros_controllers) will try to reach/pass along each trajectory point at the given time from the trajectory start.
So you should specify a valid duration for it with respect to the maximum joint speed.
The exact behaviour is described in detail here: http://wiki.ros.org/joint_trajectory_controller

Originally posted by Mathias LÃ¼dtke with karma: 1596 on 2015-06-22
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Marcel Usai on 2015-06-25:
The key was the valid duration for it with respect to the maximum joint speed

