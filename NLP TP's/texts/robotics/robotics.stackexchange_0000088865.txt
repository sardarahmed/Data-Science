Q:

ROS2 - tf2_ros::TransformBroadcaster and rclcpp_lifecycle::LifecycleNode

I need to create a TransformBroadcaster inside my LifecycleNode, but the constructor of tf2_ros::TransformBroadcaster requires a rclcpp::Node::SharedPtr.
This may be a silly question, but I cannot fill the missing part:
    std::shared_ptr<tf2_ros::TransformBroadcaster> mTransformPoseBroadcaster;
    mTransformPoseBroadcaster = std::make_shared<tf2_ros::TransformBroadcaster>(??????????);

Thank you for help
Walter

Originally posted by Myzhar on ROS Answers with karma: 541 on 2018-09-05
Post score: 0

A:

The tf2_ros interface, which pre-dates lifecycle nodes and the node interfaces in rclcpp, would need to be updated to take the "node interfaces" that it uses, which are the common element between Node and LifecycleNode. For example, maybe it should instead take a pointer to rclcpp::node_interfaces::NodeTopicsInterface and a pointer to an instance of rclcpp::node_interfaces::NodeParametersInterface instead of a pointer to a node.
A separate question is whether or not tf2_ros should create lifecycle topics or normal topics (should it work only in certain lifecycle states or always)?
I'd recommend opening an issue on the ros2/geometry2 issue tracker (https://github.com/ros2/geometry2/issues) asking about this. I'm not sure if anyone will have time to implement this for you, but if you're interesting in contributing this feature for tf2 that would probably be a quicker way to get a solution for this.

Originally posted by William with karma: 17335 on 2018-09-05
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Myzhar on 2018-09-06:
Yes, I think that it should be similar to executors that get a pointer to NodeBaseInterface when you add nodes.
Added issue: https://github.com/ros2/geometry2/issues/70
Comment by Myzhar on 2018-09-06:
Actually I'm using a simple trick: I publish the TF2 as normal message and I made a "normal" node that subscribes and broadcasts using tf2_ros::TransformBroadcaster
Comment by Myzhar on 2018-09-15:
An update: using the node that subscribes to tf2 messages and broadcasts them it works, but there is a latency issue as i described here: https://answers.ros.org/question/303377/ros2-tf2-broadcasting-very-slow/

