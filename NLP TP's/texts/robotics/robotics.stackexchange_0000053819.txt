Q:

Extracting message type in callback (Python)

Hey all,
I want to extract data of a specific type from the message in the callback. I have only one callback where I get messages from different topics of different type like Float64, Odometry,.etc. Now I want to extract only the data of type Quaternion in side any message of any topic. My call back looks like (although its not correctly working):
def callback(self, msg, arg):
for m in msg.slots:
if type(m) == [Quaternion]:
self.process(m)
but Quaternion is not directly recognized. Also I have to dig into the messages like Odometry has quaternion data but inside the pose.pose.position, how to check the whole structure of message for quaternion datatype data.
Thanks in advance,

Originally posted by safzam on ROS Answers with karma: 111 on 2013-09-02
Post score: 0

Original comments
Comment by dornhege on 2013-09-03:
Are you sure that you can't find a better/cleaner design for what you want? Seem's kinda odd to me.
Comment by safzam on 2013-09-03:
thanks for the suggestion! can you please just write me a hint for the better/cleaner design.I just want to extract Quaternion data xywz (if any) from the msgs, AND I do not know in prior how many topics I shall get and of which type. so I have one generic callback for all the topics...regards
Comment by dornhege on 2013-09-03:
The thing is that I"m not sure why you'd want something like that.

A:

Might it be geometry_msgs.Quaternion?
Digging through the structure can be achieved in the same way that you accesses msg.slots, just recursively.

Originally posted by dornhege with karma: 31395 on 2013-09-03
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by safzam on 2013-09-03:
thanks for the comment. but msg.slots gives the sub fields names but their type is 'str' rather than Point,.etc. is there any way to dig out the msg structure with type by type dynamically?
Comment by dornhege on 2013-09-03:
There is _slot_types defined for ros msgs.
Comment by safzam on 2013-09-03:
yes but it does not help for further digging like I do:
for l1 in msg._slot_types:
print l1
and output i get [std_msgs/Header,string,geometry_msgs/PoseWithCovariance,geometry_msgs/TwistWithCovariance]
but when I want to dig using 'print l1.slots'  or 'print l1._slot_types' gives error. ?
Comment by safzam on 2013-09-03:
Hallo donhege, thanks a lot, now it works. the only problem was that 'print l1.slots' or 'print l1._slot_types' gives error when datatype encountered is simple and basic datatype because it does not have further substructure. now it works, thank you.
regards

