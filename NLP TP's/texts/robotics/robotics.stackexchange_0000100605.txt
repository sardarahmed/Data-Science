Q:

Getting $Ros_distro in c++ code

Hi,
I want to ask like is there a way to get the ROS_DISTRO in c++, cz I want to run specific C++ code when ros_distro is melodic, and else if noetic then this code.
Ubuntu: 20.04
Thank You.

Originally posted by AB4147 on ROS Answers with karma: 13 on 2021-11-19
Post score: 1

A:

I am sure there is a simpler way, but this is how I will do if I am in a pinch.
Since echo $ROS_DISTRO will give me the information, then I will use a program to read the output of this command:
From this example I will make a slight modification accordingly.
#include <iostream>
#include <stdio.h>
#include <stdlib.h>

using namespace std;

string GetStdoutFromCommand(string cmd) {

  string data;
  FILE * stream;
  const int max_buffer = 256;
  char buffer[max_buffer];
  cmd.append(" 2>&1");

  stream = popen(cmd.c_str(), "r");
  if (stream) {
    while (!feof(stream))
      if (fgets(buffer, max_buffer, stream) != NULL) data.append(buffer);
    pclose(stream);
  }
  return data;
}

int main() {

  string ros_version = GetStdoutFromCommand("echo $ROS_DISTRO");
  cout << "ROS version: " << ros_version << endl;
  return 0;
}

Originally posted by osilva with karma: 1650 on 2021-11-19
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by gvdhoorn on 2021-11-19:
ROS_DISTRO is an environment variable.
Why not just read the environment variable with the appropriate functions? See std::getenv(..).
And actually, using conditional compilation might even be better.
Comment by osilva on 2021-11-19:
@gvdhoorn that's way better than what I propose!

