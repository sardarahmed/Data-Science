Q:

Can a sequence of nodes be run in SMACH, behavior trees, or similar?

Hi,
I am looking for a solution to the idea of creating a state machine as a sequence of nodes, or a sequence of concurrent nodes. Where the nodes, could be nodes of any type that a user has created.
SMACH/pi-trees/flexbe, out-of-the box seems to work with actionlib, services, topic monitoring. But what if you want to take an FSM and do as follows:
state1 (node1) -> state 2(node 2) -> state3(node3), while checking some kind of transition checking.
Or perhaps running nodes concurrently:
state1 (node1,node2) -> state 2(node3, node4) -> state3(node5), this would also be similar to having each state call a launch file....
Thanks

Originally posted by Juan on ROS Answers with karma: 208 on 2016-06-12
Post score: 1

Original comments
Comment by ghkraju on 2016-10-14:
Did you find a solution/workaround for your question? If yes, Please add a comment. I am looking something similar to your question.
Comment by Pi Robot on 2016-10-14:
Generally speaking, it is preferred to launch all the needed nodes together during startup.  Each node can then be "activated" or "deactivated" by using ROS topics or services rather than launching nodes dynamically during runtime.

A:

Thanks @Pi Robot @ghkraju! Yes, now I see that we can use SMACH to activate/deactivate nodes through services. We do startup all nodes, and have them sleep until a service event triggers a particular behavior. We are getting examples out on this repo: https://github.com/birlrobotics/birl_baxter_simulator

Originally posted by Juan with karma: 208 on 2017-01-24
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by ghkraju on 2017-01-24:
@Juan: Thanks. For my purpose, I am using ActionServers in the sameway (which are way better than services atleast for my case). I will start all the action servers at initialization and send a request whenever needed. you can check them once. This might be helpful for you too.
Comment by shoemakerlevy9 on 2017-04-14:
Can you elaborate on what you mean by you have your nodes sleep until a service event triggers them. I am using a ZED camera which is fairly resource hungry. It would be nice for it to not take up those resources in states where it is not needed.

