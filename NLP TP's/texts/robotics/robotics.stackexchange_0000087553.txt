Q:

Installing a custom dependency with rosdep

Hello,
I have a Ros package (let's call it myRosPkg) which depends on a custom version of a python module (that we call myCustomPkg).
This python module is on a forked github repository.
I would like rosdep to automatically install this dependency.
To do so, here is what I have done (following the instructions given here and here.
1.  Created a custom_deps.yaml with the following content:
myCustomPkg:
    ubuntu: |
        pip install git+https://github.com/user/repo.git@master

2. Append this file to /etc/ros/rosdep/sources.list.d/20-default.list
echo file://$(readlink -f custom_deps.yaml) >> /etc/ros/rosdep/sources.list.d/20-default.list

3. Update rosdep and check install (this is where it fails)
> rosdep update
...
> rosdep resolve myCustomPkg --os=ubuntu:xenial
rosdep detected OS: [elementary] aliasing it to: [ubuntu]
#apt
pip install git+https://github.com/user/repo.git@master

> rosdep check myRosPkg --os=ubuntu:xenial -i
rosdep detected OS: [elementary] aliasing it to: [ubuntu]
System dependencies have not been satisified:
apt pip
apt install
apt git+https://github.com/user/repo.git@master

Is there something wrong I did ? (maybe rosdep is not parsing the command as a multiline string?)
Thanks in advance :)

Originally posted by ejalaa12 on ROS Answers with karma: 81 on 2018-06-27
Post score: 0

Original comments
Comment by gvdhoorn on 2018-06-27:
Did you copy-paste the yaml content correctly? The following seems to be missing one level of indentation:

myCustomPkg:

ubuntu: |
    ...

Comment by ejalaa12 on 2018-06-27:
Yes i just forgot to put it correcly on the question

A:

The bash syntax you linked to is no longer supported as of rosdep 0.12 several years ago. See the top level header.
http://wiki.ros.org/rosdep/rosdep.yaml

Originally posted by tfoote with karma: 58457 on 2018-06-27
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by tfoote on 2018-06-27:
Duplicate: https://github.com/ros-infrastructure/rosdep/issues/614
Comment by ejalaa12 on 2018-06-27:
Thank you, and sorry again for the double post. Is there no other way of doing so?
Comment by tfoote on 2018-06-27:
Since you're using pip I'd suggest using the pip installer. The best approach for this would be to use the full url in a pip rule. I don't think that's currently fully supported but a patch to extend the pip installer to support that would be appreciated.
Comment by ejalaa12 on 2018-06-28:
See my answer for using a pip rule. What do you mean by not fully supported ?

