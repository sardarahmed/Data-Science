Q:

intelligent rosmake? does rosinstall remove ROS_NOBUILD?

Hello, I'm using ROS on fedora12 in user space, thanks for your help.

Calling rosmake on a package mostly compiles all needed packages including basics like roscpp again, though they have been built already. Why can't it see that those packages didn't change at all?

Therefore I put a ROS_NOBUILD in every pkg that needs more than a blink to build. Updating through rosinstall ~/ros seems to leave this flag, which prevents the updates from being built. Shouldn't there be an option to do remove the flag if reasonable, or perhaps better a way for rosmake to ignore this flag when called after updating rosinstall?
Or where am I wrong?

Originally posted by felix k on ROS Answers with karma: 1650 on 2011-05-26
Post score: 1

A:

rosmake simply calls 'make' in all the packages in dependency order.  It will call make, and make will check the dependencies, and determine that nothing needs to be built.

ROS_NOBUILD is usually used in read only checkouts such as the ones installed in shared locations.  It states tells the rosmake that someone is managing the tree and to ignore it.  You can use rosmake -i and rosmake -u to mark and unmark.  If you update the tree, you should remove the ROS_NOBUILD flags and then recompile and mark ROS_NOBUILD again.

Originally posted by tfoote with karma: 58457 on 2011-05-28
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by felix k on 2011-05-29:\

Good thought, make needs like a sec to check that nothing needs to be built, which I confirm now from the time stamps. \ 2. It may be nice to have rosmake -i work recursively, or at least stack-inside. Going to try rosprotect now..

