Q:

Build third party package in build or devel folder

I have a package that needs to be unzipped, configured, and made. I currently do this inside my source folder. Then I jump through a bunch of hoops to make the dependencies depend on these custom commands.
The current problem I have is that it doesn't clean up. catkin_make clean doesn't delete the built products, and it doesn't delete the unzipped contents.
I could find some way to find the "clean" target, and do something special (like rm -rf unzipped location and build products) but that would probably confuse people because the rest of my build is out of source.
Ideally, I could unzip the source in the build folder somewhere, and then when the user deleted the build and devel folder, the next catkin_make would do a clean unzip and build.

Originally posted by jeffeb3 on ROS Answers with karma: 1 on 2015-10-12
Post score: 0

Original comments
Comment by jeffeb3 on 2015-10-12:
I'm still hoping to find a way to install this into the build folder, but I did find a way to make the catkin_make clean delete the folder:
set_directory_properties(
  PROPERTIES ADDITIONAL_MAKE_CLEAN_FILES
    "${CMAKE_CURRENT_SOURCE_DIR}/${EXTRACTED_DIR}")

A:

I would agree that it would be better to do your download and custom logic in the build space. In general it's best practice that a build does not change the source space.
Since you're creating custom commands you should be able to do it in the build space instead of the source space.

Originally posted by tfoote with karma: 58457 on 2015-10-12
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by jeffeb3 on 2015-10-12:
Yeah, I'd like to do that. If you agree with my solution, then all I need is the syntax to get to the build folder. Is there a variable for the build folder?

