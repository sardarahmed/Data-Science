Q:

Moving Base set distance without Navigation stack

I am using a Beaglebone Black on a iRobot Create 2 for some experimenting. I want to be able to move the base a set amount without using the navigation stack, as the Beaglebone would be overwhelmed. I am using the new Create driver that came out and it publishes /odom and subscribes to /cmd_vel. Is there a way to accomplish this? I only need to move about 12 inches but I need to move as precisely as possible.
Thanks,
luketheduke

Originally posted by luketheduke on ROS Answers with karma: 285 on 2016-04-21
Post score: 0

A:

The wheel odometry from the Create is not the greatest. I would expect it to be able to travel 12 inches (+- 0.5inch) on wheel encoders alone, but you can let me know.
I would record a reference odometry message before you command the robot to move. Then continually compute the distanced travelled by taking the difference between the current odometry message and the reference. When the robot has travelled the desired distance, send a zero command to /cmd_vel. Don't forget the units reported on /odom are in meters. I'd expect the slower you command the robot to move, the closer you'll be able to stop at the desired mark. Also note that when rotation is involved, the odometry estimate becomes worse.
EDIT: To clarify, I am suggesting writing your own controller node that subscribes to /odom and publishes to /cmd_vel.

Originally posted by jacobperron with karma: 1870 on 2016-04-21
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by luketheduke on 2016-04-21:
How would I listen to /odom and derive the distance moved?
Comment by jacobperron on 2016-04-21:
I would follow the tutorial on how to write a ROS publisher and subscriber.
In the subscriber callback for /odom, you can implement the logic I described.
Comment by luketheduke on 2016-04-21:
Specifically, in the odom message, which part should I record? The robot moves in 2D so the Z location should be ignored, correct?
Comment by jacobperron on 2016-04-21:
Right, it should be following REP 103.
Positive X is forward
Positive Y is to the left
Positive Z is up
You'll probably want to compute the Euclidean distance in XY plane.

