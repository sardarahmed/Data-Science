Q:

Selecting log level in ROS2 launch file

Nodes defined in launch file have the INFO log level as a default value
I would like to know how to change it so that it also logs DEBUG level strings or other types of logging.
launch_ros.actions.Node(package='demo_nodes_cpp', node_executable='talker', output='screen', parameters=[config_file])

Thank you

Originally posted by Teckel on ROS Answers with karma: 103 on 2018-12-25
Post score: 7

Original comments
Comment by yossi_ov on 2019-11-11:
Any updates?

A:

Hello, I have had the same issue and for me (on Eloquent) the following works:
logger = launch.substitutions.LaunchConfiguration("log_level")
launch.LaunchDescription([
      launch.actions.DeclareLaunchArgument(
            "log_level",
            default_value=["debug"],
            description="Logging level",
      ),
     launch_ros.actions.Node(
         package='demo_nodes_cpp',
         executable='talker',
         output='screen', 
         arguments=['--ros-args', '--log-level', logger]
    )
])

I got this idea from this open issue: https://github.com/ros2/launch/issues/383 and hopefully a more elegant solution will be available soon.
If anyone has an idea for a better solution in the meantime, please share!

Originally posted by notarobot with karma: 46 on 2020-11-03
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by tnajjar on 2022-07-14:
This sets the level for all loggers including rcl which spams a lot. To set the logging level only for your node see here
(Available from galactic)
Comment by LastStarDust on 2023-02-13:
@tnajjar That is true. I found a solution by using the PythonExpression substitution.
    node_test = LifecycleNode(
        package="node_test",
        executable="note_test",
        name="note_test",
        namespace="",
        output="screen",
        ros_arguments=[
            "--log-level",
            PythonExpression(['"node_test:=" + "', log_level, '"']),
        ],
    )

But this is a very sinful piece of code because it allows a maleficent user to execute arbitrary Python code. Do you know any better solution?
Comment by tnajjar on 2023-02-16:
you don't need PythonExpression
 arguments= [
    "--ros-args",
    "--log-level",
    "node_test:=debug",
]

this should work
Comment by LastStarDust on 2023-02-21:
@tnajjar That works if I want to keep the log level at "debug", but what if I want to change the log level as a command line argument?
If I write:
log_level_arg = DeclareLaunchArgument(
    "log-level",
    default_value=["debug"],
    description="Logging level",
)
log_level = LaunchConfiguration("log-level")

...

some_node = LifecycleNode(
    arguments= [
        "--ros-args",
        "--log-level",
        "some_node:=",
        log_level
    ]

then a white space is added between "some_node:=" and log_level and everything breaks down.
Comment by tnajjar on 2023-03-06:
try:
some_node = LifecycleNode(
    arguments= [
        "--ros-args",
        "--log-level",
        ["some_node:=", log_level],
    ]

Comment by LastStarDust on 2023-03-23:
@tnajjar Thank you so much. That did the trick.

