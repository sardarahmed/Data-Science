Q:

Proper way of including headers in catkin c++

Hello there!
I'm experiencing a linking problem when I try to include some header files to my node.
My newnode.cpp looks so:
#include <stdio.h>
#include <iostream>
#include <math.h>

#include "newnode_functions.h"

using namespace std;

int a, b;

int main()
{
        cout << "\nInsert number a: ";
        cin >> a;
        cout << "\nInsert number b: ";
        cin >> b;
        cout << "\na + b = " << sum(a,b);
        return 0;
}

my newnode_functions.h looks so:
#include <math.h>

int c;

int sum(int, int);

and my newnode_functions.cpp looks like this:
#include "newnode_functions.h"

int sum(int a, int b)
{
        c = a + b;
        return c;
}

Then my CMakeLists.txt is as follows:
cmake_minimum_required(VERSION 2.8.3)
project(publish_imu_measurements)
find_package(catkin REQUIRED COMPONENTS
  roscpp
  std_msgs
#  message_generation
  rogi_messages
)
catkin_package(
  INCLUDE_DIRS include
#  LIBRARIES publish_imu_measurements
  CATKIN_DEPENDS message_runtime #roscpp std_msgs
#  DEPENDS system_lib
)
include_directories(include ${catkin_INCLUDE_DIRS})
add_executable(newnode src/newnode.cpp src/newnode_functions.cpp)

When i try to compile this package with catkin_make I get the following linking errors:
Base path: /home/ubuntu/catkin_ws
Source space: /home/ubuntu/catkin_ws/src
Build space: /home/ubuntu/catkin_ws/build
Devel space: /home/ubuntu/catkin_ws/devel
Install space: /home/ubuntu/catkin_ws/install
####
#### Running command: "make cmake_check_build_system" in "/home/ubuntu/catkin_ws/build"
####
-- Using CATKIN_DEVEL_PREFIX: /home/ubuntu/catkin_ws/devel
-- Using CMAKE_PREFIX_PATH: /home/ubuntu/catkin_ws/devel;/opt/ros/kinetic
-- This workspace overlays: /home/ubuntu/catkin_ws/devel;/opt/ros/kinetic
-- Using PYTHON_EXECUTABLE: /usr/bin/python
-- Using Debian Python package layout
-- Using empy: /usr/bin/empy
-- Using CATKIN_ENABLE_TESTING: ON
-- Call enable_testing()
-- Using CATKIN_TEST_RESULTS_DIR: /home/ubuntu/catkin_ws/build/test_results
-- Found gtest sources under '/usr/src/gtest': gtests will be built
-- Using Python nosetests: /usr/bin/nosetests-2.7
-- catkin 0.7.6
-- BUILD_SHARED_LIBS is on
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- ~~  traversing 2 packages in topological order:
-- ~~  - rogi_messages
-- ~~  - publish_imu_measurements
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- +++ processing catkin package: 'rogi_messages'
-- ==> add_subdirectory(rogi_messages)
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
-- rogi_messages: 2 messages, 0 services
-- +++ processing catkin package: 'publish_imu_measurements'
-- ==> add_subdirectory(publish_imu_measurements)
-- Configuring done
-- Generating done
-- Build files have been written to: /home/ubuntu/catkin_ws/build
####
#### Running command: "make -j1 -l1" in "/home/ubuntu/catkin_ws/build"
####
[  0%] Built target std_msgs_generate_messages_nodejs
[  0%] Built target _rogi_messages_generate_messages_check_deps_Vector3Int16
[  0%] Built target _rogi_messages_generate_messages_check_deps_ImuData
[ 13%] Built target rogi_messages_generate_messages_nodejs
[ 13%] Built target std_msgs_generate_messages_cpp
[ 26%] Built target rogi_messages_generate_messages_cpp
[ 26%] Built target std_msgs_generate_messages_eus
[ 46%] Built target rogi_messages_generate_messages_eus
[ 46%] Built target std_msgs_generate_messages_py
[ 66%] Built target rogi_messages_generate_messages_py
[ 66%] Built target std_msgs_generate_messages_lisp
[ 80%] Built target rogi_messages_generate_messages_lisp
[ 80%] Built target rogi_messages_generate_messages
[ 86%] Linking CXX executable /home/ubuntu/catkin_ws/devel/lib/publish_imu_measurements/newnode
CMakeFiles/newnode.dir/src/newnode_functions.cpp.o:(.bss+0x0): multiple definition of `c'
CMakeFiles/newnode.dir/src/newnode.cpp.o:(.bss+0x0): first defined here
collect2: error: ld returned 1 exit status
publish_imu_measurements/CMakeFiles/newnode.dir/build.make:120: recipe for target '/home/ubuntu/catkin_ws/devel/lib/publish_imu_measurements/newnode' failed
make[2]: *** [/home/ubuntu/catkin_ws/devel/lib/publish_imu_measurements/newnode] Error 1
CMakeFiles/Makefile2:968: recipe for target 'publish_imu_measurements/CMakeFiles/newnode.dir/all' failed
make[1]: *** [publish_imu_measurements/CMakeFiles/newnode.dir/all] Error 2
Makefile:138: recipe for target 'all' failed
make: *** [all] Error 2
Invoking "make -j1 -l1" failed

I have run out of ideas on this. Variable c is declared only in my header file, so I don't understand why I'm getting this error. Please help me on this...

Originally posted by rogi555 on ROS Answers with karma: 1 on 2017-05-11
Post score: 0

A:

Apart from the two issues mentioned in the answers before you need to fix the error the Compiler complains about: multiple definitions of c. The Definition is in the Header i.e. it will bei defined twice, once For each cpp File including it.
You need to define int c; in the local scope of int sum(int a, int b) in File newnode_functions.Cpp.

Originally posted by Wolf with karma: 7555 on 2017-05-13
This answer was ACCEPTED on the original site
Post score: 1

