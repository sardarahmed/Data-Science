Q:

Why can't I set PID gains through JointController?

Hello,
When I set the gains of my PID object using a direct reference it works, as :
common::PID pid = common::PID(0.1, 0, 0);
std::cout << pid.GetPGain();

pid.SetPGain(0.5);
std::cout << pid.GetPGain();

produces
0.1
0.5

However, when I access it through the joint controller, the gain value isn't set.
std::cout << model->GetJointController()->GetPositionPIDs()[joint->GetScopedName()]->GetPGain();

model->GetJointController()->GetPositionPIDs()[joint->GetScopedName()]->SetPGain(0.5);

std::cout << model->GetJointController()->GetPositionPIDs()[joint->GetScopedName()]->GetPGain();

produces
0.1
0.1

Does GetPositionPIDs  not provide you with the actual PID objects, but a bunch of copies?
Cheers,

Originally posted by kaldo on Gazebo Answers with karma: 13 on 2017-01-27
Post score: 0

A:

Yes, it looks like GetPositionPIDs is returning copies. See this at the API documentation.
I think the correct way to do what you want is to construct a new PID object and use Joint::Controller:SetPositionPID (API)

Originally posted by chapulina with karma: 7504 on 2017-01-27
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by kaldo on 2017-01-27:
Actually, reading the doc had led me to think I would get the actual objects. So I was surprised at the actual behavior and wondering if it was intended.
Comment by chapulina on 2017-01-27:
I believe a copy is made unless you return a reference or a pointer.

