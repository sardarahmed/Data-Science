Q:

rosdistro cache failing with yaml.scanner.ScannerError: mapping values are not allowed here

I had set permissions on my internal rosdistro restrictively- it required an ssh key to access.  My current solution is to make the rosdistro gitlab project 'public' within my lan and this error goes away.  I think if I uploaded the right ssh key to gitlab it would work- either /var/lib/jenkins/.ssh/id_rsa.pub, or /root/.ssh/id_rsa, or /home/jenkins-slave/.ssh/id_rsa?  All of those map to buildfarm_deployment_config keys, if I figure it out I'll post an answer.
# BEGIN SECTION: Run Dockerfile - rosdistro cache
15:27:13 + rm -fr /var/lib/jenkins/jobs/jade_rosdistro-cache/workspace/rosdistro_cache
15:27:13 + mkdir -p /var/lib/jenkins/jobs/jade_rosdistro-cache/workspace/rosdistro_cache
15:27:13 + docker run --rm --cidfile=/var/lib/jenkins/jobs/jade_rosdistro-cache/workspace/docker_generate_rosdistro_cache/docker.cid --net=host -v /var/lib/jenkins/jobs/jade_rosdistro-cache/workspace/rosdistro_cache:/tmp/rosdistro_cache rosdistro_cache_generation
15:27:14 DEBUG:rosdistro:Load index from "http://gitlab.mydomain.com/misc/rosdistro/raw/master/index.yaml"
15:27:14 Traceback (most recent call last):
15:27:14   File "/usr/bin/rosdistro_build_cache", line 99, in <module>
15:27:14     main()
15:27:14   File "/usr/bin/rosdistro_build_cache", line 80, in main
15:27:14     caches = generate_distribution_caches(args.index, dist_names=args.dist_names, preclean=args.preclean, ignore_local=args.ignore_local, debug=args.debug)
15:27:14   File "/usr/lib/python3/dist-packages/rosdistro/distribution_cache_generator.py", line 51, in generate_distribution_caches
15:27:14     index = get_index(index)
15:27:14   File "/usr/lib/python3/dist-packages/rosdistro/__init__.py", line 118, in get_index
15:27:14     data = yaml.load(yaml_str)
15:27:14   File "/usr/lib/python3/dist-packages/yaml/__init__.py", line 72, in load
15:27:14     return loader.get_single_data()
15:27:14   File "/usr/lib/python3/dist-packages/yaml/constructor.py", line 35, in get_single_data
15:27:14     node = self.get_single_node()
15:27:14   File "/usr/lib/python3/dist-packages/yaml/composer.py", line 36, in get_single_node
15:27:14     document = self.compose_document()
15:27:14   File "/usr/lib/python3/dist-packages/yaml/composer.py", line 58, in compose_document
15:27:14     self.get_event()
15:27:14   File "/usr/lib/python3/dist-packages/yaml/parser.py", line 118, in get_event
15:27:14     self.current_event = self.state()
15:27:14   File "/usr/lib/python3/dist-packages/yaml/parser.py", line 193, in parse_document_end
15:27:14     token = self.peek_token()
15:27:14   File "/usr/lib/python3/dist-packages/yaml/scanner.py", line 128, in peek_token
15:27:14     self.fetch_more_tokens()
15:27:14   File "/usr/lib/python3/dist-packages/yaml/scanner.py", line 220, in fetch_more_tokens
15:27:14     return self.fetch_value()
15:27:14   File "/usr/lib/python3/dist-packages/yaml/scanner.py", line 576, in fetch_value
15:27:14     self.get_mark())
15:27:14 yaml.scanner.ScannerError: mapping values are not allowed here
15:27:14   in "<unicode string>", line 34, column 12:
15:27:14         display: none !important;
15:27:14                ^
15:27:14 Build step 'Execute shell' marked build as failure
15:27:14 SSH: Current build result is [FAILURE], not going to run.

It's possible display: none !important;comes from gitlab when the index.yaml is accessed.  I could debug by wgetting the index.yaml from the repo or master machine with the access restrictions turned back on.
import_upstream jobs for ros_bootstrap.yaml and import_jade.yaml complete fine.

Originally posted by lucasw on ROS Answers with karma: 8729 on 2016-03-08
Post score: 0

A:

Yes, I suspect that gitlab is giving you something besides the raw content of the file. And the yaml parser is falling over on an html challenge page or an html error message.

Originally posted by tfoote with karma: 58457 on 2016-03-08
This answer was ACCEPTED on the original site
Post score: 0

