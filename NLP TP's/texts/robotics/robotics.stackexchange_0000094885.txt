Q:

Imu_attitude_to_tf_node Error: 'command not found'

I am attempting to convert data from the Pixhawk IMU to a transform broadcast using the "hector_imu_attitude_to_tf" node from the Hector SLAM repository (found at:
link text )
However, when I run the file using:
rosrun hector_imu_attitude_to_tf imu_attitude_to_tf_node.cpp 

I get the following error message, with "command not found" listed 5 times, as well as 2 other errors:
/hector_imu_attitude_to_tf/src/imu_attitude_to_tf_node.cpp: line 5: std::string: command not found
/home/luengr/a_ws/src/hector_slam/hector_imu_attitude_to_tf/src/imu_attitude_to_tf_node.cpp: line 6: std::string: command not found
/home/luengr/a_ws/src/hector_slam/hector_imu_attitude_to_tf/src/imu_attitude_to_tf_node.cpp: line 7: tf::TransformBroadcaster*: command not found
/home/luengr/a_ws/src/hector_slam/hector_imu_attitude_to_tf/src/imu_attitude_to_tf_node.cpp: line 8: tf::StampedTransform: command not found
/home/luengr/a_ws/src/hector_slam/hector_imu_attitude_to_tf/src/imu_attitude_to_tf_node.cpp: line 9: tf::Quaternion: command not found
/home/luengr/a_ws/src/hector_slam/hector_imu_attitude_to_tf/src/imu_attitude_to_tf_node.cpp: line 12: typedef: command not found
/home/luengr/a_ws/src/hector_slam/hector_imu_attitude_to_tf/src/imu_attitude_to_tf_node.cpp: line 13: syntax error near unexpected token `}'
/home/luengr/a_ws/src/hector_slam/hector_imu_attitude_to_tf/src/imu_attitude_to_tf_node.cpp: line 13: `  namespace tf { typedef btMatrix3x3 Matrix3x3; }'

It has been suggested to me that this is a dependencies issue, however i have used Rosdep to install all dependencies with no luck. Is there something I am not seeing? I assume it is something I have not set up properly as I assume the code from the Hector-SLAM repository is working fine.
Many Thanks

Originally posted by SamH on ROS Answers with karma: 27 on 2020-02-26
Post score: 0

A:

However, when I run the file using:

rosrun hector_imu_attitude_to_tf imu_attitude_to_tf_node.cpp

you cannot directly execute .cpp files.
C++ is a compiled language, so you need to first build the package and only then can you start the node(s).
Did you run catkin_make (or catkin build) before trying to start anything?

Originally posted by gvdhoorn with karma: 86574 on 2020-02-26
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by SamH on 2020-02-27:
That explains a lot!
How do I build the package and start the node? I did run catkin_make, and also used "chmod +x imu_attitude_to_tf_node.cpp" to give the file execution rights.
Comment by gvdhoorn on 2020-02-27:
These appear to be questions that would have been answered by the introductory tutorials. In short: cd to the root of your workspace and then run catkin_make (after having run source /opt/ros/kinetic/setup.bash).

and also used "chmod +x imu_attitude_to_tf_node.cpp" to give the file execution rights.

No. That's not how this works.
This is C++, not Python or a shell script.
Comment by SamH on 2020-02-28:
I'm afraid I'm not familiar with running C++ files so thank you for your explanation. I have now resolved the issue. Thanks again

