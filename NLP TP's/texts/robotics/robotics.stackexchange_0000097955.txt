Q:

Understanding ROS, where does ROS go?

Hello, I`m starting with ROS and I understood the concepts and how it works.
I saw that we can control robots using ROS from PC but, my question is where does ROS go in a real scenario robot?
For example, If I build a real robot using Raspberry Pi connected with sensors and motors and other mechanical stuffs, should I install ROS on raspberry and in my machine to control it? Am I right thinking like this?
Or does ROS goes only on the controller side(PC) of the robot?

Originally posted by Toshi on ROS Answers with karma: 5 on 2021-01-03
Post score: 0

A:

ROS is just a IPC (intra-process communication) framework. It works on top of the OS (mostly Ubuntu) and abstracts the lower level processing that you would have had to deal with when working with sensors and their drivers. It is open source and a lot of users, mostly in academia or research, use it to develop robots and applications since it has a lot of packages that work out of the box (mostly) and you don't have to spend time re-inventing the wheel every time. ROS also tries to standardize the use of message types and coordinate frames across projects which is a nice feature.
In your example, you can have ROS installed on a raspberry-pi and have it interface with and control the motors on your robot. You don't need a separate PC to control ROS on the raspberry-pi. But that too is possible if that is what you are going for!

Originally posted by Akhil Kurup with karma: 459 on 2021-01-04
This answer was ACCEPTED on the original site
Post score: 1

