Q:

ROS Answers SE migration: RGBDSLAM+IMU

Hi guys,
I am using the RGBDSLAM package to build a 3D map using a stereo camera (Bumblebee2) :
Video result
Sometimes the 3D reconstruction (pointcloud matching) is not done in a good way. I want to improve the mapping results with IMU information. I just want to know which variable is taking the Odometry information to create an edge in the Graph. I suppose that it is "dom_edge.informationMatrix" in "graph_manager.cpp"
if(!invalid_odometry)
{
  ROS_INFO("Adding odometry motion edge for Node %i (if available, otherwise using identity)", (int)graph_.rbegin()->second->id_);
  LoadedEdge3D odom_edge;
  odom_edge.id1 = sequentially_previous_id;
  odom_edge.id2 = new_node->id_;
  odom_edge.mean = tf2G2O(odom_delta_tf);

  //Real odometry
  //FIXME get odometry information matrix and transform it to the optical frame
  odom_edge.informationMatrix = Eigen::Matrix<double,6,6>::Identity(); //0.1m /0.1rad error
  addEdgeToG2O(odom_edge,graph_[sequentially_previous_id],new_node, true,true, curr_motion_estimate);
  graph_[new_node->id_] = new_node; //Needs to be added
  

Under //Real odometry, all what i see is :
odom_edge.informationMatrix = Eigen::Matrix<double,6,6>::Identity();
In which identity matrix is used. Where is the real information matrix ??

Originally posted by INSA on ROS Answers with karma: 112 on 2013-05-27
Post score: 1

A:

Unfortunately, there is none, this functionality is just a stub. TF doesn't deliver uncertainties, so one would have to incorporate a real odometry message, e.g. nav_msgs/Odometry, which requires to add listeners to openni_listeners that subscribe to that odometry topic and add edges to the graph accordingly.

Originally posted by Felix Endres with karma: 6468 on 2013-05-27
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by INSA on 2013-05-27:
Hi Felix, I am willing to create a tf listener on which i will put the tfs generated by the Fovis rosnode to replace the "odom_delta_tf" that represents the transformation between two pointclouds.
Comment by INSA on 2013-05-27:
The fovis rosnode will be augmented with IMU data and this will allow me to match pointclouds "maybe" in better way. What do you think ?
Comment by Felix Endres on 2013-05-28:
Might work, but it will require tinkering with the information matrix to get the fusion of the data right. Otherwise the odometry will either be mostly ignored or greatly override the other edges.
Comment by Bubble on 2013-06-27:
In which way would I have to change the information matrix to greatly override the other edges with the odometry?
Comment by Felix Endres on 2013-07-03:
I suggest to proceed like this: Change src/graph_manager.cpp line 475 to a ROS_INFO_STREAM instead of ...DEBUG..., then check out the logfile what typical values are (I quickly checked, they were about 5-100), then use greater values for the dimensions you cover (x,y,yaw).

