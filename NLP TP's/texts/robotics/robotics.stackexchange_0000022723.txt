Q:

Servo Starts Oscillating Under Disturbance

I'm using MG996R servos to control a 6-axis desktop robot arm. When no disturbance (like a gentle push to the robot), the servos are fine and can hold their places. But under a gentle disturbance, servos at the top will oscillate a little and come back to the set position, while servos at the bottom will keep oscillating.

The question here is what is causing the oscillation?
I understand inside a servo there is a PID for angular position control, and the oscillation, really is the response to the disturbance (and one can do s-plane analysis, etc.). The bottom servos have heavier loads, so my suspicion is there is not enough stall torque.
I didn't hear buzz, and without load, the servos would work fine (it could go to the set position, being able to hold its place when I use my finger to rotate the plate right on top of the motor shaft). So I don't think it's the PWM that causes the issue.
The PWM is set to 50%, so that should be near a neutral position.
PS:
One follow-up observation is if I change this motor to a different one, the oscillation stops, and the new motor performs quite robustly. Therefore, my current suspicion is manufacturing defects, which make the internal PID loop work less reliably with the real hardware

A:

I can add one more point to RowanP's excellent list: the servo's PID is unreliable, not because of a defect, but because it is mistuned for your application.
Recall that tuning a PID control is arcane, if not entirely a black art. The servo manufacturer tuned the control PID coefficients for some use case, perhaps moving RC aircraft control surfaces. That might need to exert considerable torque, but against a minimal moment of inertia.
Your setup, on the other hand, has a considerable moment of inertia. Imagine that the manufacturer's tuning expects a quick response when it gives a certain push, but your setup responds slower and has inertial overshoot. Without refreshing my undergrad s-plane analysis, I think that might explain what you observe. If you have the patience to conduct more experiments, you might try attaching loads with various moments of inertia and see how the behavior changes.
I agree with your surmise that a beefier servo might have a stiffer response. But it might also be slower, depending on how fast the motor actually grinds the gearbox around. Either way it might change the PID-vs-MoI enough to scare away your problem.
Some people have modified servos to supply an error or position signal to the controlling microcontroller. That would let software exert some more control, sort of servoing the servo. Further gutting could effectively disable the servo's internal control entirely, making it just a gearbox motor with a position encoder.
I have seen a sort of hybrid approach, where the $\mu C$ would gradually direct the servo to go from point A to point B. But won't help with your setup , where the oscillation happens when it's merely trying to maintain a position.

