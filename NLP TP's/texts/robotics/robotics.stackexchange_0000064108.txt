Q:

What's the function of the symbol '&' after roscore?

The statement 'roscore &' offten appears before 'rosparam set /use_sim_time true'.
What's the function of the symbol & after roscore?

Originally posted by somebodyus on ROS Answers with karma: 113 on 2014-11-19
Post score: 1

A:

This is more of a general Linux question, but from the manpage of bash (likely your shell):

If a command is terminated by the control operator &, the shell executes the command in the background in a subshell. The shell does not wait for the command to finish, and the return status is 0.

In other words: adding the '&' allows you to continue to use the terminal, while roscore is running in the background. If you did not add the '&', roscore would start and all input (into the terminal window) would be directed to roscore. You'd need a second terminal to do your work in.

For reference: man bash.

Originally posted by gvdhoorn with karma: 86574 on 2014-11-19
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by somebodyus on 2014-11-19:
Thank you so much.
How do I terminate the roscore?
Comment by ROSkinect on 2014-11-19:
Just Ctrl+c
Comment by somebodyus on 2014-11-19:
I run other command after roscore &, and I find I can not use Ctrl+C to terminate it.
Comment by ROSkinect on 2014-11-19:
you run it in the same terminal ?
Comment by gvdhoorn on 2014-11-19:
Termination of background tasks can be tricky. You could use pkill: pkill roscore. Note that this will kill the first roscore process that it matches.
Comment by somebodyus on 2014-11-19:
Yes.  I run other command such as ls after roscore &, and the terminal can correctly display the files. However, I can not use Ctrl+C to terminate roscore after I run ls.
Comment by somebodyus on 2014-11-19:
Thank you!
Comment by jarvisschultz on 2014-11-19:
You can use fg to bring running "jobs" to the "foreground". So if you type jobs you'll see a list of all running jobs. They'll all have a unique number like [#]. So if roscore was job 1, you could type fg %1 and that would bring roscore to the foreground and Ctrl-C could kill it.
Comment by jarvisschultz on 2014-11-19:
Just typing fg brings the "last" job to the foreground (the one with the "+" next to it's number). You can use bg to set jobs to run in the background that are currently in the foreground. Read more here: http://www.thegeekstuff.com/2010/05/unix-background-job/
Comment by gvdhoorn on 2014-11-19:
@jarvisschultz: excellent suggestion. Using jobs is indeed a good way to work with background tasks.
Comment by ahendrix on 2014-11-19:
You can also use the job ID with the kill command to terminate a job without bringing it to the foreground; for example kill %1 will send a sigint (ctrl-c) to job #1.
Comment by somebodyus on 2014-11-20:
Thank you so much!

