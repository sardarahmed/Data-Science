Q:

how to write TF broadcasts in a bag (with the rosbag API)

This is a follow up on some discussion going on here:
http://answers.ros.org/question/2826/simulating-sensor-data-problem-with-rosbag-and
Since the discussion has drifted away from the original topic I am posting a new question...
I am writing a simulation that simulates a moving vehicle and outputs ground truth position (as an Odometry message on topic "ground_truth" and as a TF: ground_truth -> base_link), and simulated sensor data with a controllable amount of noise. I want to use it to test my localization algorithms (EKF).
The simulator can run both in real time and in bag mode. In real time mode, it publishes the messages on topics, and everything is fine. In bag mode, it runs as fast as possible and writes the messages directly into a bag file, using the rosbag C++ API.
The only thing that is missing is how to write TF messages in the rosbag. I tried writing them to the bag on topic /tf but I got the following problems:

Writing tf/StamedTransform (same as what I broadcast in real time mode)
I get the following error at compilation:
‘const class tf::StampedTransform’ has no member named ‘__getDataType’

Writing geometry_msgs::TransformStamped
I convert using tf::transformStampedTFToMsg. No compilation errors. But in rviz, after setting the Fixed Frame to /ground_truth, I get the following warning: "no tf data. Fixed Frame [/ground_truth] does not exist." And the drop down menu to choose the fixed frame is empty.

So I do I proceed to store TF messages / transforms into the bag?

Originally posted by brice rebsamen on ROS Answers with karma: 1001 on 2011-11-10
Post score: 1

Original comments
Comment by brice rebsamen on 2011-11-24:
I'd really much appreciate an answer. Come on, nobody knows the answer?

A:

Hi Brice
I think I found a way to do this.
You must write to the bag file a tf:tfmessage instead of a geometry_msgs::TransformStamped.
Here's a piece of code that works for me (although I need to restart rviz after recording the bag file, before playing it back, in order to visualize, perhaps a problem with the timestamps, don't know)
I assume there is a tf::Transform tr, as well as a rosbag::bag bag variables
//declare a geometry msg
geometry_msgs::TransformStamped msg;
//declare a std::vector of geometry msgs
std::vector< geometry_msgs::TransformStamped > vec_msg;
//declare the tf:tfmessage, this is what is actually written to the bag file
tf::tfMessage tfmsg;
//convert the tf::transform (variable tr) to a geometry msg
tf::transformStampedTFToMsg(tf::StampedTransform(tr, ros::Ti    me::now(), "/world","/tf_vehicle"),msg);
//erase all value from the std::vector
vec_msg.erase(vec_msg.begin(),vec_msg.end());
//push back into the vector the geometry msg
vec_msg.push_back(msg);
//Set the tf::tfmessage transforms vector
tfmsg.set_transforms_vec(vec_msg);
//set the size (don't know if its actually needed)
tfmsg.set_transforms_size(1);
//write to the bag file
bag.write("/tf", ros::Time::now(),tfmsg);
Hope this helps
Miguel
PS: If you find why rviz needs to be restarted please let me know.

Originally posted by Miguel Riem de Oliveira with karma: 254 on 2011-11-26
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Miguel Riem de Oliveira on 2011-11-26:
Just an update. I tested just now and there is no need to restart rviz, just to reset it. Miguel

