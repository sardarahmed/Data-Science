Q:

How to detect when a stepper motor has stalled?

How can I detect when a stepper motor has stalled?
A google search led me to some people who say that
when the stepper motor stalls, the current spikes up,
which is easily detectable with a Hall sensor.
(Or, I suppose, by any of the other current sensors mentioned at
"How can I sense the motor's current?"
).
However, I measured the current through (one of the 4 wires of) my stepper motor,
and it's always within a few percent of 0.5 A, whether my stepper driver is holding one position, moving it normally (which in my application is very slowly), or the stepper driver thinks it is telling the stepper to move normally, but the motor has pegged out against the hard limit.
Measuring the current in the +12V power supply going to the stepper motor driver, also seemed to give a fairly constant current.
This may be because I turned down the current limit to that amount on my "chopper" stepper motor driver.
Am I missing some key detail in the "measure the current" approach?
A google search led me to some other people that measure the back-EMF (BEMF) in one coil of the stepper during the time the stepper driver is only driving the other coil.
But that only seems to distinguish between "a motor moving quickly" vs "a motor stopped", and doesn't seem to distinguish between my case of "a motor moving slowly" vs "a motor stopped".
Is there some way to apply the BEMF approach even in a system where I always drive the stepper slowly, and never spin it quickly?
I'm currently using a stepper driver board with the TI DRV8825 chip on it, and I hoped the "fault" pin would tell me when the stepper motor has stalled against my hard stop.
But it doesn't seem to be doing anything -- is it supposed to tell me about a stall, but I just have it wired up wrong?
Is there some other chip or drive technique that detects when the stepper has stalled out against the hard stop?
Is there some other technique for detecting a hard stall that I can "add on" to a system using an off-the-shelf stepper motor driver?
(Is there some other StackExchange site that is more appropriate for questions about motors and motor drivers?)

A:

One option is a stepper motor driver which uses sensorless stall system, such as the STMicroelectronics L6470 dSPIN: Fully integrated microstepping motor driver with motion engine and SPI. 
Once calibrated it can detect a stall condition and raise the FLAG pin high to alert to the uC of the problem.

A:

If you want to detect missed steps, you want an encoder. Luckily, both magnetic and optical encoders exist that easily give you 4096 steps per revolution, so even a micro-stepping stepper motor will be measured with at least one step per step.
Note that some CNC mills may not necessarily detect missed steps; it's up to the operator to not program a tool path that's too hard for the spindle and tool, and to hear the problem when it happens. Instead, those CNCs just use end limit switches to find the absolute home, and then work entirely by assuming steps are taken.
Encoders may allow you to experiment with other features, too, like using an assist DC motor for non-engaged moves for really fast rapids :-)

A:

I found that the FFT of the current waveform of the stepper often shows the natural frequency harmonics of the motor+driver system AND that during a stall extra frequency harmonics appear!!! all you need is a fast, bidirectional current to voltage conversion IC and a narrow band pass filter to detect if the extra harmonics are present.

