Q:

dynamic_reconfigure: cfg file generation not producing __init__.py file correctly

I've encountered an issue with dynamic_reconfigure (working with python) not producing an __init__.py in the configuration module directory:
As expected, the generator produces a new directory my_module (with a cfg directory within) in my src directory. It does create an __init__.py file within the cfg directory but not within my_module itself. Python doesn't recognize this as a module and I get the following error:

ImportError: No module named my_module.cfg

Manually creating an __init__.py file within the my_module directory solves this problem. Is anyone else encountering this issue? Is it a bug or do I have a setting wrong somewhere? Thanks in advance!
System: Ubuntu 10.10, Python Version: 2.7.1, ROS Electric and Diamondback

Originally posted by haroldsoh on ROS Answers with karma: 31 on 2011-11-01
Post score: 3

Original comments
Comment by tingfan on 2011-11-22:
We have the same issue here. It seems the cause is  rosed dynamic_reconfigure parameter_generator.py fail to generate the necessary init.py. Ticket submitted  https://code.ros.org/trac/ros-pkg/ticket/5259
Comment by Sabrina on 2011-11-03:
I have the same issue here (Ubuntu 11.04; Python 2.7.1; ROS electric).

A:

If you suffer from this in, e.g., mypackage, go to mypackage/src/mypackage, and touch init.py
For example:
rosmake mypackage
roscd mypackage/src/mypackage 
touch __init__.py

Then it should run.
Steve.

Originally posted by ssafarik with karma: 306 on 2012-04-26
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by joq on 2012-06-08:
This is a useful temporary workaround, but not a fix for the problem, which will recur when someone else checks out mypackage.

