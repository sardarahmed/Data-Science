Q:

Which grasp planner to use, manipulation pipeline, non PR2 robot

(This question/answer thread was started via email)
I am trying to implement the ROS Manipulation Pipeline (perception + grasping) on our own robot. 
So it's a non PR2, with non-PR2 gripper.
Original questions:

How do I define a non-PR2 gripper in the YAML config for use with "probabilistic_grasp_planner" or "bayesian_grasp_planner"? 
e.g. see  /pr2_object_manipulation/trunk/manipulation/pr2_gripper_grasp_planner_cluster/config/pr2_gripper_model.yaml

If using a non-PR2 robot, don't I need a Grasp Planner to make the Pipeline work?

or alternatively, I would need to setup the system to generate a database of grasps using GraspIt, like was done for the PR2 gripper?

Thanks,
David.

Originally posted by dbworth on ROS Answers with karma: 1103 on 2013-01-08
Post score: 4

Original comments
Comment by Dave Coleman on 2013-01-10:
This is a great question I've been trying to figure out myself as well!

A:

The probabilistic planner is actually not a stand-alone planner - what it does is aggregate suggestions from other planners in a smart way. So if you have no planners for your gripper yet, it would not be the right place to start.
What does your hand look like? If it's at all gripper-like (or has a finger configuration that can be made to resemble a gripper), an adaptation of the PR2 Cluster Planner is definitely doable.
Installing the database on your system and hand-saving a few grasps in it should also be a few hours or maybe a day's worth of work.
Also note that the grasping pipeline relies on a lot of underlying software, in particular in terms of perception and arm navigation for operation. Are you also bringing up those components on your robot?

Originally posted by Matei Ciocarlie with karma: 586 on 2013-01-08
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by dbworth on 2013-01-10:
Thanks Matei. I'll have a look at defining a gripper to adapt the cluster planner. Correct, yes I'm adapting PR2's Interactive Perception and Interactive Manipulation packages, to pick'n'place objects on a table.

