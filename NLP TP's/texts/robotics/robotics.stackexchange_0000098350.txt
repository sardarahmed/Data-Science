Q:

How to contribute to ROS2

Hello I m planning to contribute to ros2, but I m a bit confused, the ros2 contributing  guildlines tells us that, we need to build it from source (I have done this), but now how do I do version control from this workspace, the correct way to contribute to any open source is by by forking that repo, then creating branch for each issue, but I m not getting how all this is achievable from ros2 workspace which is built by source.
The workspace doesnt contain .git folder so I need to first do git init

Originally posted by suab123 on ROS Answers with karma: 25 on 2021-02-18
Post score: 0

A:

Welcome! Thanks for your interest in contributing to ROS 2.
These instructions:
https://index.ros.org/doc/ros2/Installation/Foxy/Linux-Development-Setup/#get-ros-2-code
Will use the vcs tool to automate the cloning of a bunch of git repos to the ~/ros2_foxy/src directory. Specifically, these ones:
https://raw.githubusercontent.com/ros2/ros2/foxy/ros2.repos
It's the same normal open-source process on GitHub, just that vcs is doing one more step of automation because there are so many repos that it would be painful to clone them all one-by-one using git on the command line.
Whenever you want to change something in any of those git clones created by vcs, you can fork the respective upstream repository into your own GitHub account, and push your local changes into your personal fork, as normal, and create PR's back to upstream.

Originally posted by Morgan with karma: 521 on 2021-02-19
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by suab123 on 2021-02-19:
thanks for the answers, prev I had built foxy, but someone told me build on this instead https://raw.githubusercontent.com/ros2/ros2/master/ros2.repos all this is done :)
What you said forking appropriate repo and then work on it, but then I how do I check if my changes compille or not, prev what I used to do is, suppose I making change in rclcpy then I will copy rclpy to work space(build from source) and then run colcon build to check if my changes are compiling, but this process is a bit tedious.
Also is the build type of source Debug build for rclcpp (or any c++ code repos).
Comment by Morgan on 2021-02-19:
Ah, yeah, if you're wanting to work on the leading-edge stuff and make PR's back to the main/master branches of the upstream repos, you're correct, you'll need to use a repo list that has all of the main / master branches in it, not the foxy branches. My mistake.
The contributing guide here should be exhaustive and up-to-date:
https://index.ros.org/doc/ros2/Contributing/#contributing-code
There is no need to be copying code between various places in your filesystem every change; you can set up your workspace to have your own forks in it. Then you can just edit-in-place and compile (typically in separate terminals, just for convenience). Usually you only want to work on a small number (like 1 or 2) of the many repos that vcs will clone for you, so you can just let the "full" vcs clone finish, then go in by hand and point the 1 or 2 repos you want to your own personal forks and git pull them. I'm not a git expert by any means, but that works for me.
Comment by suab123 on 2021-02-19:
okay this will seem to solve the problem, thanks for the help
Also do you know if Debug build is build from default when we build  workspace with colcon?

