Q:

Tutorials on cram_designator

Hi, are there better tutorials on how to use designators with cram_designator?
I have checked http://ros.org/wiki/cram_designators but the following part is really unclear for me
(def-fact-group navigation-action-designator (action-desig)
  (<- (action-desig ?designator ?goal)
    (desig-prop ?designator (type navigation))
    (desig-prop ?designator (goal ?goal))))

How do I interpret these codes?

What are those things with question mark? Are they temporal variables?
What is action-desig? In this case I think it is an action-designator type input instead of a function. So what does (action-desig ?designator ?goal) means?
In cram_pr2 process module, I can find even more definitions like these but quite hard to understand the meaning. Do I need to learn some prolog?

Looking forward to reply!

Originally posted by ZiyangLI on ROS Answers with karma: 93 on 2012-11-22
Post score: 1

A:

The code above is Prolog code for the Lisp-based Prolog interpreter CRAM uses. Have a look at cram_reasoning for more information.
All symbols prefixed with a questionmark are variables in the Lisp-Prolog-interpreter. That's actually pretty common syntax in most Lisp-based reasoning systems.
The code you pasted defines a predicate that holds for all designators that contain the properties (type navigation) and (goal <some goal>) and binds a variable to the actual goal.
action-desig? is a predicate that holds only for action designators. The predicate action-desig on the other hand is used by the method reference to resolve the designator.
If you want to use designators and maybe even implement your own, you will definitely have to learn some Prolog.

Originally posted by Lorenz with karma: 22731 on 2012-11-22
This answer was ACCEPTED on the original site
Post score: 1

