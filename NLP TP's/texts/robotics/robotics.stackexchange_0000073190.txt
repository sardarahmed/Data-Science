Q:

Carlike robot's localization algorithm in simulation

Hello,
I have been struggling finding the right tutorials for me. Here is what I need to do: I need to simulate AMCL algorithm of a carlike robot using such sensors as odometry, lidar, gyroscope and accelerometer in pure simulation. I have read about RVIZ but the robot is supposed to be carlike, therefore I started looking into turtlebot_simulation tutorials which gave me a dead end because it required indigo version (I am running jade).
I have looked through all beginner/intermediate tutorials, but I just keep hitting a wall. I would really appreciate if someone would give me links/tips to the useful tutorials.
Dont hesitate to ask me more information in case my question is unclear.
EDIT Can I simulate IMU data in ROS stage? I have found this question, but its rather outdated.

Originally posted by murdock on ROS Answers with karma: 75 on 2016-04-04
Post score: 0

A:

You cannot use rviz on its own for your purpose, since you want to simulate a carlike robot.
rviz is just a visualization.
You have three options for simulating a carlike robot:

[not recommended] Write your own simulation model (implement the discrete equations of motion and publish the current state to rviz)
Write a gazebo plugin for your carlike robot (this might be more advanced)
Use the 2D - simulator stage.

I would prefer option 3 for your task, since stage is able to simulate your carlike motion as well as laser/sonar range sensors. This should be enough for your AMCL task. You can also add noise to your motion model (in the stage config), which is great for your evaluation.
In order to setup stage, your can refer to the following links:

Stage wiki page.
Question: Simulating a car-like robot in Stage
Checkout how the turtlebot is configured for stage (config files / launch files etc): Turtlebot in Stage
Stage manual: Robot model
Stage manual: Laser model

If you check out the turtlebot stage package, you will find the turtlebot.inc file (which is loaded from your stage world file):
define turtlebot position
(
   pose [ 0.0 0.0 0.0 0.0 ]
   odom_error [0.03 0.03 999999 999999 999999 0.02]
   size [ 0.2552 0.2552 0.40 ]
   origin [ 0.0 0.0 0.0 0.0 ]
   gui_nose 1
   drive "diff" # change to "car" for your carlike robot ["diff", "omni" or "car"]
   color "gray"
   kinect(pose [ -0.1 0.0 -0.11 0.0 ]) # replace this with laser / sonar information

   # ADD THE FOLLOWING PARAMETER:
   # only used if drive is set to "car"
   wheelbase 1.0
)

You must also define the wheelbase. You might better refer to the example
in the Stage manual (see link above).
After stage is running your model, you need to command the velocity and steering angle.
Here you can chose either your joystick, a predefined control sequence (programmed) or some planner as Orhangazi44
suggested (e.g. dwa_local_planner or teb_local_planner).

Originally posted by croesmann with karma: 2531 on 2016-04-04
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by murdock on 2016-04-04:
Thank you very much for your information. It was incredibly confusing with all of those tutorials. However, my goal is also to save some data and then visualise it, for example, estimation error plots. Is there any easier way I could do it?
Comment by Orhan on 2016-04-05:
Thank You Dear @croesmann. And sorry @murdock, I forgot to write about gazebo simulator. I can simulate turtlebot in Indigo with gazebo simulator. Another simple suggestion; 4. If you are new in ROS, I recommend you to install Indigo. Indigo's EOL date is 2019, (Jade: 2017).
Comment by croesmann on 2016-04-05:
@murdock regarding saving data and plotting graphs offline you might either take a look at

python with numpy and pyplot
Matlab with Robotics System Toolbox (if you are at a university with proper licenses, you might have access to it)
just plotting: http://wiki.ros.org/rqt_plot

Comment by croesmann on 2016-04-05:
data can be saved easily using rosbag and afterwards replayed using python or matlab. Otherwise you can write and read your data to/from file manually.
Comment by murdock on 2016-04-05:
I see, thank you very much! I have another question regarding AMCL. I am aware that I need to do sensor fusion. This is done by defining a computational model in a matrix. Where does one set these settings in AMCL? Since I havent found src file for AMCL, only a config/header file.
Comment by Orhan on 2016-04-05:
Sensor fusion isn't part of an amcl. Take a look at robot_localization.
Comment by murdock on 2016-04-05:
Thank you very much!
Comment by Orhan on 2016-04-05:
You installed from debian sources, so you haven't got all files. And here is amcl_node.cpp in jade-devel branch. You can clone and edit all navigation stack.
Comment by murdock on 2016-04-05:
Two more questions. 1. Would I be able to use rosbags with stage?
2. When I do changes to turtlebot.inc, for example, colour, I dont see any changes. Why is it like that?
Comment by Orhan on 2016-04-06:
Rosbag is a set of tools for recording from and playing back to ROS topics. I don't understand what you want. How did you install turtlebot? If via sudo apt-get install ros-indigo-turtlebot-* like command, try to download to workspace and compile.
Comment by Orhan on 2016-04-06:
And please complete all of this tutorials before working on ROS.
Comment by croesmann on 2016-04-07:
Regarding your second question about your changes to turtlebot.inc:
Please also check your stage world file. It first includes turtlebot.inc and later spawns the robot.
Some parameters are overwritten there, like color.

