Q:

How to correctly shutdown a rosnode?

I test a simple code snippet:
import rospy
import time
import sys
if __name__=="__main__":
  rospy.init_node("a node")
  rospy.signal_shutdown("an exception")

this code will cause /rosout create a file descriptor leak, check with:
lsof -n | grep rosout

which shows a line  "rosout    111215          13u     sock                0,8       0t0    797756 can't identify protocol".
Each time the code is executed, one more file descriptor leak will be created.
How to prevent this?

Originally posted by nansmallgong on ROS Answers with karma: 26 on 2016-12-20
Post score: 0

Original comments
Comment by ahendrix on 2016-12-21:
This looks like a duplicate of http://answers.ros.org/question/250393/rosout-leaks-file-descriptors/
Comment by nansmallgong on 2016-12-21:
That question is also posted by me, an established socket should be listed like
"rosout    111215 111574    10u     IPv4             794212       0t0       TCP 127.0.0.1:40341->127.0.0.1:39110 (ESTABLISHED)", but by no means "can't identify protocol".
Comment by Akhilesh on 2016-12-30:
Hi nansmallgong, can just show me your launch file?

A:

Finally I found a tricky solution for the problem.
just sleep for seconds before calling the rospy.signal_shutdown methods
import rospy
import time
import sys
if __name__=="__main__":
  rospy.init_node("a node")
  time.sleep(1)
  rospy.signal_shutdown("an exception")

Originally posted by nansmallgong with karma: 26 on 2016-12-27
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by ahendrix on 2017-11-02:
This is actually a file descriptor leak caused by a bug in roscpp. I have a proposed fix here: https://github.com/ros/ros_comm/pull/1214

