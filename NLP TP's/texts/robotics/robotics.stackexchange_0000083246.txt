Q:

How to pass a parameter of type double as an input to a roscpp node?

I'm trying to pass a variable of type "double" to a roscpp node as a command-line variable. E.g.
$ rosrun package_name node_name parameter:=0.1

And then access the parameter within the node like so:
ros::NodeHandle nh;
double parameter;
nh.param("parameter", parameter, 0.5);

However this doesn't work, and instead I get the following error:
terminate called after throwing an instance of 'ros::InvalidNameException'
    what():  Character [0] is not valid as the first character in Graph Resource Name [0.1].  Valid characters are a-z, A-Z, / and in some cases ~.

I'm sure I've just got the wrong syntax, either within the node or when entering the parameter. I've thoroughly read the wiki pages on NodeHandle  and the Parameter Server, but I haven't found a solution. Everything I've tried either produces the error above, or my ignores the input and sets the parameter to it's default value (0.5). Is anyone able to correct my syntax?
Thanks in advance.

Originally posted by M@t on ROS Answers with karma: 2327 on 2017-10-10
Post score: 1

A:

The rosrun docs seems to suggest a _ must be prepended to the variable name. Maybe try that? That is, rosrun package_name node_name _parameter:=0.1
Edit:
In order to receive the parameter properly, the node handle must also be initalized to access private parameters, e.g.
ros::NodeHandle nh("~");

This also works with multiple "double" parameters

Originally posted by ufr3c_tjc with karma: 885 on 2017-10-10
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by gvdhoorn on 2017-10-11:
This is (almost certainly) the answer, so I converted it to an answer.
@M@t: without the underscore parameter:=0.1 is a remapping.
Comment by M@t on 2017-10-11:
That's part of the answer. The underscore isn't enough by itself. It looks like the node handle must be set up to access private parameters. I.e. you also need to add ~ to the initialization:
ros::NodeHandle nh("~");

Then, the parameter is received properly. Thanks gvdhoorn and ufr3c_tjc!
Comment by ufr3c_tjc on 2017-10-11:
Yeah it was a guess on my end so wasn't confident enough in it to put it as an answer, but glad you figured it out!

