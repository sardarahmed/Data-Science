Q:

catkin rename package script - Implementation, Usefulness, Others?

I've implemented a quick script to rename catkin packages (details in the README).
Does this script seem useful enough to incorporate into any core packages?
Does anyone have any other existing solutions out there?

Originally posted by eacousineau on ROS Answers with karma: 174 on 2014-04-01
Post score: 2

Original comments
Comment by joq on 2014-04-01:
The big problem with renaming a package is fixing all the references in other packages that depend on it. That is why it is best to think carefully about the name when starting out.
Comment by Dirk Thomas on 2014-04-01:
In general you might want to use ${PROJECT_NAME} as much as possible in your CMake code. Then you have only two line where the package name is mentioned: in the package.xml as well as the project() in CMake.
Comment by eacousineau on 2014-04-01:
@joq - Yeah, this definitely should not be used to change a package name at a whim, but it helps for an inexperienced / rushed developer (e.g. a grad student :P) who prototyped a package for internal use and wants to then distribute it with a less ambiguous name at a later date. In addition, the script is built to fix the name references in other packages - depends tags, catkin dependencies, header files, include directories, etc.
Comment by eacousineau on 2014-04-02:
@Dirk Thomas - Will do, thanks! I looked at templates/CMakeLists.txt.in, and it seems like @{name} is used in place of ${PROJECT_NAME}. Would it be worthwhile to change that?
Comment by Dirk Thomas on 2014-04-02:
The referenced template already uses ${PROJECT_NAME} all over the place. So I don't think anything needs to be changed there.

A:

Looks quite neat, maybe you want to send a message to ros-users mailing list with this.

Originally posted by makokal with karma: 1295 on 2014-04-01
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by eacousineau on 2014-04-01:
Cool, will do. Thanks for the suggestion!

