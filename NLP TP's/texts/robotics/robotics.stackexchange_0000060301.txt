Q:

What should we replace setEulerZYX with in the btQuaternion class (this method is now deprecated)?

We are using a Sparkfun Razor IMU, and it produces Euler angles in yaw,pitch,roll order.  We need the setEulerZYX method to put this into a quaternion, but compiling this produces a warning that it is deprecated.  I cannot find an equivalent function, do anyone have any suggestions for replacement?

Originally posted by pdrews on ROS Answers with karma: 11 on 2014-06-24
Post score: 1

Original comments
Comment by Ken_in_JAPAN on 2014-06-24:
I use transform_datatypes.h to implement OMPL. The transform_datatypes.h includes createIdentityQuaternion() and createQuaternionFromRPY() and so on. There is the transform_datatypes.h in /opt/ros/***/include/tf/. It's my pleasure if my comment is useful for you.
Comment by pdrews on 2014-06-24:
Unfortunately, this has the same problem as Dan's answer.  All of these methods are rotations around fixed angles, instead of sequential Euler angle rotations.  I agree that Euler angle implementation can be ambiguous, but euler rotations and fixed angle rotations don't seem to be equivalent.

A:

You can do that with a tf::Quaternion
tf::Quaternion q;
q.setRPY(from_degrees(roll), from_degrees(pitch), from_degrees(yaw));

Originally posted by Dan Lazewatsky with karma: 9115 on 2014-06-24
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by pdrews on 2014-06-24:
We are actually using tf::Quaternion, which is mostly derived from the bullet btQuaternion class.  The problem is that q.setRPY and q.setEulerZYX are not equivalent.  setRPY takes rotations around a fixed set of axes.  setEulerZYX uses rotations relative to a frame that stays attached to the body (see the wikipedia article http://en.wikipedia.org/wiki/Euler_angles).

