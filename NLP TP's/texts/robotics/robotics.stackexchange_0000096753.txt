Q:

How to get length of array of geometry_msg:Points in service handle?

I'm trying to find the length of an array of geometry_msg:Point passed to a service handle, so I can iterate over each Point, apply a transform and then push onto a response. when I use sizeof(req.points) - I get "24"  regardless of the number of points actually in the message.
TransformPoints.srv
geometry_msgs/Point[] points
---
geometry_msgs/Point[] points

The callback:
static bool pointsCallback(image_transform::TransformPoints::Request &req,
                           image_transform::TransformPoints::Response &res) {

      int no_points = sizeof(req.points);
      int point_size = sizeof(geometry_msgs::Point);
      std::cout << no_points << std::endl;
      std::cout << point_size << std::endl;
      std::cout << req.points[0] << std::endl;
      std::cout << req.points[1] << std::endl;

Will output something like this:
24   # sizeof(req.points)
24   # sizeof(geometry_msgs::Point);
x: 0
y: 1
z: 0

x: 1
y: 2
z: 0

Originally posted by LukeAI on ROS Answers with karma: 131 on 2020-08-06
Post score: 0

A:

Hi @LukeAI,
What you want is not sizeof that returns the size in bytes of the object but size function that returns the size of the vector. So in your case, since the points msgs instances are std vectors, it would be something like:
auto req_size = req.points.size();

Regards.

Originally posted by Weasfas with karma: 1695 on 2020-08-06
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by gvdhoorn on 2020-08-06:
I would perhaps even suggest using a range-based for-loop instead.
Comment by LukeAI on 2020-08-06:
Weasfas answered my question, as stated. but using the range-based for-loop is what I really wanted. I didn't realise the an array in a msg or srv was a std vector.
Comment by gvdhoorn on 2020-08-06:
http://wiki.ros.org/msg#Fields

