Q:

Navigation stage simulation

I have a custom odometry and tf broadcasting node with me. And a map that I am able to create via running laser scans from a bag file.
What I want:

I got the map.pgm & map.yaml file
via running gmapping slam_gmapping
node  and running the map_server map_saver node.Now, I want to get
costmaps generated from this map. I
have a custom odometry and tf
transform tree made as well. Also, I need to add path
planners and make my bot accomplish a path
planning routine.

Please do not give me link to these navigation tutorials.
The tutorials do not give a step by step procedure. And I am a noob. I want someone to tell me what exact nodes to be run, and what launch files/yaml config files to be created, and how to add goals.
If there is no availabe tutorial for above, let me know a navigation simulation package, which creates a costmap by itself from sample laser scans and does all things after.

Originally posted by Harsh2308 on ROS Answers with karma: 80 on 2017-09-04
Post score: 0

A:

The navigation tutorials do help you out a quite a bit and actually do tell you how to do most of what you want step-by-step. I learned to use the navigation stack by going through each one of the tutorials and reading them carefully several times. Here's how to get going (assuming that your robot is already set up to use the nav stack) using information directly from the navigation tutorials:
To get a minimal setup to start navigating a known map (which you said you have).

Configure your system. The configuration files that you'll need are found at the following locations:

costmap configuration (costmap_common_params.yaml, global_costmap_params.yaml, local_costmap_params.yaml)
base local planner configuration (base_local_planner_params.yaml)

Create a launch file for the nav stack (move_base.launch)

You're going to need  load your configuration files (parameters), have a node to serve your map (map_server), have a localization node (e.g., amcl), and a node to handle the path planning (move_base). The above link shows you how to get a minimal launch file to do all of this.

Now, you should be at a point where you can start navigating a known map. To see your costmap, launch your launch file and open RViz (rosrun rviz rviz). Towards the bottom left in the "Displays" panel click the "Add" button, click on the "By Topic" tab and add the costmap that you want to visualize.
To navigate the map, you'll need to be properly localized in the map. If you just started everything up your robot may have the wrong pose so you may need to set initial pose. Do this by clicking on "2D Pose Estimate" at the top in the "Tools" panel and set the arrow in the correct location and orientation.
Now you can send a "2D Nav Goal" to your robot by clicking on the "2D Nav Goal" button in the "Tools" panel at the top and putting the arrow in the desired location and orientation.
As a "noob" (as you put it) you're going to have to read the tutorial and the links within the tutorial in order to learn how to do this. The nav stack is quite large and complex and is very configurable. Every robot requires a different configuration so that makes it very difficult (impossible?) for anyone to tell you how to set it up for you. That's why you get directed to the tutorials, so that you can do it for yourself.
Hopefully this is enough for you to get started.

Originally posted by jayess with karma: 6155 on 2017-09-04
This answer was ACCEPTED on the original site
Post score: 1

