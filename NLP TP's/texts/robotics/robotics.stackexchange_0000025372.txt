Q:

GetAngleImpl fails on Revolute2 joints

I gather that GetAngleImpl should be used to get the first angle of a revolute2 joint.
In ODEHinge2Joint.cc that leads to a call to dJointGetHinge2Angle1(), which looks like
the right helper function to calculate this angle.
However, in physics/Joint.hh GetAngleImpl seems to be wiped out:
    `protected: virtual math::Angle GetAngleImpl(int _index) const = 0;`

This leads to the following compiler complaint when I try to invoke GetAngleImpl():
`joint_state.position[0] = this->front_left_joint->GetAngleImpl( 0 ).Radian();`

gets the compiler error message:
`/usr/include/gazebo-1.2/gazebo/physics/Joint.hh: In member function ‘void gazebo::ROSModelPlugin::OnUpdate()’:`

`/usr/include/gazebo-1.2/gazebo/physics/Joint.hh:228:38: error: ‘virtual gazebo::math::Angle gazebo::physics::Joint::GetAngleImpl(int) const’ is protected`

/home/cga/drc-cmub/gazebo/models/car/car.cc:94:68: error: within this context

this->front_left_joint is a revolute2 joint. I can get velocities, but not positions.
Thanks,
Chris

Originally posted by cga on Gazebo Answers with karma: 223 on 2012-11-17
Post score: 0

A:

You can not use protected functions like that.
To get the angle(s), use gazebo::physics::joint::GetAngle(int _index).
Alternatively you can just get the child link ptr, to get the link pose (e.g.: GetChild()->GetPose().rot.GetAsEuler().x)).

Originally posted by Erik Stoltenborg with karma: 86 on 2012-11-21
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by eacousineau on 2013-01-03:
I do not think ODEHinge2Joint::GetAngleImpl(...) is fully implemented. If you look at the source, it does not report the angles at all (it tries calculating for first axis only, then just returns zero).
Comment by nkoenig on 2013-07-23:
It's fully implemented in the latest version of gazebo.

