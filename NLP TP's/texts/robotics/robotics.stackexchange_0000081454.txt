Q:

Accessing install directory from a custom caktin tools verb

I would like to create my own verb called 'rsync' that deploys cross-compiled ROS packages on a destination target device using ssh over rsync. In order to do so, I need to access the install directory for my current build profile.
As per the instructions I have created a python script rsync.py that looks something like this.
#!/usr/bin/env python

import os

def main(opts):
  for target in opts.targets:
    os.system("rsync -avz -e ssh  " + install_dir + " " + target)
  return 0

def prepare_arguments(parser):
  add = parser.add_argument
  # What packages to build
  add('targets', nargs='*',
    help='List of target names to rsync the files to.')
  return parser

description = dict(
  verb='rsync',
  description="Deploy products to the robot over rsync",
  main=main,
  prepare_arguments=prepare_arguments
)

My issue is that I cannot set the install_dir variable in the main function to the correct value for the current build profile. Does catkin tools provide a python module that I can get this information from?

Originally posted by asymingt on ROS Answers with karma: 33 on 2017-06-24
Post score: 0

A:

I think you will want to load a Context object from the workspace: https://github.com/catkin/catkin_tools/blob/master/catkin_tools/context.py
An example of doing so can be found in some of the existing verbs.
ctx = Context.load(opts.workspace, opts.profile, load_env=False)

https://github.com/catkin/catkin_tools/blob/master/catkin_tools/verbs/catkin_list/cli.py#L75
Which shows you can also leverage the arguments from the context parser using add_context_args(parser)

Originally posted by tfoote with karma: 58457 on 2017-06-25
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by asymingt on 2017-06-26:
Thanks, Tully! Catkin-tools is amazing :)

