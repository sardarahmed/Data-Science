Q:

how to use rosdep to install ros packages with apt

Recently, one of the developers in the team created a new package that depends on package sound_play. I guess he installed ros-fuerte-audio-common on his system. When I pulled his package and built it, I got an error that the package was not found, and it took me some time to find which debian package I had to install in order to get that ros package.
The problem, is that when we setup our system on a new platform (i.e. an intern's laptop), it becomes tedious to install all the packages. Well I could create a setup script and maintain it, but that's not ideal.
Since we are using rosdep to install all the rosdep dependencies, I was wondering if there was a way for rosdep to take care of this problem.
A solution would be to add a rosdep to ros-fuerte-audio-common in the manifest of the package that depends on package sound-play, but I think that's not appropriate. I've never seen it in 3rd party packages that I've looked at, and then there would be too many rosdeps for all the ros packages available as debian packages...
Another solution is to apt-get install ros-fuerte-* ...
Ideally, we would only have to apt-get install the core ros packages and the python-rosdep package, then type rosdep install mypackages, and we would be all set.
PS: I am under fuerte and Ubuntu 12.04

Originally posted by brice rebsamen on ROS Answers with karma: 1001 on 2013-03-28
Post score: 2

Original comments
Comment by Claudio on 2013-03-29:
Are you talking apt or are you talking rosdep? Because for apt you have to declare dependencies in the package source, so rosdep has nothing to do. As for rosdep I never understood quite how it works (never really worked for me) and if they want to use it in the newer distros or drop it.
Comment by brice rebsamen on 2013-03-29:
I am talking about using rosdep to install ros debian packages with apt. I am not building any debian package myself. rosdep works quite well otherwise, we maintain our own yaml file and I wrote a script to set up rosdep properly (our yaml file has to be referenced in /etc/ros/rosdep/sources.list.d)

A:

Actually, I have successfully used rosdep to do just that few days ago. I did a rosdep install my_package and it installed missing ros packages available as debian packages. I was positively surprised to see that happening.
I'm not sure, if rosdep does this installation of ros package on purpose or it is a nice side effect, since initially it was only intended to manage (check, install, ...) system dependencies. I added this question on Github: https://github.com/ros/rosdep/issues/196

Originally posted by bit-pirate with karma: 2062 on 2013-05-22
This answer was ACCEPTED on the original site
Post score: 1

