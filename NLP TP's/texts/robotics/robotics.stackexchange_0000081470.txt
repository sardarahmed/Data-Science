Q:

Deploying ROS solution without source

What is the best practice approach to transfer my ROS solution: c++-based nodes, python-based nodes, launch files, config files, ...  to a target platform, excluding the source code?
Which folders from my own catkin workspace are needed?
And is there any way to find the minimal ROS package set, I need to install on the target?

Originally posted by knxa on ROS Answers with karma: 811 on 2017-06-26
Post score: 0

Original comments
Comment by knxa on 2017-06-26:
Ahhh, I now found a snap package tutorial:
http://wiki.ros.org/ROS/Tutorials/Packaging%20your%20ROS%20project%20as%20a%20snap
Looks like worth having a look at. But I will leave the question open a little while, your comments are still appreciated.
Comment by lucasw on 2017-06-26:
http://answers.ros.org/question/192419/how-to-setup-bloom-to-generate-a-local-deb-outside-of-rosorg-buildfarm/ also mentions the tarring up of the catkin_ws/install dir after a catkin_make install which is easiest.  The local deb building method may be easier now than when documented in that link.

A:

Answering my own - now old - question: the catkin_ws install dir seems to hold everything if the CMakelists files have proper definitions on what to install.

Originally posted by knxa with karma: 811 on 2018-09-22
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by sdyy on 2020-11-19:
But target device still need to install ROS core, and all dependent library. Just move install folder may not be run.

