Q:

pointcloud_to_laserscan indigo setup problem

Hello,
I am running ROS Indigo on Ubuntu 14.04. My setup uses 1 Asus Xtion Pro with Openni2.
I am trying to use the sample_node.launch file that comes by default with the pointcloud_to_laserscan package.
Where the Point Cloud 2 input is "/camera/depth_registered/points", and Laser Scan output is "/camera/scan".
On RVIZ the laserscan output doesn't wrap what is projected by the Point Cloud. It rather shows a random irrelevant laser scan.
I tried to read the debug messages from "rqt", and they are all related to the points being out of range/height; thus I get lots of "inf" points by using "rostopic echo".
I guess the problem is related to a tf ? But I have no clue how to setup it up correctly. Below is the launch file I use.
Any help would be appreciated.
<arg name="camera" default="camera" />

<!-- start sensor-->
<include file="$(find openni2_launch)/launch/openni2.launch">
    <arg name="camera" default="$(arg camera)"/>
</include>

<!-- run pointcloud_to_laserscan node -->
<node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">

    <remap from="cloud_in" to="$(arg camera)/depth_registered/points"/>
    <remap from="scan" to="$(arg camera)/scan"/>
    <rosparam>
        #target_frame: # Leave disabled to output scan in pointcloud frame
        transform_tolerance: 0.01
        min_height: 0.0
        max_height: 1.0

        angle_min: -1.5708 # -M_PI/2
        angle_max: 1.5708 # M_PI/2
        angle_increment: 0.087 # M_PI/360.0
        scan_time: 0.3333
        range_min: 0.45
        range_max: 4.0
        use_inf: true
        concurrency_level: 0
    </rosparam>

</node>

Originally posted by Willi on ROS Answers with karma: 1 on 2015-05-27
Post score: 0

Original comments
Comment by Raman on 2015-05-27:
yea, you can try depthimage_to_laserscan and post here whether its working or not. Also, are you using rgbd_launch alongwith openni2 to generate the point cloud, because the openni launch file refers to rgbd_launch ?
Comment by Willi on 2015-05-27:
depthimage_to_laserscan works, but i will ultimately be using a merged point cloud from 2 cameras,so that package isn't usefull.
rgbd_launch is indirectly launched from within the openni2.launch, which is launched by my launcher.

A:

I have a feeling this is because the output frame of the pointcloud is an _optical frame, which are a little funky (http://www.ros.org/reps/rep-0103.html#suffix-frames).
I should really change the sample launch file to convert to camera_link, which is ENU oriented, so that the laserscan conversions work correctly.
Either way, you can also compile from source, and turn on debug messages, to see specifically why your points are being filtered out.

Originally posted by paulbovbel with karma: 4518 on 2015-06-08
This answer was ACCEPTED on the original site
Post score: 0

