Q:

Subscriber::shutdown() required to be called manually on destruction?

TL;DR
Is calling Subscriber::shutdown() explicitly required to prevent callbacks from being called after object destruction?

TS;DU (too short, didn't understand)
I've recently been doing some work were objects containing subscribers are created and destroyed while the node is still running. At the same time I've been getting crashes in my code that imply that the callbacks connected to said subscribers are being called seemingly after the subscriber has been destroyed, and thus causing segfaults and memory corruptions when that callback accesses member data.
Upon noticing this I started explicitly calling Subscriber::shutdown() in my destructors and the problem crashes stopped. Previously I had assumed Subscriber::~Subscriber() would have taken care of this. I looked at the code and Subscriber::shutdown() is not explicitly called.
So is this the expected behavior? Is this a bug?

Originally posted by Asomerville on ROS Answers with karma: 2743 on 2013-01-12
Post score: 2

Original comments
Comment by Asomerville on 2013-01-13:
If I'm able to, will do.

A:

This sounds like a bug. I suggest you file a ticket with a minimal code snippet that reproduces the issue, if possible, and post the link to the ticket as an answer to this question.

Originally posted by Eric Perko with karma: 8406 on 2013-01-13
This answer was ACCEPTED on the original site
Post score: 2

