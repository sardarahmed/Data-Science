Q:

Maximum samples and unbounded type length in ROS2 DDS entity

This is an extension to this question.
I ran a ROS2 demo_py taker and observed the RTI admin console to know more about the data types and QoS.
As you can see in the attached image, it has only one member of type String but the max size of the string here is : 2147483647 bytes which looks a bit strange to me.
Also, if you look at the Max Samples, they are also quite big.
Questions :

Is this the normal memory allocation of a data type ?
How are the maximum samples calculated ? Are these based on the size of the datatype ?

ps : i know it is not ok to post a picture but i think it gives a much clearer view of the problem.

Originally posted by aks on ROS Answers with karma: 667 on 2018-08-01
Post score: 0

A:

RTI is using RTI_INT32_MAX as the maximal size for string when support for unbounded string is enabled.
As mentioned in answer from https://answers.ros.org/question/299297/maximum-limit-of-string-in-ros2/ the memory is allocated for 0 elements by default and then reallocated as messages come in. So if you look at your memory usage it should not allocate 2GB of RAM to store the string. Similarly, if you look at the packets sent on wireshark or similar tool you will see that only the characters present in the string will be serialized and sent.
The max sample size is provided by the <TYPE>_Plugin_get_serialized_sample_max_size_ex Connext generated function.
In this case it always returns: RTI_CDR_MAX_SERIALIZED_SIZE.
You can find the connext generated code in your build folder under <PACKAGE_NAME>/rosidl_typesupport_connext_cpp
For the std_msgs/String message it will be the files:
rosidl_typesupport_connext_cpp/std_msgs/msg/dds_connext/String_Plugin.cxx
rosidl_typesupport_connext_cpp/std_msgs/msg/dds_connext/String_.cxx

Originally posted by marguedas with karma: 3606 on 2018-08-01
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by aks on 2018-08-01:
@marguedas : thanks for the explanation.But I still dont get why it allocates such a huge memory for a string ?
Comment by marguedas on 2018-08-01:
It does not allocate that memory for a string.
RTI's definition of an unbounded string is a string that can be "up to" RTI_INT32_MAX characters. But the allocated memory is relative to the size of the string that is sent
Comment by aks on 2018-08-01:
Then what is this memory for and from where is it coming ? I have no clue
Comment by marguedas on 2018-08-01:
Can you please provide an example of 2GB of memory being allocated?
Comment by aks on 2018-08-01:
To interface ROS2 and native RTI Connext, the type should be similar, since ROS2 gives me a 2GB string, I need to have the same on the RTI native side as well which creates a problem. That is why in first place my quesion, where does this size come from ? @marguedas
Comment by aks on 2018-08-01:
then maybe I understood wrong, what does 2147483647 represent here ? Isnt it the size of the string ?
Comment by aks on 2018-08-01:
ahh..ok...so 2147483647 is the max size of int32 and this is what it represents since RTI interprets unbounded string as max value of Int32 ? Am I right ?
Comment by marguedas on 2018-08-01:
Yes. RTI interprets an unbounded sting as a string that can have a size between 0 and RTI_INT32_MAX (2147483647)
Comment by aks on 2018-08-01:
Now,  get it ! Thank you so much for your patience.
But does that mean, on the native RTI DDS side, i need to give the maxStringLength as 2147483647 so that the type matches on both sides ?

