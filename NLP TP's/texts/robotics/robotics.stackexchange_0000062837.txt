Q:

Bloom-release issue: could not resolve rosdep key 'rospkg'

Hi.
I have an anoying issue that I can't get solved...
To test debian building and releasing,  I created two repos on github. One for source and the other for the release debians.
I commited two of our nodes for testing purpose before trying to use our internal git and build in local instead of on the ros buildfarm...
So I try to take it small steps after small steps to try to control all the aspects...
So, I'm compiling perfectly well the packages with catkin_make and catkin_make install in 'devel' overlay.
The install folder can be relocated anywhere and executes the nodes smoothly when I update the bashrc to source the correct folder as overlay etc...
So all seems pretty clean to me.
I do run catkin_generate_changelog and catkin_prepare_release still in the 'devel' overlay.
BUT.
When running bloom-release --rosdistro hydro --track hydro https://github.com/repo/repo.git --edit  in the 'devel' overlay, I have the following error:
==> git-bloom-generate -y rosdebian --prefix release/hydro hydro -i 0
Generating source debs for the packages: ['deburring_riveting_demo', 'hironx_grippers']
Debian Incremental Version: 0
Debian Distributions: ['precise', 'quantal', 'raring']
Releasing for rosdistro: hydro
Placing debian template files into 'debian/hydro/deburring_riveting_demo' branch.
==> Placing templates files in the 'debian' folder.
Running 'rosdep update'...

####
#### Generating 'precise' debian for package 'deburring_riveting_demo' at version '0.0.2-0'
####
Generating debian for precise...
No homepage set, defaulting to ''
Could not resolve rosdep key 'rospkg'
Try to resolve the problem with rosdep and then continue.

So Yes, my python package 'deburring_riveting_demo' imports rospkg.
And in package.xml I added <run_depend>python-rospkg</run_depend> 
Also tried to add it also in <build_depend>, but didn't change anything...
So as discussed on some other questions, I did clean my rosdep files and updated them.
And I also run rosdep resolve python-rospkg correctly since it answers
#apt
python-rospkg

I have to mention that at the beginning I did try in package.xml to < -depend> on rospkg instead of python-rospkg.
That might be one of the origins of bloom trying to rosdep rospkg??
So I have no clue about how to solve this issue...
I'm guessing that there might have a cache somewhere still pointing to <run_depend>rospkg</run_depend>
But I deleted my /devel, /build and /install; I deleted all temporary files in /src, I double checked the correctness of the upstream git repo...
Is there anywhere else I have to look for this??
Any idea of what is going wrong?
Thanks
Damien

Originally posted by Damien on ROS Answers with karma: 203 on 2014-09-24
Post score: 1

Original comments
Comment by 130s on 2014-09-24:
I had the same issue before. Double/Triple-check like this might help: $ grep -r ">rospkg" $YOUR_CATKIN_WS$

A:

bloom operates on the released packages, so my guess is that you have not released since addressing this:

I have to mention that at the beginning I did try in package.xml to < -depend> on rospkg instead of python-rospkg. That might be one of the origins of bloom trying to rosdep rospkg??

Make sure the released version (tag in git repository which matches the version you are releasing) has the correct dependency name in the package.xml.

Originally posted by William with karma: 17335 on 2014-09-24
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by tfoote on 2014-09-24:
The tagged version does not have the updated dependency: https://github.com/Flexbotics/Flexbotics/blob/0.0.2/deburring_riveting_demo/package.xml
Comment by Damien on 2014-09-25:
That was it!!
Too many steps and stuff to learn and control at the same time...
I didn't regenrate catkin_prepare_release Now it works smoothly.
Thanks a lot.
I'm closing the question.
Comment by tfoote on 2014-09-25:
@Damien Thanks for confirming the answer and following up. For future reference, marking the answer as accepted is enough. If you close it others's can't comment or add additional suggestions or alternative solutions.

