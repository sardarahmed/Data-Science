Q:

Micro-Ros: interfacing with sensors through Arduino support package or RTOS?

Hi everyone,
Micro-Ros looks to be a great project, I am excited to see how it will progress in the future!
I have been prototyping with an Arduino board that is interfacing with an encoder and an Adafruit proximity sensor.
Preferably i would like to reuse the code I already have and incorporate it in Micro Ros. When interfacing with sensors, it seems better to use  the microros for arduino support package, which has access to the large collection of Arduino libraries, instead of the RTOS approach, where sensors drivers need to be written from scratch as far as i can tell.
Considering that the niche that Micro-Ros is filling is interfacing with sensors and actuators through micro-controllers, in what use cases is it better to use the RTOS approach?

Originally posted by bvaningen on ROS Answers with karma: 167 on 2021-06-07
Post score: 1

A:

Hello @bvaningen, both approaches will provide you the same micro-ROS API. The idea of having multiple approaches (Arduino, RTOS, STM32Cube...) is intended to ease the integration of micro-ROS in the platform where the developer is used to work.
In general using the RTOS approach will allow you to use the RTOS functionality and drivers, for example in Zephyr you have a bunch of drivers ready to be used.
Let us know if you have any problems using the library. Thanks!

Originally posted by Pablogs with karma: 443 on 2021-06-09
This answer was ACCEPTED on the original site
Post score: 1

