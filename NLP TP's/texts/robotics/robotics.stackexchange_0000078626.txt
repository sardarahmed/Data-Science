Q:

Stdout for a subprocess when launching with --screen

I have the following three lines buried within a node (let's call it network_scanner.py):
    cmd = ["sudo", "iwlist", "wlan0", "scan"]
    proc = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    iwlist_output = proc.communicate()[0].decode('utf-8')

If I call my launch file (roslaunch network_scanner network_scanner.launch --screen), iwlist_output is completely empty.
If I run the node directly (rosrun network_scanner network_scanner.py), I get expected output in iwlist_output.
I'm assuming the problem is that proc is unable to provide output to stdout for some reason when I roslaunch my node. Shouldn't --screen fix that?
Edit: Question assumed that there was an issue with stdout, but that wasn't the issue. The problem was that cmd wasn't being properly called because of permissions. This post provides a solution.

Originally posted by nckswt on ROS Answers with karma: 539 on 2017-01-27
Post score: 1

Original comments
Comment by ahendrix on 2017-01-28:
--screen redirects the output of your node; it shouldn't affect things that your node is running within subprocess.
Comment by ahendrix on 2017-01-28:
I've seen some of the wifi scanning commands return different results on consecutive runs, so you may want to try multiple runs to confirm that this isn't just random behavior
Comment by spmaniato on 2017-01-28:
I haven't encountered this particular issue, but I've successfully used commands.getstatusoutput(my_cmd_string) from the commands module within a ROS node without any problems. However, "Using the subprocess module is preferable to using the commands module."

A:

Actually, turns out it's a problem with sudo rather than with stdout: I wasn't getting prompted to enter my password when using roslaunch, but I was with rosrun -- seems like the command might not have been run at all.

Originally posted by nckswt with karma: 539 on 2017-01-28
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by nckswt on 2017-01-28:
@ahendrix Your solution in this post seems like the best way forward. Thanks!
Edit: Fixed link

