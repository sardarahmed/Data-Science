Q:

Callback class member

Hi.
Is it possible to use a member class method as a callback? Something like this:
void Node::chatterCallback(const std_msgs::String::ConstPtr& msg){
ROS_INFO("I heard: [%s]", msg->data.c_str());
}

void Node::Subscribe(){
ros::NodeHandle n;
ros::Subscriber sub = n.subscribe("alives", 1000, &Node::chatterCallback, this);
}

At the examples (http://www.ros.org/wiki/roscpp_tutorials/Tutorials/UsingClassMethodsAsCallbacks) , I've seen:
Listener listener;
ros::Subscriber sub = n.subscribe("chatter", 1000, &Listener::callback, &listener);

But I don't want to instantiate another object. I've the callback function as a method in my class.

Originally posted by Verane on ROS Answers with karma: 25 on 2013-06-27
Post score: 1

Original comments
Comment by Lucile on 2013-06-27:
I think it is possible, as I do it with Python. Just try and see. Just found this question : answers.ros.org/question/64446/problem-using-class-function-as-callback/ which might include the answer you're looking for

A:

From your question, it seems like you already know that it's possible to use class methods as callbacks.  Your question seems to be, more specifically: "Is it possible to use methods of the current class object from which subscribe() is called?".  In other words, can you pass in this as the class object parameter to the subscribe call.
The answer to that question is also yes.  ROS doesn't care where the object comes from.  The turtlesim turtle class creates a subscriber with a local member-function callback, just as you are asking about (see here).

Originally posted by Jeremy Zoss with karma: 4976 on 2013-06-27
This answer was ACCEPTED on the original site
Post score: 4

