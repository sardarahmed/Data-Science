Q:

Forward and Revers Kinematics For Modified Hanging Plotter

I'm building a modified version of the standard hanging plotter (v-plotter). The basic idea is that you have two cables hanging from stepper motors which form a triangle supporting the pen at the tip. 
My design the strings anchored at points $C$ and $D$ which causes the behavior to be somewhat different that the normal plotter, especially when operating close to the motors. 

I was able to work out the forward kinematics fairly easily, but the inverse kinematics are turning out to be a real headache. You can see my attempt at a standard geometry solution on math.stackexchange here. 
Is there anything specific to calculating kinematics for robotics which could help me?
I'm not interested in modifying the hardware to make the math easier. I'm also not interested in discussing the center of gravity of the pen, cable weight...etc. I want to calculate the kinematics for this as an ideal system.
Any and all advice is appreciated.
Thank you.

A:

All of the effort and credit for this answer go to Keith Selbo, I am simply reproducing his work here to make the explanation public.
Development of a Method for Translating Hanging Carver  (X, Y) Coordinates Into Suspension Lengths That Accounts for Sled Tilt and Finite  Radius of the Suspension Anchors
The figure on the next page represents the convex quadrilateral formed by components of a vertical carver; a plotter that suspends a router sled from two points and moves it about the plotting surface by varying the length of the suspension lines. This development encompasses a sled with center of mass  not co-located with the plotter bit, causing the sled to adopt a  tilt to an angle at which the moment  of the sled mass cancels the net moments exerted by the lateral and vertical forces exerted by the sled suspension.  Also covered is an offset from the plot origin of  the suspension anchor points due to the finite radius of a windlass or sprocket used for pay-out and take-up of the suspension lines as the sled is moved.  This offset results in movement of the effective anchor  point of  the suspension which in turn affects the equilibrium tilt of the sled. 
The inputs to the algorithm are the plotter geometry and the x, and y coordinates of the desired bit placement.  The output is the length of the left and right suspension lines.  It includes the straight portion from the attachment at the sled to the variable tangent on the suspension anchor plus the curved portion of the line from the tangent to the top center of the anchor disk. 
The sled tilt angle, and the variable left and right anchor points result in three non-linear equations in three unknowns.  The expedient of adding an imaginary extension of the suspension line (see drawing) past the anchor point (tangent) to the y axis allows the use of a pseudo-anchor point that varies only in the y direction which simplifies the equations and the computation.  A simple transformation corrects the line length after the solution is obtained.  This transformation is included in the final equations for the length of the suspension lines. 
There was no obvious closed form solution to the equations, so multi-variate a Newton-Raphson algorithm is used to estimate the three unknowns.   

Net Forces:
$$\vec{f}_{y_1} + \vec{f}_{y_2} = -\vec{W}\tag{a}$$
$$\vec{f}_{x_1} + \vec{f}_{x_2} = 0\tag{b}$$
Net Moment:
$$\vec{h_1}\times\vec{f}_{y_1}+\vec{h_2}\times\vec{f}_{y_2} +\vec{h_3}\times\vec{W}=0\tag{c}$$
Definitions:
$$\vert\vec{h_1}\vert = \vert\vec{h_2}\vert = h\tag{d}$$
$$\vert\vec{h_3}\vert = h_3\tag{e}$$
$$\vert\vec{f_{x_1}}\vert = \vert\vec{f_{x_2}}\vert = fx(f)\tag{f}$$
$$\vert\vec{W}\vert = W\tag{g}$$
$$\phi_1 = \theta - \phi, \phi_2 = \theta + \phi \tag{h}$$
Moment Cross Product:
$$\vert\vec{h_3}\vert\vert\vec{W}\vert\sin{\phi}+\vert\vec{f_{x_2}}\vert\vert\vec{h_2}\vert\sin{\phi_2}-\vert\vec{f_{x_1}}\vert\vert h_1\vert\sin{\phi_1}+\vert\vec{f_{y_1}}\vert\vert\vec{h_1}\vert\cos{\phi_1} - \vert\vec{f_{y_2}}\vert\vert\vec{h_2}\vert\cos{\phi_2} = 0\tag{i}$$
Given that:
$$\tan{\gamma} = \frac{y+y_1^+-h\sin{\phi_1}}{x-h\cos{\phi_1}}\tag{j}$$
and:
$$f_{y_1} = fx\tan{\gamma}$$
$$\tan{\gamma} = \frac{y+y_2^+-h\sin{\phi_2}}{D-(x+hcos{\phi_2})}\tag{k}$$
$$fy_2 = fx\tan{\lambda}\tag{l}$$
Combining $(a),(j)$ and $(l)$ yields:
$$W = fx(\tan{\lambda}+\tan{\gamma})\tag{m}$$
$$\frac{W}{tan{\lambda}+tan{\gamma}} = fx\tag{n}$$
Then the net moment is zero when:
$$h_3W\sin{\phi}+ \left\vert\frac{Wh}{\tan{\lambda}+\tan{\gamma}}\right\vert(\sin\phi_2 - \sin\phi_1+\tan\gamma\cos\phi_1 - \tan\lambda\cos\phi_2) = 0 \tag{o}$$
Which simplifies to:
$$f(\phi) = h_3\sin{\phi}+ \left\vert\frac{h}{\tan{\lambda}+\tan{\gamma}}\right\vert(\sin\phi_2 - \sin\phi_1+\tan\gamma\cos\phi_1 - \tan\lambda\cos\phi_2) = 0 \tag{1}$$
From the sprocket detail in the figure we have: 
$$y_1^+ = r\sqrt{1+tan^2\gamma}\tag{p}$$
Which yields
$$\tan\gamma = \frac{\sqrt{{(y_1^+)}^2-r^2}}{r} = \frac{y+y_1^+-h\sin\phi_1}{x-h\cos\phi_1}\tag{q}$$
or
$$\frac{\sqrt{{(y_1^+)}^2-r^2}}{r} - \frac{y+y_1^+-h\sin\phi_1}{x-h\cos\phi_1} = 0\tag{2}$$
similarly
$$\frac{\sqrt{(y_2^+)^2-r^2}}{r} - \frac{y+y_2^+-h\sin\phi_2}{D-(x+h\cos\phi_2)} = 0 \tag{3}$$
We now have a nonlinear system F(x), consisting of equations (1), (2), and (3):
$$\begin{bmatrix}f_1(\phi,y_1^+, y_2^+) \\ f_2(\phi, y_1^+, y_2^+) \\ f_3(\phi, y_1^+, y_2^+)\end{bmatrix}$$
Applying the  Newton-raphson Method we iteratively solve $J_F(x_n)(\Delta x) = -F(x_n)\tag{r}$ where J is the system Jacobian, x is the vector:
$$\begin{bmatrix}\phi \\ y_1^+ \\ y_2^+\end{bmatrix}  and x_{n+1} = x_n+\Delta x \tag{s}$$
Until
$$F(X_n+1) \approx 0 \tag{t}$$
Then:
$$LeftChain = \sqrt{(x-h\cos(\phi_1))^2+(y+y_1^+-h\sin(\phi_1))^2}-r \tan(\gamma)+r\gamma \tag{u}$$
$$RightChain = \sqrt{(D-(x+h\cos(\phi_2)))^2 + (y+y_2^+-h\sin(\phi_2))^2}-r\tan(\lambda)+r\lambda \tag{v}$$
Again, a HUGE thank you to Keith Selbo for this solution.

