Q:

What does `rospy.wait_for_message('/scan', LaserScan)` mean?

Hello, I'm new in ROS melodic of Ubuntu 18.04.
As far as I know, the only way to get some topic is to declare rospy.Subscribe.
However, I've seen
data = rospy.wait_for_message('/scan', LaserScan, timeout=5)

According to here, rospy.wait_for_message receives one message from topic.
And I really have no idea how different between rospy.Subscribe and rospy.wait_for_message.
If anyone who is familiar with this, would you please give me some  advice?
Thanks in advance. :)

Originally posted by kane_choigo on ROS Answers with karma: 195 on 2020-03-03
Post score: 1

A:

And I really have no idea how different between rospy.Subscribe and rospy.wait_for_message.

The difference is this:
rospy.Subscriber is a Python class which encapsulates a subscription to a topic. You create an instance of this class whenever you use rospy.Subscriber("<topic_name>", <topic_type>, <callback>). Provided something publishes to <topic_name>, the callback registered will be invoked for every message received.
rospy.wait_for_message(..) is a convenience function, which, as you wrote yourself: "receives one message from [a] topic" and then returns.
More precisely (and a copy of the documentation):

This will create a new subscription to the topic, receive one message, then unsubscribe.

So this function (in pseudo-code almost):

creates a rospy.Subscriber
initialises a flag to False
waits for a single message, which
triggers its callback to be called
this callback sets the flag to True
the True flag will cause the function to cancel its subscription, and
it now returns the message it has received

You could do all of this yourself, but it's much more convenient to have rospy.wait_for_message(..) do this for you.
Note: what you should not do is use wait_for_message(..) to "sample" a topic, like so:
while not rospy.is_shutdown():
    msg = rospy.wait_for_message(..)
    ...

this is very inefficient and almost an anti-pattern.

Originally posted by gvdhoorn with karma: 86574 on 2020-03-03
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by kane_choigo on 2020-03-03:
Thanks for the quick reply. So, you recommended I not using wait_for_message(..) to just sample a topic, and when would you advise me to consider select that? I've planned to use it right just
data = rospy.wait_for_message('/scan', LaserScan, timeout=5)

as you wrote. Would you please tell me when is the most appropriate time to use rospy.wait_for_message?  Thanks :)
Comment by Delb on 2020-03-06:\

when would you advise me to consider select that

If you need to receive the data from a topic only once (like maybe a topic publishing a configuration or info about something that isn't changing during the execution) then it's fine to use wait_for_message.
Your example is about the /scan topic, which is a topic that is published by your sensor very frequently (generally speaking) so unless you just need your sensor data once (which is odd) you would want to have a permanent subscriber to the /scan topic to always get the latest sensor informations.

