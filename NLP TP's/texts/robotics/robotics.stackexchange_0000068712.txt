Q:

base_pose_ground_truth type?

Hello ros users. I am trying to subscribe to base_pose_ground_truth topic but I can't.
My code is this:
nav_msgs::base_pose_ground_truth subs;
 double variable1;
 double variable2;
 void velsubcallback(const nav_msgs::base_pose_ground_truth& msg)
   {
  
  variable1=msg.twist.twist.linear.x;
    variable2=msg.twist.twist.angular.z;
     lectura_ros.linear=variable1;
     lectura_ros.angular=variable2;
     ROS_INFO("variable %f",lectura_ros.linear);

How can i subscribe on that topic?
Thanks!

Originally posted by Alvaro Salcedo on ROS Answers with karma: 149 on 2015-07-16
Post score: 0

A:

You are trying to subscribe to a topic of (message) type nav_msgs::base_pose_ground_truth. As far as I know, the (named) topic /base_pose_ground_truth is actually of type nav_msgs::Odometry (you can check with rostopic info /base_pose_ground_truth when the node is running).
So replace nav_msgs::base_pose_ground_truth with nav_msgs::Odometry. And don't forget to properly initialize your Subscriber.

Originally posted by mgruhler with karma: 12390 on 2015-07-16
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Alvaro Salcedo on 2015-07-16:
Yes! ThatÂ´s the way!
base_pose_ground_truth topic give me the velocities relative to world coordinates and I want relative to base_link coordinates. is there any way to make a transform between these coordinates?
Thanks!
Comment by mgruhler on 2015-07-17:
Why don't you use the 'odom' topic then?
Otherwise, I think you have to transform it yourself, which is straightforward. You know the global pose and velocity. So just rotate the (translational) velocity vector to compensate for the current rotation. The rotational velocity is constant (as it is 2D)
Comment by Alvaro Salcedo on 2015-07-17:
Thanks again @mig I can't subsbribe to odom topic because I must have gaussian noise and in odom topic there isn't.
how can I rotate de axes? because if I rotate linear velocity in X an angle equal to angular velocity in Z it should work. But how can I do that? what is the command in C++?
Thanks!!
Comment by mgruhler on 2015-07-17:
Can you accept the answer, if it solved the original question (by clicking on the checkmark)? Thx.
I don't know a specific command. I would have coded that myself.
Or try transformVector

