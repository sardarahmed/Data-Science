Q:

[ROS 2] How is the name of the typesupport library generated?

Hi,
I have a package where I create custom messages.
In my application I create a subscription that uses this custom type.
If I look into the RMW implementation code (FastRTPS for example) I think I found where the typesupport library is loaded
  const rosidl_message_type_support_t * type_support = get_message_typesupport_handle(
    type_supports, rosidl_typesupport_introspection_c__identifier);
  if (!type_support) {
    type_support = get_message_typesupport_handle(
      type_supports, rosidl_typesupport_introspection_cpp::typesupport_identifier);
    if (!type_support) {
      RMW_SET_ERROR_MSG("type support not from this implementation");
      return nullptr;
    }
  }

https://github.com/ros2/rmw_fastrtps/blob/09826ff401161fdf5fca63552d1a72a15907d53d/rmw_fastrtps_dynamic_cpp/src/rmw_subscription.cpp#L110
As you can see, this uses a type_supports handle and an identifier.
These are used to genereate the name of a shared library (for example my_custom_msg_rosidl_typesupport_fastrtps_cpp)
I would like to know where is the code that generates that name
thank you

Originally posted by alsora on ROS Answers with karma: 1322 on 2019-12-18
Post score: 0

A:

The rosidl_typesupport_cpp performs the dispatch (in case there is more than one typesupport library available for C++). It happens in this file: https://github.com/ros2/rosidl_typesupport/blob/1769ba822b64573a450b8fe6a716d92deba9256e/rosidl_typesupport_cpp/src/type_support_dispatch.hpp#L63-L67

Originally posted by Dirk Thomas with karma: 16276 on 2020-01-14
This answer was ACCEPTED on the original site
Post score: 0

