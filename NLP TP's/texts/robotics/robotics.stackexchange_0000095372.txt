Q:

[ROS2] calling method in Node class

Hi, I would like to create a node class that keeps calling a Service.
class GetObject : public rclcpp::Node
{
public:
  
  GetObject() : Node("main")
  {
    auto getobj = this->create_client<canopen_msgs::srv::GetObject>("/get_object");  
  }
  void Get()
  {
     // code that calls the Service
  }
}

What is the correct way of calling the Get() method ?
I would like to have following structure:
int main(int argc, char *argv[])

{
    rclcpp::init(argc, argv);
    auto GetConstructor = std::make_shared<GetObject>();

    while (rclcpp::ok())
    {
        // call the Get() method

    }

    return 0;
    
}

Thanks !

Originally posted by jlepers on ROS Answers with karma: 39 on 2020-04-08
Post score: 0

A:

There is a tutorial on creating a service client using rclcpp: https://index.ros.org/doc/ros2/Tutorials/Writing-A-Simple-Cpp-Service-And-Client/#write-the-client-node

Originally posted by fergs with karma: 13902 on 2020-06-12
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by jlepers on 2020-06-12:
Hi, thank you for your reply, but I think you misunderstood my question. I know how to create a Service client in rclcpp and I know the basics of OOP in C++. I would like to create a node class with a get() method that I can call in a loop function. So the code in my GetObject() class works, but I don't know how to call the Get() method (a method in general) correctly in a ROS2 environment.

