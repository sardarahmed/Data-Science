Q:

How to wait a method until a callback finishes?

Hi all,
I'm trying to stop a method until a particular callback is executed, because this method uses data that is updated in the callback, but I don't know how to do this task. I'm using ros kinetic and python.
Thanks for your help!!

Originally posted by Ivan_Sanchez on ROS Answers with karma: 41 on 2018-11-04
Post score: 0

A:

Your main method executes on one thread, and callbacks are called on a different thread, so you should use the python threading library to coordinate between those threads.
Since you have a data structure that you want to protect against concurrent modification, you should probably use a lock:
my_data = []
my_lock = threading.Lock()

def callback(msg):
    global my_lock
    global my_data
    with my_lock:
        # do something with my_data

while True: # main loop; or however you want to do it
    with my_lock:
        # do something else with my_data

This is just a simple example; there are lots of other examples of how to use the python threading library in the documentation, and on the internet.
You don't have to use globals for the lock, the data or the callback either they can be locals or class members.

Originally posted by ahendrix with karma: 47576 on 2018-11-04
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by kosmastsk on 2019-04-05:
Is there something similar for C++ nodes?
Comment by ahendrix on 2019-04-05:
Yes. C++11 and newer have std::mutex and std::unique_lock . On older versions of C++, you can use boost::mutex.
Comment by kosmastsk on 2019-04-09:
Thanks a lot! :)

