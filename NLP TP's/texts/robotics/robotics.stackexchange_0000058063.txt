Q:

Include rosjava node in a Java project under eclipse

Hello,
I have started using rosjava yesterday and I'm still trying to understand how it really works.
After doing some tutorials I was able to connect a Java Listener with a C++ talker (actually very straight forward)
Now what I'm trying to do is to put a talker in my Java project under eclipse so that my program can trigger a message sending that will be received by a C++ node which will react to it and make a robot do an action.
Any hint where to start? the tutorials I found for integrating rosjava in eclipse are outdated.
Thank you very much

Originally posted by Mehdi. on ROS Answers with karma: 3339 on 2014-03-19
Post score: 0

A:

Easier way is to just add the 'eclipse' plugin to your root build.gradle file and then run ./gradlew eclipse. It will generate all the eclipse project files you need that can then be imported into eclipse. Eclipse is happy then, so you should be too.
Any time you update the dependencies in the build.gradle in subprojects, you should rerun the ./gradlew eclipse task. This will update the classpaths for eclipse.
An example of my usual workflow:

The rocon_rosjava_core repository.
The rosinstall file for setting up a source workspace on hydro.

Then run catkin_make on it to make sure it's all compiling. Source the setup.bash and then go into the rocon_rosjava_core and run the gradle eclipse task.

Originally posted by Daniel Stonier with karma: 3170 on 2014-04-09
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Mehdi. on 2014-04-09:
Thanks for the answer. At the end I found a much more elegant way to do what I wanted. Rosbridge was enough for my case and works perfectly with a minimal integration effort into my current java project.
Comment by Daniel Stonier on 2014-04-09:
Ah, need to improve things then. I suspect some tutorials are mostly what's necessary, but this should be easier for a java person to do than to have to 'bridge' across with a tool that is less capable.
Comment by Mehdi. on 2014-04-09:
That is the problem actually I started working with Java (As electrical engineer we  mostly use C++) two weeks ago, i didn't create the project I just need to make it able to communicate with ROS.
Comment by zoubata on 2019-10-29:
on version kinetic, you have to enable the plugin on last version by uncommenting " apply plugin: 'eclipse'" in builg.gradle

