Q:

Do I have to run `bloom-release` after running `git-bloom-release`?

This is my first time releasing a third-party package into the ROS ecocystem.
The package I'm trying to release is matplotlib-cpp.
I'm following Releasing a Third Party Package Tutorial, using "rolling" instead of "hydro" everywhere.
Everything up to and including 2.4 Adding an Install Rule as a Patch worked fine, and I am skipping 2.5 and 2.6 as they don't seem necessary for a first release. Here is my release repo.
I have added package.xml and added install(FILES package.xml DESTINATION share/matplotlib-cpp) to the end of matplotlib-cpp's CMakeLists.txt as described.
Now, 3. Finishing the Release says to "finish the first time release tutorial, Running bloom for the First Time.", which link to instructions to run bloom-release, which seem very similar to what I already did with git-bloom-release.
As a side note, there are also a lot of local branches in my local clone of the release repo, which git-bloom-release didn't seem to push to Github.
What's the next step in releasing the package? Do I have to manually open a PR for rosdistro? What else do I have to do?

Originally posted by ijnek on ROS Answers with karma: 460 on 2022-01-09
Post score: 1

A:

Both tutorials work together in tandem, although they could be improved to peel back a layer and explain why some steps repeat work. And work is repeated between them.
Bloom takes inspiration from git's design with a "plumbing and porcelain" model. The git-bloom-release command
is in Bloom's plumbing category and using it during the third-party release process is the most expedient way to make sure that the changes made to the project are propagated where they need to be.

As a side note, there are also a lot of local branches in my local clone of the release repo, which git-bloom-release didn't seem to push to Github.

As a plumbing command, it isn't fully automatic, so we should probably update that tutorial suggesting that you push the generated branches and tags to the release repository and then finalize the release by running the full bloom-release ... command as described in the first-time release tutorial.

What's the next step in releasing the package? Do I have to manually open a PR for rosdistro? What else do I have to do?

Because of the previous run, this may result in a package revision (sometimes called the debian increment) of 2 rather than 1 for a first release but that is completely benign. Running a full bloom-release command even though it performs some overlapping work is definitely recommended, especially at the tutorial level since the bloom-release command will run the comprehensive process including populating the rosdistro patch and submitting the pull request.

Originally posted by nuclearsandwich with karma: 906 on 2022-06-28
This answer was ACCEPTED on the original site
Post score: 0

