Q:

Non existing package

Created a package of my own after installing the package rosserial,
this went well. I've been following the create a package tutorial.

When listing the dependencies it claims that the package rosserial is missing as seen below.

What have I missed ?

   $
   $ catkin_create_pkg serial_test01 std_msgs rospy roscpp rosserial
   $
 Created file serial_test01/CMakeLists.txt
 Created file serial_test01/package.xml
 Created folder serial_test01/include/serial_test01
 Created folder serial_test01/src
 Successfully created files in ~/catkin_ws/serial_test01. Please adjust the values in package.xml.
   $
   $
   $ rospack depends1 serial_test01 
  [rospack] Error: package/stack 'serial_test01' depends on non-existent package 'rosserial' and rosdep claims that it is not a system dependency. Check the ROS_PACKAGE_PATH or try calling 'rosdep update'
   $
   $    

Originally posted by ROSnewbie11 on ROS Answers with karma: 61 on 2014-05-07
Post score: 2

A:

Dear ROSnewbie11,
At this line:
catkin_create_pkg serial_test01 std_msgs rospy roscpp rosserial
You say that you want to create a new package serial_test01 that depends on these packages std_msgs rospy roscpp rosserial. Appearantly rosserial cannot be found. That is either because it is not installed, or because ROS cannot find it.
To install do: sudo apt-get install ros-hydro-rosserial if you are on ROS Hydro (or sudo apt-get install ros-groovy-rosserial for example. You can install it through apt-get, as it is an official package.
To make sure ROS finds it when it is installed, make sure to source both your installation as your workspace (make it part of your ~/.bashrc for convenience). So source /opt/ros/hydro/setup.bash and source ~/catkin_ws/devel/setup.bash.
To test, you could do roscd rosserial: you should get to the folder containing the rosserial package. This otherwise would have failed.
The other solution is to remove rosserial from the packages dependencies (catkin_create_pkg serial_test01 std_msgs rospy roscpp). Do you need it? It is not in the tutorial you link to? Also, you can easily manually add dependencies at a later stage by adding them to the CMakeLists.txt and package.xml files at the top level of your package.
Good luck!

Originally posted by koenlek with karma: 432 on 2014-05-07
This answer was ACCEPTED on the original site
Post score: 2

