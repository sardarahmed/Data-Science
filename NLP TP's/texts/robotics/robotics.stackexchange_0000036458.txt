Q:

Is there a way to wait for certain topics to be published in a launchfile?

I'd like to run several nodes within one launchfile. The system only works properly provided necessary topics are published before some nodes are launched.
Is there a way to ensure a node is running before other node is started? Or, even better, to ensure a tf or topic are published before a node gets triggered within a launchfile?
I guess, even if not with ROS, this could be possible with bash scripts. Has anyone out there already provided such functionality?
Cheers.

Originally posted by tom on ROS Answers with karma: 1079 on 2011-12-13
Post score: 3

A:

AFAIK, the short answer is: No.
You cannot even control the order nodes are started.
The better way should be that the nodes that are held back provide such functionality themselves, e.g. using a tf waitForTransform call.

Originally posted by dornhege with karma: 31395 on 2011-12-13
This answer was ACCEPTED on the original site
Post score: 6

Original comments
Comment by dornhege on 2011-12-16:
@tom: If there is a ROS node that doesn't behave nicely like it should, you can open an issue or new question about that. (Of course if the data is missing altogether some nodes might not work, at least until all data is available)
Comment by joq on 2011-12-14:
Best practice is for each node to wait for any transforms or topics it needs before entering its main loop. They should all work correctly independent of the launch order.
Comment by tom on 2011-12-13:
I first run an IMU basing on ros_serial. This takes a couple of seconds. I cannot run any other (already existing and I wouldn't like to change any working code not of my own) nodes before that happens. There is a similar issue between laser_scan_matcher and gmapping - the first must run before.
Comment by dornhege on 2011-12-13:
Do you want to delay it constantly or until tf is there. For tf use tf waitForTransform in the node. For a constant time it depends why you'd want to do that. You can use a bash script with a sleep, or sleep in the node at first (if that is a feature this node needs).
Comment by tom on 2011-12-13:
Thanks. But what if I'd like to delay an existing node's execution? Is there a tool for that? One way would be to write a bash script calling a simple node blocking until tf is there and then executing the node of interest. Or maybe you see another, simple hack?

