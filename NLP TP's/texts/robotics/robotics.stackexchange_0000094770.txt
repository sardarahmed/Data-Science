Q:

ur_robot_driver: test_move.py keeps on "waiting for server..."

Hello, i wish i could run the script "test_move.py" included in the package the same way it was done with ur_modern_driver. My ROS version is Kinetic and i'm using Ubuntu 16.04. Actually working with the simulator URSim, no physical robot tested.
these were the steps i made:
$roscore 
$roslaunch ur_robot_driver ur5_bringup.launch robot_ip:=127.0.0.1 kinematics_config:=/home/bruno/my_robot_calibration.yaml
rosrun ur_robot_driver test_move.py
after running the last command, i get "Waiting for server" and nothing happens...
in another terminal i put $rqt_graph and as i guessed, the test_move node is connected to nothing.

I'm not sure what I can do next...
Thank you in advance for your time and help

Originally posted by brodwix on ROS Answers with karma: 45 on 2020-02-17
Post score: 0

Original comments
Comment by gvdhoorn on 2020-02-18:\

i wish i could run the script "test_move.py" included in the package the same way it was done with ur_modern_driver

please clarify: UniversalRobots/Universal_Robots_ROS_Driver does not provide any test_move.py, so I'm not sure what you're saying here.
Comment by Wifi-cable on 2020-02-18:
-Does your test_move.py use the move comander (like the the moveIT tutorials?)
-do you have the fmauch branch with the moveIT configurations of the Universal_robots driver?
(or are you using the  deprecated ur_modern driver? )
If so i suggest launching the  robot, than either the demo,
roslaunch ur5_moveit_config demo.launch

or alternately the move group:
roslaunch ur5_moveit_config move_group.launch

than run your python script
Comment by gvdhoorn on 2020-02-18:
@Wifi-cable: ur_robot_driver and ur_modern_driver use different names for the action servers. That's most likely why OP has the script just sitting there "waiting for controllers". test_move.py was not written for ur_robot_driver (it's also not included with it), hence the mismatch.

If so i suggest launching the robot, than either the demo,

demo.launch (or actually: the nodes it starts) doesn't interact with ur_hardware_interface, so I'm not sure how starting it would help.

A:

hello and thank you both for your answers,

please clarify:
UniversalRobots/Universal_Robots_ROS_Driver
does not provide any test_move.py, so
I'm not sure what you're saying here.

@gvdhoorn, sorry, i forgot to mention that i moved the script "test_move.py" from fmauch_universal_robot package to Universal_Robots_ROS_Driver package in order to run it.
The solution i found yesterday was changing line 94 on "test_move.py"
(https://github.com/fmauch/universal_robot/blob/kinetic-devel/ur_driver/test_move.py)
from
‘follow_joint_trajectory’

to
'scaled_pos_traj_controller/follow_joint_trajectory'

that made the robot to run the script.
I guess this is because of the names given for the action servers like @gvdhoorn said or posibbly because of the way the robot is controlled now (via ExternalControl URCap)
this is the graph result i got.

Originally posted by brodwix with karma: 45 on 2020-02-18
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Vuro H on 2020-04-19:
Hi @brodwix, great you got this working. I'm currently trying to do the same thing but having the same problems. Unfortunately your fix didn't work for me. Would it be possible for you to share your repo layout (or even to where exactly you copied the test_move.py) so that I might be able to fix mine. Thanks in advance!
Comment by brodwix on 2020-04-21:
Hello, sorry for the late response... i just copied "test_move.py" from fmauch_universal_robot package to Universal_Robots_ROS_Driver package...
my layout back then was just this:
catkin_ws
-build
-devel
-src
 -fmaucn_universal_robot (copy "test_move.py" from here)
 -Universal_Robots_ROS_Driver
    - ...
    - test_move.py

After this, i changed line 94 and that did the trick ;)
I'm actually working with Ubuntu 19.04 and  ROS Melodic because the Universal_Robots_ROS_Driver repo recommended this... but you can still work with Kinetic (for me is the best option, because URSim is not compatible with Ubuntu 19.04.
Good Luck!
Comment by nullspace on 2020-11-02:
i did the same still it is showing the same error "waitng for server     ...")
1.
catkin_ws
-build
-devel
-src
-fmaucn_universal_robot (copy "test_move.py" from here)
-Universal_Robots_ROS_Driver
- ...
- test_move.py
mine same as above layout
changed the line but not working
"def main():
global client
try:
    rospy.init_node("test_move", anonymous=True, disable_signals=True)
    client = actionlib.SimpleActionClient('scaled_pos_traj_controller/follow_joint_trajectory', FollowJointTrajectoryAction)
    print "Waiting for server..."

above is the part of the python code i changed

