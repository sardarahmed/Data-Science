Q:

Difference Between build_depends and find_package components

What is the difference between listing something as a build_depends and listing it in the find_package macro? It seems redundant.

Originally posted by David Lu on ROS Answers with karma: 10932 on 2013-10-07
Post score: 3

A:

It mostly is redundant.
Some system dependencies declare non-standard CMake variables, so the CMake interface does need to be spelled out explicitly somewhere, and CMakeLists.txt is a reasonable choice.
Because CMake scripts are not easy for other tools to parse, some information is duplicated in package.xml, where it is more-readily accessible.

Originally posted by joq with karma: 25443 on 2013-10-07
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Hendrik Wiese on 2013-10-07:
So you need to take care of both files simultaneously? Not very efficient...
Comment by joq on 2013-10-07:
There is also this option: https://github.com/wjwwood/catkin_simple .
Comment by David Lu on 2013-10-07:
Was that ever advertised?
Comment by William on 2013-10-07:
FYI, catkin_simple is very unstable, it might change, without warning, in the future (names, api, etc..). I would recommend forking it if you want to use it. It was never advertised because it isn't finished, it doesn't support actions or dynamic_reconfigure and has almost no documentation.
Comment by tfoote on 2013-10-09:
There are also cases when you do not want all the dependencies in the CMakeLists.txt if you have dependencies on non-C style packages which provide potentially other resources or tools not able to be integrated into CMake.

