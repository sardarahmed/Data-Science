Q:

Can catkin_make show all warnings?

Is there a way to have catkin_make print all warnings? I am using Jenkins to test the builds of packages under Ubuntu 12.04 and ROS Hydro. I would like to track all the warnings from the packages and need to have those printed out. The best solution for me would be a command line argument rather than editing existing CMakeLists.txt files to add a definition for -Wall. I've found that the first time I build packages the warnings are printed but after the first build the warnings are suppressed.
I have looked at the output of catkin_make --help and none of the --cmake-args or --make-args seem to do what I want.

Originally posted by Thomas D on ROS Answers with karma: 4347 on 2014-03-10
Post score: 2

A:

You can directly set cmake args if you add them to your catkin_make call. E. g. you could
catkin_make -DCMAKE_CXX_FLAGS=-Wall -DCMAKE_C_FLAGS=-Wall

But you have to be aware that you have !always! to append to the flags afterwards in your CMakeLists.txt like
set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DOTHER_STUFF=1" )

Also warnings will only be printed if your code is actually compiled. Files already compiled and not cahnged will not be compiled in a repeative call, i. e. possible warnings might not be printed. If you want to be sure all warnings in your workspace are really printed you might want to erase your build and devel subfolders of your catkin_ws before calling catkin_make...

Originally posted by Wolf with karma: 7555 on 2014-03-10
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Thomas D on 2014-03-10:
Tested and verified. I put a catkin_make clean before actually building and it keeps warnings across multiple builds. Thanks!
Comment by Pototo on 2016-10-12:
And how do we disable the flags if we dont want to use them anymore (compilation might get annoyingly slow when the warnings are all)?

