Q:

[jenkins_scripts] How to resolve source dependencies in our own ROS-Jenkins?

Hi,
I'm setting up a ROS build farm (we have a number of private repo that we want to test, too; release will will still be submitted via rosdistro). I'm following all the instructions in http://wiki.ros.org/buildfarm and have forked jenkins_tools into https://github.com/marc-hanheide/jenkins_tools to deploy devel jobs to the jenkins instance. This is all working like a charm, but a problem I can't get my head round is how to resolve source dependencies when submitting "Development Tests" (see http://wiki.ros.org/regression_tests#Development_Tests). The problem is that we have repositories that depend on other not yet released repos (i.e. there are no .deb packages generated for them that could be resolved via rosdep). What I'd expect for the devel script in https://github.com/ros-infrastructure/jenkins_scripts/blob/master/devel to do is to provide a mechanism to resolve those dependencies as well, but I found now way to solve this with the tools provided. Am I missing something here?
Summarised: How to build a repository in a Jenkins "Development Test" against other repositories that are also not yet released as debian packages?
Anyone has an idea?
Thanks,
Marc

Originally posted by Marc Hanheide on ROS Answers with karma: 11 on 2014-08-13
Post score: 1

A:

For a development test of a repository which depends on other repositories which are not yet released you must list all of these repositories in a single invocation of the development test. Then Jenkins will clone all repos into a single workspace and build and test them together.

Originally posted by Dirk Thomas with karma: 16276 on 2014-08-13
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Marc Hanheide on 2014-08-14:
right... But the devel script (https://github.com/ros-infrastructure/jenkins_scripts/blob/master/devel) currently only supports one repository, right? Shall I change it so it supports a full repo_list and submit a PR? Also, is there a way to easily resolve package names to repo names?
Comment by Dirk Thomas on 2014-08-14:
For that kind of development test (with multiple repositories at the same time) you must use the prerelease script (https://github.com/ros-infrastructure/jenkins_scripts/blob/master/prerelease).

