Q:

How does turtlebot broadcast its transform?

I'm learning how to use the navigation stack from the navigation tutorials
It is stated that "The navigation stack requires that the robot be publishing information about the relationships between coordinate frames using tf." However, looking at the turtlebot_node.py code I do not see any "odom_broadcaster.sendTransform" sort of command anywhere.
Can anyone tell me why this is so? Does this have anything to do with the "JointState" variable? I'm not quite sure what this variable is for.

Originally posted by weiin on ROS Answers with karma: 2268 on 2012-01-03
Post score: 2

A:

The transform is actually published by the robot_pose_ekf filter, which fuses the wheel odometry and IMU data to get a better result.
The joint states are used to tell where the robot's parts are. A separate node (robot_state_publisher) turns joint_states + the URDF specification into a series of transforms. On the stock turtlebot, this isn't very interesting, but if you have a turtlebot arm attached, the joint states output allows you to see the arm moving in RVIZ.

Originally posted by fergs with karma: 13902 on 2012-01-04
This answer was ACCEPTED on the original site
Post score: 8

Original comments
Comment by tfoote on 2012-01-24:
That is correct.
Comment by weiin on 2012-01-04:
So there is actually no need to do a tf broadcast when publishing the odom (http://www.ros.org/wiki/navigation/Tutorials/RobotSetup/Odom), as long as I launch the robot_pose_ekf node?

