Q:

ccny_rgbd runtime symbol lookup error

Checked out this revision: https://github.com/ccny-ros-pkg/ccny_rgbd_tools/commit/88b1210524a32487f3538a5b7d28f2bbf3f6472e
Applied this patch: https://github.com/ccny-ros-pkg/ccny_rgbd_tools/issues/3
Compiled, everything is fine.
When I start nodes visual_odometry_node or keyframe_mapper_node I see the symbol lookup error appearing at run time:
[ INFO] [1361108695.958712716]: Starting RGBD Keyframe Mapper
/home/pavel/ros/ccny_rgbd_tools/ccny_rgbd/bin/visual_odometry_node: symbol lookup error: /home/pavel/ros/ccny_rgbd_tools/ccny_rgbd/lib/libccny_rgbd_registration.so: undefined symbol: _ZN9ccny_rgbd26removeInvalidDistributionsERKSt6vectorIN5Eigen6MatrixIfLi3ELi1ELi0ELi3ELi1EEESaIS3_EERKS0_INS2_IfLi3ELi3ELi0ELi3ELi3EEESaIS8_EERKS0_IbSaIbEERS5_RSA_
[visual_odometry_node-1] process has died [pid 30803, exit code 127, cmd /home/pavel/ros/ccny_rgbd_tools/ccny_rgbd/bin/visual_odometry_node __name:=visual_odometry_node __log:=/home/pavel/.ros/log/32aaa392-7908-11e2-8df2-00179a7bfadb/visual_odometry_node-1.log].
log file: /home/pavel/.ros/log/32aaa392-7908-11e2-8df2-00179a7bfadb/visual_odometry_node-1*.log

Ubuntu 12.04, GCC 4.6.3, ROS Fuerte.
Any help?
Thanks in advance.

Originally posted by Spym on ROS Answers with karma: 32 on 2013-02-17
Post score: 0

Original comments
Comment by Ivan Dryanovski on 2013-02-17:
I applied the patch you submitted. This looks like an Eigen link error, possibly against typedef std::vectorEigen::Matrix3f Matrix3fVector. Could you run visual_odometry_node in a debugger?
Comment by Spym on 2013-02-18:
Ivan, why do you think the error is against this typedef? I have no idea why not, just curious. (I just submitted the relevant issue on Github, patch included)

A:

Well, the library ccny_rgbd_registration uses the symbol ccny_rgbd::removeInvalidDistributions(...), which is defined in anonther library ccny_rgbd_util. I explicitly linked ccny_rgbd_registration with ccny_rgbd_util, and problem is gone.
I barely understand why it wasn't working when there was no direct linkage between these libraries. Maybe this symbol was sort of optimized out because executable file wasn't using it directly? But I've tried to build executables with -O0, and this didn't help.

Originally posted by Spym with karma: 32 on 2013-02-18
This answer was ACCEPTED on the original site
Post score: 0

