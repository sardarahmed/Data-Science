Q:

How to executing a callback function with multiple threads in ROS2

I have a camera_node publishing image to processer_node, images are published faster than they are processed.
When a new image appears in my image queue but the previous image is still processing, split a thread to bind a callback function to process the new image.
Is there any way to this?

A:

Yes you can process multiple msgs coming on the same topic in multiple threads and you do not need to handle thread spinning, it can be done using callback group and executor functionalities of ros2. To achieve this you can follow these steps

Define a multithreaded executor in your main function

rclcpp::executors::MultiThreadedExecutor executor;

Add your node to this executor

executor->add_node(node);

Now inside your node define a reentrant callback group (this allows parallel execution) and give this callback group in your topic subscription

my_callback_group = create_callback_group(rclcpp::CallbackGroupType::Reentrant);
rclcpp::SubscriptionOptions options;
options.callback_group = my_callback_group;
my_subscription = create_subscription<type>("/topic",rclcpp::SensorDataQoS(),callback, options);

This should work for your use case. For further understanding check out the executor concept on ros 2 wiki.

