Q:

Catch ctrl-C and Set value

I am developing a robot and I wrote some programs for that robot. In the robot's motor driving node, I  subscribed the topic from /cmd_vel topic. What the current issue is that when the motor is running and if I terminate the motor driving node with ctrl-C,  the motor is still running.
Is there any way to put the motor values with 0 before terminating the program? I am using ROS melodic  with python as the following.
#!/usr/bin/env python
import ........

class main():
    def __init__(self):
         rospy.init_node("robot", anonymous=False)
         rospy.Subscriber(..........)
         self.pub=rospy.Publisher(..........)

         rospy.Timer(rospy.Duration(0.2), self.main_callback)
         while not rospy.is_shutdown():
              rospy.sleep(0.2)
              print("-----------------")
    
     def main_callback(self, event):
           ......................
           motor_1 = 50
           ....end.....

if __name__="__main__":
          try: main()
          except rospy.ROSInterruptException: pass

As with this example, some way to set the value motor_1=0 before terminating the node.

Originally posted by yanaing on ROS Answers with karma: 35 on 2020-12-02
Post score: 0

A:

You could register a hook with rospy.on_shutdown() as described here, that sets the motor values to zero. Note that, as described, messages aren't guaranteed to be published.
If you need more fancy handling, have a look at the Advanced Example on the same page.
Also, note that if your node crashes for some reason, this will not be called.

Originally posted by mgruhler with karma: 12390 on 2020-12-02
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Combinacijus on 2023-01-20:
Thanks solved my problem. Normal class destructor del() is called but it seems that rospy is already shutdown by that point so you can't publish anything. Meanwhile your method rospy.on_shutdown(self.my_function) calls my_function() before rospy is shutdown and it's able to publish

