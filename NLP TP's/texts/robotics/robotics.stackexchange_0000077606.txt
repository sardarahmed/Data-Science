Q:

Rosserial PoseArray crashes when more than 8 poses are used?

Hey there,
i am using rosserial on windows to send poseArray data through a ubuntu pc. Works fine until i want to send more than 8 poses in one array. For example when i do this
geometry_msgs::PoseArray* posArray = new geometry_msgs::PoseArray();
posArray->poses_length = 25;
geometry_msgs::Pose* helpPosArray = new geometry_msgs::Pose[25];
posArray->poses = helpPosArray;

Other values in the code are overwritten with nonsense values and the program crashes with access violation errors. It seems like the memory is filled with something big that the other values are overwritten, or the access to the memory is faulty. The overwriting only happens when i try to publish the posArray.
pub.publish(posArray);
When i dont publish or when i change the length to:
posArray->poses_length = 8;
Everything works fine.
Is the rosserial server limitated so that only 8 pose values are possible for one publisher?
It would help me a lot if you have answers :)
Greetings

Originally posted by Ampul3x on ROS Answers with karma: 16 on 2016-12-01
Post score: 0

A:

If anyone is interested,i am closer to the solution. I changed the buffersizes in node_handle.h to 4096. This allows me to store 17 entries (posArray->poses_length = 17;). Values above 17 are not causing a crash anymore but the topic is empty then. I guess i have to split my 25 entries into two publishers one with 17 and one with 8
Cheers
EDIT:
Now i see that the Problem lies in the receive buffer. The rosserial terminal shows the following error messages with poseArrays above 17 entries:
Requested to read 1032 bytes, but buffer capacity is only 1023.
Overrun on receive buffer. Attempting to regain rx sync.
Can i somehow increase the receive buffer?

Originally posted by Ampul3x with karma: 16 on 2016-12-02
This answer was ACCEPTED on the original site
Post score: 0

