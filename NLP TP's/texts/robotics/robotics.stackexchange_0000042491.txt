Q:

Create collision map from Kinect with nodelet

Hi,
I use a camera Kinect for create a collision map but currently it's too slow and use 100% CPU. So I want use nodelets to avoid useless copies of pointCloud and speed up the process.
I understand how I should use nodelet with openni_launch because I have a good explaining here: Get start with ROS Nodelet
My question is How create a collision map with nodelet ?
Currently I use octomap_server to construct the map but it's not a nodelet.
It's necessary to modify the package ocotomap_server to porting nodes to nodelets ?
Or it's possible to run this node as nodelets with a change in the launch file ?
Or existing other package to construct collision map with nodelets ?
Thanks
EDIT:
I have tried with two computer: (With system Monitor)
The first work with two CPU at 100%: Ubuntu 10.04 / Ros Electric / Memory 3.9 GiB / Two processor Intel Core(TM)2 6600 @ 2.40GHz
The second work well, it have only a CPU at 100%, it have 8 CPU: Unbuntu 12.04 / Ros Electric / Memory 15.7 GiB / Height processor Intel(R)Xeon(R) W3565 @ 3.20 GHz
EDIT 2:
New subject on how create this node: Build a octomap_server nodelet

Originally posted by jep31 on ROS Answers with karma: 411 on 2012-07-19
Post score: 3

Original comments
Comment by Felix Endres on 2012-07-19:
You have no tags on your question, it is unlikely to be found by people who know about these things
Comment by jep31 on 2012-07-22:
Yes it's true. Now that's good. thank you
Comment by Eric Perko on 2012-07-22:
What are the specs (CPU type, speed, RAM, etc) of the computer you are trying to create the collision map on?
Comment by jep31 on 2012-07-22:
I have did a EDIT. A other question, We will soon use Fuerte. Is there a change between Electric and Fuerte with octomap_server ? It's for know if my work on electric can be used on Fuerte without change.
Comment by AHornung on 2012-07-22:
New (unrelated) questions tend to get lost in comments, but nevertheless: see the Changelog: http://www.ros.org/wiki/octomap_mapping/ChangeList
Comment by AHornung on 2012-07-22:
In general, the Fuerte version got a few new features and will be worked on, while electric will stay as it is. There should not be a change for you, I think.

A:

Yes, you would need to write your own Nodelet using octomap_server. That should be easily possible, since you can just internally use the OctomapServer class (C++ API instead of ROS node API).
However, I would guess that most of the CPU load comes from expensive map updates and ray casting, instead of pointcloud serialization/deserialization. A Nodelet would not speed up much in that case, but it might be worth a try.
Note that octomap_server outputs detailed timing on the debug log level, so you can estimate the time it takes to just insert the pointclouds into the map.

Originally posted by AHornung with karma: 5904 on 2012-07-20
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by jep31 on 2012-07-22:
Ok
I will try to write my own nodelet with the OctomapServer class.
Now I work with a computer with 8 CPU more efficient (Before 2 CPU) but we want improve the speed a maximum. I think the copy of the pointCloud between node is expensive also.
Very useful a tool to estimate time, thx
Comment by AHornung on 2012-07-22:
There is no parallelization in octomap or octomap_server, so for that case only the specs of a single CPU will count.

