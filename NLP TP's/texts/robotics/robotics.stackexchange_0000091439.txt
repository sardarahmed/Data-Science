Q:

How does MoveIt! CollisionPlugin interact with Moveit?

I'd like to write a plugin for collision detection for Moveit, and I've checked out their page here:
https://moveit.ros.org/documentation/plugins/#collisionplugin
However, it's not clear to me how the plugin is called or what methods need to be supplied. It's not clear to me how a checkCollision call ends up getting to the plugin. The only member function appears to be initialize. Should I also be implementing versions of the classes in the template of the allocator ( MyCollisionWorld, MyCollisionRobot)?
It's unclear to me how this all architecturally fits into Moveit and what interacts with it. I'm attempting to implement a plugin which allows making decisions about collisions not by the number of contacts, but as having each contact having a cost (such that links in the robot can collide and move into the space of some objects). It's not clear if the API for the plugin allows this.

Originally posted by ssnover on ROS Answers with karma: 31 on 2019-04-21
Post score: 0

A:

Yeah, the documentation linked isn't the most detailed (feel free to make an issue, I'd like to fix this at some point). You're correct in that the actual interfaces you need to be implementing is collision_robot, and collision_world. Once you have implemented those two classes, you should be able to copy-paste the "Typical Usage" (that is the main focus of the current documentation).
As for what interacts with the collision checker, it's mostly the Planning Scene and by extension the Motion Planners that use the planning scene to avoid objects.
The CollisionResult object should be enough to implement what you're talking about, but I'd heavily suggest integrating this collision checker with a motion planner yourself, from your description I don't think the default motion planners would take advantage of this special collision information.

Originally posted by BryceWilley with karma: 711 on 2019-04-21
This answer was ACCEPTED on the original site
Post score: 1

