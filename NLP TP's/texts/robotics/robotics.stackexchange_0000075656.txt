Q:

bebop_autonomy on Raspberry Pi 2 or Odroid C2?

Has anyone successfully used bebop_autonomy on either the Raspberry Pi 2 or the Odroid C2?  I have Ubuntu 14.04 and Indigo installed on the Pi, but I'm running into errors because of the SSE compiler options (same problem as this guy).  I also have an Odroid C2 running Ubuntu 16.04, but I'm having a little trouble getting Kinetic installed, so I haven't been able to try anything on it yet.  Thanks for your help.
Edit:  I tried installing bebop_autonomy on the C2 with Kinetic, but it gives the same error.

Originally posted by Sam94 on ROS Answers with karma: 76 on 2016-08-05
Post score: 0

A:

Many of the problems with incorrect compiler flags on non x86_64 platform have been solved in the latest SDK from Parrot (3.10.1). I maintain a slightly patched (and leaner) version of parrot_arsdk here which compiles fine on i386 and 32-bit arm architectures. This patched version is released as an standalone binary and you can install it by running sudo apt-get install ros-VERSION-parrot-arsdk on your pi or C2 (assuming ROS repositories are setup correctly).
As of today, the released version is at version 3.9.x. The 3.10.x release will come out during the next ROS release (sync) cycle. You can get it from ROS shadow-fixed repositories.
At the moment bebop_autonomy does not use this version of parrot_arsdk. Instead it builds it inline during compilation. This will change soon. To see an example of how to force bebop_autonomy to use the packaged parrot_arsdk, take a look at the following branch of bebop_autonomy: https://github.com/AutonomyLab/bebop_autonomy/tree/2-parrot-sdk . Specifically the changes in bebop_driver/package.xml and bebop_driver/CMakeLists.txt.

Originally posted by Mani with karma: 1704 on 2016-10-06
This answer was ACCEPTED on the original site
Post score: 0

