Q:

How use the octomap with a real map (Mapping reality) in Rviz

Hello, I am a beginner on ros, and I try to work on the turtlebot2, so, I succeeded to use the octomap to create a 3D map with Gazebo on Rviz, but now, I try to do the same thing but I want to mapping a real room and with octomap to see in 3D on Rviz.I try a lot of things like to use this pointcloud_to_laserscan, octomap_server, but it does not work, so I don't know how I do that.
I hope that someone can help me.
Thanks for your help

Originally posted by babe1031 on ROS Answers with karma: 3 on 2018-06-20
Post score: 0

Original comments
Comment by PratNag on 2018-06-21:
Have you tried rtabmap? It also creates a 3D map of the environment. The tutorials for rtabmap are pretty elaborate. Maybe those can help you with octomap also

A:

Hello babe1031,
since you haven't mentioned which type of messages are you receiving from the depth sensor, I will cover both of the options.

messages of type sensor_msgs::PointCloud2
messages of type sensor_msgs::Image

If you have a topic on which point cloud messages are published from the depth sensor, you should just remap octomap_server cloud topic to yours.
<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
        <remap from="cloud_in" to="<your_point_cloud_topic>"/>  
</node>

However, you should also provide a transform between the map frame and the frame of the point cloud. This is also stated on the octomap_server site:

You need to remap this topic to your
sensor data and provide a tf transform
between the sensor data and the static
map frame.

The thing you need to know about the transform is that it can not be a static one. If you just provide a static transform between the point cloud frame id and the map frame, all of your measurements would integrate in one spot - where you set the static transform to. Therefore, it is important to have an odometry algorithm that would give you more information about the current position of the robot, and then you could publish a transform based on the current position of the robot.
If you just want to check if all the topics are mapped correctly, you could just give it a try with a static publisher to see what I meant in the previous paragraph.
<node pkg="tf" type="static_transform_publisher" name="tf_pub"
          args="0 0 0 0 0 0 1 map camera_color_optical_frame 10"/>

If you are receiving just depth images, luckily, there is depth_image_proc package that enables you to create a point cloud based on a depth image and camera info message.
If you have any further questions, feel free to ask.

Originally posted by dljubic with karma: 516 on 2018-06-22
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by babe1031 on 2018-06-24:
Thanks for your answer, I will try this
Comment by babe1031 on 2018-06-24:
I succeed to save a map with gmapping but after when I want to use octomap to create my 3D map, it doesn't work because my occupancy map doesn't recognize my map saver even if we see it on the grid.
Comment by dljubic on 2018-06-25:
Which map saver are you referring to? Why would you need an occupancy map for the 3D map? I am not sure I understand what is the exact pipeline of your work, could you please explain it in more detail?
Also, why wouldn't you create occupancy map and at the same time, create an OctoMap?
Comment by babe1031 on 2018-06-25:
My target is to do a mapping 3D of a room, and now, I succeeded the part to realize an octomap with Gazebo but now I try to do the same thing with the real turtlebot2, and mapping 3D a room but I don't know how do that. I arrive at mapping in 2D with gmapping but after ...
Thanks for your help
Comment by dljubic on 2018-06-25:
Have you tried the pipeline I explained in my answer?
While you are running gmapping, you should subscribe to your odometry topic published by gmapping and create a tf_broadcaster based on that information.
Comment by babe1031 on 2018-06-26:
That's work, I change the point cloud topic like you said hear : "/>, and now, that's good, thanks.
Comment by dljubic on 2018-06-27:
I am glad I could help! :)
Also, please mark the answer as correct if it solved your problem.

