Q:

object detection

I have a bit of an interesting question for you. I have been experimenting with Opencv for a while and would like to add so vision applications to my robot, especially object detection. However I cannot to get either template matching or matching via key points to work. What methods would you suggest?

Originally posted by Massbuilder on ROS Answers with karma: 71 on 2014-07-14
Post score: 2

Original comments
Comment by Mehdi. on 2014-07-15:
It highly depends on your performance/speed constraints. From my own experience, using keypoints works quite well (SIFT and SURF being the most accurate but slowest). Are you doing keypoints detection, descriptors extraction and keypoints matching with outlier removal (using RANSAC)?
Comment by Hansg91 on 2014-07-15:
I can only comment that I had satisfying results using HOG features in combination with a SVM classifier.

A:

There's no magic solution my friend. You have to stick through it and see it to the end
To answer the second part:
There's deep neural networks that do object detection. Pylearn2 implements a lot of these deep neural nets with easy to use config files.
There are tutorials on pylearn2: deeplearning.net/software/pylearn2/
I have code implemented that does a HoG SVM 2 layer then classify situation. It doesn't work very well, but it's a start. It's also in ROS, but has not been implemented as a ROS node yet. You can look through this to see how the keypoints work for your above situation.
https://github.com/thunderbots/athomesoftware/blob/master/talos_machinelearning/src/ObjectTrainer.cpp
Here is how the keypoints are extracted:
https://github.com/thunderbots/athomesoftware/blob/master/talos_machinelearning/src/FeatureExtractor.cpp

Originally posted by DevonW with karma: 644 on 2014-07-15
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Massbuilder on 2014-07-15:
well at least it is a start. I will be sure to investigate these leads.
Comment by Mehdi. on 2014-07-15:
You should also check the object detection algorithm from Roboearth, the advantage is that it is cloudbased and many object are already trained. For creating an object model you need a Kinect but for recognition tasks it is possible to do it with a monocular camera.
https://www.youtube.com/watch?v=5uMCa-dgtFE

