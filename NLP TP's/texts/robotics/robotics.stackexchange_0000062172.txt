Q:

/scan topic subscribed to costmap_2d [new user]

Hi all,
I have (sensor_msgs/LaserScan) and I want it subscribed to costmap_2d. Apparantly costmap_2d doesnot explicitly subscribe to sensors Reference. By checking API it seems Costmap2DROS is a ROS wrapper for a 2D Costmap. Handles subscribing to topics that provide observations about obstacles in either the form of PointCloud or LaserScan messages.
I am new in ROS. I think I have to give /scan topic as an input to Costmap2DROS. I think I should write a Publisher - Subscriber through this Tutorial: (http://wiki.ros.org/ROS/Tutorials/WritingPublisherSubscriber(c%2B%2B) )
to be able to give a laser scan to Costmap2DROS. Am I right?

Originally posted by AliAs on ROS Answers with karma: 63 on 2014-08-27
Post score: 0

A:

If you are new to ROS, I would suggest working through all the beginner/intermediate tutorials to get a better idea about how ROS works. You do not need an intermediary publisher-subscriber, as your laserscan driver already publishes /scan, and costmap_2d will subscribe to /scan. The only reason to have a node in the middle would be to process the data in some way.
To get costmap_2d to subscribe to scan, you should read this tutorial.

Originally posted by paulbovbel with karma: 4518 on 2014-08-27
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by AliAs on 2014-08-27:
Thanks Paul for being patient with me. I will study the package and share the result ...
Comment by paulbovbel on 2014-08-27:
ROS parameters are in yaml format - they can either be loaded in individually with  tags in roslaunch, or in a batch using rosparam and a .yaml file.
Comment by paulbovbel on 2014-08-27:
This is described here. A minimal .yaml file for the costmap setup is shown in the tutorial (minimal.yaml). The 'dictionary' is the plugin array: plugin [] in yaml syntax.
Comment by paulbovbel on 2014-08-27:
To have the costmap subscribe to the laserscan, you need to add an obstacle layer to the plugins, instead of a static layer (for a static map), or a voxel layer (for 3d maps).
Comment by paulbovbel on 2014-08-27:
Not a yaml file, but same idea embedded directly in a launch file. https://github.com/paulbovbel/frontier_exploration/blob/hydro-devel/launch/global_map.launch

