Q:

Retrieving parameters from nodes (rclpy)

I've followed the tutorial here on how to pass parameters to ROS2 nodes here:
https://index.ros.org/doc/ros2/Tutorials/Node-arguments/
I've made it to the point where the following command on my command line:
ros2 run my_package my_node __params:=/path/to/params.yaml

produces the correct result, meaning I can see the parameters on the command-line output.
However, how would you retrieve those parameters from a python script?
I've tried the following:
rclpy.init()
node = rclpy.create_node("my_node")
param = node.get_parameter('~param_from_yaml')
print(str(param.value))

The output of that is always None. What am I doing wrong or can this even my achieved?

Originally posted by Raskkii on ROS Answers with karma: 3 on 2019-03-07
Post score: 0

A:

I don't think the ~ expansion has been implemented, as the parameters exist on the nodes directly, providing just the name of the parameter (without ~) should be enough.
e.g.
params.yaml:
minimal_publisher:
    ros__parameters:
        some_int: 42

diff on publisher_member_function:
--- a/rclpy/topics/minimal_publisher/examples_rclpy_minimal_publisher/publisher_member_function.py
+++ b/rclpy/topics/minimal_publisher/examples_rclpy_minimal_publisher/publisher_member_function.py
@@ -33,6 +33,9 @@ class MinimalPublisher(Node):
         self.publisher_.publish(msg)
         self.get_logger().info('Publishing: "%s"' % msg.data)
         self.i += 1
+        print()
+        print(self.get_parameter('some_int')._value)
+        print()
 
 
 def main(args=None):

in terminal:
$ ros2 run examples_rclpy_minimal_publisher publisher_member_function __params:=params.yaml
[INFO] [minimal_publisher]: Publishing: "Hello World: 0"

42

[INFO] [minimal_publisher]: Publishing: "Hello World: 1"

42

HTH,

Originally posted by marguedas with karma: 3606 on 2019-03-15
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Raskkii on 2019-03-16:
It worked. Thank you so much! Such a simple thing to overlook.

