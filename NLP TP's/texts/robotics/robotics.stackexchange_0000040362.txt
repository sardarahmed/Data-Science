Q:

What's the state machine of DriverNode?

Hi all,
I'm looking at the hokuyo node.
As far as I understood the class HokuyoDriver extends driver_base::Driver which provides the methods

doOpen
doClose
doStart
doStop

The class HokuyoNode instead extends driver_base::DriverNode. However in the code I cannot find how this node calls the methods doXYZ of the HokuyoDriver.
In other words I would like to understand the (implicit or explicit) state machine of driver_base::DriverNode and when the methods doXYZ are called.

Originally posted by LucaGhera on ROS Answers with karma: 128 on 2012-05-10
Post score: 2

A:

It is a bit hard to follow. As best I can tell, driver_base implements three states:

Closed: not connected to the device.
Opened: device is open, but not streaming data.
Running: device is streaming data.

There is some confusion about the names: some comments refer to the Opened state as Stopped (following doStop()), but I think they the same.
The dynamic reconfigure parameters are coded with a bit mask, indicating what state changes are necessary for updating each parameter. That is a useful idea, which can easily be implemented without using driver_base explicitly.

Originally posted by joq with karma: 25443 on 2012-05-10
This answer was ACCEPTED on the original site
Post score: 2

