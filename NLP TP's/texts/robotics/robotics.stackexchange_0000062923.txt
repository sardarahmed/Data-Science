Q:

Bool state is incorrect when retrieved from param server

The code is:
ros::NodeHandle nh_private("~");     
bool state=false;

nh_private.param<bool>("state", state, "false");

It turns out the "state" is "true". Why???

Originally posted by GuoliangLiu on ROS Answers with karma: 36 on 2014-09-29
Post score: 1

Original comments
Comment by gvdhoorn on 2014-09-29:
Following the answer from @kmhallen, this would seem to be expected (and correct) behaviour (you're just using the wrong type for your default value). Perhaps change your topic title to reflect this?

A:

template<typename T>
void param(const std::string& param_name, T& param_val, const T& default_val) const;

From the function prototype, param_val and default_val are both the template type, in this case bool.
The string value "false" is a pointer to the characters 'false' which is non-zero. This is interpreted as true when used as a bool. Try without quotes around false;
nh_private.param<bool>("state", state, false);

Originally posted by kmhallen with karma: 1416 on 2014-09-29
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by GuoliangLiu on 2014-10-07:
great! thinks!
Comment by GPereira on 2020-07-27:
I am getting the following error on ROS Noetic. Any ideas?
error: expected primary-expression before ‘bool’
   nh.getParam<bool>("dissemination_rules", dissemination_rules, true);

Comment by dwyackzan on 2022-07-11:
The getParam method does not have a default setting parameter (and does not require templating) like the param method.
So if you want to be able to set a default value then use the param method:
nh.param<bool>("dissemination_rules", dissemination_rules, true);

Or if you want to just use getParam without setting a default value:
nh.Param("dissemination_rules", dissemination_rules);

