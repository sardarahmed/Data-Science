Q:

Does ros_vrpn_client use a left handed coordinate system?

I'm using the NaturalPoint OptiTrack motion capture system and the ros_vrpn_client to get the position of an object. I am using code that is functionally equivalent to the example below. However the values that are being printed imply a left handed coordinate system. Can anyone confirm whether this is accurate?
tf::StampedTransform trackable;
btVector3 diff;
while (true) {
  tf_listener.waitForTransform("/trackable", "/optitrak", ros::Time(0),ros::Duration(2));
  tf_listener.lookupTransform("/trackable", "/optitrak",  ros::Time(0), trackable);   

  std::cout << "transform: " << trackable.child_frame_id_ << "\t" << trackable.frame_id_ << "\t" << trackable.stamp_ << std::endl;

  diff = trackable.getOrigin();

  std::cout << "Origin: " << std::endl;
  std::cout << "\tx: " << diff.getX() << std::endl;
  std::cout << "\ty: " << diff.getY() << std::endl;
  std::cout << "\tz: " << diff.getZ() << std::endl;
}

Originally posted by Dustin on ROS Answers with karma: 328 on 2012-04-11
Post score: 0

A:

It turns out ros_vrpn_node and the NaturalPoint OptiTrack system use a right handed coordinate system. My apologies, I am still learning how ROS transformations work. It turns out I had the parent and child frames backwards. The waitForTransform and loopkupTransform calls should be as follows:
tf_listener.waitForTransform("/trackable", "/optitrak", ros::Time(0),ros::Duration(2));
tf_listener.lookupTransform("/trackable", "/optitrak",  ros::Time(0), trackable);   

Originally posted by Dustin with karma: 328 on 2012-04-11
This answer was ACCEPTED on the original site
Post score: 0

