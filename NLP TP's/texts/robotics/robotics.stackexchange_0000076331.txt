Q:

easily move relative base position in urdf (for 2 seperate robots)?

I want to display two robots in Rviz using URDF that do not share a base link (to be controlled in simulation using joint_state_publisher) by only changing 1 base offset origin in the world coordinate system for each robot.
I experimented with a lot of combinations using urdf displayed in rviz, but no luck. I'm sure someone has done this, only I cant find the answer.
I thought the axis and origin were offsets  from the previous link (but since everything is defined on top of 0,0,0 this may be an erroneous assumption.)
TIA

Edit: This URDF only moves the base link offset - all connected links and joints above are aligned along (0,0,0) axiss:
<link name="base_link">
  <visual>
    <origin rpy="0 0 0" xyz="0 -0.5 0"/>
    <geometry>
      <mesh filename="package://fanuc_lrmate200id_support/meshes/lrmate200id/visual/base_link.stl" scale="1.0 1.0 1.0"/>
    </geometry>
    ....

Want to move (offset) robot -.5 in y axis so I can add another robot in the +.5 in the y axis.
Sample would work best - tried suggestions found on internet but didnt work. And could not find anything on the www.
Appears as if I have to offset all links/joints by base amount along lines of pr2.

Originally posted by rosnutsbolts on ROS Answers with karma: 3 on 2016-09-16
Post score: 0

Original comments
Comment by Mark Rose on 2016-09-16:
Normally the robot is moved around in rviz by the frame transformations published by your odometry components. That is, the odometry publishes the transform from the odom frame to base_link (or whatever the name of your robot's main frame is). joint_state_publisher is not used for this.
Comment by Mark Rose on 2016-09-16:
Maybe give a little more detail what you're trying to do? You want to visualize two robots? That's doable. How are you publishing odometry for each? Do you have a separate URDF for each? (Or two instances of the state publishers and the same URDF.)
Comment by JoshMarino on 2016-09-17:
You can create a dummy link for each robot that will connect from world link to the base link of each robot, assuming you are having two robots defined in the same URDF. Not sure if this is what you are looking for.

A:

Below is an example of what I commented earlier, if this is what you are looking for. You will have to modify it for your specific robot of course.
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="robot" >

  <!-- World Link -->
  <link name="world" />

  <!-- Dummy Link -->
  <link name="link0" />
  <joint name="world_joint" type="fixed">
    <parent link="world" />
    <child link="link0" />
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <!-- First Robot -->
  <joint name="link0_joint" type="fixed">
    <parent link="link0" />
    <child link="robot1_link1" />
    <origin xyz="0 -0.5 0" rpy="0 0 0"/>
  </joint>
  <link name="robot1_link1" />
  <joint name="robot1_joint1" type="revolute">
  <link name="robot1_link2" />
  <joint name="robot1_joint2" type="revolute">
  <link name="robot1_link3" />

  <!-- Second Robot -->
  <joint name="link0_joint" type="fixed">
    <parent link="link0" />
    <child link="robot2_link1" />
    <origin xyz="0 0.5 0" rpy="0 0 0"/>
  </joint>
  <link name="robot2_link1" />
  <joint name="robot2_joint1" type="revolute">
  <link name="robot2_link2" />
  <joint name="robot2_joint2" type="revolute">
  <link name="robot2_link3" />

</robot>

Originally posted by JoshMarino with karma: 592 on 2016-09-21
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by rosnutsbolts on 2016-09-22:
Thanks - explanation helpful.  One caveat. The robot URDF I was testing against had a fixed base joint connected to joint_1, when I changed base joint to  0,-0.5,0 as above it only moved the base. When I changed the  first revolute joint in the robot to 0,-0.5,0,  the entire robot shifted.
Comment by gvdhoorn on 2016-09-22:
@rosnutsbolts: you don't want to move joints. To properly do what @JoshMarino is suggesting, create a fixed joint between your shared world link and the root link of the fanuc_lrmate200id model you're instantiating twice. The root would be base_link. That will automatically move the rest too.

