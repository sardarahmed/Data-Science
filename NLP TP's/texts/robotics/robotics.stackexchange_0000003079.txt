Q:

Typical method for integrating a neural net into a PLC

How would one typically integrate a neural network into an online automation system?
As an example, we have developed a neural network that predicts a difficult to measure variable within a reactor using multiple sensors. We then use this predicted variable to tell the automation system to, for example, increase/decrease the stirrer speed.
How would someone implement this idea into a commercial system. Would they develop a function block that can simulate the neural network? Would they run a software on the server that reads and writes to the PLC control tags?

A:

Normally for a control system like this one would have a couple options:

Run the code on a co-processor that feeds data to and from the PLC over serial
Run the code on a server that sends data to and from the PLC over ethernet or serial
Run the code directly on the PLC if it has a general purpose processor or an integrated FPGA ect...

Normally for reactors and other high risk systems they have a redundant architecture so you will need to have either two (or more) coprocessors or two (or more) servers running the code. but all this will be directed by the current infrastructure that exists and how it is set up, and the computational requirements of the code. But before anything like this is used in the control loop of something as high risk as a reactor it will have to have some real improvement over the current setup, and be rigorously validated to ensure it works as expected in all situations.

