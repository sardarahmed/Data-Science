Q:

What controllers does ROS provide for non-pr2 robots

Hello,
I was wondering what controllers does ROS provide that can run with a robot that publishes position and velocity measurements? I have my hardware up and running and publishing on the /joint_states topic but I am unsure how to approach either designing my own controller or implementing one that has already been created. Does anyone have some insights?
Kind Regards,
Martin

Originally posted by MartinW on ROS Answers with karma: 464 on 2013-02-06
Post score: 0

A:

There is no unified control package so far, this is why people are often relying on Orocos and Orocos RTT so far for non-PR2 robots.
You can divide your software into two parts, the low and high level. The low-level talks with your actuators in a real-time way to ensure proper motion execution. AFAIK (except the Orocos packages), the only controller available for now is the pr2_controller_manager. This control framework embeds different controllers, in particular one to move the base and others to move the arms following a pre-planned trajectory.
One can communicate with these controllers using actionlib. It is interesting because it allows you to replace the control layer easily. See pr2_controllers for more information.
Basically you have two options right now:

use Orocos,
fork pr2_controller_manager. Note that 2. is not that hard actually as the software is not that PR2-centric (at least on the architecture point of view).

And depending on your choice controllers may or may not come with the infrastructure. But AFAIK most of them are tightly coupled with the control architecture they depend on.
Please note that there is on-going discussion about how to write a unified framework.

Originally posted by Thomas with karma: 4478 on 2013-02-06
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by MartinW on 2013-02-07:
Thanks, this is a great help! I think I will try to do number 2, just to stay within the ROS framework but it's good to know there are other options! I have one more question though, I have encoders for 4 of the joints (pos/vel) but servers for the other 4 joints, Do I need 4 controllers for 2 arms?
Comment by fergs on 2013-02-07:
There is currently a port of pr2_controller_manager to be more generic. It is ongoing here: https://github.com/willowgarage/ros_control and https://github.com/willowgarage/ros_controllers

