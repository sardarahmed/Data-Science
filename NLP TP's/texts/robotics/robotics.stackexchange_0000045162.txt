Q:

ROS and binaries deployment

Hi all,
I often have the need to arrange demos involving robots.
What I would like to do is to somehow freeze the whole ROS environment, by exporting all the dependent ROS packages associated to my demo, in order to get a standalone self-contained demo version that I can run at every moment, without dealing with ROS updates, my own package updates, and so on.
In a nutshell, I'm looking for any ROS approach to move from development to production without wasting too much time.
Any idea about this?
Thanks
Gabriele

Originally posted by Gabriele on ROS Answers with karma: 13 on 2012-10-23
Post score: 1

Original comments
Comment by Gabriele on 2012-10-23:
Demos are run on a single robot, but many different users might run the same demo over time. One problem is that our own packages are very often changed. On the other hand, even upgrading ROS might introduce inconsistencies in the code. That's why I'm looking for freezing the whole environment.

A:

It might be useful if you described in more detail what your demos do. Like do they always run on the very same robot, or should they run on many robots, do you want other people to install your code to run demos, and such.
If you work from source, then you can create a demo.rosinstall file which specifies all ROS packages required for your demo in the specific version they are required in.
With that, at any time you can create a folder, rosinstall all from that file, and you will get all the ROS packages in that version, which you can then compile and run.
Depending on the other factors this might be a good solution for you or not work out at all, so consider this as just one idea.

Originally posted by KruseT with karma: 7848 on 2012-10-23
This answer was ACCEPTED on the original site
Post score: 3

