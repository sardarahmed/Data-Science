Q:

Stereo Camera syncronization

Hi all,
I'm using the uvc_camera package and its stereo_node to grab frames from my 2 webcams.
Now I'm trying to have a measure of the sync error of the 2 frames doing the following:

write informations about left and right camera in 2 files
rostopic echo -p /left/camera_info > left.csv
rostopic echo -p /right/camera_info > right.csv

compare timestamps field inside left.csv and right.csv

With my big surprise, timestamps are always the same for all frames couples (30000+ couples, 15fps), saying that there's no sync error. I think that this result is quite impossible because timestamps are taken with a precision of 1 nanosecond.
Now the question is: does uvc_camera has some magical power that I don't know or something else happened?
Is there another way to have a precise mesure of the sync error?
Thanks,
Fabio.

Originally posted by oleo80 on ROS Answers with karma: 61 on 2012-04-29
Post score: 2

Original comments
Comment by joq on 2012-04-29:
Interesting question. Although timestamps are represented using nanosecond precision, actual clocks are not that accurate. I would not expect USB cameras to be synchronized.
Comment by joq on 2012-04-29:
On a 1394 bus, some camera models support "bus synchronization" with accuracy of about 125 microseconds. Does USB have any comparable feature?
Comment by oleo80 on 2012-04-30:
I think that "bus synchronization" is a special feature of IEEE1394 and probably it's not available with USB.
The uvc_camera "includes a two-camera node that provides rough synchronization for stereo vision" so the frame synchronization is done through software.
Comment by oleo80 on 2012-04-30:
Looking at the frames I can't say that they aren't synchronized... by the way I'm expecting a sync error about some microseconds.
Comment by Ken on 2012-04-30:
@joq USB Video Class doesn't have that feature, nor does it have triggering.

A:

stereo_node grabs the latest image from each camera and then stamps both images with the current ROS time. That timestamp won't be all that close to the true capture time for either camera, as it's generated after the camera-to-computer transfer and the images may be delayed due to buffering or other processes.
I don't think there was any way to extract better timestamps from the Video4Linux driver; I'd like to at least get a timestamp that indicates when the computer finished receiving the image. The USB camera protocol does define some timing information, though, so I believe the information is there on some level.

Originally posted by Ken with karma: 438 on 2012-04-30
This answer was ACCEPTED on the original site
Post score: 1

