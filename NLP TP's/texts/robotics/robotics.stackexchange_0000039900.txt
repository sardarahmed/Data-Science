Q:

Which Python doc tool works better with ROS: Epydoc or Sphinx?

I have no experience with either, and would appreciate your advice. ROS supports both, so I would expect both to work reasonably well.
What do you like or dislike about Epydoc or Sphinx?
I am looking for a "best practices" recommendation. I already know Doxygen for C and C++. Epydoc syntax looks a little more like that, but I do not mind learning different syntax, if worthwhile.

Originally posted by joq on ROS Answers with karma: 25443 on 2012-04-25
Post score: 4

A:

They are quite different, with different purposes.
Epydoc is best if you want auto-generated API documentation.  It is similar in spirit to Javadoc. Sphinx only does auto-generated if you push and pull it. A downside of Epydoc for Python is that, since it is auto-generated, it often documents too well; common tricks of importing symbols into higher-level modules don't work -- Epydoc will detect the submodule and document it that way instead.  This created issues with documenting rospy.
Sphinx is best for handwritten documentation, and is probably much more popular.  It is best for generating documentation that goes beyond just talking about the API and gets into usage, tutorials, etc... It is best if you want to create a family of pages and cross-reference/link them together.  Most API documentation you see in Sphinx is probably handwritten (e.g. click 'Show source' on the official Python module docs).  The advantage of handwritten is that you only have to document what you actually intend for people to use, and there are no issues with submodules being exposed if you don't want them to.  Sphinx is also nice for writing man pages.
Doxygen is kind of a cross between Sphinx and Epydoc, though I think Doxygen puts auto-generated API documents first, then makes it possible to build up other pages.

Originally posted by kwc with karma: 12244 on 2012-04-25
This answer was ACCEPTED on the original site
Post score: 6

Original comments
Comment by joq on 2012-04-25:
Thanks for a great answer, Ken! That is just what I wanted to know. (I will leave the question open a while longer, so others have a chance to contribute their views.)
Comment by mjcarroll on 2012-04-26:
I will second using epydoc for code API stuff.  Works pretty well for auto-generated documentation.

