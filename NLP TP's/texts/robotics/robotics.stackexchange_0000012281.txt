Q:

What happens from code to robotic action?

Starting in the code and through the hardware, what is the "path" that explains the robotic movement. Are there electrical signals involved? How they are initiated and formed and/or interpreted then by the "machine"/robot? Can you explain what happens from code to robotic action? 

A:

what is the "path" that explains the robotic movement

Normally, a path refers to a path in the robot configuration space. Think of it like this. Suppose a robot has 6 joints. When you want to move the robot from pose A, at which the values of those motors -- a configuration -- are $q_A = [0, 0, 0, 0, 0, 0]$, to pose B, with $q_B = [1, 1, 1, 1, 1, 1]$. (Each of the numbers may be specified in radian, for example.) Roughly speaking, a path for that robot is a (continuous) vector-valued function $p$. It takes a time parameter $t$ as an input and outputs the configuration on the path at time $t$. So if the above motion takes $5$ seconds, $p(0) = q_A$ and $p(5) = q_B$.
But when one actually communicates with the robot (or rather with the robot controller), one does not tell the robot where it is supposed to be at every single time instant. Instead, one only gives the robot a set of waypoints -- points spread along the path $p$ that the robot needs to pass through. (Those waypoints are generally not too far from one another.) And then the controller then kind of guess what is between two waypoints and tells the robot to move accordingly.

Are there electrical signals involved?

Yes.

How they are initiated and formed and/or interpreted then by the "machine"/robot?

For industrial robots, we communicate with the robot through its controller. I will talk about the robots that we are using. (I think other robots should be more or less similar, though.)
The codes or commands that we want to execute (for example, in C++) are translated and sent to the controller through ethernet as packets. Something like
01 10 00 00 00 00 00 00 00 01 00 00 00 00 00 04 (numbers are in hexadecimal). Then the controller will tell the robot (I mean, the motors) what to do. But for the controller level, I don't know much.
The controller also communicates back to us the same way, i.e., sending packets, for example, when we ask it what the values of the motors are.

