Q:

The difference of inverse kinematic in pr2 and my robot

when I test inverse kinematic , I find some difference config in pr2 and my robot.
the pr2:
geometry_msgs::PoseStamped target_pose;
target_pose.header.frame_id = referenceFrame;
 target_pose.header.stamp = ros::Time::now();  
target_pose.pose.position.x = position_action[0];
target_pose.pose.position.y = position_action[1];
target_pose.pose.position.z = position_action[2];
target_pose.pose.orientation.w = 1.0;

my robot:
geometry_msgs::PoseStamped target_pose;
target_pose.header.frame_id = referenceFrame;
target_pose.header.stamp = ros::Time::now();  
target_pose.pose.position.x = position_action[0];
target_pose.pose.position.y = position_action[1];
target_pose.pose.position.z = position_action[2];
target_pose.pose.orientation.x = position_action[3];
target_pose.pose.orientation.y = position_action[4];
target_pose.pose.orientation.z = position_action[5];
target_pose.pose.orientation.w = position_action[6];

when I make my robot config like pr2, I will fail in planning.
why about this?
advance thank for any help

Originally posted by clark_txh on ROS Answers with karma: 51 on 2016-12-07
Post score: 0

A:

Actually ,it should work when you give the target pose as an quaternion angle. What is the error which you are getting when you are specifying the angles as such in pr2 config.

Originally posted by Gokul with karma: 243 on 2016-12-07
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by clark_txh on 2016-12-09:
I get that
target_pose.pose.orientation.x = 0, y = 0 ,z = 0;

