Q:

Pointcloud_to_laserscan ranges angular min and max?

The pointcloud_to_laserscan package in the turtlebot stack provides the cloud_to_scan.cpp nodelet. This program defines the laserscan angular field of view from -90 degrees to +90 degrees (180 total), with a 0.5 degree angular spacing between beams. The Kinect has a field of view of only 55 to 57 degrees. The extra range values on either side of the sensor_msgs::LaserScan message are padded with max_range+1. Is there a technical reason for the extra range values being passed around?
In the amcl_turtlebot launch file, laser_max_beams is defined as value="30". How does this relate to the 110 range readings in the Kinect laserscan message?

Originally posted by Bart on ROS Answers with karma: 856 on 2011-04-15
Post score: 0

A:

amcl is not using the whole laser scan, that's usually not done in MCL. The sensor model of the localization assumes conditionally independent points in a single laser scan. If you use a whole scan (no matter what sensor, a Hokuyo for example outputs more than 700 in one horizontal scan), neighboring points will be highly correlated which makes your localization overly confident. A common workaround is to use the scan sparsely, e.g. in intervals of 5 or 10 degrees only. This also speeds of localization.
For amcl that means that it will will divide your ("fake") laser range of 180 evenly by 30, using one beam every 6 degrees.

Originally posted by AHornung with karma: 5904 on 2011-04-16
This answer was ACCEPTED on the original site
Post score: 5

