Q:

Gmapping with Husky A200 and SICK LMS100

Hi All,
I am attempting to get Gmapping to work with the Clearpath Robotics Husky A200 UGV using a SICK LMS100 laser range finder. I am pretty new to ROS, so please forgive me if I've made a glaring error. I am having trouble figuring out how to do the transforms. The wiki page for gmapping states that the base to odom transform should be provided by the odometry system, and that map to odom transform is provided. For the scan frame to base link though, the wiki says "usually a fixed value, broadcast periodically by a robot_state_publisher, or a tf static_transform_publisher." Has Clearpath made a tf package for the Husky, or can anyone that has done this give me a hand?
Thanks
UPDATE
So I have added a static transform from base link to laser. When using view_frames I have links from /map->/odom and /base_link->/laser, but no link between /odom and /base link. I used another static transform to connect odom to base link, but it didn't do anything. When I run gmapping_demo.launch I get the message:
"[WARN] [time stamp]: Waiting on transform from /base_link to /map to become available before running costmap, tf error: Could not find a connection between '/map' and '/base_link' because they are not part of the same tree. TF has two or more unconnected trees."
How do I connect these trees?

Originally posted by Icehawk101 on ROS Answers with karma: 955 on 2013-03-14
Post score: 2

Original comments
Comment by dornhege on 2013-03-14:
I'm not sure, but doesn't the Husky come without a laser? If you mounted that yourself, you'll have to do the config yourself. However if it is a fixed mount, you could even use a tf static_transform_publisher to send the fixed transform.
Comment by Icehawk101 on 2013-03-20:
I tried adding a picture of view_frames to show everyone what's going on, but for some reason it won't let me. Apparently I need more karma.

A:

The Husky should be running both a robot_state_publisher and joint_state_publisher by default on startup (startup launchfile)
These two wiki pages may also be of help:
husky_localization
husky_navigation
Of course, what is on your robot right now partially depends on when your robot was set up, but all of the source for the Husky ROS packages is on our github (our techs work from it, too)

Originally posted by Ryan with karma: 3248 on 2013-03-14
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Icehawk101 on 2013-03-15:
husky_localization is made for the Kinect, so I don't think it will work with my sensor. I tried husky_navigation but I got two warnings. I think they are about the transforms and I found a similar issue about them in another thread.

