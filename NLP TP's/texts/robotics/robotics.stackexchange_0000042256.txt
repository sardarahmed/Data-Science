Q:

data transfer through net cable in Ros

Hi, Guys
I have one Problem with my ROS project, hope someone could give me a hand. the problem is as following:
hardware :  one PC, one controller and a delta roboter
software:   Linux ROS and   Codesys
Two Float 64 type data, which is already saved in the  variable "Ballbox.x"and "Ballbox.y" unter cpp. file. This code could let the camera track a object with certain color, and calculate the certain point 's coordinate (x,y) of the this object like Ballbox.x and Ballbox.y (foat 64).
And the controller of this robot  is not directly connected to a  monitor, but through a net cable directly to a PC. The communication between my PC and this controller is through a software called "codesys", i donot know if you already heard about that. In " codesys " is intergrated with kind of SPS or PCL language under windows embedded system, which is used to controll the roboter arm's movement.  For example i could write a programme to let the robot reach any location(x,y,z) in his working place.
My problem is how do i let this Robot grasp the variables "ball.x" and "ball.y" from camera ?? through ethernet ???  If the Robot could grasp the" ball.x" and "ball.y",  he may do a "ball tracking" work
thank you very much anyway

Originally posted by zyb65911518 on ROS Answers with karma: 1 on 2012-07-13
Post score: 0

A:

It sounds like your best bet is to write a node that can interface with your CoDeSys robot.  You can probably use one of the other available drivers in the ROS community.  I think that you may find the ethercat_hardware package informative, as it connects to real-time hardware interfaces via an ethernet cable.  You may also find ROS Industrial very useful, as they have done work interfacing industrial-grade robotics arms into the ROS ecosystem.
I think that you probably want to make your node either subscribe to a JointState message, or a Vector3 message.  Your node should translate the data received on this topic to the corresponding hardware command, and then send it via the appropriate protocol.
Now it's just a matter of connecting your existing "ball tracking" node with your new hardware driver node, by making the ball tracking node publish to the appropriate method that you selected above.

Originally posted by mjcarroll with karma: 6414 on 2012-07-15
This answer was ACCEPTED on the original site
Post score: 0

