Q:

How to change g_initialized in ros::init

Hi,
I'm developing a QT interface to manage two or more robots, each having its own ros master (this is mandatory).
My QT interface consists of a qtalker, and I'd like to switch it runtime from a robot to another (i.e. from a ros master to another).
To do so, I shutdown the current qtalker node, and then I restart it (runtime) calling again ros::init after passing it new master IP/port in remappings.
The problem I find is that new parameters are not received, so that old master is again linked to qtalker.
I found, in init.cpp, the static variable "g_initialized", which is set to "true" the first time ros::init is called, and than doesn't allow new remappings are read the second time ros::init is called.
I think this is the reason for which the new master cannot be linked.
Two questions:

Am I right?

There is any workaround?

Thanks very much
Paolo

Originally posted by VenusRobot on ROS Answers with karma: 11 on 2015-11-04
Post score: 1

A:

Someone correct me if I'm wrong, but as far as I know switching the master context in code is not supported, although it would be nice.

Originally posted by dornhege with karma: 31395 on 2015-11-04
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by VenusRobot on 2015-11-05:
You're probably right, I'm quite new in Ros.
Nevertheless it would be interesting to know if it would be possible to edit init.cpp (in order to modify g_initialized behaviour) or if it is strictly forbidden (e. g. due to known/unknown side effects).
Comment by dornhege on 2015-11-05:
My feeling would be that that is not safe, because otherwise the feature might have been exposed. However, that is something to be answered by the ROS developers.
Comment by VenusRobot on 2015-11-05:
I agree with you, I look forward to a ROS developers answer.
Thank you

