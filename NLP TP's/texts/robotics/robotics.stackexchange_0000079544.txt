Q:

QKeyEvent with ROS Rqt?

Hi everyone,
I want to get Keyboard state in Ros Rqt Plugin, I try to use QKeyEvent but it's not work. Although, when I try to use it in Qt Widgets Application, it's work.
I want to capture key state when program can do something else,
I follow that clip : here
My Code : here
Thanks you,

Originally posted by Authur on ROS Answers with karma: 11 on 2017-03-13
Post score: 1

Original comments
Comment by 130s on 2017-06-10:
rqt provides a way to hook your Qt programs to ROS. You should be able to handle QEvent and its child class events without any knowledge for ROS.

A:

Hi Authur,
I managed to do that by using a QEventFilter on the plugin's widget object.
SamplePlugin.h:
class SamplePlugin : public rqt_gui_cpp::Plugin {
Q_OBJECT
public:
    ...
    bool eventFilter(QObject *target, QEvent *event);
    ...
}

SamplePlugin.cpp:
...
void SamplePlugin::initPlugin(qt_gui_cpp::PluginContext &context) {
     widget = new QWidget();
     ui.setupUi(widget);
     context.addWidget(widget);

     widget->installEventFilter(this);
     widget->setFocus();
     ...
}
...
bool SamplePlugin::eventFilter(QObject *target, QEvent *event) {
    if(event->type() == QEvent::KeyPress)
        std::cout << "Key pressed!" << std::endl;
    return rqt_gui_cpp::Plugin::eventFilter(target, event);
}
...

I found this out on rover_gui_plugin.cpp on link text.

Originally posted by asilvaigor with karma: 16 on 2017-06-10
This answer was ACCEPTED on the original site
Post score: 0

