Q:

Ros Indigo cv_bridge OpenCv 2.4.8 source install

Hello everyone,
I've recently installed Ros Indigo on Ubuntu 14.04. I was having issues with OpenCv installed by sudo apt-get install libopencv-dev as it did not contain the nonfree/* (SIFT SURF and other 2d features) modules.
I decided to uninstall libopencv-dev and install OpenCv 2.4.8 from source. This went just fine; however, several ros packages (cv_bridge being one of them) were uninstalled as they depended on libopencv-dev.
This is the list of all of the ros packages that depend on libopencv-dev
  libopencv-dev ros-indigo-camera-calibration
  ros-indigo-compressed-depth-image-transport
  ros-indigo-compressed-image-transport ros-indigo-cv-bridge
  ros-indigo-depth-image-proc ros-indigo-desktop ros-indigo-gazebo-plugins
  ros-indigo-gazebo-ros-pkgs ros-indigo-image-geometry
  ros-indigo-image-pipeline ros-indigo-image-proc ros-indigo-image-rotate
  ros-indigo-image-transport-plugins ros-indigo-image-view
  ros-indigo-librviz-tutorial ros-indigo-perception
  ros-indigo-rqt-common-plugins ros-indigo-rqt-image-view
  ros-indigo-rqt-robot-plugins ros-indigo-rqt-rviz ros-indigo-rviz
  ros-indigo-rviz-plugin-tutorials ros-indigo-rviz-python-tutorial
  ros-indigo-simulators ros-indigo-stereo-image-proc
  ros-indigo-theora-image-transport ros-indigo-vision-opencv
  ros-indigo-visualization-tutorials ros-indigo-viz

Is there a method to install these packages and force them to depend on my source installed opencv?

Originally posted by Charlie Murphy on ROS Answers with karma: 76 on 2014-07-12
Post score: 1

A:

Well, The answer to this question is to uninstall the apt-get installed ros indigo and to install from source. There might be an easier/better way but this worked for me.
After installing from source I just needed to make sure my $ROS_PACKAGE_PATH pointed to the right directories.

Originally posted by Charlie Murphy with karma: 76 on 2014-07-13
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by tfoote on 2014-09-26:
If you want things to depend on packages from source, you must compile them from source too. There's not shortcuts.

