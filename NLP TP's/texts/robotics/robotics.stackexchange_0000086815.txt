Q:

Robot localization no output without GPS

Hey guys,
I have a small issue here. I am running r_l with a fusion of GPS RTK, imu and wheel odometry. However, I encounter a small problem when GPS data is not available. Let me explain: my GPS package publishes GPS coordinates if and only if RTK is FIXED if it is not id does not, actually that make sense.
My r_l configuration works really great when I have RTK the only problem I have, as mentioned in the title, is that the state estimation does not publish any x,y data if GPS does not publish and that is a small problem whenever I will lose GPS fix for some seconds or I will start my system with no clear sky view.
Any hints on how to solve that?
Launch file:
<launch>
  <param name="use_sim_time" value="true" />

  <rosparam command="load" file="$(find rovitis_launch)/config/gps_odom.yaml" />

  <node pkg="tf" type="static_transform_publisher" name="base_link_to_camera" args="1.65 0 0.65 0 0 0 base_link camera 10"/>
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_imu_link" args="1.41 0 1.24 -0.0246 0.0129 -0.0007 0.9996 base_link imu_link 10"/>
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_gps" args="0.83 0 1.37 0 0 0 base_link GPS_link 10"/>
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_imu" args="0.83 0.55 0.48 0 0 -3.14 base_link piksi_board 10"/>

  <node pkg="rosbag" type="play" name="player" output="screen" args="--clock /home/matteo/Desktop/test_30_04/exit_garage_no_rl.bag"/>

  <node pkg="rviz" type="rviz" name="rviz" output="screen"/>

  <node pkg="tf" type="static_transform_publisher" name="odom_frame_to_robots_start_pose" args="0 0 0 0 0 0 /odom_fixed /start_fixed_base_frame 10"/>

    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_odom" clear_params="true"/>

    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_map" clear_params="true">
      <remap from="odometry/filtered" to="odometry/filtered_map"/>
    </node>

    <node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform" clear_params="true">
      <rosparam command="load" file="$(find rovitis_launch)/config/navsat_transform.yaml" />
      <remap from="odometry/filtered" to="odometry/filtered_map"/>
      <remap from="gps/fix" to="piksi/navsatfix_rtk_fix"/>
    </node>

</launch>

navsat transform:
frequency: 30
delay: 3.0
magnetic_declination_radians: 0.0539  # For lat/long 45.2266641° N ,  11.9843053° E
yaw_offset: -0.031 #-0.031 # IMU reads 0 facing magnetic north, not east

# If this is true, the altitude is set to 0 in the output odometry message. Defaults to false.
zero_altitude: true

# If this is true, the transform world_frame->utm transform is broadcast for use by other nodes. Defaults to false.
broadcast_utm_transform: true

# If this is true, the utm->world_frame transform will be published instead of the world_frame->utm transform.
# Note that broadcast_utm_transform still has to be enabled. Defaults to false.
broadcast_utm_transform_as_parent_frame: false

# If this is true, all received odometry data is converted back to a lat/lon and published as a NavSatFix message as
# /gps/filtered. Defaults to false.
publish_filtered_gps: false

# If this is true, the node ignores the IMU data and gets its heading from the odometry source (typically the
# /odometry/filtered topic coming from one of robot_localization's state estimation nodes). BE CAREFUL when using this!
# The yaw value in your odometry source *must* be world-referenced, e.g., you cannot use your odometry source for yaw
# if your yaw data is based purely on integrated velocities. Defaults to false.
use_odometry_yaw: false

# If true, will retrieve the datum from the 'datum' parameter below, if available. If no 'datum' parameter exists,
# navsat_transform_node will wait until the user calls the 'datum' service with the SetDatum service message.
wait_for_datum: true

# Instead of using the first GPS location and IMU-based heading for the local-frame origin, users can specify the
# origin (datum) using this parameter. The fields in the parameter represent latitude and longitude in decimal degrees,
# and heading in radians. As navsat_transform_node assumes an ENU standard, a 0 heading corresponds to east.
#datum: [55.944904, -3.186693, 0.0]
datum: [45.2266646, 11.984309, 0.0]

gps_odom.yaml:
# For parameter descriptions, please refer to the template parameter files for each node.

ekf_se_odom:
  frequency: 30
  sensor_timeout: 0.1
  two_d_mode: true
  transform_time_offset: 0.0
  transform_timeout: 0.0
  print_diagnostics: true
  debug: false
  debug_out_file: /home/matteo/rover_ws/ekf_se_odom.txt

  # initial_state: [-0.286,  -1.69,  0.0,
  #                  0.0,  0.0,  0.0,
  #                  0.0,  0.0,  0.0,
  #                  0.0,  0.0,  0.0,
  #                  0.0,  0.0,  0.0]

  map_frame: map
  odom_frame: odom
  base_link_frame: base_link
  world_frame: odom

  odom0: odom
  odom0_config: [true,  true,  true,
                 false, false, false,
                 false, false, false,
                 false, false, false,
                 false, false, false]
  odom0_queue_size: 10
  odom0_nodelay: true
  odom0_differential: true
  odom0_relative: true
  odom0_pose_rejection_threshold: 5
  odom0_twist_rejection_threshold: 1

  # twist0: gps/fix_velocity
  # twist0_config: [false,  false,  false,
  #                false, false, false,
  #                true, true, true,
  #                false, false, false,
  #                false, false, false]
  # twist0_queue_size: 10
  # twist0_nodelay: true
  # twist0_differential: false
  # twist0_relative: true

  imu0: imu/data
  imu0_config: [false, false, false,
                false,  false,  true,
                false, false, false,
                false,  false,  true,
                false,  false,  false]
  imu0_nodelay: false
  imu0_differential: false
  imu0_relative: true
  imu0_queue_size: 10
  imu0_pose_rejection_threshold: 0.8                 # Note the difference in parameter names
  imu0_twist_rejection_threshold: 0.8                #
  imu0_linear_acceleration_rejection_threshold: 0.8  #
  imu0_remove_gravitational_acceleration: true

  use_control: false

  process_noise_covariance: [1e-3, 0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    1e-3, 0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    1e-3, 0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0.3,  0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0.3,  0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0.01, 0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0.5,   0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0.5,   0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0.1,  0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0.3,  0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0.3,  0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0.3,  0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0.3,  0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0.3,  0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0.3]

  initial_estimate_covariance: [1e-9, 0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    1e-9, 0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    1e-9, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    1.0,  0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    1.0,  0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    1e-9, 0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    1.0,  0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    1.0,  0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    1.0,  0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    1.0,   0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     1.0,   0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     1.0,   0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     1.0,  0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    1.0,  0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    1.0]

ekf_se_map:
  frequency: 30
  sensor_timeout: 0.1
  two_d_mode: true
  transform_time_offset: 0.0
  transform_timeout: 0.0
  print_diagnostics: true
  debug: false
  debug_out_file: /home/matteo/rover_ws/ekf_se_map.txt

  # initial_state: [-0.286,  -1.69,  0.0,
  #                  0.0,  0.0,  0.0,
  #                  0.0,  0.0,  0.0,
  #                  0.0,  0.0,  0.0,
  #                  0.0,  0.0,  0.0]

  map_frame: map
  odom_frame: odom
  base_link_frame: base_link
  world_frame: map

  odom0: odom
  odom0_config: [true,  true,  true,
                 false, false, false,
                 false, false, false,
                 false, false, false,
                 false, false, false]
  odom0_queue_size: 10
  odom0_nodelay: true
  odom0_differential: true
  odom0_relative: true
  odom0_pose_rejection_threshold: 5
  odom0_twist_rejection_threshold: 1

  odom1: odometry/gps
  odom1_config: [true,  true,  true,
                 false, false, false,
                 false, false, false,
                 false, false, false,
                 false, false, false]
  odom1_queue_size: 10
  odom1_nodelay: true
  odom1_differential: false
  odom1_relative: false

  # twist0: gps/fix_velocity
  # twist0_config: [false,  false,  false,
  #                false, false, false,
  #                true, true, true,
  #                false, false, false,
  #                false, false, false]
  # twist0_queue_size: 10
  # twist0_nodelay: true
  # twist0_differential: false
  # twist0_relative: true

  imu0: imu/data
  imu0_config: [false, false, false,
                false,  false,  true,
                false, false, false,
                false,  false,  true,
                false,  false,  false]
  imu0_nodelay: true
  imu0_differential: false
  imu0_relative: false
  imu0_queue_size: 10
  imu0_remove_gravitational_acceleration: true

  use_control: false

  process_noise_covariance: [1.0,  0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    1.0,  0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    1e-3, 0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0.3,  0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0.3,  0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0.01, 0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0.5,   0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0.5,   0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0.1,  0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0.3,  0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0.3,  0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0.3,  0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0.3,  0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0.3,  0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0.3]

  initial_estimate_covariance: [1.0,  0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    1.0,  0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    1e-9, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    1.0,  0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    1.0,  0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    1e-9, 0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    1.0,  0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    1.0,  0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    1.0,  0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    1.0,   0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     1.0,   0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     1.0,   0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     1.0,  0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    1.0,  0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    1.0]

And finally bag file: bag file
Thanks!
Matteo

Originally posted by matteopantano on ROS Answers with karma: 32 on 2018-05-01
Post score: 0

A:

Can you verify the odometry topic you are using in r_l? Your param file says it's called "odom", but the bag file does not contain any topics named odom (maybe odom_fixed?).

Originally posted by stevejp with karma: 929 on 2018-05-01
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by matteopantano on 2018-05-01:
Yes it is working! I over-sighted it. Thanks Steve!
Comment by gvdhoorn on 2018-05-02:
@matteopantano: please accept the answer by @stevejp by ticking the checkmark to the left of his answer.
We don't normally close questions here on ROS Answers, especially not when they're actually answered.

