Q:

Kobuki "gyro" versus "inertia" packets?

Hello,
I have a Kobuki (a.k.a. TurtleBot 2) and I am trying to understand some of the source code in the kobuki and kobuki_core packages.  Specifically, the inertia.hpp file refers to both the angle and the angle_rate.  I was wondering how the raw angle is obtained at this low level if only a gyro is used?  Also, there is a separate three_axis_gyro.hpp file that seems to be handling the gyro so I'm not sure which data is actually being used to compute the Kobuki's orientation.
Can someone help me find where in the source code the robot's orientation angle (around the z-axis) is actually computed or measured?
Thanks!

patrick
http://www.pirobot.org/wordpress

Originally posted by Pi Robot on ROS Answers with karma: 4046 on 2016-03-31
Post score: 0

A:

source code in kobuki.cpp
ecl::Angle<double> Kobuki::getHeading() const
{
  ecl::Angle<double> heading;
  // raw data angles are in hundredths of a degree, convert to radians.
  heading = (static_cast<double>(inertia.data.angle) / 100.0) * ecl::pi / 180.0;
  return ecl::wrap_angle(heading - heading_offset);
}

double Kobuki::getAngularVelocity() const
{
  // raw data angles are in hundredths of a degree, convert to radians.
  return (static_cast<double>(inertia.data.angle_rate) / 100.0) * ecl::pi / 180.0;
}

Originally posted by woshidag with karma: 16 on 2016-04-24
This answer was ACCEPTED on the original site
Post score: 0

