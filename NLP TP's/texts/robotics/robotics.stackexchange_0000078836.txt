Q:

actionlib server/client race conditions

I am working on a production-level piece of robotic software using ROS.
I've noticed in my extensive cloud testing that there are are rare occasions, where a SimpleActionServer will run setSuceeded(), but any getState() calls by the client still show the state as Active.  I don't know exactly if getState() looks at the client's stored info, or polls the server (I'm about to dig into this code).  If its the latter, then something is fundamentally wrong with the server.  if its the former, then its clear that actionlibs can lose messages back and forth (Even on the same machine) and I don't know the best way to handle this.
Anyone ever see these issues and find a good solution?

Originally posted by pbeeson on ROS Answers with karma: 276 on 2017-02-08
Post score: 1

Original comments
Comment by gvdhoorn on 2017-02-08:\

I was able to edit the actionlib_tutorials for fibonacci to replicate this on the simplest of scales [..]

Not an answer, but if you have such an MWE, making that available will make the job of reproducing and debugging it much easier if you can make it available.
Comment by pbeeson on 2017-02-08:
What it appears is the setSuceeded() on the server side occasionally does NOT set the state from ACTIVE to succeeded.    That is the client querying the server state see ACTIVE despite the fact that I know the server ran setSuceeded().  Unfortunately this is VERY rare and hard to reproduce.
Comment by pbeeson on 2017-02-08:
Tarball of catkin package that just has a simple server and client that run forever can be found here.  You may have to let it run for days to see it fail, and currently there isn't anything informative to help diagnose why it fails. https://www.dropbox.com/s/57hm0gnv1flkcka/actionlib_test.tbz?dl=0
Comment by pbeeson on 2017-02-08:
I ran the server/client in the tarball above and can see that the server sets the succeeded on the goal (And returns from setSucceeded), but the client never sees this.  And has no way to see it.

A:

This was indeed the result of a bug.  I tracked it down eventually and submitted a PR to actionlib. https://github.com/ros/actionlib/pull/64

Originally posted by pbeeson with karma: 276 on 2017-02-09
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by pbeeson on 2017-02-09:
I'm surprised no one has found this since 2008.

