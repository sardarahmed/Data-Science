Q:

How to obtain the state space representation of a computed torque control system?

Assuming I have a system:
$$
a \, \ddot{x}_1 + b \, \ddot{x}_2 + c \,\dot{x_1} + d \,\dot{x_2} + e = u_1 \\
f \, \ddot{x}_1 + g \, \ddot{x}_2 + h \,\dot{x_1} + i \,\dot{x_2} + j = u_2
$$
How would I write this system in state space representation:
$$\dot{x} = Ax+Bu$$
$$y = Cx + Du$$
Usually, I would isolate for $\ddot{x_1}$ or $\ddot{x_2}$, but in this case, they are functions of each other.
Would the only way be to rewrite the dynamics in matrix form after setting new state variables?

A:

First, isolate the second order from the other terms:
$$
a \, \ddot{x}_1 + b \, \ddot{x}_2 =- c \,\dot{x_1} - d \,\dot{x_2} - e + u_1 \\
f \, \ddot{x}_1 + g \, \ddot{x}_2 = - h \,\dot{x_1} - i \,\dot{x_2} - j + u_2
$$
Then, put it in a matrix form:
$$
\left[\begin{matrix}a&b\\f&g\end{matrix}\right]\left[\begin{matrix}\ddot{x_1}\\\ddot{x_2}\end{matrix}\right]=\left[\begin{matrix}- c \,\dot{x_1} - d \,\dot{x_2} - e + u_1\\- h \,\dot{x_1} - i \,\dot{x_2} - j + u_2\end{matrix}\right].
$$
Supposing $\left[\begin{smallmatrix}a&b\\f&g\end{smallmatrix}\right]$ is invertible, we can left multiply both sides by $\left[\begin{smallmatrix}a&b\\f&g\end{smallmatrix}\right]^{-1}$:
$$
\left[\begin{matrix}a&b\\f&g\end{matrix}\right]^{-1}\left[\begin{matrix}a&b\\f&g\end{matrix}\right]\left[\begin{matrix}\ddot{x_1}\\\ddot{x_2}\end{matrix}\right]=\left[\begin{matrix}a&b\\f&g\end{matrix}\right]^{-1}\left[\begin{matrix}- c \,\dot{x_1} - d \,\dot{x_2} - e + u_1\\- h \,\dot{x_1} - i \,\dot{x_2} - j + u_2\end{matrix}\right].
$$
Thus, we get:
$$
\left[\begin{matrix}\ddot{x_1}\\\ddot{x_2}\end{matrix}\right]
=
{1\over ag-bf}
\left[\begin{matrix}g&-b\\-f&a\end{matrix}\right]\left[\begin{matrix}- c \,\dot{x_1} - d \,\dot{x_2} - e + u_1\\- h \,\dot{x_1} - i \,\dot{x_2} - j + u_2\end{matrix}\right],
$$
$$
\left[\begin{matrix}\ddot{x_1}\\\ddot{x_2}\end{matrix}\right]
=
{1\over ag-bf}
\left[\begin{matrix}(bh-gc)\dot{x_1}+(bi-gd)\dot{x_2}+(bj-je)\\
(fc-ah)\dot{x_1}+(fd-ai)\dot{x_2} + (fe-aj)\end{matrix}\right]
+{1\over ag-bf}
\left[\begin{matrix}
 g&-b\\
-f&a
\end{matrix}\right]
\left[\begin{matrix}
u_1\\
u_2
\end{matrix}\right].
$$
Using auxiliary variables:
$$
\left[\begin{matrix}\ddot{x_1}\\\ddot{x_2}\end{matrix}\right]
=
\left[\begin{matrix}\alpha\dot{x_1}+\beta\dot{x_2}+\gamma\\
\delta\dot{x_1}+\epsilon\dot{x_2} + \zeta\end{matrix}\right]
+
\left[\begin{matrix}
 \eta&\theta\\
\iota&\kappa
\end{matrix}\right]
\left[\begin{matrix}
u_1\\
u_2
\end{matrix}\right].
$$
Here, $\gamma$ and $\zeta$ can represent either uncontrolled inputs or disturbances.
As uncontrolled inputs:
$$
\left[\begin{matrix}\ddot{x_1}\\\ddot{x_2}\end{matrix}\right]
=
\left[\begin{matrix}\alpha\dot{x_1}+\beta\dot{x_2}\\
\delta\dot{x_1}+\epsilon\dot{x_2}\end{matrix}\right]
+
\left[\begin{matrix}
 \eta&\theta&\gamma\\
\iota&\kappa&\zeta
\end{matrix}\right]
\left[\begin{matrix}
u_1\\
u_2\\
1
\end{matrix}\right].
$$
As disturbances:
$$
\left[\begin{matrix}\ddot{x_1}\\\ddot{x_2}\end{matrix}\right]
=
\left[\begin{matrix}\alpha\dot{x_1}+\beta\dot{x_2}\\
\delta\dot{x_1}+\epsilon\dot{x_2}\end{matrix}\right]
+
\left[\begin{matrix}
 \eta&\theta\\
\iota&\kappa
\end{matrix}\right]
\left[\begin{matrix}
u_1\\
u_2
\end{matrix}\right]+
\left[\begin{matrix}
\gamma\\
\zeta
\end{matrix}\right].
$$
Creating the state $s=[s_1\;s_2\;s_3\;s_4]^T=[x_1\;\dot{x_1}\;x_2\;\dot{x_2}]^T$:
$$\dot{s}
=
\dot{\left[\begin{matrix}s_1\\ s_2\\ s_3\\ s_4\end{matrix}\right]}
=
\left[\begin{matrix}
0&1&0&0\\ 
0&\alpha&0&\beta\\
0&0&0&1\\
0&\delta&0&\epsilon
\end{matrix}\right]
\left[\begin{matrix}s_1\\ s_2\\ s_3\\ s_4\end{matrix}\right]
+
\left[\begin{matrix}
0&0\\
\eta&\theta\\
0&0\\
\iota&\kappa
\end{matrix}\right]
\left[\begin{matrix}
u_1\\
u_2
\end{matrix}\right]
+
\left[\begin{matrix}
0\\
\gamma\\
0\\
\zeta
\end{matrix}\right].
$$
Depending on your system, you can design a controller that rejects those disturbances; the presence of integrators in the system can help remove steady-state errors.

