Q:

Collisions not detected between attached object and environment?

Hi,
I'm now facing a new issue in my implementation of the manipulation stack: the collisions between the object I just picked up (which is correctly attached to the hand) and the environment don't seem to be computed.
I'm placing my object directly on top of another object and I don't get any collisions, though I'm getting collisions between the hand and the collision map if I try to place the object at a position where the hand would be in collision with the environment.
Any ideas?
Cheers,
Ugo
PS: here is a link to a screencast I made to show the current status of my implementation of this stack.
More details regarding my questions:
The collision_support_surface_name is definitely "table". I uploaded a new video to try to better show the problem I'm having with the collision.
In this video you can ignore the small orange/yellow spheres in rviz: it's a work in progress, but I'm just sending a list of targets to the place action and I'm (badly) displaying the grid for this list of targets.
As you can see there's no collision found between the object lying on the table and the attached object.
If I check the DEBUG messages, I can see lots of allowed collisions (between the attached body and the hand mostly), but none between the attached body and the other objects or the table. The collisions between the hand and the unattached body / environments are found.

Originally posted by Ugo on ROS Answers with karma: 1620 on 2011-02-16
Post score: 2

Original comments
Comment by mmwise on 2011-02-17:
when you see an answer you like, mark it as an accepted answer

A:

Hi Ugo,
Like Gil said, the manipulation pipeline will indeed disregard collisions between the object you are placing (identified as the "collision_object_name" in your PlaceGoal) and the support you are placing on (identified by the "collision_support_surface_name" in your PlaceGoal). This has to happen, otherwise any place operation would by definition bring your object in collision with whatever you are placing it on.
However, collision checking between the object and the support surface is disabled only in the last stage of the operation (interpolated IK), so that you don't hit the table with the object while moving around, but only when you're actually placing it.
I can not tell from the video what the support surface is in your case. If you're passing the "other object" as the "collision_support_surface_name" then the grasping pipeline will indeed put one object on top of the other. If you pass the table as the "collision_support_surface_name" then a place goal that brings your object in collision with the "other object" should be rejected.
Matei

Originally posted by Matei Ciocarlie with karma: 586 on 2011-02-16
This answer was ACCEPTED on the original site
Post score: 1

