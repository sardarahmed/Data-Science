Q:

Performance cost of rostopic?

Is there a performance cost of publishing a rostopic even if no networked or local machine is pulling from it?
I'm trying to cut down on performance loss in any way I can, is it possible to disable rostopics that go unused? Is this even worth it?
Tangential question: Is there a top or System Monitor for ros ?

Originally posted by jacksonkr_ on ROS Answers with karma: 396 on 2016-07-06
Post score: 4

Original comments
Comment by curranw on 2016-07-06:
I don't know the full answer, but I'm pretty sure it depends on the topic. Some are on-demand and some aren't. http://answers.ros.org/question/37869/subscribing-and-publishing/

A:

Topics (by themselves) have very little overhead; if there are no subscribers to a topic, there is no data transferred and therefore no bandwidth used.
The place where I've seen the largest performance penalty for topics that aren't subscribed to is the computation of the data; for example if your node is processing images, in a simple implementation the node performs the image computation even if the result is not used.
Publishing messages incurs a very small amount of processing to serialize the message, but this is negligible for small messages (<1MB in size).
The common solution that I've seen to both of these is to check if there are any subscribers on a topic before publishing, and skipping the processing and publish steps if there are no subscribers. (In C++ you can use the getNumSubscribers() call on the publisher object)
ROS doesn't provide any direct tools for analyzing the performance hit of the library itself. If you're interested in analyzing CPU bottlenecks, you can run your node in a profiler.
If you're interested in network bandwidth usage, there are lots of good network analysis tools like iptraf and iftop. (nethogs looks interesting too, but I haven't used it personally)

Originally posted by ahendrix with karma: 47576 on 2016-07-06
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by jacksonkr_ on 2016-07-07:
A very thorough answer. Thanks @ahendrix!

