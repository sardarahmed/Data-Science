Q:

How do you make a rosjava package installable?

Several of the packages in rosjava_core can be installed via Gradle and Maven to the M2 repo. It's unclear to me how to add this capability to another package, however, since the only mention of an install target in rosjava_core/build.gradle is the line that reads:
defaultTasks 'install'

I tried adding this to android_core/build.gradle in order to install the android_gingerbread package, but it still gives the error:
Task 'install' not found in project ':android_gingerbread'.

I'd like to create some ROS-Android packages that build on this package but don't live in the android_core stack. I can't figure out how to avoid having to manually include the paths to the android_core packages in order to do this.
What's the right way to install/depend on these packages?

Originally posted by jbohren on ROS Answers with karma: 5809 on 2012-04-04
Post score: 2

A:

This is a known issue that hasn't been resolved. For now, if you depend on an Android library in android_core you'll need to do it by using the path to the library. The Android dependency mechanism is evolving, however, and I suspect a better solution will be available in the future.
Also, I'm open to suggestions. Feel free to post and star an issue if you'd like to be updated if anything changes: http://code.google.com/p/rosjava/issues/list

Originally posted by damonkohler with karma: 3838 on 2012-04-05
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by jbohren on 2012-04-05:
Is it possible to use Gradle to read the ros manifest.xml of a given package and then find dependency package directories from rospack? You could define an export tag for rosjava and then use that to export the relevant libraries.
Comment by damonkohler on 2012-04-05:
It's not a problem of collecting dependencies, gradle can do that fine. It's a problem to integrate with the Android SDK tool chain.
Comment by jbohren on 2012-04-05:
Could gradle call "android update project" to generate "project.properties"? If so, can't it call it with arguments generated from reading the ros manifests and the output from rospack? Or alternatively, could this be of some use: https://github.com/jvoegele/gradle-android-plugin/wiki ?

