Q:

Trying to raise a lever using MoveIt!

Hi,
I've got a robot arm set up and want to use the end effector (a hook) to raise a lever that is connected to the robot.
Therefore the hook shall be moved through the eyelet and then be raised. However there are some problems due to the robot colliding with itself. This is happening since the lever is part of it. Should I spawn the lever on its own as a Gazebo model and if so, how can i configure the joint in the same way as I do within the urdf? Or is there a better way?
Thanks and regards

Originally posted by gbcarlos on ROS Answers with karma: 3 on 2021-07-11
Post score: 0

Original comments
Comment by fvd on 2021-07-11:
Is this collision a problem in MoveIt or Gazebo? Are you not able to plan in MoveIt or does the lever fall from the gripper in Gazebo?
Comment by gbcarlos on 2021-07-12:
I suppose the lever is considered as an obstacle since MoveIt! plans around it. So my actual question would be how to advise MoveIt! to "collide" with it, dragging it with the movement.
Comment by fvd on 2021-07-13:
Generally you would enable/disable collisions with the ActiveCollisionMatrix as required. You can also attach the object to the gripper.
Comment by gbcarlos on 2021-07-13:
I have only found the AllowedCollisionMatrix, I think thats what you mean. I am using a Python script to move the robot with the MoveGroupCommander, is there any chance to integrate the collision disabling into this script? And if so, how?
Comment by fvd on 2021-07-13:
Yes, you're right, I mistyped. I'll post an answer.

A:

You mentioned in the comments that you are treating the lever as a CollisionObject in MoveIt's PlanningScene. In that case you can:

modify the AllowedCollisionMatrix to enable and disable collisions between the lever and the links of your end effector, by obtaining it from the PlanningScene, modifying it, and the applying it e.g. via the PlanningSceneInterface
attach/detach the object to your end effector, so the lever moves with the end effector when you turn it. Remember that there is no notion of forces in MoveIt, and the PlanningScene and Gazebo are not linked intrinsically.

In Python, there are currently no convenience functions to set collisions, but a non-thread-safe version that should work is here. You can apply those commits and build from source (there are instructions online).
The AllowedCollisionMatrix may also get Python bindings in the future so that you can do the operations manually in the same way as you would in C++.

Originally posted by fvd with karma: 2180 on 2021-07-13
This answer was ACCEPTED on the original site
Post score: 1

