Q:

compiling a project based on OpenCV in ubuntu

I have an error when doing cmake [actually rosmake] to my project, I have already installed OpenCV but I have this error:
Linking CXX shared library ../lib/libCornerHelper.so
  /usr/bin/ld: cannot find -lopencv_contrib
  /usr/bin/ld: cannot find -lopencv_legacy
  /usr/bin/ld: cannot find -lopencv_stitching
  /usr/bin/ld: cannot find -lopencv_gpu
  /usr/bin/ld: cannot find -lopencv_objdetect
  /usr/bin/ld: cannot find -lopencv_calib3d
  /usr/bin/ld: cannot find -lopencv_features2d
  /usr/bin/ld: cannot find -lopencv_video
  /usr/bin/ld: cannot find -lopencv_highgui
  /usr/bin/ld: cannot find -lopencv_ml
  /usr/bin/ld: cannot find -lopencv_imgproc
  /usr/bin/ld: cannot find -lopencv_flann
  /usr/bin/ld: cannot find -lopencv_core
  collect2: ld returned 1 exit status
  make[3]: *** [../lib/libCornerHelper.so] Error 1

How to solve it?

Originally posted by Belal on ROS Answers with karma: 1 on 2011-11-25
Post score: 0

Original comments
Comment by Belal on 2011-11-26:
thanks a lot, it works
Comment by jbohren on 2011-11-25:
Also the actual command being executed, i.e. export VERBOSE=1
Comment by dornhege on 2011-11-25:
The linker cannot find the specified libraries in the linker paths. For more specifics: Your CMake file, manifest.xml, ubuntu and ROS version will help.
Comment by Astronaut on 2016-05-15:
I got the same problem. How did you solve it?

A:

I suggest you do the following in a shell
$ pkg-config --libs --cflags opencv

Then accurately check the results of the command.
If there still are missing libraries (as I think it is the case) then run
$ sudo updatedb
$ locate opencv_core (or any other missing lib)

This ought to tell you where the libraries are.
Supposedly though nor the linker and neither pkg-config can find them, so probably they ended up installed in a place that is not on the pkg paths.
To check against this eventuality run
$ echo $LD_LIBRARY_PATH

This variable should contain the path to the OpenCV libs, if it is not so you have to add it OR move the libs in /usr/lib as they ought to be.
To proceed with the second solution you just have to do something like
$ sudo cp /root/user/path-to-OpenCV /usr/local/lib

For the first solution you have to edit the bash configuration file for your user
$ nano ~/.bashrc

A text editor will open, scroll to the last line. If you already have a line like
export LD_LIBRARY_PATH=something

than add the path to OpenCV to this line, otherwise create one like so
export LD_LIBRARY_PATH+=:/path/to/OpenCV

Close the shell window, reopen one (ALT+T shortcut) and retry the pkg-config, it should now be able to find your libraries.

Originally posted by Claudio with karma: 859 on 2013-01-20
This answer was ACCEPTED on the original site
Post score: 1

