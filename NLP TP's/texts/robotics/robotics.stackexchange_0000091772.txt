Q:

help ROBOT_LOCALIZATION

Hello
I'm rephrasing my question ...
As the following image, would this be the expected result with the Robot_Localization package?
If so, based on my odometry and IMU readings below, what would be the correct configuration of ekf_template.yaml? Or am I mistaken in something?

/odom
   ---
    header: 
      seq: 735
      stamp: 
        secs: 1559070711
        nsecs: 593724715
      frame_id: "odom"
    child_frame_id: "base_footprint"
    pose: 
      pose: 
        position: 
          x: 3.58344948396
          y: 0.0485756406341
          z: 0.0
        orientation: 
          x: 0.0
          y: 0.0
          z: 0.0110481512963
          w: 0.999938967314
      covariance: [0.001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001]
    twist: 
      twist: 
        linear: 
          x: 0.145770311356
          y: 0.0
          z: 0.0
        angular: 
          x: 0.0
          y: 0.0
          z: 0.00531763536856
      covariance: [0.0001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0001]
    ---

/imu_raw
header: 
  seq: 3022
  stamp: 
    secs: 1559070635
    nsecs: 872518062
  frame_id: "imu_link"
orientation: 
  x: 0.0243225097656
  y: -0.0449829101562
  z: 0.0723571777344
  w: 0.996063232422
orientation_covariance: [0.0001, 0.0, 0.0, 0.0, 0.0001, 0.0, 0.0, 0.0, 0.0001]
angular_velocity: 
  x: 0.79345703125
  y: 0.06103515625
  z: 7.99560546875
angular_velocity_covariance: [0.0001, 0.0, 0.0, 0.0, 0.0001, 0.0, 0.0, 0.0, 0.0001]
linear_acceleration: 
  x: 0.078125
  y: 0.0244140625
  z: 1.00390625
linear_acceleration_covariance: [0.001, 0.0, 0.0, 0.0, 0.001, 0.0, 0.0, 0.0, 0.001]

ekf_template.yaml:
frequency: 50
sensor_timeout: 0.1
two_d_mode: true
print_diagnostics: true
debug: false
debug_out_file: /path/to/debug/file.txt
publish_tf: true

#map_frame: map 
odom_frame: odom            
base_link_frame: base_footprint  
world_frame: odom 

odom0: /odom
odom0_config: [?,  ?,  ?,
               ?, ?, ?,
               ?, ?, ?,
               ?, ?, ?,
               ?, ?, ?]
odom0_differential: false

imu0: /imu_raw
imu0_config: [?, ?, ?,
              ?,  ?,  ?,
              ?, ?, ?,
              ?,  ?,  ?,
              ?,  ?,  ?]
imu0_differential: false

Update 2
I made some corrections and followed some recommendations from the robot_localization website:
http://docs.ros.org/melodic/api/robot_localization/html/index.html
I am getting the following result during a circular motion:

Anyone have any idea what might be happening?
If I set the IMU orientation(YAW) as false the problem disappears but I'm not sure if I should do this.
my /odom
---
header: 
  seq: 21363
  stamp: 
    secs: 1559912897
    nsecs: 874729232
  frame_id: "odom"
child_frame_id: "base_footprint"
pose: 
  pose: 
    position: 
      x: 0.236642009509
      y: 0.0226101278157
      z: 0.0
    orientation: 
      x: 0.0
      y: 0.0
      z: 0.612814005797
      w: 0.790227178917
  covariance: [0.001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001]
twist: 
  twist: 
    linear: 
      x: 0.131281420588
      y: 0.0
      z: 0.0
    angular: 
      x: 0.0
      y: 0.0
      z: 0.589753746986
  covariance: [0.001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001]
---

my /imu_raw
---
header: 
  seq: 34572
  stamp: 
    secs: 1559912824
    nsecs: 460417032
  frame_id: "imu_link"
orientation: 
  x: 0.00985717773438
  y: -0.00238037109375
  z: 0.701110839844
  w: 0.712951660156
orientation_covariance: [0.0025, 0.0, 0.0, 0.0, 0.0025, 0.0, 0.0, 0.0, 0.0025]
angular_velocity: 
  x: 0.020240032959
  y: 0.00319579467773
  z: 0.596548339844
angular_velocity_covariance: [0.02, 0.0, 0.0, 0.0, 0.02, 0.0, 0.0, 0.0, 0.02]
linear_acceleration: 
  x: -0.0047900390625
  y: -0.05748046875
  z: 10.1884130859
linear_acceleration_covariance: [0.04, 0.0, 0.0, 0.0, 0.04, 0.0, 0.0, 0.0, 0.04]
---

my ekt_template.yaml
frequency: 20
two_d_mode: true
print_diagnostics: true
debug: false
debug_out_file: /path/to/debug/file.txt
publish_tf: true

#map_frame: map              # Padrões para "map" se não especificado
odom_frame: odom            # Defaults to "odom" se não especificado
base_link_frame: base_footprint  # Defaults to "base_link" se não especificado
world_frame: odom           # Defaults to the value of odom_frame se não especificado

odom0: /odom
odom0_config: [false, false, false,
               false, false, false,
               true, true, false,
               false, false, true,
               false, false, false]
odom0_differential: false

imu0: /imu_raw
imu0_config: [false, false, false,
              false,  false,  true,
              false, false, false,
              false,  false,  true,
              true,  false,  false]
imu0_differential: false

Originally posted by mateusguilherme on ROS Answers with karma: 125 on 2019-05-24
Post score: 0

A:

I'm not sure I totally get what it is that you're asking, but I'd do this:
Wheel encoders: fuse X velocity, Y velocity, and yaw velocity
IMU: fuse the yaw velocity only
That configuration won't help you if the robot hits something and the wheels spin, however. Even including the linear acceleration from the IMU won't really help in this case, at least not much.
By the way, I think your IMU is reporting gs, rather than m/s^2. I note that your Z acceleration is given as 1, instead of 9.81.

Originally posted by Tom Moore with karma: 13689 on 2019-06-06
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by mateusguilherme on 2019-06-07:
Hello
I have corrected the values for m / s2 now. Could you tell me if the unit of inertial motion needs to be positioned exactly on the Z axis of the robot?
Apparently it is working, but during a circular motion the filtered odometry increases too much in a certain direction, causing unfiltered odometry to represent a more real situation.
I'll post an update with the latest results.
note: If I set the IMU orientation(YAW)  as false the problem disappears but I'm not sure if I should do this.
Comment by Tom Moore on 2019-06-13:
Setting the IMU yaw orientation to false was what I suggested in my answer. IMUs use magnetometers for absolute orientation, and they are notoriously erroneous, especially indoors.
Comment by Tom Moore on 2019-06-13:\

Could you tell me if the unit of inertial motion needs to be positioned exactly on the Z axis of the robot?

The IMU can be mounted however you want, but then you need to specify a transform from base_link->imu_link that represents that mounting pose.

