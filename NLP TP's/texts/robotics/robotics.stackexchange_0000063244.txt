Q:

Explicit address for camera calibration file

I have a few different platforms that are all using the same package.  Each platform has a different stereo camera calibration file.yaml
Each platform has its own launch file, which gets called (roughly) this way:
<node pkg="nodelet" type="nodelet" name="camera1394_nodelet" args="load camera1394/driver left_manager">
<rosparam file="/home/turtlebot/workingDir/cam_info/00b09d0100c8851b.yaml" /> 
<param name="guid" value="00b09d0100c8851b" />
</node>

Which seems to work, but within each yaml file the camera_info_url is defined this way:
camera_info_url: package://hast/cam_info/left_00b09d0100c8851b.yaml

but I would rather call it this way:
camera_info_url: /home/turtlebot/BitSync/hast/workingDir/cam_info/left_00b09d0100c8851b.yaml

This way I can keep and update the files in a "central server" (via bittorrent sync) instead of embedded within the package on each platform.  However, the second method fails and does not load the yaml file properly.
Is there a different way to define the camera parameters, or am I stuck with the file in each package?

Originally posted by benabruzzo on ROS Answers with karma: 79 on 2014-10-10
Post score: 0

A:

Like many other ROS camera drivers, camera1394 uses the camera_info_manager package for resolving camera configuration information. That package can handle many URL options.
If I understand the question correctly, you want to store calibration files for all your cameras together, somewhere separate from your ROS packages. The easiest way to do that is via the ${NAME} substitution parameter, which gets resolved to the name of each specific device, 00b09d0100c8851b in your example.
To accomplish that, set the URL this way:
camera_info_url: file:///home/turtlebot/BitSync/hast/workingDir/cam_info/${NAME}.yaml

Then, store all your calibration files in that directory using each camera's unique 16 hex digit name plus the .yaml suffix.
You can even use the identical URL for calibrating the camera initially, camera_info_manager will store the file in the specified directory. After that, you would need to update the bit torrent manually.

Originally posted by joq with karma: 25443 on 2014-10-11
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by benabruzzo on 2014-10-14:
Would this also be called during the launch file as:
<rosparam file="/home/turtlebot/workingDir/cam_info/${NAME}.yaml" /> 

?
Comment by benabruzzo on 2014-10-14:
Thanks, that did work.  Just FYI for others, no, the launch file needs to have the actual name of the yaml file:
<rosparam file="/home/turtlebot/BitSync/hast/workingDir/cam_info/00b09d0100c884f8.yaml" />

Comment by joq on 2014-10-15:
That's right, ${NAME} is resolved only for the URL parameter, not in the launch file itself.

