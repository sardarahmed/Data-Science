Q:

rosconsole DEBUG logger. How to use it?

Hello all,
I would like to know how to correct interact with the log messages generated by ROS. I did some research about it but I could not find a satisfactory material. The situation that motivated this question was:
I am running a simple bagfile with scan data information. To avoid the problem with the difference of time between the machine and the scan data from the bagfile I used the flag --clock as suggested in the appropriate documentation, however I did not set the parameter use_sim_time to true. Because of this, when I try to see the scan data on rviz I receive the following message:
[ WARN] [1470408821.734840992]: MessageFilter [target=base_link ]: Dropped 100,00% of messages so far. Please turn the [ros.rviz.message_notifier] rosconsole logger to DEBUG for more information.

Because of this message I tried to somehow turn on the rosconsole logger to DEBUG but I realized that I did not know how to do it.
After this contextualization, I redo my question: How can I work correctly with the ROS's log messages, how can I have access to the messages printed from rviz and what is a best practice to handle with analogous situations?
Thanks

Originally posted by Randerson on ROS Answers with karma: 236 on 2016-08-05
Post score: 2

A:

You can use rqt_logger_level to adjust logger levels via a GUI:
rosrun rqt_logger_level rqt_logger_level

You can also do it from the command line, via service calls:
rosservice list
rosservice call /rviz_123/get_loggers <tab><tab>
rosservice call /rviz_123/set_logger_level <tab><tab>

For the set_logger_level call, you'd then have to manually set level to debug and also pick a specific logger from the list returned by get_loggers

Originally posted by spmaniato with karma: 1788 on 2016-08-05
This answer was ACCEPTED on the original site
Post score: 8

Original comments
Comment by William on 2016-08-05:
In the specific case of rviz (because it has an anonymous node name), there is a --debug option that initializes the logging level to debug. You'll still have to use the above options if rviz is already running.
Comment by AndyZe on 2020-06-24:
This has been updated to --log-level-debug

