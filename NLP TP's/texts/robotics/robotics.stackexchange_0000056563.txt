Q:

How do I install a package on OSX without recompiling everything?

I just installed ROS Hydro on OS X Mavericks, and I'm looking to install additional packages that weren't included in the full install.
I can't simply get the binaries (they're not on homebrew) so I need to go the manual route. My plan was to do this:
rosrlocate info PACKAGE | rosws merge -
rosws update
mv PACKAGE src/PACKAGE
rosdep install PACKAGE
catkin_make_isolated

Except when I do catkin_make_isolated, I recompile all the source files from the installation. Do I need to create a new rosws and install packages there? Is my ros_catkin_ws from the OS X install now more-or-less equivalent to /opt/ros/hydro, in that I shouldn't touch it but I should keep it on my ROS paths?
I wanted to get an idea of the standards before mucking about!

Originally posted by nckswt on ROS Answers with karma: 539 on 2014-01-15
Post score: 3

A:

The recommended workflow is to build another workspace on top of the one in ~/ros_catkin_ws. Also for catkin, you should use rosinstall_generator and wstool. So you would do something like this:
mkdir ~/my_ws
cd ~/my_ws
wstool init src
source ~/ros_catkin_ws/install_isolated/setup.bash
rosinstall_generator PACKAGE --deps --exclude RPP | wstool merge -t src -
wstool update -t src
rosdep install --from-paths src --ignore-src
catkin_make_isolated --install
source ~/my_ws/install_isolated/setup.bash

wstool is the ROS agnostic replacement for rosws, and has most of the same functions, but you normally have to specify the target folder to act on, hence the -t src in the merge command. The wstool update -t src command will cause the packages you just added to be fetched.
rosinstall_generator is pretty new, and currently can only operate on released packages, but should be able to get packages from source in the future. The --deps --exclude RPP options to rosinstall_generator means get me that PACKAGE and its dependencies, recursively, excluding dependencies in my ROS_PACKAGE_PATH. This is the best way to create an "extension" on top of your existing workspace of ROS packages.
The --from-paths src and --ignore-src arguments to rosdep indicate that it should install all of the dependencies of packages found in the folder src and that it should not try to install packages found of the ROS_PACKAGE_PATH respectively.
Hopefully that helps, we are working on improving these tools and getting tutorials setup to give them more visibility to them.

Originally posted by William with karma: 17335 on 2014-01-15
This answer was ACCEPTED on the original site
Post score: 7

Original comments
Comment by nckswt on 2014-01-15:
Thanks for the awesome response! Sadly, it didn't entirely work as it never grabbed the source files. I merged your commands with the OS X install to come up with the answer below. This works when initializing the workspace â€“ I'm not sure why wstool merge -t src - didn't grab the source files.
Comment by William on 2014-01-15:
Oops, forgot to call wstool update.
Comment by nckswt on 2014-01-15:
Just because I'm going to use this post as a reference in the future, would you mind editing your codeblock to include the --install flag to catkin_make as well as a source install_isolated/setup.bash line? Thanks!
Comment by William on 2014-01-15:
Sure, though the --install is optional.

