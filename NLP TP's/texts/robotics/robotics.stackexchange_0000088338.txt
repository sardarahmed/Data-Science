Q:

Navigation problem "Cannot connect to move_base action server"

Hi,
I'm trying to do remote 3D mapping and navigation using Raspberry Pi 3 and XBOX Kinect 360 camera on Pioneer robot. I use my laptop as a remote station for visualization and sending 2D nav from Rviz over WiFi.
I am running Ubuntu 14.04 LTS 32-bit with ROS Kinetic.
Navigation stack is run on RPi3. On laptop, when I give a 2D nav goal in Rviz I get the following error:
[ INFO] [1533205073.090658850]: Connecting to move_base action server...
[ERROR] [1533205078.090822743]: Cannot connect to move_base action server!
[ INFO] [1533205078.091473582]: rtabmap (98): Rate=1.00s, Limit=0.700s, RTAB-Map=0.1182s, Maps update=0.0389s pub=5.0023s (local map=1, WM=1)
[ INFO] [1533205078.447025404]: Publishing next goal: 1 -> xyz=0.767808,-0.870866,0.000000 rpy=0.000000,0.000000,-1.453314

I aslo noticed a following warning on the robot side (RPI):
[WARN] [1533120036.753731825]: Timed out waiting for transform from base_link to map to become available before running costmap, tf error: Could not find a connection between 'map' and 'base_link' because they are not part of the same tree.Tf has two or more unconnected trees

I disabled robot's wheel odometry, that is RosAria's TF odom broadcaster by commenting this line and switched to using visual RTAB-Map rgbd odometry.
Here are my roslaunch files: robot, client, move base params
Here are rqt_graph, view_frames
In RViz, local costmap and global costmap can't be visualized. I did check that I'm subscribing to right topics, but still I get the warning "No map received"
Any suggestions?
Thanks!

Originally posted by Dox on ROS Answers with karma: 36 on 2018-08-04
Post score: 0

A:

Do you launch robot launch file before client launch file? Can you try under rtabmap node to remap move_base to /planner/move_base instead of /planner/move_base/?
The warning on the robot is ok for the beginning when rtabmap is not started yet (/map is not yet published).
Last observation, rgbd_odometry is too slow (1.4 Hz). The robot will get lost very often. Consider using back rosaria for odometry instead. To do visual odometry on RPI3, see this post, which decimates the images to reduce computation power required and increase frame rate. In that post, 175 ms is required for odometry, though it is maybe okay for very low cost hand-held scanner, it is still slow for a robot.
Another option, if you can publish the RGB/depth images over 10 Hz to remote computer (though I don't think it is possible with RPI3), you may do visual odometry on client instead (though it is not very safe for move_base if wifi connection is not always good). See Remote Mapping tutorial for an example.
At your place with computation power you have on the robot, I would stick with rosaria for odometry, and try to improve  their code (or parameters) or combining it with an IMU if it is drifting too much.
cheers,
Mathieu

Originally posted by matlabbe with karma: 6409 on 2018-08-04
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Dox on 2018-08-05:
Hi Mathieu! Thanks for a quick response. I did try teleop the robot with rgbd_odometry and I noticed that it got lost along the way. I wasn't sure what's wrong with navigation because looking at rqt_graph everything seemed fine. I'll try out your suggestions.

