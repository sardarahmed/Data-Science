Q:

ROS Answers SE migration: MOOS to ROS

I work for a company that deals with Autonomous Underwater Vehicles(AUV's). Currently we are in a debate over what we should use, MOOS or ROS (MOOS is just like ROS but is heavy on the underwater stuff). We would prefer to use ROS but i haven't seen many algorithms for AUV's that have already been produced in ROS. i wanted to know if there are more algorithms for AUV in ROS, other than the following: auv_joy, auv_msgs, auv_nav, auv_nav_sim,and auv_pilot.
thank you for any help.

Originally posted by kyle on ROS Answers with karma: 41 on 2011-07-27
Post score: 4

Original comments
Comment by Arkapravo on 2012-05-05:
@kyle Does MOOS have a graphic interface (like gazebo or openrave) ? or is it just a control interface ?

A:

I attended the latest MOOS working group last week, where there was a bit of discussion on the applicability of ROS for USVs and UUVs. The biggest point that came up against using ROS for such applications is the relatively high message overhead. With acoustic modems, a lot of the assumptions used for inter-computer networking go out the window (namely, that you have >1kbps network bandwidth).
Georgia Tech is working on ROS-MOOS integration; I'm sure they've got a lot of opinions on the pros and cons: http://smartech.gatech.edu/jspui/bitstream/1853/38875/1/GT%20AUV%20Workshop%20Paper-MU3.pdf
There's also this code, though I haven't looked at it myself: http://code.google.com/p/seabee3-ros-pkg/wiki/SeaBee3

Originally posted by Ryan with karma: 3248 on 2011-07-29
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by William on 2011-10-14:
I have some tools for MOOS to ROS specifically: https://github.com/wjwwood/MOOS-ROS-Bridge
Comment by Ryan on 2011-08-02:
Now that we have rosserial, this bears re-examination, but the majority of people working in the field only know ROS in its 'typical' (read: TCPROS) form
Comment by Ryan on 2011-08-02:
As background information, the acoustic modem of choice for many researchers is the WHOI uModem: http://acomms.whoi.edu/umodem/, which has a speed ranging from 80 bps to 5400 bps (that's bits/sec :S). With that range, even the 38 byte/packet Ethernet frame overhead is significant.
Comment by Brian Gerkey on 2011-08-02:
Can you say something more about the "relatively high message overhead" in ROS?  Both the serialization scheme and the wire protocol(s) are intended to be simple and efficient.  Is there some wasted time or space in there that we should look at?
Comment by PerkinsJames on 2012-08-15:
ROS being a problem because of modem bandwidth makes no sense.  Why would you send ethernet frames over a likely serial connected acoustic modem?  You would write a node to convert your ROS message to modem serial input.  I feel these answers are very misleading.  Pls give more info
Comment by Ryan on 2012-10-25:
@PerkinsJames: This is exactly what rosserial is for. However, it doesn't have the flexibility in its current state.
Comment by StephanieK on 2015-05-05:
I agree PerkinsJames, that makes no sense. In MOOS as well, there are processes running that use acomms libraries to talk to the modem and decide what gets send across. You could do the same in ROS.

