Q:

Difference between two transform broadcasters

What is the difference between the following transform broadcasters in a multi-robot simulation:
1. br.sendTransform(tf::StampedTransform(transform, ros::Time::now(), "/map", "odom"));

2. br.sendTransform(tf::StampedTransform(transform, ros::Time::now(), "map", "odom"));

I have included the transform broadcaster in two namespaces: robot_1 (tf_prefix="robot_1") and robot_2(tf_prefix="robot_2"). I want to use a common map frame. Which of the above two command should I use to get transform of both robots w.r.t. global /map frame?

Originally posted by Hemu on ROS Answers with karma: 156 on 2014-12-02
Post score: 1

A:

I am not sure about this, but I believe they are identical. You should insert the tf_prefix yourself, i.e. retrieve the param and prefix the odom frames.
It is easy to test though: Just subscribe raw /tf and check what frames are send in the messages.

Originally posted by dornhege with karma: 31395 on 2014-12-02
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Hemu on 2014-12-02:
The first broadcaster provides me the desired common /map frame. The tf_prefix does not affect the name of map frame when declared as /map.
Comment by dornhege on 2014-12-02:
And I believe the same happens, when you use "map" unless you add the tf_prefix manually. Just try it out.
Comment by Hemu on 2014-12-02:
yes. that's true. Setting tf_prefix manually converts the frames to /tf_prefix/frame_name.

