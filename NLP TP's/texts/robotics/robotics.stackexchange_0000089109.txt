Q:

openai_ros example in local computer does not work

Hello. I'm trying to this openai_ros gym tutorials, not using ROS Development Studio(RDS).
I already checked that it does work in RDS following step by step. There was not problem at all.
BUT, I couldn't do this same tutorial in my local computer. It was troubled on the just first step.
If I type the following on my local command terminal,
  roslaunch gym_construct main.launch

then it shows that
 [ INFO] [1537961641.295151763, 0.348000000]: DiffDrive(ns = //): Advertise joint_states
 [ INFO] [1537961641.295818023, 0.348000000]: DiffDrive(ns = //): Try to subscribe to cmd_vel
 [ INFO] [1537961641.298928159, 0.348000000]: DiffDrive(ns = //): Subscribe to cmd_vel
 [ INFO] [1537961641.299555014, 0.348000000]: DiffDrive(ns = //): Advertise odom on odom 
 [spawn_turtlebot_model-2] process has finished cleanly
 log file: /home/parkbj/.ros/log/043fb95e-c180-11e8-8ab1-7085c22a655c/spawn_turtlebot_model-2*.log

And then, there is nothing happened. Gazebo has to be loaded, but NOT.
This problem is not only for local computer. It does though for RDS.
If I just type the same command in the Shell of RDS, instead of Simulations tap > Select a launch file > main.launch,
then I get a exactly same result.
I want to try this tutorial in local computer to integrate a reinforcement learning part included in it with my own robot later.
However, how to do this tutorial in the local computer, not using RDS is nowhere.
Please let me know this.
FIY, the following is the all step of my trials on command terminal in local computer for doing this tutorial.

Download Turtlebot2Maze pkgs, and set branch.
cd ~/catkin_ws/src
git clone https://bitbucket.org/theconstructcore/turtlebot.git
cd ~/catkin_ws/src/turtle
git fetch && git checkout kinetic
cd ~/catkin_ws
catkin_make
source devel/setup.bash

Download openai_ros pkgs, and set branch.
cd ~/catkin_ws/src
git clone https://bitbucket.org/theconstructcore/openai_ros.git
cd ~/catkin_ws/src/openai_ros
git fetch && git checkout kinetic-devel
cd ~/catkin_ws
catkin_make
source devel/setup.bash

Download openai_examples_projects pkgs, and set branch.
cd ~/catkin_ws/src
git clone https://bitbucket.org/theconstructcore/openai_examples_projects.git
cd ~/catkin_ws/src/openai_examples_projects
git fetch && git checkout tutorials
cd ~/catkin_ws
catkin_make
source devel/setup.bash

Download open_ai_gym_construct pkgs, and set branch.
cd ~/catkin_ws/src
git clone https://bitbucket.org/theconstructcore/open_ai_gym_construct.git
cd ~/catkin_ws/src/open_ai_gym_construct
git fetch && git checkout master
cd ~/catkin_ws
catkin_make
source devel/setup.bash

Launch gym_construct main.launch file in command terminal.
roslaunch gym_construct main.launch

Then, the command terminal shows this result. (This is exactly same with the result of shell in RDS)
parkbj@parkbj-desktop:~$ roslaunch gym_construct main.launch
... logging to /home/parkbj/.ros/log/043fb95e-c180-11e8-8ab1-7085c22a655c/roslaunch-parkbj-desktop-4063.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.

xacro: Traditional processing is deprecated. Switch to --inorder processing!
To check for compatibility of your document, use option --check-order.
For more infos, see http://wiki.ros.org/xacro#Processing_Order
deprecated: xacro tags should be prepended with 'xacro' xml namespace.
Use the following script to fix incorrect usage:
        find . -iname "*.xacro" | xargs sed -i 's#<\([/]\?\)\(if\|unless\|include\|arg\|property\|macro\|insert_block\)#<\1xacro:\2#g'
when processing file: /home/parkbj/catkin_ws/src/turtlebot/turtlebot_description/robots/kobuki_hexagons_asus_xtion_pro.urdf.xacro

xacro.py is deprecated; please use xacro instead
started roslaunch server http://161.122.112.91:35127/

SUMMARY
========

PARAMETERS
* /cmd_vel_mux/yaml_cfg_file: /home/parkbj/catk...
* /robot_description: <?xml version="1....
* /robot_state_publisher/publish_frequency: 30.0
* /rosdistro: kinetic
* /rosversion: 1.12.14
* /use_sim_time: True

NODES
   /
      cmd_vel_mux (nodelet/nodelet)
      gazebo (gazebo_ros/gzserver)
      mobile_base_nodelet_manager (nodelet/nodelet)
      robot_state_publisher (robot_state_publisher/robot_state_publisher)
      spawn_turtlebot_model (gazebo_ros/spawn_model)

ROS_MASTER_URI=http://localhost:11311

process[gazebo-1]: started with pid [4101]
process[spawn_turtlebot_model-2]: started with pid [4106]
process[mobile_base_nodelet_manager-3]: started with pid [4107]
process[cmd_vel_mux-4]: started with pid [4108]
process[robot_state_publisher-5]: started with pid [4109]
[ INFO] [1537961639.689863296]: Finished loading Gazebo ROS API Plugin.
[ INFO] [1537961639.690056913]: waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
[ INFO] [1537961640.512301039, 0.022000000]: waitForService: Service [/gazebo/set_physics_properties] is now available.
[ INFO] [1537961640.548841526, 0.057000000]: Physics dynamic reconfigure ready.
[ INFO] [1537961641.115425855, 0.348000000]: Camera Plugin: Using the 'robotNamespace' param: '/'
[ INFO] [1537961641.118853132, 0.348000000]: Camera Plugin (ns = /)  <tf_prefix_>, set to ""
[ INFO] [1537961641.192125663, 0.348000000]: Laser Plugin: Using the 'robotNamespace' param: '/'
[ INFO] [1537961641.192238237, 0.348000000]: Starting GazeboRosLaser Plugin (ns = /)
[ INFO] [1537961641.193612622, 0.348000000]: GPU Laser Plugin (ns = /) <tf_prefix_>, set to ""
[ INFO] [1537961641.194959259, 0.348000000]: LoadThread function completed
[ INFO] [1537961641.291780997, 0.348000000]: Starting plugin DiffDrive(ns = //)
[ WARN] [1537961641.291884756, 0.348000000]: DiffDrive(ns = //): missing <rosDebugLevel> default is na
[ INFO] [1537961641.293028751, 0.348000000]: DiffDrive(ns = //): <tf_prefix> = 
[ WARN] [1537961641.293188294, 0.348000000]: DiffDrive(ns = //): missing <publishWheelTF> default is false
[ WARN] [1537961641.293204831, 0.348000000]: DiffDrive(ns = //): missing <publishOdomTF> default is ture
[ WARN] [1537961641.293446885, 0.348000000]: DiffDrive(ns = //): missing <wheelAcceleration> default is 0
[ WARN] [1537961641.293479654, 0.348000000]: DiffDrive(ns = //): missing <wheelTorque> default is 5
[ WARN] [1537961641.293972331, 0.348000000]: DiffDrive(ns = //): missing <odometrySource> default is 1
[ WARN] [1537961641.294292592, 0.348000000]: GazeboRosDiffDrive Plugin (ns = ) missing <publishTf>, defaults to 1
[ INFO] [1537961641.295151763, 0.348000000]: DiffDrive(ns = //): Advertise joint_states
[ INFO] [1537961641.295818023, 0.348000000]: DiffDrive(ns = //): Try to subscribe to cmd_vel
[ INFO] [1537961641.298928159, 0.348000000]: DiffDrive(ns = //): Subscribe to cmd_vel
[ INFO] [1537961641.299555014, 0.348000000]: DiffDrive(ns = //): Advertise odom on odom 
[spawn_turtlebot_model-2] process has finished cleanly
log file: /home/parkbj/.ros/log/043fb95e-c180-11e8-8ab1-7085c22a655c/spawn_turtlebot_model-2*.log

Originally posted by danny p on ROS Answers with karma: 25 on 2018-09-26
Post score: 2

Original comments
Comment by R. Tellez on 2018-10-16:
Remember that if you want to execute the demos locally you have to have the simulations installed in your computer (ROSDS has them installed by default).
Comment by steven1234 on 2019-01-18:
Hi, @danny p. Would like to know if the gym_gazebo in open_ai_gym_construct is actually complete package? Should I use the original gym_gazebo instead? Here is the link: https://github.com/erlerobot/gym-gazebo
Comment by aarontan on 2019-06-11:
hello @danny p , I did all the installation you mentioned in your question. However I am receiving the error message below
resource not found: create_description
ROS path [0]=/opt/ros/kinetic/share/ros
ROS path [1]=/home/user/catkin_ws/src
ROS path [2]=/opt/ros/kinetic/share None
do you know why that is?
Comment by kane_choigo on 2020-02-14:
I'm also trying to using openai_ros and gym. And I wonder whether you did it in python3 env. Would it be ok if I launch it without python3 env?

A:

There are no issues here, all the requested nodes with their parameters are correctly launched (and it's normal that the spawn_turtlebot_model process end once launched in case you were wondering).
"Nothing happen" because you don't launch the Gazebo GUI (ie. gzclient), in your nodes you simply have gzserver.
Look at your main.launch :
  <arg name="paused" value="true"/>
  <arg name="gui" default="false"/>
  <arg name="headless" value="true"/>
  <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons --> 
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro --> 

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(find gym_construct)/worlds/maze_loop_brick.world"/>
  </include>

If you change  <arg name="gui" default="false"/> to  <arg name="gui" default="true"/> everything should be fine.
Or if you don't want to modify the launch file, you can also run :
roslaunch gym_construct main.launch gui:=true
In addition : you have <arg name="paused" value="true"/>, eventhough you don't use the arg its default value is false (if you have to use it and it's set to true Gazebo will be started on a paused state)

Originally posted by Delb with karma: 3907 on 2018-09-26
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by danny p on 2018-09-26:
I appreciate your comment. I got solved that problem right away, after revising some parts of 'start_qlearnig.py' file which were changed for my_turtlebot2_maze example. Do you know if any different learning codes which can be used instantly in this openai_ros pkgs exists, instead of q-learning?
Comment by R. Tellez on 2018-10-16:
The learning algorithm used in the examples of openai_ros tutorials is a very simple Q-learning implementation (only provided as an example). Today we have a free ROS Developers Live Class where we teach how to change the algorithms in a very simple way
Comment by Haresh Miriyala on 2019-04-01:
That worked for me. Thanks. Also, if someone is here for the error message "package [hokuyo] does not have a path", make sure you git checkout to branch 'kinetic' inside the turtlebot folder !

