Q:

robot_localization and gmapping with "no map received"

Hi to all,
I'm using Husky A200 with RTK GPS (/fix), a SICK laser (/scan), a AHRS IMU (/imu/data) and wheel encoders.
I use robot_localization and navsat_transform_node to improve the position of my robot.
The topic /odometry/filtered/global contains the robot's odometry with the GPS information.
Since I would like to build a map and use GPS waypoints for the robot's navigation, I'm trying to use slam_gmapping with this command:
rosrun gmapping slam_gmapping scan:=scan _odom_frame:=odometry/filtered/global

The problem is that in RVIZ, I get the error: "no map received" and so I can only see the path followed by the robot, but no map.
Can you help me to fix this error, please?
I can see the /scan laser point in RVIZ without problems.
This is my bag file (40MB) and this is the launch file I'm using for the robot_localization package:
<!-- Test launch file for two EKF instances and one navsat_transform instance -->

<launch>
 
 <rosparam command="load" file="$(find husky_control)/config/control.yaml" />

  <node name="base_controller_spawner" pkg="controller_manager" type="spawner" args="husky_joint_publisher husky_velocity_controller --shutdown-timeout 3"/>

 <node pkg="rosbag" type="play" name="rosbag_play" output="screen" args="--clock /home/rocco/Desktop/gps/test4.bag -d 3"/>
   
    <node pkg="tf2_ros" type="static_transform_publisher" name="bl_imu" args="0 0 0 0 0 0 base_link base_imu" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="bl_gps" args="0 0 0.4 0 0 0 base_link gps" /> 
    <node pkg="tf2_ros" type="static_transform_publisher" name="bl_laser" args="0 0 0.4 0 0 0 base_link laser" /> 
 
    <!-- Local (odom) instance -->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_local" clear_params="true">
      <param name="frequency" value="10"/>
      <param name="sensor_timeout" value="0.1"/>
      <param name="two_d_mode" value="false"/>

      <param name="map_frame" value="map"/>
      <param name="odom_frame" value="odom"/>
      <param name="base_link_frame" value="base_link"/>
      <param name="world_frame" value="odom"/>

      <param name="transform_time_offset" value="0.0"/>

      <param name="odom0" value="/husky_velocity_controller/odom"/>
      <param name="imu0" value="/imu/data"/>

      <rosparam param="odom0_config">[false, false, false,
                                      false, false, false,
                                      true, true, true,
                                      false, false, true,
                                      false, false, false]</rosparam>

      <rosparam param="imu0_config">[false, false, false,
                                     true,  true,  true,
                                     false, false, false,
                                     true,  true,  true,
                                     true,  true,  true]</rosparam>

      <param name="odom0_differential" value="false"/>
      <param name="imu0_differential" value="false"/>

      <param name="odom0_relative" value="false"/>
      <param name="imu0_relative" value="false"/>

      <param name="imu0_remove_gravitational_acceleration" value="true"/>
      <param name="print_diagnostics" value="true"/>

      <param name="odom0_queue_size" value="10"/>
      <param name="imu0_queue_size" value="10"/>

      <param name="debug"           value="false"/>
      <param name="debug_out_file"  value="debug_ekf_localization.txt"/>

      <remap from="/odometry/filtered" to="/odometry/filtered/local"/>
    </node>

    <!-- Global (map) instance -->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_global" clear_params="true">
      <param name="frequency" value="10"/>
      <param name="sensor_timeout" value="0.1"/>
      <param name="two_d_mode" value="false"/>

      <param name="map_frame" value="map"/>
      <param name="odom_frame" value="odom"/>
      <param name="base_link_frame" value="base_link"/>
      <param name="world_frame" value="map"/>

      <param name="transform_time_offset" value="0.0"/>

      <param name="odom0" value="/husky_velocity_controller/odom"/>
      <param name="odom1" value="/odometry/gps"/>
      <param name="imu0" value="/imu/data"/>

      <rosparam param="odom0_config">[false, false, false,
                                      false, false, false,
                                      true, true, true,
                                      false, false, true,
                                      false, false, false]</rosparam>

      <rosparam param="odom1_config">[true, true, false,
                                      false, false, false,
                                      false, false, false,
                                      false, false, false,
                                      false, false, false]</rosparam>

      <rosparam param="imu0_config">[false, false, false,
                                     true,  true,  true,
                                     false, false, false,
                                     true,  true,  true,
                                     true,  true,  true]</rosparam>

      <param name="odom0_differential" value="false"/>
      <param name="odom1_differential" value="false"/>
      <param name="imu0_differential" value="false"/>

      <param name="odom0_relative" value="false"/>
      <param name="odom1_relative" value="false"/>
      <param name="imu0_relative" value="false"/>

      <param name="imu0_remove_gravitational_acceleration" value="true"/>
      <param name="print_diagnostics" value="true"/>

      <param name="odom0_queue_size" value="10"/>
      <param name="odom1_queue_size" value="10"/>
      <param name="imu0_queue_size" value="10"/>

      <param name="debug"           value="false"/>
      <param name="debug_out_file"  value="debug_ekf_localization.txt"/>

      <remap from="/odometry/filtered" to="/odometry/filtered/global"/>
   </node>

   <!-- navsat_transform -->
   <node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform" respawn="true" output="screen">
      <param name="frequency" value="10"/>
      <param name="delay" value="3"/>
      <param name="magnetic_declination_radians" value="0.0640"/>
      <param name="yaw_offset" value="1.570796327"/>
      <param name="zero_altitude" value="true"/>
      <param name="broadcast_utm_transform" value="true"/>
      <param name="publish_filtered_gps" value="true"/>
      <param name="use_odometry_yaw" value="false"/>
      <param name="wait_for_datum" value="false"/>

      <remap from="/odometry/filtered" to="/odometry/filtered/global"/>
      <remap from="/gps/fix" to="/fix"/>
      <remap from="/imu/data" to="/imu/data"/>
    </node>

 <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server" output="screen"/>

  <node pkg="twist_mux" type="twist_mux" name="twist_mux">
    <rosparam command="load" file="$(find husky_control)/config/twist_mux.yaml" />
    <remap from="cmd_vel_out" to="husky_velocity_controller/cmd_vel"/>
  </node>

 </launch>

Originally posted by Marcus Barnet on ROS Answers with karma: 287 on 2017-06-11
Post score: 0

A:

_odom_frame:=... should not be the topic for the odometry. It is the frame within which to localize. Since your global version of robot_localization has the world frame parameter set to map, set the _odom_frame:=map and you'll have a better chance.
However, you may experience issues using GPS to localize within a map since it is discontinuous. Even RTK, which I know has centimeter-level accuracy, will give issues when it loses a signal due to roofs/tree cover/satellite availability etc. A better approach is to use the odom instance of robot_localization, and use tf to transform your coordinates from a UTM frame to your odom frame.

Originally posted by ufr3c_tjc with karma: 885 on 2017-06-11
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Marcus Barnet on 2017-06-12:
Thank you, I set _odom_frame:=map and now I can see the map. I tried to use rostopic pub /move_base_simple/goal geometry_msgs/PoseStped '{header: {stamp: now, frame_id: "map"}, pose: {position: {x: 15, y: -13, z: 0.0}, orientation: {w: 1.0}}}' to make the robot move in RVIZ, but nothing happens.
Comment by Marcus Barnet on 2017-06-12:
Am I using the move_base in the wrong way? How can I make the robot moves inside the map? i'm giving it the coordinates in odom frames.
Comment by ufr3c_tjc on 2017-06-12:
Are you running this on the actual robot, or in a Gazebo simulation? You'll need to do one of those to see it actually move. Rviz only visualizes what is occurring. You need feedback from the simulation in Gazebo or from the real robot encoders to see it move.
Comment by Marcus Barnet on 2017-06-29:
I'm running this after loading the robot model in Gazebo. If I run commands like rostopic pub /husky/cmd_vel geometry_msgs/Twist -r 100 '[0.5,0,0]' '[0,0,0]', the robot moves, but if I run move_base, nothing happens. Do I need any additional package to make the move_base work?
Comment by Marcus Barnet on 2017-06-29:
Are you able to run move_base on my bag file without problems?

