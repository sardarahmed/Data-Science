Q:

Dynamic TF Publishing Discrepancy Between Foxy and Humble

I have posted an issue on GitHub; however, no one responds to it. So I start to wonder if it is my own mistake.
It begins from one day when I transform a piece of ROS foxy code into the Humble environment.

rclcpp::node_interfaces::NodeTopicsInterface::SharedPtr node_topics_handle = this->get_node_topics_interface();

std::unique_ptr*<tf2_ros::TransformBroadcaster>* tf_broadcaster_ = nullptr;

tf_broadcaster_ = std::make_unique*<tf2_ros::TransformBroadcaster>*(node_topics_handle);

It will give you an error.
"passed non-default qos overriding options without providing a parameters interface."

You may wonder why you want to write it like this.
Why not use 'this' directly. It is because by using node_topics_handle, I can isolate different functions in different classes without passing the shared printer node everywhere.
Please, tell me how to publish dynamic TF with node_topics_handle.
Thanks.
Operating System:
Ubuntu 22.04.2 LTS
Installation type:
binaries
Version or commit hash:
ROS humble
DDS implementation:
Fast-RTPS
Client library (if applicable):
rclcpp

Originally posted by BlueBird on ROS Answers with karma: 20 on 2023-04-08
Post score: 0

A:

I got an answer from the Url.
It should be written as

tf_broadcaster_ = std::make_unique<tf2_ros::TransformBroadcaster>(node_topics_handle, tf2_ros::DynamicBroadcasterQoS(), rclcpp::PublisherOptions());

Any additions or suggestions are very welcome.
Thanks, anyway.

Originally posted by BlueBird with karma: 20 on 2023-04-14
This answer was ACCEPTED on the original site
Post score: 0

