Q:

Stage/Player integration with ROS

Hello all,
I've been working on Stage(3.2.2)/Player(3.0.2) for a while. I need to integrate it with ROS in order to get to next step in my project.
So, in Player/Stage you have a .cfg and a .world file. You run the .cfg and then run an executable on the background in order to control your robot.
What I want is to publish Player as a ROS(Groovy preffered) node (I guess it is essentially the same thing as connecting to the drivers that are defined in .cfg file using ROS) rather than connecting to Stage directly through ROS. I think the hierarchy between them should be like this: ROS->Player->Exe->Stage.
The http://wiki.ros.org/player page doesn't seem to have anything useful for a beginner like me. An example configuration would be great for example.
Would appreciate any help. Thanks.
Update: I've found the following tutorial->brice-rebsamen.blogspot.com.tr/2011/05/first-exercise-with-ros-node-to.html
So, as far as i can understand the whole player package becomes a node to ROS and then i can subcribe to the proxies i defined in my code through it.

Originally posted by SpiderRico on ROS Answers with karma: 35 on 2014-01-31
Post score: 0

A:

I think that most who use ROS and Stage together make use of the stage_ros package. This package encapsulates Stage (which is still a standalone application) and allows ROS messages to be subscribed/published to. ROS thus replaces Player's role. So you write a ROS node that subscribes/publishes to the topics (like /cmd_vel and /image) that Stage exposes.

Originally posted by SL Remy with karma: 2022 on 2014-04-30
This answer was ACCEPTED on the original site
Post score: 1

