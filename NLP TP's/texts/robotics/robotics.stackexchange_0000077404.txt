Q:

Nodelet Publisher

 virtual void onInit()
{
    ros::NodeHandle & private_nh = getPrivateNodeHandle();
    pub = private_nh.advertise<nodelet_test::buff>("chatter2", 10);
    nodelet_test::buff buffer;
    buffer.buffer_data.push_back(20);
    while(ros::ok())
    {
        pub.publish(buffer);
    }

}

I have the example code above for nodelet publisher only. Since I do not use callbacks (no subscriber ), is the way its done ? adding while loop inside onInit () ?

Originally posted by ROSfc on ROS Answers with karma: 54 on 2016-11-18
Post score: 0

A:

Reading the documentation of onInit it should not block. Basically it prevent the surrounding nodelet manager to continue initializing the other nodelets.
Instead you should create a timer in the onInit function and then publish your message in the triggered callback of the timer.

Originally posted by Dirk Thomas with karma: 16276 on 2016-11-18
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by ROSfc on 2016-11-20:
I would require 36Hz frequency of published messages, do you advice using a timer ? or do you see any problems arising ?
Comment by ROSfc on 2016-11-21:
As you suggested I used createTimer and in that i could specify the frequency using ros::Duration

