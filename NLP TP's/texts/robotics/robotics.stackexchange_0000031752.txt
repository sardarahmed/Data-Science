Q:

boost symbols not found

Hit the following problem during install on Mac OSX 10.6:
$ rosinstall ~/ros "http://packages.ros.org/cgi-bin/gen_rosinstall.py?rosdistro=diamondback&variant=desktop-full&overlay=no"
...lots of output...
[ rosmake ] Last 40 linessrecord: 41.1 sec ] [ test_roswtf: 3.5 sec ]                              [ 2 Active 60/68 Complete ]
{-------------------------------------------------------------------------------
  -- Check for working C compiler: /usr/bin/gcc
  -- Check for working C compiler: /usr/bin/gcc -- works
  -- Detecting C compiler ABI info
  -- Detecting C compiler ABI info - done
  -- Checking whether CXX compiler has -isysroot
  -- Checking whether CXX compiler has -isysroot - yes
  -- Checking whether CXX compiler supports OSX deployment target flag
  -- Checking whether CXX compiler supports OSX deployment target flag - yes
  -- Check for working CXX compiler: /usr/bin/c++
  -- Check for working CXX compiler: /usr/bin/c++ -- works
  -- Detecting CXX compiler ABI info
  -- Detecting CXX compiler ABI info - done
  [rosbuild] Building package rosrecord
  [rosbuild] Cached build flags older than manifests; calling rospack to get flags
  [rosbuild] Including /Users/rhc/ros/ros_comm/clients/roslisp/cmake/roslisp.cmake
  [rosbuild] Including /Users/rhc/ros/ros_comm/clients/rospy/cmake/rospy.cmake
  [rosbuild] Including /Users/rhc/ros/ros_comm/clients/cpp/roscpp/cmake/roscpp.cmake
  -- Configuring done
  -- Generating done
  -- Build files have been written to: /Users/rhc/ros/ros_comm/tools/rosrecord/build
  cd build && make -l2
  Scanning dependencies of target rospack_genmsg_libexe
  [  0%] Built target rospack_genmsg_libexe
  Scanning dependencies of target rosbuild_precompile
  [  0%] Built target rosbuild_precompile
  Scanning dependencies of target rosplay
  [ 25%] Building CXX object CMakeFiles/rosplay.dir/src/rosplay/rosplay.o
  [ 50%] Building CXX object CMakeFiles/rosplay.dir/src/rosplay/time_publisher.o
  Linking CXX executable ../bin/rosplay

  Undefined symbols:
    "boost::filesystem3::path::extension() const", referenced from:
        ros::record::Player::open(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, ros::Time, bool)in rosplay.o
    "boost::filesystem3::path::wchar_t_codecvt_facet()", referenced from:
        ros::record::Player::open(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, ros::Time, bool)in rosplay.o
  ld: symbol(s) not found
  collect2: ld returned 1 exit status
  make[3]: *** [../bin/rosplay] Error 1
  make[2]: *** [CMakeFiles/rosplay.dir/all] Error 2
  make[1]: *** [all] Error 2
-------------------------------------------------------------------------------}
[ rosmake ] Output from build of package rosrecord written to:
[ rosmake ]    /Users/rhc/.ros/rosmake/rosmake_output-20110523-074829/rosrecord/build_output.log
[rosmake-0] Finished <<< rosrecord [FAIL] [ 41.13 seconds ]                                                                   
[ rosmake ] Halting due to failure in package rosrecord. 
[ rosmake ] Waiting for other threads to complete.                  
[rosmake-1] Finished <<< test_roswtf [PASS] [ 6.72 seconds ]                                                                  
[ rosmake ] Results:                                                                                                          
[ rosmake ] Built 62 packages with 1 failures.                                                                                
[ rosmake ] Summary output to directory                                                                                       
[ rosmake ] /Users/rhc/.ros/rosmake/rosmake_output-20110523-074829                                                            
Traceback (most recent call last):
  File "/opt/local/bin/rosinstall", line 5, in <module>
    pkg_resources.run_script('rosinstall==0.5.16', 'rosinstall')
  File "/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/pkg_resources.py", line 467, in run_script
    self.require(requires)[0].run_script(script_name, ns)
  File "/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/pkg_resources.py", line 1200, in run_script
    execfile(script_filename, namespace, namespace)
  File "/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/rosinstall-0.5.16-py2.6.egg/EGG-INFO/scripts/rosinstall", line 556, in <module>
    sys.exit(not rosinstall_main(sys.argv))
  File "/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/rosinstall-0.5.16-py2.6.egg/EGG-INFO/scripts/rosinstall", line 547, in rosinstall_main
    subprocess.check_call("source %s && rosmake ros%s --rosdep-install%s" % (os.path.join(options.path, 'setup.sh'), ros_comm_insert, rosdep_yes_insert), shell=True, executable='/bin/bash')
  File "/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/subprocess.py", line 488, in check_call
    raise CalledProcessError(retcode, cmd)
subprocess.CalledProcessError: Command 'source /Users/rhc/ros/setup.sh && rosmake ros ros_comm --rosdep-install' returned non-zero exit status 1

I note that boost was successfully downloaded and installed by the ros install script, but wonder if perhaps the module isn't being found?

Originally posted by ralph on ROS Answers with karma: 16 on 2011-05-23
Post score: 0

A:

This is an issue with the changeover from boost::filesystem v2 to v3; a wide variety of stuff breaks. Find the file that has #include <boost/filesystem.hpp> and add #define BOOST_FILESYSTEM_VERSION 2 immediately beforehand.

Originally posted by Mac with karma: 4119 on 2011-05-23
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Mac on 2011-05-23:
Vote me up? Accept the answer? :-D
Comment by ralph on 2011-05-23:
Hooray! That got it! Found ~10 files that needed changing, but it ran clean afterwards. Thanks!!

