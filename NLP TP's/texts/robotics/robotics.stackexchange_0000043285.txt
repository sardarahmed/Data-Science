Q:

Turtlebot simulation vs. pr2_controller_manager

Hi all,
we have modified version of Turtlebot and right now I'm working on modifications to it's simulator. There is arm with dynamixel servos. I've added arm's URDF to robot description and I've also added controller_manager:
<gazebo>      
  <controller:gazebo_ros_controller_manager name="gazebo_ros_controller_manager" plugin="libgazebo_ros_controller_manager.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>1000.0</updateRate>
          <robotNamespace>dynamixel</robotNamespace>
  </controller:gazebo_ros_controller_manager>
</gazebo>

But when starting simulation, there are errors like this (produced by libgazebo_ros_create.so):
Gazebo ROS Create plugin. NaN in d1. Step time: 0.03. WD: 0.07. Velocity: -nan
Gazebo ROS Create plugin. NaN in d2. Step time: 0.03. WD: 0.07. Velocity: -nan

and also the model of arm is not visible (just base of arm). Errors are there even if no one controller is spawned. If I set alwaysOn to false for gazebo_ros_controller_manager, the libgazebo_ros_create.so stop complaining and arm's model is normally visible.
Any ideas? Thanks.
Update
I tried to use diffdrive_plugin instead of gazebo_ros_create and it's better - now controllers can be started without problems (and it's possible to obtain data on xyz_controller/state topics) but when the robot is spawned into Gazebo, arm disappears...

Originally posted by ZdenekM on ROS Answers with karma: 704 on 2012-08-16
Post score: 0

Original comments
Comment by ZdenekM on 2012-08-16:
Here you can find my urdf: http://mysharegadget.com/994726533 (updated)
Comment by brkk on 2013-04-25:
Hi ZdenekM,I am trying to create urdf of the robotic arm which driven by dynamizel servos so what's the PID gain that you have used.Your urdf file is removed on the link above.
Comment by ZdenekM on 2013-04-26:
Hi. URDF is available here: https://github.com/ZdenekM/turtlebut/tree/master/tb_description/. I used it for Gazebo simulation in Electric but now I'm migrating packages to Groovy and simulation is still something what must be done.

A:

The <safety_controller> might be the culprit.  When <gazebo_ros_controller_manager> is on, the safety controllers are active even if no custom controllers are loaded.  You have to tune k_position and k_velocity to keep the simulation stable.  As a simple test, setting k_position and k_velocity to zero should stabilize the simulation if they are the culprit.

Originally posted by hsu with karma: 5780 on 2012-08-16
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by ZdenekM on 2012-08-16:
Thanks for hint! I tried it but simulation is still unstable. Now I can see robot with arm for short moment and then it fly away :-) With steptime 0.0001 and quickStepIters 1000 simulation works (I can command joints) but it's too slow.
Comment by ZdenekM on 2012-08-17:
It seems that problem was solved by tuning PID gains of controllers. They were too high.

