Q:

Robot localization /odometry/filtered is not displayed

Version: Raspberry Pi 4, Lubuntu20.04, ROS1-noetic
I am thinking of estimating the position using robot localization from the IMU.
However, I am having trouble because the Topic for /odometry/filtered is empty.
/imu/data_raw
header: 
  seq: 5143
  stamp: 
    secs: 1698400774
    nsecs: 353708923
  frame_id: "imu_link"
orientation: 
  x: 0.0
  y: 0.0
  z: 0.0
  w: 0.0
orientation_covariance: [-1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
angular_velocity: 
  x: 0.0
  y: 0.010641999542713165
  z: 0.0021279999054968357
angular_velocity_covariance: [1.1280564100000001e-06, 0.0, 0.0, 0.0, 1.1280564100000001e-06, 0.0, 0.0, 0.0, 1.1280564100000001e-06]
linear_acceleration: 
  x: 0.8523352064937353
  y: 1.101335832411796
  z: -10.1753605627954
linear_acceleration_covariance: [0.0005356910249999999, 0.0, 0.0, 0.0, 0.0005356910249999999, 0.0, 0.0, 0.0, 0.0005356910249999999]

/odometry/filtered
ubuntu@ubiquityrobot:~$ rostopic echo /odometory/filtered
WARNING: topic [/odometory/filtered] does not appear to be published yet

ekf_template.launch
<launch>
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se" clear_params="true">
    <rosparam command="load" file="$(find robot_localization)/params/imu_ekf_template.yaml" />

  </node>
</launch>

imu_ekf_template.yaml
frequency: 10 # 適切な更新頻度（通常はセンサデータの発行頻度）に設定してください。

sensor_timeout: 0.5 # センサデータのタイムアウト時間。

two_d_mode: false # 3D位置推定を行う場合は false に設定してください。

transform_time_offset: 0.5

transform_timeout: 0.5

print_diagnostics: true

debug: false

debug_out_file: /path/to/debug/file.txt # オプション: デバッグ情報をファイルに出力する場合のファイルのパス。

publish_tf: true # tfを発行するかどうか。

publish_acceleration: true

map_frame: map # 通常は map を使用。

odom_frame: odom # 通常は odom を使用。

base_link_frame: base_link # ロボットのベースリンクのフレーム名。

world_frame: odom # 通常は odom を使用。

imu0: /imu/data_raw
imu0_config: [false, false, false,  # x, y, z 位置
             true,  true,  true,   # x, y, z 回転速度
             true,  true,  true,  # x, y, z 加速度
             false, false, false,  # x, y, z 速度
             false,  false, false]  # ジャイロバイアス
imu0_queue_size: 10
imu0_nodelay: false
imu0_differential: false
imu0_relative: true
imu0_pose_rejection_threshold: 0.8                 # 適切な値に設定してください。
imu0_twist_rejection_threshold: 0.8                # 適切な値に設定してください。
imu0_linear_acceleration_rejection_threshold: 0.8 # 適切な値に設定してください。
imu0_remove_gravitational_acceleration: true

ekf_localization_node.cpp
#include "robot_localization/ros_filter_types.h"

#include <cstdlib>

#include <ros/ros.h>

int main(int argc, char **argv)
{
  ros::init(argc, argv, "ekf_navigation_node");

  ros::NodeHandle nh;
  ros::NodeHandle nh_priv("~");

  RobotLocalization::RosEkf ekf(nh, nh_priv);
  ekf.initialize();
  ros::spin();

  return EXIT_SUCCESS;
}

tf trees

I don't have much knowledge about ROS and robot localization, so I would appreciate any information you can give me.

A:

odom_frame is set to odom even though there is no odom.
The same goes for map. I think that needs to be fixed.
map_frame: map # 通常は map を使用。
odom_frame: odom # 通常は odom を使用。
base_link_frame: base_link # ロボットのベースリンクのフレーム名。
world_frame: odom # 通常は odom を使用。

I think the above might change something if you do the following
odom_frame: imu_link
base_link_frame: base_link # ロボットのベースリンクのフレーム名。
world_frame: imu_link # 通常は odom を使用。

In the first place, robot_localization (Kalman filter) with a single input may not have been considered.

