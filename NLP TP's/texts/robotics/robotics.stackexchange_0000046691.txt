Q:

Turtlebot Odometry Calibration procedure

Hi all,
I recognized that the odometry of my turtlebot didn't work correctly. Therefore I rerun the calibration procedure Calibration Tutorial.
When I calibrated the first time, I considered the calibration successfull when the robot stopped again facing the wall perpendicular.
Then I read the Tutorial again:

If the TurtleBot does not successfully
return to facing the wall before
executing the next rotation the data
will be incorrect. This can be caused
by too big of an error in the existing
parameters. If it under rotates,
increase the odom parameter and retry.
If it over rotates, lower the
odom_parameter and retry.

When I got the turtlebot to face the wall correctly during the procedure, it wasn't at the end and vice versa. (The factor proposed by the calibration would work opposite the statement of the tutorial - Overrotating and a factor greater 1)
Therefore my question is: Is the stop at the end of the procedure also important? Am I doing something wrong?
Another probably important information: I changed the position of the kinect on the turtlebot from the back to the front (Because I also wanted to mount an arm on the middle platform). For that I changed the urdf file as well as the turtlebot_calib_cam_x value under turtlebot_description/turtlebot_calibration.xacro.

Originally posted by Fabian Saccilotto on ROS Answers with karma: 51 on 2012-12-19
Post score: 0

Original comments
Comment by Ryan on 2012-12-19:
Did you set gyro_measurement_range before performing the calibration?
Comment by Fabian Saccilotto on 2012-12-20:
Yes, I set it to 250 according to clearpath.

A:

I don't know how this works internally, but here is my guess: It tracks the wall, performs what it thinks it 360 deg rotation and then retracks the wall to compute the angle exactly.
So if it is perpendicular it might have taken another wall for the start wall. This would mean that the calibration is way off and thus it is important to stop at the wall.

Originally posted by dornhege with karma: 31395 on 2012-12-19
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by weiin on 2012-12-19:
Just want to add that because the last rotation is at a high speed, the robot will usually NOT end with facing the wall. So far it seems as long as the low speeds get relatively good 360 rotations, gmapping is able to correct any rotational errors at the next stage

