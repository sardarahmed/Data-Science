Q:

*ActionServer cancel implementation

I'm confused about how to implement cancelling in action servers. I'm under the impression that I'll need an ActionServer rather than a SimpleActionServer, but I'm hoping I'm wrong.
The actionlib detailed description page says that cancel request is a client action rather than a server action.  It also shows a cancel request as the only way to transition to the preempting or recalling states.  Yet the SimpleActionServer can recall goals upon receipt of a new goal.  Is it just interpreting new goals as cancel requests and cancelling its own goals, or is a SimpleActionClient also sending a cancel message along with a new goal?  Must I use a SimpleActionServer with a SimpleActionClient or could I have a specialized regular ActionServer with a SimpleActionClient?
Here's why I'm asking: I'm designing an action server. The client must be able to cancel active goals. However, no newly received goal should replace an active goal; instead the server should reject them.  I'll need a special callback for cancelling goals where I stop motors and whatnot.
Thanks for your help.

Originally posted by thebyohazard on ROS Answers with karma: 3562 on 2013-03-12
Post score: 2

A:

The SimpleActionServer is a wrapper on top of the ActionServer.  Thus, the ActionServer is compatible with the SimpleActionClient.  In your case, it sounds like the goal handling policy implemented in the SimpleActionServer doesn't suit your needs.  Thus, it's totally reasonable to implement a derivative of the SimpleActionServer, or simply use the ActionServer directly.
Unfortunately, you cannot reject goals from client code while using the SimpleActionServer.  This was a design decision to help simplify the API.  However, internally, the SimpleActionServer can cancel a goal (as you noticed).  If there is a pending goal and another goal is received, the SimpleActionServer cancels the original pending goal (See L271 of simple_action_server_imp.h).  The SimpleActionClient is not sending a cancel in this case. Instead, the SimpleActionClient immediately forgets about the old goal, and tracks the new goal internally.
My suggestion would be to switch to the ActionServer.  This works best when your application is already callback based, and it will give you the flexibility that you want.  With the ActionServer, you can simply reject the goal if there's already another goal in project.

Originally posted by vpradeep with karma: 760 on 2013-03-12
This answer was ACCEPTED on the original site
Post score: 3

