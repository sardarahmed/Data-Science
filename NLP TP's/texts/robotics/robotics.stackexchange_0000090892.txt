Q:

Differences between ros::Duration::sleep and std::this_thread::sleep_for?

My team is developing in modern C++ and this is my first major project using ROS, but not my first major project using modern C++. I generally prefer using standard library functions to third party library functions, and so I generally use std::this_thread::sleep_for in order to sleep the current thread context. This is different from much of the existing codebase which uses ROS's ros::Duration::sleep and similar methods. I've looked through the source a little bit, but can't seem to find the actual implementation of ROS's sleep method.
Is there a difference between the implementations of these two methods I should be aware of? If not, have many developers stopped using ros::Duration in favor of standard functions?

Originally posted by ssnover on ROS Answers with karma: 31 on 2019-03-13
Post score: 1

Original comments
Comment by VictorLamoine on 2019-03-13:
Implementation is here: https://github.com/ros/roscpp_core/blob/8b9365756d3757441defd0a90992f3c5e426fb8f/rostime/src/time.cpp#L447
Comment by jayess on 2019-03-13:
One thing to keep in mind IIRC is that ROS's Time and Duration classes and associated methods take into account simulated time if you're running in a sim or using a bag file which standard library functions won't take into account
Comment by knxa on 2019-03-14:
@jayess: I think your comment is the answer, and I suggest reposting it as an answer
Comment by gvdhoorn on 2019-03-17:
@VictorLamoine: +1 for the code reference, but please use permalinks. Otherwise future readers could be directed to completely unrelated lines due to code refactoring, addition, etc.
I've updated the link to be a permalink.

A:

If I recall correctly, ROS's Time and Duration classes and associated methods take into account simulated time if you're running in a sim or using a bag file, This is something that the standard library functions won't take into account. I can't find anything official stating this, but I've seen it around this site that it's encouraged to use ros::Duration::sleep and similar methods in favor of the standard functions.
Now, maybe you don't care about simulated time or bag files right now, but if you end up caring about them later you may have to go back and do significant rewrites which is no fun.

Originally posted by jayess with karma: 6155 on 2019-03-14
This answer was ACCEPTED on the original site
Post score: 2

