Q:

Using correct solve_type when running code

This question is related to one I posted earlier: http://answers.ros.org/question/265135/moveit-using-solve-type-speed-instead-of-distance/. MoveIt! currently launches correctly with solve_type: Distance, which is the solve type I want. However, when I run a Python script to issue move commands, it still uses solve_type: Speed:
[ INFO] [1499261352.380466647]: Looking in private handle: /move_group_commander_wrappers_1499261351880510562 for param name: manipulator/position_only_ik
[ INFO] [1499261352.381577584]: Looking in private handle: /move_group_commander_wrappers_1499261351880510562 for param name: manipulator/solve_type
[ INFO] [1499261352.382617524]: Using solve type Speed

The code I use to set up my node comes from the tutorial: http://docs.ros.org/hydro/api/pr2_moveit_tutorials/html/planning/scripts/doc/move_group_python_interface_tutorial.html.
How would I guarantee the solve_type used when running my code is the type I want? The first idea that comes to mind is changing where it looks for the parameter manipulator/solve_type, but I'm not sure how to do that.

Originally posted by cvancleef on ROS Answers with karma: 24 on 2017-07-05
Post score: 0

A:

Finally fixed this problem by editing the file roscpp_initializer.cpp (catkin_ws/src/moveit/moveit_ros/planning_interface/py_bindings_tools/src) to avoid generating a number at the end of the node name so that I can reference it in my launch file (thanks to gvdhoorn for pointing me in the right direction).
I changed
ros::init(fake_argc, fake_argv, ROScppNodeName(),
ros::init_options::AnonymousName | ros::init_options::NoSigintHandler);

to
ros::init(fake_argc, fake_argv, ROScppNodeName(), ros::init_options::NoSigintHandler);

Then I went to my move_group.launch file and added the following
  <group ns="move_group_commander_wrappers">
    <rosparam command="load" file="$(find fanuc_lrmate200id_moveit_config)/config/kinematics.yaml"/>
  </group>

After running catkin_make, my code now outputs that it is using the correct solve_type

Originally posted by cvancleef with karma: 24 on 2017-07-10
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by gvdhoorn on 2017-07-11:
I appreciate you marking my answer as the answer, but I feel in this case that you have actually solved it yourself. The only thing I did was provide you with some guidance.
I've marked your answer as the correct one.
Comment by gvdhoorn on 2017-07-11:
Having said that: this should really not have required you editing the sources of the Python wrapper for the MoveIt commander.
It would perhaps be nice if you could report this as an issue on the MoveIt issue tracker, and perhaps also hint at what you did to work around this.
Comment by cvancleef on 2017-07-11:
Ok, i'll make an issue. Also I couldn't select myself as the answer due to my low score, so I just went with yours. Ty for fixing it

