Q:

tf broadcaster every frame?

I have a node that reads data from my robot, so I have the node also broadcast tf frames. Now my robot has multiple joints and thus frames. Should I declare a separate tf::TransformBroadcaster in my code for each frame or just reuse one tf::TransformBroadcaster. If both methods work, which one is the better programming practice?
Example
tf::TransformBroadcaster frame1__broadcaster;
tf::TransformBroadcaster frame2__broadcaster;
tf::TransformBroadcaster frame3__broadcaster;
...
frame1_broadcaster.sendTransform(tf::StampedTransform(transform, current_time, "base_link", "frame1"));
frame2_broadcaster.sendTransform(tf::StampedTransform(transform, current_time, "base_link", "frame2"));
frame3_broadcaster.sendTransform(tf::StampedTransform(transform, current_time, "base_link", "frame3"));

Or can I just reuse the same tf::TransformBroadcaster to publish transformations for multiple frames like this
tf::TransformBroadcaster frame__broadcaster;
...
frame_broadcaster.sendTransform(tf::StampedTransform(transform, current_time, "base_link", "frame1"));
frame_broadcaster.sendTransform(tf::StampedTransform(transform, current_time, "base_link", "frame2"));
frame_broadcaster.sendTransform(tf::StampedTransform(transform, current_time, "base_link", "frame3"));

Originally posted by uwleahcim on ROS Answers with karma: 101 on 2016-06-23
Post score: 0

A:

It is very common to use the second setup, and that's what I would recommend. However, the first should work just fine. Presumably there is a small performance hit for running the constructor for each broadcaster, and slightly increased memory usage.
As another note, if you are trying to broadcast frames at joints of robots, you should likely be building a URDF and sending joint states. Then the robot_state_publisher can be used to automatically send the tf information.

Originally posted by jarvisschultz with karma: 9031 on 2016-06-23
This answer was ACCEPTED on the original site
Post score: 0

