Q:

utm_odometry_node fails to build

On a fresh checkout of  gps_common , my utm_odometry_node fails to build, citing the error:

Linking CXX executable ../bin/utm_odometry_node
CMakeFiles/utm_odometry_node.dir/src/utm_odometry_node.o: In function `ros::serialization::Stream::advance(unsigned int)':
/opt/ros/diamondback/ros/core/roslib/include/ros/serialization.h:675: undefined reference to `ros::serialization::throwStreamOverrun()'
/opt/ros/diamondback/ros/core/roslib/include/ros/serialization.h:675: undefined reference to `ros::serialization::throwStreamOverrun()'
/opt/ros/diamondback/ros/core/roslib/include/ros/serialization.h:675: undefined reference to `ros::serialization::throwStreamOverrun()'
/opt/ros/diamondback/ros/core/roslib/include/ros/serialization.h:675: undefined reference to `ros::serialization::throwStreamOverrun()'
/opt/ros/diamondback/ros/core/roslib/include/ros/serialization.h:675: undefined reference to `ros::serialization::throwStreamOverrun()'
CMakeFiles/utm_odometry_node.dir/src/utm_odometry_node.o:/opt/ros/diamondback/ros/core/roslib/include/ros/serialization.h:675: more undefined references to `ros::serialization::throwStreamOverrun()' follow
collect2: ld returned 1 exit status

The issue seems to be that throwStreamOverrun() alone is not defined in serialization.h; it's defined in serialization.cpp. I'm running ROS diamondback on Lucid.
Is there a simple workaround?

Originally posted by PKG on ROS Answers with karma: 365 on 2011-08-22
Post score: 1

A:

There was an unmet dependency of roscpp_serialization in this package.

Originally posted by PKG with karma: 365 on 2011-08-27
This answer was ACCEPTED on the original site
Post score: 0

