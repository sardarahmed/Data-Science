Q:

Combining laser_scan_matcher with gmapping

Hi,
I'm having hard time trying to set up a SLAM system with a laser scanner using gmapping. I installed laser_drivers, scan_tools and slam_gmapping stacks. I'm having no problems with laser_scan_matcher. I'm using the following launchfile for laser_scan_matcher and hokuyo_node:
Deleted to avoid confusion, look at Ivan's answer below instead
So so far I've got:

a hokuyo_node publishing scans on a /scan topic
a laser_scan_matcher publishing odometry tf on /base_link tf
a tf tree set up as follows: laser -> base_link -> world (I don't actually know what the laser tf is here for, but it's been there in an example, so it stays for now)

What should my call to gmapping look like for the connection to laser_scan_matcher to work? Of course I tried a lot but none of the calls / launchfiles worked so I think it's best to ask an open question here first.

Originally posted by tom on ROS Answers with karma: 1079 on 2011-08-15
Post score: 1

A:

gmapping needs odometry as /odom -> /base_link.
Setting the ~fixed_frame parameter from world to odom in the laser_scan_matcher should provide that. In this way the laser_scan_matcher should provide fake odometry by scanmatching.
Alternately you can set the ~odom_frame parameter in gmapping to world (only do one of these).
If you run gmapping now it should work.
The base_link -> laser transform gives the position of the laser relative to your robot. As you are passing 0 0 0, your are saying its in the center of the robot. You should adjust that to the real position of the laser.

Originally posted by dornhege with karma: 31395 on 2011-08-16
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by tom on 2011-08-16:
Right, edited my question to avoid confusion. Thank you.
Comment by dornhege on 2011-08-16:
To set the odom_frame in gmapping, the cmd line should be _odom_frame:=world (note the leading _) as it sets a private parameter (noted ~... in the docs). You can leave the scan:=scan remapping as it changes nothing.
Comment by tom on 2011-08-16:
I think a tutorial about using gmapping with laser_scan_matcher would be a big help to many here, so if anyone could come up with one, it would be great.
Comment by tom on 2011-08-16:
Setting ~fixed_frame to odom and running gmapping with: rosrun gmapping slam_gmapping scan:=scan helped, thanks. I also tried running: rosrun gmapping slam_gmapping scan:=scan odom_frame:=world, but this didn't work because of missing transforms between world, base_link, laser and map.

