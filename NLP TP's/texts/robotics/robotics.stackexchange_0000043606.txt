Q:

problem in building package 3d_navigation

Hi,
I am using ros-diamondback with ubuntu version 10.10.
The package '3d_navigation' has dependency on stack 'pr2_mechanism'. While trying to built this stack, it needs 'urdf_interface' from stack 'robot_model'. There is no 'urdf_interface' available in that stack. Also, stack 'robot_model' is already built along with the installation of ros-diamondback without 'urdf_interface'.
Do anybody have any suggestions about this issue?
Thanks in advance for the reply.
After solving this issue from the answer below and I tried to build the stack again.
While doing so it results error in the file 'collisionmodel.cpp' from package 'octomap_collision_check'. The errors are:
"  /home/ros-diamondback/ros_workspace/3d_navigation/octomap_collision_check/src/collision_model.cpp: In member function ‘void octomap::CollisionModel::setRoot(octomap::OctomapObject*)’:
/home/ros-diamondback/ros_workspace/3d_navigation/octomap_collision_check/src/collision_model.cpp:53: error: ‘class planning_environment::CollisionModels’ has no member named ‘setCollisionMap’
/home/ros-diamondback/ros_workspace/3d_navigation/octomap_collision_check/src/collision_model.cpp: In member function ‘void octomap::CollisionModel::updateVis()’:
/home/ros-diamondback/ros_workspace/3d_navigation/octomap_collision_check/src/collision_model.cpp:80: error: ‘class planning_environment::CollisionModels’ has no member named ‘addStaticObject’
/home/ros-diamondback/ros_workspace/3d_navigation/octomap_collision_check/src/collision_model.cpp:84: error: ‘class planning_models::KinematicState’ has no member named ‘getRootTransform’
/home/ros-diamondback/ros_workspace/3d_navigation/octomap_collision_check/src/collision_model.cpp:91: error: ‘class planning_environment::CollisionModels’ has no member named ‘isKinematicStateInCollision’
/home/ros-diamondback/ros_workspace/3d_navigation/octomap_collision_check/src/collision_model.cpp:99: error: ‘class planning_environment::CollisionModels’ has no member named ‘getAllCollisionPointMarkers’
/home/ros-diamondback/ros_workspace/3d_navigation/octomap_collision_check/src/collision_model.cpp:91: warning: unused variable ‘coll’
/home/ros-diamondback/ros_workspace/3d_navigation/octomap_collision_check/src/collision_model.cpp: In member function ‘void octomap::CollisionModel::publishMarkerVis(const octomap::OctomapObject&, unsigned int, ros::Publisher)’:
/home/ros-diamondback/ros_workspace/3d_navigation/octomap_collision_check/src/collision_model.cpp:119: error: ‘class planning_environment::CollisionModels’ has no member named ‘getWorldFrameId’
/home/ros-diamondback/ros_workspace/3d_navigation/octomap_collision_check/src/collision_model.cpp: In member function ‘void octomap::CollisionModel::publishPointcloudVis(const octomap::OctomapObject&, unsigned int, ros::Publisher)’:
/home/ros-diamondback/ros_workspace/3d_navigation/octomap_collision_check/src/collision_model.cpp:161: error: ‘class planning_environment::CollisionModels’ has no member named ‘getWorldFrameId’
/home/ros-diamondback/ros_workspace/3d_navigation/octomap_collision_check/src/collision_model.cpp: In member function ‘void octomap::CollisionModel::publishRobotStampedTransforms()’:
/home/ros-diamondback/ros_workspace/3d_navigation/octomap_collision_check/src/collision_model.cpp:170: error: ‘class planning_environment::CollisionModels’ has no member named ‘getSceneTransformMap’
/home/ros-diamondback/ros_workspace/3d_navigation/octomap_collision_check/src/collision_model.cpp:181: error: ‘class planning_environment::CollisionModels’ has no member named ‘getWorldFrameId’   "

Originally posted by Sudhan on ROS Answers with karma: 171 on 2012-08-27
Post score: 0

A:

Why do you need to compile from source at all? Why not simply run "sudo apt-get install ros-diamondback-pr2-mechanism"? If you follow the 3d_navigation instructions you should already have that package installed.
If you checked out pr2_mechanism from source, did you get the correct branch according to http://www.ros.org/wiki/pr2_mechanism/Releases? That should be pr2_mechanism-1.4.4.
When you don't check out the right version it will be newer than your installed packages and depend on versions that you don't have installed (or can't even install). This is likely the case with urdf_interface that is only available since electric.

Originally posted by AHornung with karma: 5904 on 2012-08-27
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Sudhan on 2012-08-28:
After installing all dependencies and I tried to build the stack again and got errors. For errors, refer to the above question (updated or edited).
Comment by AHornung on 2012-08-28:
You are using the wrong version of planning_environment / CollisionModel. Please exactly follow the instructions on http://www.ros.org/wiki/3d_navigation
Comment by AHornung on 2012-08-28:
Particularly the overlay of motion_planning_common needs to be in your ROS_PACKAGE_PATH / ros workspace. You seem to be using the wrong version.
Comment by AHornung on 2012-08-28:
As an alternative, you can use the code from the "Sushi workshop" to get everything with the newer versions in electric: https://kforge.ros.org/Sushi/trac
Comment by Sudhan on 2012-08-28:
I installed motion_planning_commons, $ sudo apt-get install ros-diamondback-motion-planning-common. So, I think its new version of motion_planning_common and it lies in ROS_PACKAGE_PATH.
Comment by AHornung on 2012-08-28:
You do NOT need motion_planning_common as debian package but the newer version from the overlayed source checkout, which you then need to compile yourself as it is stated in the instructions.
Comment by Sudhan on 2012-08-28:
Its working now. thank you.

