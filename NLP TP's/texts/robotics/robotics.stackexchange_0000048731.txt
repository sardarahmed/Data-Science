Q:

cannot make third_party package rosgui_paramedit in groovy

Hi everyone,
I am trying to rosmake rosgui_paramedit package in groovy however some errors occurs. Following is the terminal output of procedure I make it.
adrian@ubuntu:~/catkin_ws/src$ rosdep install rosgui_paramedit
#All required rosdeps installed successfully

adrian@ubuntu:~/catkin_ws/src$ rosmake rosgui_paramedit
.
.
.
[rosmake-0] Starting >>> rosgui_paramedit [ make ]                              
[ rosmake ] Last 40 linessgui_paramedit: 27.5 sec ]  [ 1 Active 36/37 Complete ]
{-------------------------------------------------------------------------------
  -- Detecting C compiler ABI info
  -- Detecting C compiler ABI info - done
  -- Check for working CXX compiler: /usr/bin/c++
  -- Check for working CXX compiler: /usr/bin/c++ -- works
  -- Detecting CXX compiler ABI info
  -- Detecting CXX compiler ABI info - done
  -- Found PythonInterp: /usr/bin/python (found version "2.7.3")
  [rosbuild] Building package rosgui_paramedit
  [rosbuild] Cached build flags older than manifests; calling rospack to get flags
  -- Using CATKIN_DEVEL_PREFIX: /home/adrian/catkin_ws/src/rosgui_paramedit/build/devel
  -- Using CMAKE_PREFIX_PATH: /home/adrian/catkin_ws/devel;/opt/ros/groovy
  -- This workspace overlays: /home/adrian/catkin_ws/devel;/opt/ros/groovy
  -- Looking for include files CMAKE_HAVE_PTHREAD_H
  -- Looking for include files CMAKE_HAVE_PTHREAD_H - found
  -- Looking for pthread_create in pthreads
  -- Looking for pthread_create in pthreads - not found
  -- Looking for pthread_create in pthread
  -- Looking for pthread_create in pthread - found
  -- Found Threads: TRUE 
  -- Found gtest sources under '/usr/src/gtest': gtests will be built
  -- catkin 0.5.63
  [rosbuild] Including /opt/ros/groovy/share/roscpp/rosbuild/roscpp.cmake
  [rosbuild] Including /opt/ros/groovy/share/rospy/rosbuild/rospy.cmake
  -- Looking for Q_WS_X11
  -- Looking for Q_WS_X11 - found
  -- Looking for Q_WS_WIN
  -- Looking for Q_WS_WIN - not found.
  -- Looking for Q_WS_QWS
  -- Looking for Q_WS_QWS - not found.
  -- Looking for Q_WS_MAC
  -- Looking for Q_WS_MAC - not found.
  -- Found Qt4: /usr/bin/qmake (found suitable version "4.8.1", required is "4.6")
  CMake Error at /opt/ros/groovy/share/ros/core/rosbuild/public.cmake:1145 (message):
    [rosbuild] Failed to include hide_plugin_symbols from pluginlib
  Call Stack (most recent call first):
    CMakeLists.txt:44 (rosbuild_include)

   -- Configuring incomplete, errors occurred!
 -------------------------------------------------------------------------------}
 [ rosmake ] Output from build of package rosgui_paramedit written to:
 [ rosmake ]    /home/adrian/.ros/rosmake/rosmake_output-20130226-145458/rosgui_paramedit/build_output.log
 [rosmake-0] Finished <<< rosgui_paramedit [FAIL] [ 27.62 seconds ]              
 [ rosmake ] Halting due to failure in package rosgui_paramedit. 
 [ rosmake ] Waiting for other threads to complete.
 [ rosmake ] Results:                                                            
 [ rosmake ] Built 37 packages with 1 failures.                                  
 [ rosmake ] Summary output to directory                                         
 [ rosmake ] /home/adrian/.ros/rosmake/rosmake_output-20130226-145458 

Anyone know why it happened? Thanks in Advance!

Originally posted by AdrianPeng on ROS Answers with karma: 441 on 2013-02-26
Post score: 1

A:

Without digging into the essential reason, in its CMakeLists.txt, comment out these lines like below and rosmake again. Plugin seems to be working for me (Ubuntu Quantal), although I'm not aware of the effect so far.
#rosbuild_include(pluginlib hide_plugin_symbols)
#pluginlib_hide_plugin_symbols(rosgui_paramedit ParamEdit)

Originally posted by 130s with karma: 10937 on 2013-02-26
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by AdrianPeng on 2013-02-26:
Thanks a lot !!
Comment by Dirk Thomas on 2013-03-01:
These lines are essential to be able to unload a plugin when it is closed (else it stays in memory). The maintainer of the package should update the CMake lines to the current version of class_loader which has different macros for that functionality.

