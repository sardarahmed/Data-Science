Q:

rosjava.android overrides interface functions

I have successfully installed and built both rosjava and rosjava.android.
I add android_gingerbread, android_honeycomb_mr2 and android_tutorial_teleop to an eclipse project.
android_gingerbread throws 40 errors complaining that the Method X must override a superclass method. Upon inspection each of these methods has an @Override for an interface. It is my understanding that you do not @Override interface classes, so I am confused why it is overriding to begin with. I tried going through and changing each interface into class, fixing the function, and making android_gingerbread extend them instead of implement, but some of the classes are android libraries I cannot change.
android_honeycomb_mr2 also throws around 80 of the same errors.
Is the solution just to remove all of the @override's? Or is there something else going on here?

Originally posted by Jyo on ROS Answers with karma: 100 on 2012-04-17
Post score: 1

A:

The use of the @Override annotation changed between Java 1.5 and Java 1.6 with respect to implementing interface methods. In Eclipse, check Window->Preferences->Java->Compiler->Compiler Compliance Level; set that to 1.6. You might check the project-specific settings as well, under the main Java Compiler page.
There is some more information available at Stack Overflow.

Originally posted by jatowler with karma: 61 on 2012-04-17
This answer was ACCEPTED on the original site
Post score: 1

