Q:

tf2 conversion (bullet to geometry_msgs)

I wish to convert from Gazebo math::Pose type to one of the geometry_msgs ROS messages.
I can convert from math::Pose to  btTransform using BulletTypes.hh.
I have tried with tf2::convert() method following the tutorial, but it fails:
btTransform bt_T = physics::BulletTypes::ConvertPose(model_->GetLink("link")->GetWorldPose());
tf2::Stamped<btTransform> bt_T_stamped(bt_T, ros::Time::now(), "world");
geometry_msgs::TransformStamped T;
tf2::convert(bt_T_stamped, T);

I can obviously do this by hand, but is it there a way to use the tf2::convert() method properly?
EDIT: you can find the error log in this Gist.

Originally posted by alextoind on ROS Answers with karma: 217 on 2016-03-18
Post score: 1

Original comments
Comment by ahendrix on 2016-03-18:
Why doesn't it work? What error message do you get?
Comment by alextoind on 2016-03-19:
@ahendrix I have added the error log.

A:

From your error message, it looks like the compiler can't find an implementation of the conversion from  btTransform to a message.
Are you including the tf2_bullet header that provides this conversion function? Try adding:
#include "tf2_bullet/tf2_bullet.h"

UPDATE
It looks like the conversion from a bullet transform to a TF2 transform hasn't been written yet; it isn't listed in the tf2_bullet header
Similar to the existing functions, you could try writing the conversion yourself; it would probably look something like:
namespace tf2 {

inline
geometry_msgs::TransformStamped toMsg(const tf2::Stamped<btTransform>& in)
{
  geometry_msgs::TransformStamped msg;
  // TODO: actual conversion here
  return msg;
}

} // namespace tf2

Originally posted by ahendrix with karma: 47576 on 2016-03-20
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by alextoind on 2016-03-21:
@ahendrix I am really sorry that I had forgot to uncomment that include when I was creating the gist... Unfortunately that header is already included in my code, but it still does not compile. I have updated the gist with the correct error log. Thank you for your patience.
Comment by alextoind on 2016-03-21:
Thank you very much @ahendrix! In your opinion, should I create a pull request in https://github.com/ros/geometry_experimental/ if everything works fine?
Comment by ahendrix on 2016-03-21:
Yes; if you come up with a conversion you like, you should submit it as a pull request.

