Q:

Sensor fusion after intrinsic and extrinsic calibration - Autoware

Hello!  I am runing autoware v1.12 on nvidia jetson agx with jetpack 4.2. Currently am using live sensors VLP-16 lidar and FLIR ADK thermal camera.
I was able to get the intrinsic and extrinsic calibration by following directions at: https://autoware.readthedocs.io/en/feature-documentation_rtd/DevelopersGuide/PackagesAPI/sensing/autoware_camera_lidar_calibrator.html
However now, I do not know how to overlay data and get fusion.
I run the calibration publisher using the extrinsic yaml file and generic fields that autoware already has in target_frame, camera_frame, camera_info_topic_name etc  and it runs and exits out of the node - is that how it is supposed to be?
I used Pixel-Cloud Fusion node (https://autoware.readthedocs.io/en/feature-documentation_rtd/DevelopersGuide/PackagesAPI/detection/pixel_cloud_fusion.html)  but it keeps on saying waiting for intrinsic file and the target frame does not exist. Am I supposed to do something else also? The Directions ask for "rectified_image" how am i to do that?
Following the steps from https://youtu.be/pfBmfgHf6zg?t=501 at time 8:20, does not allow me to view both lidar and camera data, it only shows one or the other depending on which frame I pick i.e. velodyne or boson-camera, and then the camera feed does not have any overlay data either.
I would really appreciate if you could direct me of the next steps I could take in order to overlay the data of each sensor and get "sensor fusion". I am very new to this, but am trying to learn and properly document.
Thank you!!

Originally posted by msaeUF on ROS Answers with karma: 53 on 2020-02-10
Post score: 1

A:

@msaeuf The pixel_cloud_fusion node is the correct node for this function. You first need to use the calibration_publisher package to publish the camera calibration based on the lidar/camera calibration file that you created. Here is an example command to run the calibration_publisher using a launch file from runtime_manager:
roslaunch runtime_manager calibration_publisher.launch camera_frame:=/camera_frame image_topic_src:=/camera/image_raw file:=/path/to/your/lidar_camera_cal.yaml camera_info_topic:=/camera/camera_info

In the above command, replace /camera_frame with the TF frame that your camera publishes images in, replace /camera/image_raw with the topic name of the raw image from your camera, replace /path/to/your/lidar_camera_cal.yaml with the full path to your lidar/camera calibration file produced from the autoware_camera_lidar_calibration YAML file, and replace /camera/camera_info with the topic that you would like the calibration_publisher to publish the calibration info on.
Once this is running, you can use the pixel_cloud_fusion.launch file to launch both an image_rectifier node (which will generate the rectified image topic) and the pixel_cloud_fusion node. You'll have to remap the topics in this launch file to the appropriate topics for your camera and calibration.

Originally posted by Josh Whitley with karma: 1766 on 2020-02-11
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by msaeUF on 2020-02-11:
Thanks alot!!!

