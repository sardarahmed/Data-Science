Q:

Error with launch file and rosrun using a ROS package

Hey guys,
I am in the process of using a ROS package (https://github.com/beltransen/lidar_bev) that converts PointCloud data into Bird Eye View images. I have successfully installed the package with catkin. I use my own launch file (supplemented with that of the ROS package) to import bag files and get the desired images. The input message is sensor_msgs/PointCloud2, which is also included in my bag files.
My first question would be, can the bag files only contain this one message in order to run it compatible with the package?
Attached is my launch file:
<launch>
< !--1. start bag files playback-- >

< node pkg ="rosbag" type="play" name="bag_files_playback" output="screen" args="/home/pkatsoulakos/catkin_ws/src/launch/rosbags/Besprechungsraum/_2022-03-23-08-37-50_0.bag  /home/pkatsoulakos/catkin_ws/src/launch/rosbags/Besprechungsraum/_2022-03-23-08-39-07_2.bag"/ >

< !-- 2. topics and frames -- >

< arg name="cloud_topic" default="/velodyne_points"/>

    < arg name="lidar_tf_frame" default="/velodyne"/>

    < arg name="camera_tf_frame" default="/stereo_camera"/> 

< !-- MAP CONFIGURATION -- >

    <arg name="camera_fov" default="110.0"/>
    <arg name="intensity_threshold" default="0.05" />
    <arg name="cell_size" default="0.05" />
    <arg name="cell_size_height_map" default="0.25" />
    <arg name="max_height" default="3.0" />
    <arg name="num_slices" default="1" />
    <arg name="grid_dim" default="70" />
    <arg name="grid_dim_height_map" default="300" />
    <arg name="height_threshold" default="0.10" />
    <arg name="crop_180" default="true" />
    <arg name="remove_floor" default="false" />
    
< !-- VLP16 change for my purposes?-- >

    <arg name="planes" default="16" />
    <arg name="h_res" default="0.2" />
    <arg name="v_res" default="1.33" />
    <arg name="low_opening" default="-10" />
    <arg name="max_expected_intensity" default="5" />
    
< !--2. start lidar_bev-- >

< node pkg="lidar_bev" type="lidar_bev" name="lidar_bev_run" output="screen" >

        <param name="cloud_topic" value="$(arg cloud_topic)"/>
        <param name="lidar_tf_frame" value="$(arg lidar_tf_frame)"/>
        <param name="camera_tf_frame" value="$(arg camera_tf_frame)"/>
        <param name="camera_fov" value="$(arg camera_fov)"/>
        <param name="planes" value="$(arg planes)"/>
        <param name="h_res" value="$(arg h_res)"/>
        <param name="v_res" value="$(arg v_res)"/>
        <param name="low_opening" value="$(arg low_opening)"/>
        <param name="cell_size" value="$(arg cell_size)"/>
        <param name="grid_dim" value="$(arg grid_dim)"/>
        <param name="max_height" value="$(arg max_height)"/>
        <param name="num_slices" value="$(arg num_slices)"/>
        <param name="height_threshold" value="$(arg height_threshold)"/>
        <param name="cell_size_height_map" value="$(arg cell_size_height_map)"/>
        <param name="grid_dim_height_map" value="$(arg grid_dim_height_map)"/>
        <param name="max_expected_intensity" value="$(arg max_expected_intensity)"/>
        <param name="crop_180" value="$(arg crop_180)"/>
        <param name="remove_floor" value="$(arg remove_floor)"/>

    </node> 

</launch>

I would be very grateful if someone could help me to make this conversion.

Originally posted by Petros ADLATUS on ROS Answers with karma: 28 on 2022-03-25
Post score: 0

A:

alternative solution: I finally gave up with this node, because the support isn't good enough (no Issues, no other users of it) and solve it with this node: https://github.com/mjshiggins/ros-examples. I have modified (image size, colored pointcloud, resolution) the node a little bit, cause the default settings aren't good enough for my purposes. Hope this helps everyone who wants to create LiDAR images for Deep Learning usage.

Originally posted by Petros ADLATUS with karma: 28 on 2022-05-03
This answer was ACCEPTED on the original site
Post score: 0

