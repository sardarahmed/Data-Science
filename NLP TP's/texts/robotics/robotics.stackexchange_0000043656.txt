Q:

Mechanism for calculating smooth trajectory?

Hi,
I have a wheelchair robot, and I have written by own path planner. My path planner gives a set of waypoints to reach the goal, each ~1m apart, and a path is re-planned every time there is something observed by Kinect. I have been sending these waypoints to move_base to get to these waypoints, treating them as a goal to move_base node. However, I realized that move_base is slow in adapting to a new goal when there is a goal already being pursued.
I just need a mechanism that computes a smooth trajectory given a two points (current position and the goal), by taking account of the current robot's velocity and position. I do not need obstacle avoidance, costmap update, recovery method and etc, which I presume is slowing down the move_base node. Is there a such node in ROS? I think base_local_planner is somehow publishing the velocity (cmd_vel topic) with a given plan, however I do not really have a plan but only two points.
Any help would be appreciated.

Originally posted by bkim on ROS Answers with karma: 86 on 2012-08-28
Post score: 0

A:

I know this is not quite what you are looking for, but you can try to use goal_passer as your local planner, which is available in the navigation_experimental stack or carrot_planner. Both are simpler planners that may speed up your navigation. If they do not suit you, you can look at their codes and create your own. cheers

Originally posted by Procópio with karma: 4402 on 2012-08-28
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by bkim on 2012-08-30:
Hi, I checked out goal_passer, but the wiki page is empty. Do you know what it does? Right now it is just rotating in one place, with 0 linear velocity.
Comment by bkim on 2012-08-30:
Hi again. Instead of goal_passer, I used carrot_planner and like you said it is much faster than navfn. However, when I use carrot_planner it will move for sometime and stops, and continue moving. Do you know what might be causing this movement?
Comment by Procópio on 2012-09-01:
take a look at the goal_passer code, i am not quite sure how it works, but i have used it several times. also try to give a goal very very close to the robot, for me it does not work if the goal is far away (do not know why: http://answers.ros.org/question/33926/problems-with-goalpasser-distance-to)

