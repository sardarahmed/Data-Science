Q:

get ROS 2 nodehandle in case of composed nodes

Hello All,
Suppose I am using a Composed node as mentioned in this example(https://github.com/ros2/demos/blob/master/composition/src/talker_component.cpp). Now I need to pass a rclcpp::Node::SharedPtr of this composed Node to another class. In case of ROS 1 nodeletes, this can be done using getNodeHandle(). Is there any similar way of doing this in ROS 2 ?

Originally posted by Skyking on ROS Answers with karma: 151 on 2018-06-29
Post score: 1

A:

Depending on what you need it for, you might be looking for get_node_base_interface() and/or one of the other interfaces an rclcpp Node has: there's more context around them in this PR.
We don't use that function in many of our ROS 2 demos but this is one example (others are in rclcpp's testing code).

Originally posted by dhood with karma: 621 on 2018-06-29
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Skyking on 2018-09-17:
get_node_base_interface() is fine for node spinning, but what if I want to use the get_parameter() functionality of the rclcpp::Node class ?
My intention is that I create a composable ros2 Node class  and I want to pass the shared_ptr of that Node class as an argument to another object inside it.
Comment by William on 2018-09-17:
You can use https://en.cppreference.com/w/cpp/memory/enable_shared_from_this since the Node class inherits from it already. But you can also get each interface you want and pass those (more flexible), e.g. get_node_parameter_interface().

