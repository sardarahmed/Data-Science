Q:

Linking dependencies on OSX

Hey,
I have been attempting to get ROS to work on OSX and am stuck when I try to link an executable with a dependency. I tried linking against yaml-cpp and tinyxml, both installed and linked according to homebrew, but I get the following message:
ld: library not found for -lyaml-cpp

Executing :
pkg-config --cflags --libs yaml-cpp

Gives me :
-I/usr/local/Cellar/yaml-cpp/0.5.0/include  -L/usr/local/Cellar/yaml-cpp/0.5.0/lib -lyaml-cpp

Doesn't that mean rosmake should be able to find it? For the record, I am linking in my CMakeLists.txt like this:
target_link_libraries(Controller yaml-cpp)

What am I doing wrong?

Originally posted by Hansg91 on ROS Answers with karma: 1909 on 2013-02-02
Post score: 2

A:

You are adding yaml-cpp as a target, but the -L location of it is not on your path:
/usr/local/Cellar/yaml-cpp/0.5.0/lib
This means you need to use find_package or pkg-config in CMake to find this path at build time and add it your linker path using link_directories()
Also, you might want to use yaml-cpp version 0.3, because that is what ROS is using. See:
https://github.com/ros/homebrew-groovy/blob/master/yaml-cpp-0.3.rb

Originally posted by WilliamWoodall with karma: 1626 on 2013-02-02
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Hansg91 on 2013-02-03:
Thank you again. It seems I had both versions of yaml-cpp installed. I have some follow-up questions, would I need to do this on say Ubuntu as well? Did this change since groovy? I remember on fuerte that I could just link it like I showed. Can you give me an example of how I should link in?
Comment by Hansg91 on 2013-02-04:
I tried making a small test package on Ubuntu and what I did does indeed work (add target_link_libraries and add rosdep to manifest). On the Ubuntu machine the lib was .so however and on my OSX it is a .a, does this make a difference? Why doesn't my ROS automatically use the path from pkg-config?
Comment by Hansg91 on 2013-02-04:
My guess is that I have some environment setting that is messed up, causing the compiler to fail to see the libraries. What could it be?
Comment by WilliamWoodall on 2013-02-04:
It depends on what you are doing, are you using rosbuild or catkin. Either way you need to find yaml-cpp in cmake before using it, it probably works on Ubuntu because it is installed in your library path, but you should not rely on this being the case on all systems, i.e. Homebrew and osx.
Comment by WilliamWoodall on 2013-02-04:
Check this out for a hint out how to do this with CMake: http://code.google.com/p/yaml-cpp/issues/detail?id=127
Comment by Hansg91 on 2013-02-04:
I see, that clears it up for me a lot. Too bad you can't rely on that :)
Comment by Hansg91 on 2013-02-04:
Ok I believe I have that part down now, however I get a different error now:
Comment by WilliamWoodall on 2013-02-04:
Edit your original question if it is related to this still, otherwise open a new issue.
Comment by Jean-Luc Nacif Coelho on 2014-08-20:
How do you add it to the linker path? I am having the same problem.

