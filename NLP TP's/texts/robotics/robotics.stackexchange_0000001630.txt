Q:

Controlling a conveyor belt with a time based motor

I have some crude time based motors taken from a robot arm that we upgraded to proper servos. I want to be able to power a conveyor belt with one of them and I was wondering how I would go about the following setup:
A ball drops through a hole onto the conveyer belt hitting a lever switch on its way through. This switch triggers the motor to start. When the ball gets to the top of the belt and falls off it hits another lever switch that turns the motor off.
I could handle this logic by hooking it up to my raspberry pi and using python to start and stop the motor depending on which GPIO pin received input (top or bottom lever). Or I could use a single lever and set a constant time interval to stop the motor. I would prefer to use both to handle any change in scale/construction.
I was wondering however if this could be done with the breadboard alone, using logic gates or similar?

A:

To control the motor with logic gates, you could make a circuit with a monostable multivibrator (or  “one-shot”), an R-S flipflop (or R-S latch), and an AND gate or an OR gate to combine the one-shot and latch outputs.  You would use an AND if you want the motor to run when both the latch and the one-shot are active, vs an OR to make the motor run when either of them is active.  Whether to use AND or OR depends on what error conditions you want to detect or handle.
An R-S flipflop is easily made using two NAND gates, ie half of the gates in the quad NAND 74LS00.  A one-shot also can be made using  two NANDs (see “Simple NAND Gate Monostable Circuit” at about 1/3 thru page), or you can use a 74121, 74221, etc.  The 555 also is often used as a monostable multivibrator, and can also be used as an R-S flipflop.
So, you could use two 7400 packages for the circuit, or could use one 7400 and one 556 (which is a dual 555).  Circuits with NAND gates can be simulated by hand or in online simulators. Some simulators also simulate 555's.

