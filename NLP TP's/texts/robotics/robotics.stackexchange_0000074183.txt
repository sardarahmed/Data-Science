Q:

Moveit missing rosdep dependencies on raspbian jessie

I am currently trying to install moveit on a raspbian.
First I installed ROS indigo using these instructions. After that i followed these manual instructions to install moveit, but I could not install the dependencies.
$ rosdep update
reading in sources list data from /etc/ros/rosdep/sources.list.d
Hit https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/osx-homebrew.yaml
Hit https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/base.yaml
Hit https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/python.yaml
Hit https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/ruby.yaml
Hit https://raw.githubusercontent.com/ros/rosdistro/master/releases/fuerte.yaml
Query rosdistro index https://raw.githubusercontent.com/ros/rosdistro/master/index.yaml
Add distro "groovy"
Add distro "hydro"
Add distro "indigo"
Add distro "jade"
Add distro "kinetic"
updated cache in /home/pi/.ros/rosdep/sources.cache
$ rosdep install --from-paths src --ignore-src --rosdistro indigo -y
ERROR: the following packages/stacks could not have their rosdep keys resolved to system dependencies:
moveit_ros_benchmarks: No definition of [eigen_conversions] for OS [debian]
moveit_ros_perception: No definition of [sensor_msgs] for OS [debian]
moveit_setup_assistant: No definition of [xacro] for OS [debian]
moveit_fake_controller_manager: No definition of [pluginlib] for OS [debian]
moveit_msgs: No definition of [object_recognition_msgs] for OS [debian]
moveit_planners_ompl: No definition of [pluginlib] for OS [debian]
moveit_controller_manager_example: No definition of [pluginlib] for OS [debian]
moveit_ros_move_group: No definition of [pluginlib] for OS [debian]
moveit_ros_benchmarks_gui: No definition of [tf] for OS [debian]
moveit_ros_planning: No definition of [angles] for OS [debian]
moveit_ros_robot_interaction: No definition of [interactive_markers] for OS [debian]
moveit_ros_control_interface: No definition of [trajectory_msgs] for OS [debian]
moveit_ros_manipulation: No definition of [manipulation_msgs] for OS [debian]
moveit_commander: No definition of [python-pyassimp] for OS version [jessie]
moveit_simple_controller_manager: No definition of [actionlib] for OS [debian]
moveit_ros_warehouse: No definition of [tf] for OS [debian]
moveit_core: No definition of [tf_conversions] for OS [debian]
moveit_ros_visualization: No definition of [object_recognition_msgs] for OS [debian]
moveit_ros_planning_interface: No definition of [tf_conversions] for OS [debian]

I am new to ROS and this infrastructure, so its possible I missed something or did something wrong.
Thanks.

Originally posted by cmhe on ROS Answers with karma: 36 on 2016-05-30
Post score: 1

Original comments
Comment by cmhe on 2016-05-30:
Could it be that this happens because the rosdep indigo distribution definition does not mention debian jessie? How can I fix this?

A:

I solved it myself. Here are my notes as to what I did. Maybe that will help someone in the future:
# Guide to get all moveit dependencies installed on raspbian jessie.
# Install ros as described here: wiki.ros.org/ROSberryPi/Installing%20ROS%20Indigo%20on%20Raspberry%20Pi
# Install moveit as described here: http://moveit.ros.org/install/#collapseFour
# This manual describes how to get the line: "rosdep install --from-paths src --ignore-src --rosdistro indigo -y" to work.

# Increase swap size:
$ sudo sed -i -e "s/CONF_SWAPSIZE=100/CONF_SWAPSIZE=1024/" /etc/dphys-swapfile
$ sudo reboot

$ cat /etc/apt/sources.list
deb http://mirrordirector.raspbian.org/raspbian/ jessie main contrib non-free rpi
# Uncomment line below then 'apt-get update' to enable 'apt-get source'
#deb-src http://archive.raspbian.org/raspbian/ jessie main contrib non-free rpi
#deb-src http://mirrordirector.raspbian.org/raspbian/ testing main contrib non-free rpi

$ cat /etc/apt/sources.list.d/ros-latest.list 
deb http://packages.ros.org/ros/ubuntu jessie main
deb http://packages.ros.org/ros/ubuntu trusty main
deb-src http://packages.ros.org/ros/ubuntu trusty main
deb-src http://archive.ubuntu.com/ubuntu/ trusty main universe multiverse restricted

# Lower priority for ubuntu packages
$ cat /etc/apt/preferences.d/ros-trusty 
Package: *
Pin: release o=ROS,a=trusty
Pin-Priority: 50

# Get 0.2 version of urdfdom from ubuntu source repo. Specify exact available version or deactivate deb-src from jessie beforehand
$ apt-get source -b 'urdfdom'
$ sudo dpkg -i liburdfdom0.2-dbg_0.2.10+dfsg-1_armhf.deb liburdfdom-dev_0.2.10+dfsg-1_armhf.deb liburdfdom-model0.2_0.2.10+dfsg-1_armhf.deb liburdfdom-model-state0.2_0.2.10+dfsg-1_armhf.deb liburdfdom-sensor0.2_0.2.10+dfsg-1_armhf.deb liburdfdom-tools_0.2.10+dfsg-1_armhf.deb liburdfdom-world0.2_0.2.10+dfsg-1_armhf.deb

# ros-indigo-pluginlib searches for 'liblog4cxx.so' in '/usr/lib'
# liblog4cxx10-dev is installed
sudo ln -s /usr/lib/arm-linux-gnueabihf/liblog4cxx.so /usr/lib/liblog4cxx.so

# Install all dependencies as ubuntu:trusty (in moveit directory)
$ rosdep install --from-paths src --ignore-src --rosdistro indigo -y --os=ubuntu:trusty

# Now we have installed every package required by moveit, but they are compiled for ubuntu trusty.
# Everything might work for raspbian jessie (debian jessie) too, but to be sure, I compiled every package myself in the next steps.

# Find all installed packages from trusty, that are not in jessie.
$ aptitude search -F '%p' '?narrow(?installed,?narrow(?archive(trusty),?not(?archive(jessie))))' > trusty-packages
# Remove all trusty packages:
$ cat trusty-packages | xargs sudo apt-get remove --purge -y

# Install build dependencies, that are not already mentioned in trusty-packages (and don't start with "ros-"):
$ sudo apt-get install libcppunit-dev libmongo-client-dev

# Install python module for sorting package dep order
$ sudo apt-get install python-toposort

# Small python script to order the packages with their dependencies:
$ cat depsort.py
#!/usr/bin/python2
import sys
from toposort import toposort_flatten
graph={}
for line in sys.stdin:
    if len(line.split()) == 2:
        a,b = line.split()[0], line.split()[1]
    elif len(line.split()) == 1:
        a,b = line.split()[0], None
    else:
        raise Exception, "Invalid input! Line: \"%s\"" % line
    if a not in graph:
        graph[a] = {b}
    else:
        graph[a].add(b)
for line in toposort_flatten(graph):
    if line != None:
        print line

# Generate sorted package list:
$ cat trusty-packages | while read pkg
    do
      echo $pkg
      for i in $(apt-cache showsrc "$pkg" | grep '^Build-Depends:' | grep -oE "ros-[-a-z0-9]*")
        do
          echo $pkg $i
        done
      for i in $(apt-cache show "$pkg" | grep '^Depends:' | grep -oE "ros-[-a-z0-9]*")
        do
          echo $pkg $i
        done
    done | ./depsort.py > sorted-trusty-packages

# Filter out installed packages (if something goes wrong when building/installing and you like to continue where you left off)
# Because ros-indigo-rviz needs a patch to build, leave it out for now.
$ cat sorted-trusty-packages | while read pkg
    do
      if [ "$pkg" != "ros-indigo-rviz" ]
      then
        dpkg -s $pkg 2>&1 | grep -E "^Status:.*installed" >/dev/null || echo $pkg
      fi
    done > filtered-sorted-trusty-packages

# Build packages and install them:
$ cat filtered-sorted-trusty-packages | while read pkg
  do
    echo "####Building: $pkg"
    apt-get source -b $pkg
    echo "####Installing: $pkg"
    sudo dpkg -i "$pkg"*"deb"
  done 2>&1 | tee -a build.log

# ros-indigo-rviz cannot be build

# get it:
$ apt-get source ros-indigo-rviz
$ cd ros-indigo-rviz-1.11.14

# Apply this patch:
--- ros-indigo-rviz-1.11.14.orig/src/rviz/mesh_loader.cpp
+++ ros-indigo-rviz-1.11.14/src/rviz/mesh_loader.cpp
@@ -67,6 +67,14 @@
 #include <assimp/IOSystem.h>
 #endif
 
+#  ifdef __arm__                 // fix for ARM build
+#include <strings.h>
+bool Assimp::IOSystem::ComparePaths(const char *p1, const char *p2) const
+{
+    return !::strcasecmp(p1, p2);
+}   
+#  endif
+
 namespace fs = boost::filesystem;
 
 namespace rviz

$ dpkg-source --commit

$ dpkg-buildpackage -uc -us
$ sudo dpkg -i ../ros-indigo-rviz_1.11.14-0trusty_armhf.deb

# Navigate to moveit project directory
# Apply this patch: (I have commit f91d87c329b14 of src/moveit_ros/visualization, might not be necessary in your checkout)
--- src/moveit_ros/visualization/CMakeLists.txt
+++ src/moveit_ros/visualization/CMakeLists.txt
@@ -86,4 +86,5 @@ install(FILES python/moveit_ros_visualization/moveit_joy.py DESTINATION ${CATKIN
 
 install(DIRECTORY icons DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION})
 
+find_package(rostest REQUIRED)
 add_rostest(test/moveit_joy.test)

# Enter moveit directory and compile and install moveit:
$ sudo -s
$ source /opt/ros/indigo/setup.bash
$ catkin_make_isolated --install -DMAKE_BUILD_TYPE=Release --install-space /opt/moveit/indigo -j2

Originally posted by cmhe with karma: 36 on 2016-06-08
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by collin on 2016-12-26:
I'm following these steps!
Thank you for your sharing :)
Comment by collin on 2016-12-26:
btw, I had some problems to follow your steps, So I decided to format my SD card and start all over it again
uhm... did you use Raspbian Lite or Pixel and do you think it matters?
Thank you very much
Comment by cmhe on 2016-12-27:
If I remember corrently I used raspbian lite. Since the project for which I did this, is finished quite a while ago and we ended up using ubuntu trusty for other reasons I can't really help any further. This was never intended to be a copy and paste solution, but should still work in general.
Comment by cmhe on 2016-12-27:
These where my notes for the more involved steps I toke while doing it, but since I fiddled around for a while, some parts might be missing or just obvious to me at that time.
Comment by collin on 2016-12-28:
thanks a lot!
i'm currently struggling to solve this problem using RPI3 Model B and it drives me crazy -.

