Q:

rclcpp wait for a list of service/action servers to start before proceeding further

I have a list of services and a list of actions that I need to wait for to start before I can proceed further. Is there some sort of inbuilt function in rclcpp or rclcpp::Node that I can use?
Creating a custom service and action client type is not really a viable option for me, since I would have more than 100 services + actions combined.
What I want is something like the following:
class SomeNode : public rclcpp::Node
{
public:
    SomeNode() : Node("service_and_action_check")
    {
        /* We do our initial setup */

        std::vector<std::string> serviceList = {"service1", "service2", "service3"};
        std::vector<std::string> actionList  = {"action1", "action2", "action3"};

        for (auto &elem : serviceList)
        {
            checkIfServiceServerIsRunning(elem);
        }

        for (auto &elem : actionList)
        {
            checkIfActionServerIsRunning(elem);
        }

        RCLCPP_INFO(this->get_logger(), "All services and actions have been loaded.");
    }
    .
    .
    .
};
 

If this is not readily available, if anyone knows of a simple way to create the functions checkIfServiceServerIsRunning and checkIfActionServerIsRunning, that would be of help too.
Thanks!

A:

Both services and actions have wait_for_...() methods, see the service tutorial and rclcpp source code:
while (!client->wait_for_service(1s)) {
    if (!rclcpp::ok()) {
        RCLCPP_ERROR(rclcpp::get_logger("rclcpp"), "Interrupted while waiting for the service. Exiting.");
        return 0;
    }
    RCLCPP_INFO(rclcpp::get_logger("rclcpp"), "service not available, waiting again...");
  }

and the action client tutorial:
if (!this->client_ptr_->wait_for_action_server()) {
    RCLCPP_ERROR(this->get_logger(), "Action server not available after waiting");
    rclcpp::shutdown();
}

wait_for_action_server() can also take a duration, see the rclcpp_action source code.
For your application you'd have to loop over each of your services/actions and wait untill all are available.

