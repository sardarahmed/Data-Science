Q:

Nav2 Navigate_through_poses never passes first pose

When sending a set of waypoints to the navigate_though_poses, the robot never reaches the first waypoint. This is how we got there

We configured a Nav2 with the configurations in the end of the post. It starts up fine without errors. However there is a warning that states:
[controller server-1] [WARN] [1692540613.343435163] [controller server]: No goal checker was specified in parameter 'current goal checker'. Server will use only plugin loaded general_goal_checker

Then a list of waypoints is sent to nav2_msgs::action::NavigateThroughPoses.

The data is accepted by the nav2 stack and a path is planned and followed.

So far so good. But at the very first waypoint it does not continue as it should but stops and tries to go forward and backward to hit the spot harder.
What we tried so far:

We set the xy_goal to 0.35 and the yaw_goal to 3.14 to make it irrelevant. But it did not change.
We tried to set the parameter "current_goal_checker" but none of the syntax we tried prevented the warning. It is like there is no goal checker for this situation. But from what i understand from remove_passed_goals_action.cpp, no additional goal checker is required for the waypoints.
We also tried the "follow_waypoint" and there the individual goals are reached but the movement is not as smooth as we hope the navigate_through_poses would be

Can anyone help here.
controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 10.0
    min_x_velocity_threshold: 0.2
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    progress_checker_plugins: ["progress_checker"] # progress_checker_plugin: "progress_checker" For Humble and older
    goal_checker_plugins: ["general_goal_checker"]
    current_goal_checker: ["general_goal_checker"] # "precise_goal_checker"
    controller_plugins: ["FollowPath"]
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 30.0

    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.35
      yaw_goal_tolerance: 3.14

    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 0.8
      use_velocity_scaled_lookahead_dist: true
      min_lookahead_dist: 2.0
      max_lookahead_dist: 5.0
      lookahead_time: 3.0

      lookahead_dist: 2.0
      
      transform_tolerance: 0.1
      
      min_approach_linear_velocity: 0.3
      approach_velocity_scaling_dist: 0.6

      use_regulated_linear_velocity_scaling: true
      use_fixed_curvature_lookahead: false
      curvature_lookahead_dist: 1.5
      
      regulated_linear_scaling_min_radius: 3.0
      regulated_linear_scaling_min_speed: 0.4
      
      use_interpolation:  false
      allow_reversing: true
      
      use_rotate_to_heading: false
      rotate_to_heading_angular_vel: 1.0 
      rotate_to_heading_min_angle: 1.0
      max_angular_accel: 1.0
      max_robot_pose_search_dist: 10.0
      
      use_cost_regulated_linear_velocity_scaling: false
      use_collision_detection: false
      max_allowed_time_to_collision_up_to_carrot: 1.0

planner_server:
  ros__parameters:
    planner_plugin_types: ["nav2_theta_star_planner/ThetaStarPlanner"]
    planner_plugin_ids: ["GridBased"]
    GridBased:
      how_many_corners: 8
      w_euc_cost: 1.0
      w_traversal_cost: 2.0

bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odometry/local
    bt_loop_duration: 10
    default_server_timeout: 20
    enable_groot_monitoring: True
    groot_zmq_publisher_port: 1666
    groot_zmq_server_port: 1667
    transform_tolerance: 0.5
    default_nav_to_pose_bt_xml: /opt/ros/humble/share/nav2_bt_navigator/behavior_trees/navigate_to_pose_w_replanning_and_recovery.xml # or $(find-pkg-share my_package)/behavior_tree/my_nav_to_pose_bt.xml
    default_nav_through_poses_bt_xml: /opt/ros/humble/share/nav2_bt_navigator/behavior_trees/navigate_through_poses_w_replanning_and_recovery.xml # or $(find-pkg-share my_package)/behavior_tree/my_nav_through_poses_bt.xml
    # goal_blackboard_id: goal
    # goals_blackboard_id: goals
    # path_blackboard_id: path
    navigators: ['navigate_to_pose', 'navigate_through_poses']
    navigate_to_pose:
      plugin: "nav2_bt_navigator/NavigateToPoseNavigator"
    navigate_through_poses:
      plugin: "nav2_bt_navigator/NavigateThroughPosesNavigator"
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node

waypoint_follower:
  ros__parameters:
    loop_rate: 20
    stop_on_failure: true
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 0

A:

Thank you for the answers. We found the problem now and it is a bit embarassing. When checking the standard navigate_through_poses_w_replanning_and_recovery.xml more thoroughly, we saw that there are two more parameters we can set in the remove_passed_goals node. That is the global_frame and the robot_base_frame. Setting these and increasing the RateController Frequency to 10 Hz solved our problem.
Thanks for taking the time to read the question and to comment

