Q:

ROS_NOBUILD doesn't allow modification of code

I'm a beginner with ROS (using the Turtlebot SDK) and I was attempting to generate PNG  images from the depth and RGB data coming out of my Kinect.
For this I thought the easiest way would be to modify the "image_view" code (which allows me to right-click to save the current frame as PNG) so that it simply saves for all frames.
However, when I try to modify the source code and make it using rosmake, it says there were no errors, but the executable is still the original one when I run image_view from terminal.
Am I missing out on something basic here? I couldn't spot anything on the wiki.
Any help is highly appreciated.

Originally posted by rps2689 on ROS Answers with karma: 1 on 2012-07-01
Post score: 0

Original comments
Comment by Eric Perko on 2012-07-01:
Are you modifying ROS packages in /opt/ros that were installed via apt-get or a copy of image_view checked out into your workspace?
Comment by joq on 2012-07-01:
Don't modify the code installed via Debian packages (via apt-get). Check out a source overlay, if you want to modify something.

A:

I'm guessing you built from source, as you say you changed the source of image_view directly. At the end of a successful build (and if instructed to do so), rosmake will create the ROS_NOBUILD file in the package directory as an indication to the build system that the package can (and should) be skipped in any subsequent rosmakes. Normally, packages installed via a package manager don't include the source and come with a ROS_NOBUILD to prevent make clean mishaps among other things.
So the behaviour you saw was actually 'by design': rosmake is meant to skip building image_view and consequently your changes do not take effect.
AFAIK the most accepted setup for working on ROS (core) packages is to create a ROS 'workspace' and manage it using rosws and .rosinstall files. See this page for a tutorial.

Originally posted by ipso with karma: 1416 on 2012-07-01
This answer was ACCEPTED on the original site
Post score: 1

