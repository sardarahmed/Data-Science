Q:

Knowrob_common package functionality &use?

hi... i was reading the  Knowrob tutorials...and when i reached the section of Exporting knowledge into owl files at Loading Files And Ros Packages ..i had a problem... i already made an owl file through the protege....but it's classes aren't like that

                 <rdfs:subClassOf rdf:resource="&knowrob;Place"/>

it is like that

                 <rdfs:subClassOf rdf:resource="#Table"/>

it says that -at the tutorials - i can do "that" by using Knowrob_common through owl_export module...My first question is "that" refers to adding the knowrob meaning to my classes ??..to be more obvious is that is the operation of exporting knowledge to owl file is to gave the meaning to the classes at my owl file and it converting my file to have that "&knowrob"??
My Second Question is where can i find the illustration of knowrob_common..ty for helping ^_^

Originally posted by Wafaay on ROS Answers with karma: 111 on 2012-12-04
Post score: 5

Original comments
Comment by Wafaay on 2012-12-09:
@moritz ...can you help me ?
Comment by moritz on 2012-12-09:
Please don't tag me to trigger answers. I can give support in my free time, but when I don't answer, this normally means that I don't have sufficient free time. I do look at questions tagged with "knowrob" from time to time and try to provide support if I can.
Comment by Wafaay on 2012-12-10:
sorry for that sir..i promise it'd not happen again ^_^

A:

All OWL identifiers are global IRIs, e.g. of the form 'http://ias.cs.tum.edu/kb/knowrob.owl#Cup'. You can write them in different ways, e.g. using XML entities (which are defined in the document head and can shorten the identifiers to &knowrob;Cup). You can also use IRIs that are relative to the xmlns defined in the OWL document (i.e. the #Table in your example will be treated as relative IRI and complemented with a namespace like 'http://ias.cs.tum.edu/kb/knowrob.owl').
Apart from that: The predicates on the page you refer to export knowledge that has been added to KnowRob in terms of Prolog assertions into OWL files. You can of course also create OWL files using any other method. If you mean "documentation" with "illustration", that can be found in the ROS wiki (http://ros.org/wiki/knowrob_common, not much) and in the API documentation in the source code).

Originally posted by moritz with karma: 2673 on 2012-12-09
This answer was ACCEPTED on the original site
Post score: 3

