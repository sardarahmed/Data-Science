Q:

Cleaning up after shutdown request

In my node looping portion, I check for shutdown using ros::isShuttingDown(). After the looping portion, I wish to perform a couple of actions before shutdown. The reason for this is that I am attempting to programatically start and stop nodes. The node is being stopped either with CTRL-C or rosnode kill
However, this doesn't seem to function as I hope.
Here is a sample of my code:
 while(!ros::isShuttingDown()){
 //while(ros::ok()) { // Does not work either.

      ros::spinOnce();
      rate.sleep();
  }

  //EDIT:
  ROS_INFO("will not print");
  fflush(stdout);

  //FIXME Cleanup section not running
  // Cleanup

  localizer.nh.setParam(
    strcat(strcat(strcpy(localizer_node_param, "/"),
    LOCALIZER_NODE),"_running"), false);

  return SUCCESS;

In this instance, the parameter is not re-set at the end of life of this node. Can someone reproduce this  behavior? Simple loop and ROS_INFO() statement is sufficient.
EDIT: ROS log statements also do not print to stdout when placed as shown (with or without fflush(stdout);)

Originally posted by errolflynn on ROS Answers with karma: 32 on 2017-02-02
Post score: 0

Original comments
Comment by mgruhler on 2017-02-03:
I am not fully aware of how the shutdown is implemented. But it could be in the process of shutting down, the parameter cannot be written to the parameter server, due to the shutdown itself...
Comment by errolflynn on 2017-02-03:
See edit. ROS log statements don't print out either. I get the sense that the code after the looping portion does not run.

A:

When ROS is shutting down, it drops all connections to the master and afaik thus looses all "ROS"-Functionality.
I.e. you cannot

publish or subscribe to a topic
call a service or action
read to or write from the Parameter server
and apparently all ROS logging does not work either.

If you replace the ROS_INFO with a std::cout, you see that this is actually handled. However, all code with ROS functionality is, in the end, a noop, due to the missing connections.

Originally posted by mgruhler with karma: 12390 on 2017-02-07
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by errolflynn on 2017-02-07:
This seems to be correct. Where is this documented?
Comment by mgruhler on 2017-02-08:
I don't know. There is http://wiki.ros.org/roscpp/Overview/Initialization%20and%20Shutdown

At any time you may call the ros::shutdown() function to shutdown your node. This will kill all open subscriptions, publications, service calls, and service servers.

But this does not explicitely talk ...
Comment by mgruhler on 2017-02-08:
about Parameters. It is, however, talking about the use of ros::isShuttingDown.

