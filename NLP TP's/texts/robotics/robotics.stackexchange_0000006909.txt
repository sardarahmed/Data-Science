Q:

EKF-SLAM Computing the jacobians for landmark updates

I've been working through this informative guide on EKF-SLAM but I'm having difficulty understanding the jacobians required for the 'landmark update', on page 35.
What exactly is Jxr and Jz taking as input? Is it taking the the current rotation of the robot, plus the addition of the odometry update? IE, the rotation that is now stored in the 'X' state vector. Or are they taking the angle from the Inverse Sensor Model, and if so, what's the 'delta' angle from?
Thanks.

A:

The answer
Specifically, the arguments to this jacobian are the state of the robot.
The reason
It is the jacobian of the measurement function with respect to the landmark state. 
If you knew the state of the robot and landmark, what function would you use to predict what the measurement would be? If you have a range sensor, it would be the distance between the landmark and robot positions. Take the jacobian of this function, with respect to each of the state variables (robot x, robot y, robot theta, landmark x, landmark y)
In their first example, we're measuring the difference in x and y.
So the predicted position of the landmark equals the position of the robot plus the $x$ and $y$ difference (rotated a little by the robot rotations).
So the jacobian is $$\begin{bmatrix}
\frac{d h_1}{dx_r}, \frac{d h1}{dy_r}, \frac{d h1}{d\theta_r}\\
\frac{d h_2}{dx_r}, \frac{d h2}{dy_r}, \frac{d h2}{d\theta_r}\\
\end{bmatrix}$$
Here, $h1$ is the function which gives the $x$ coordinate of the landmark, and $h2$ is the function which gives the $y$ coordinate of the landmark. 

