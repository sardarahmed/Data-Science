Q:

Controlling an ESC for Brushless Motors with an RPi

I'm looking to build a new (first) quadcopter without the conventional flight controller and radio, with an onboard RPi and applying some newfound knowledge on autonomous control to improve my coding skills.
Although, since I've never actually built a quadcopter, I don't actually have any experience in using brushless motors.
I'll be using a RPi B+, so controlling them over I2C was something I looked into. The B+ though only has two I2C interfaces. It also only has two hardware PWM pins and I'm unsure whether software PWM would be enough. I found the Afro SimonK-based ESCs from HobbyKing which have I2C (Intended for the MikroKopter).
I've looked around and people have used the Adafruit 16-channel PWM/Servo drivers to control them. Is this an option to look into? Or is there perhaps a better way?
Also, would be it particularly safe if the RPi is run off the ESC's BEC? It's confusing because, when the ESC is powered on, well, it'll be powered on before the RPi comes up. What do ESCs do when they have bad input?

A:

Operating an ESC is practically the same as operating a servo. The main difference is that instead of the pulse width translating to a position  on the servo, it translates to an output speed. The range of widths is identical with ~1000µs representing the lowest setting and ~2000µs representing full on.  These values can sometimes go beyond (as overshoot), but those are usually considered the 0% and 100% values.
I would search for any sort of servo libraries for the RasPi, they will do the trick. Using an additional servo controller though is always an option. 
It is completely reasonable to use the BEC to power your electronics.

