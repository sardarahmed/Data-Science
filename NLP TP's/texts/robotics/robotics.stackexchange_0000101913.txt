Q:

Ros Navigation Stack

I want to ask about the Navigation Stack, i have been following (https://automaticaddison.com/how-to-set-up-the-ros-navigation-stack-on-a-robot/) tutorial
My question is can i complete the Navigation process without IMU sensor and sensor fusion and if so what is required from me would appreciate it if someone looked inside the tutorial in odom publishing would deleting the imu and sensor fusion launch files be enough or do i need to do more?

Originally posted by Os7 on ROS Answers with karma: 50 on 2022-06-07
Post score: 0

A:

You need to add something that publishes the odometry.
Odometry is telling navigation how much your robot has moved (or how much it thinks it has moved). If you don't have that, navigation assumes the robot isn't actually moving.
As for how you would do that (to catch that question in advance) it matters a lot what you're actually using as a robot. Are you using a Gazebo simulation? Then you're probably using the gazebo_ros diff_drive_controller. In that case it's as simple as setting the parameter publishOdomTF to true.
If you're using a physical robot, then the question is "how are you moving it". If you're using ros_control, you need to tell it to publish the odometry (again, by changing a parameter).

Originally posted by Joe28965 with karma: 1124 on 2022-06-09
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Os7 on 2022-06-09:
Yes a physical robot , i have been publishing odometry from Arduino to ros via encoders , it delivers the speed of the robot to ros is that enough or does the navigation stack need the encoder ticks of left and right wheels ? I move the robot using the cmd topic with teleop and all that
Comment by Joe28965 on 2022-06-09:
Navigation only needs the odometry (which is the speed/rotation of the robot). It does not need the encoder ticks or the individual speeds of each wheel.
What it does need, is for the odometry to be published in the TF tree (take a look at the tf tree from this question). Something needs to publish that TF. I know ros_control can easily do that, but I don't know if that's what you're currently using.
If it's not, you'll need to publish the TF yourself, although it might be less of a headache to switch to using ros_control over publishing the TF yourself. Are you using a self built robot, or one that's available from somewhere?
Comment by Os7 on 2022-06-09:
I see, no its a self built robot for graduation project, this is the first time i am hearing about ros_control will take a look at it and try to implement it if possible
Comment by Joe28965 on 2022-06-09:
It's quite useful. Right now, I'm assuming you've written a piece of code that takes the cmd_vel and calculates the speed for each wheel.
If you use ros_control and  you use the correct controller (diff_drive/ackermann/holonomic) and then configure them (setting wheel separation, wheel radius) it will calculate the speed for each wheel AND if you give it the speed of each wheel back, it will calculate the odometry and publish/broadcast the tf for you.
There are also other things you can set in ros_control like the max velocity, max acceleration, such like that.
If you've got a diff drive robot, you can take a look at the diff_drive_controller.

