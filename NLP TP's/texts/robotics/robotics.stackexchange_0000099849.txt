Q:

what would happen if GPS is missing, while using robot_localization pkg

hi everyone,
I want to know if I use three instances of the robot_localization package, what would happen if in some parts of the path the GPS is missing or limited, what would happen to the robot localization? does it able to do navigation? the idea of applying two controllers, is it applicable to this situation?
https://github.com/nickcharron/waypoint_nav
http://docs.ros.org/en/melodic/api/robot_localization/html/index.html#:~:text=robot_localization%20is%20a%20collection%20of,estimation%20nodes%2C%20ekf_localization_node%20and%20ukf_localization_node%20.
thanks

Originally posted by Delbina on ROS Answers with karma: 109 on 2021-08-17
Post score: 0

A:

If GPS is missing then you will rely on continuous sensory data such as wheel odometry+Imu, despite being able to deal with accumulative drift errors, GPSs are not always reliable under bad weather or poor connection conditions. Depending on quality and setup of your GPS device you may also get constant jumps around.
Robot localization package wiki explains this thoroughly, you are encouraged to take a look into Integrating GPS data section.
As final word to your question, do your navigation and planning on continuous data instance of EKF, in that case even you miss some signals from GPS, the system still should be able to function

Originally posted by Fetullah Atas with karma: 819 on 2021-08-17
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Delbina on 2021-08-17:
Dear @Fetullah Atas, thanks a lot for your answer,
one more question, if I use slam as the provider of the map for robot_localization pkg (I have already put the publish_tf_map in a false mode in SLAM setting), then How the switch from GPS to SLAM (for navigation) happen? thanks
Comment by Fetullah Atas on 2021-08-17:
If you find the answer useful please do upvote and mark it as accepted. For your follow up question, do you mean you set publish tf of EKF instance to false or SLAM ?
If you mean you disabled publish tf for SLAM, that’s good as it wouldn’t conflict with tf that’s being published by robot localization. Does your slam publish some sort of odometry or pose message ? If yes, you can input that as another source to EKF node, as for the switching, I am
Not entirely sure about that but to my understanding, if you are fusing odometry/gps and odometry/slam into same instance, robot localization should be able to use what’s available, so I am not sure if a switching mechanism is required.
Comment by Delbina on 2021-08-17:
yes, i disabled publish_tf in SLAM,
actually I am using RTABMAP and it publishes odometry information as well as pose. in which part of robot_localization i can give these data as input?! you mean, for example, instead of /warthog_velocity_control/odom , should I put /rtabmap/odom?! then what about the matrix? it will remain unchanged?
Comment by Fetullah Atas on 2021-08-18:
Append the slam odometry to existing list. so if you have warthog/odom as odom0, create another set of configuration with odom1. As for the matrix, select the true for the states that you think slam does a good job estimating. E.g x and v velocities.

