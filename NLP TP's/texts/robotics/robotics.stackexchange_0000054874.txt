Q:

How to import module to service code in Python?

Hello, everyone!
I'm writing a ROS service for my robot in Python. I have one file which contains all code in arm_mover.py . The code has become too big and I need to replace a part to another module helpers.comm. But I don't understand how I must import my new module to the main script. Lines like 'import helpers.comm' or 'import package_name.helpers.comm' don't work.
/package_root
 |--/scripts
 |   |-----arm_mover.py
 |--/src
     |-----/helpers
           |--__init__.py
           |--comm.py

Thanks, for help.

Originally posted by flipback on ROS Answers with karma: 16 on 2013-10-16
Post score: 0

Original comments
Comment by felix k on 2013-10-17:
You got that import roslib; roslib.load_manifest('my_package') line in your script?
Comment by flipback on 2013-10-21:
At first not, but I tried it out. It didn't help =(

A:

I have found a decision by myself. But it's not so elegant:
path = os.path.dirname(__file__) + "/../src/"
sys.path.append(path)

Maybe someone has a more pretty idea.

Originally posted by flipback with karma: 16 on 2013-10-21
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by makokal on 2013-10-21:
You could add imports for the needed classes/... in the init.py file, but again that is now a clean way

