Q:

moving custom robot arm to pose goal

I'm following the tutorial at for moving the PR2 arm to a pose goal (link) but I'm having trouble to transitioning this to a custom non-pr2 robot in simulation.
As I understand it the motion plan request must call an action server. From here I'm sort of lost. Can I use the warehouse planner to initialize the robot, and then run a new node to request a new post?

Originally posted by mrtc on ROS Answers with karma: 112 on 2012-08-06
Post score: 1

A:

Your test case is failing when move_arm triggers a planning scene sync via the setPlanningSceneDiff service. Maybe inspecting the relevant source code will provide you with more clues. Here's the relevant source files involved, all belonging to the planning_environment package:
collision_models_interface.cpp contains the CollisionModelsInterface::syncPlanningSceneCallback(...), which is woken up on a sync request. Here's where "Setting planning scene state to NULL" comes from.
If you follow the method's logic, you'll pass through CollisionModels::setPlanningScene(...), in
collision_models.cpp, which is where "Incomplete robot state in setPlanningScene" comes from, and end up at setRobotStateAndComputeTransforms(...), in model_utils.cpp where the actual problem seems to lie. There's one code path towards the end that returns false, and does not log the failure reason. That's where I believe you should look into.

Originally posted by Adolfo Rodriguez T with karma: 3907 on 2012-08-09
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by mrtc on 2012-08-15:
Very helpful! I copied the planning_environment package into my workspace and had it output the data causing false to be returned. The string::bool iterator loop is indicating "floating_rot_w" is false, whatever that means. I see it shows up in planning_models so I'll start digging in there.
Comment by mrtc on 2012-08-30:
After doing much back tracing, all I found was that it could not find several of the paramaters when this line is called from any of my programs: get_planning_scene_client.call(planning_scene_req, planning_scene_res). Even just requesting state validity causes the visualizer to crash.
Comment by yangyangcv on 2012-08-31:
exactly the same problem with you mrtc. if you find a solution, plz post here. and i'll try to solve this too.

