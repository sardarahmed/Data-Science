Q:

How can I convert RGB colors to CMYK for my airbrush robot?

I am developing a robot which paints using an airbrush (3D painting). I intend to use several colors as a CMYK printer, but I do not know how to do the conversion of RGB colors in the computer to the dosage of colors in CMYK.

A:

Professional CMYK conversions use algorithms that use blend matrices and even non-linear warping to fit the RGB color space (which color space? sRGB?) onto available printing inks. The best way to do that might be to find a library that does this, and find the specific parameters for the inks you want to use.
You need to design a system that can deliver an increment in coverage based on an input.
For example, in offset printing and laser printing, the picture is broken up in very small dots (a halftone screen,) and a percentage of dots is covered to achieve a certain degree of saturation. The different colors in 4-color printing are printed using halftone screens at different angles to minimize the case where one colored dot will keep falling right on top of another colored dot and thus "punch out" the covered color.
For an airbrushing robot, perhaps you can measure degree of paint feed (pressure on the lever) and dwell time, and convert that to a measurement of degree of paint coverage. The air brush works a bit like a stochastic paint particle emitter, removing N % of uncovered area within its zone of effect for every millisecond it is "on." The covered area is also a 2D function that's strongest in the center, and fades out towards the edges.
In my opinion, the most interesting programming challenge in this design is figuring out the optimal path to "sweep" the airbrush to get the right amount of coverage of each kind of paint on each area, while not over/under-covering certain areas and making a mess. Holding the airbrush very close, and painting one "pixel" at a time, would work, but wouldn't be very "artistic."

