Q:

Dynamic texture in rviz?

Hey all,
I'm looking at building an rviz plugin which would display the state of OTTO's programmable LED strip. I'm pretty sure I don't want to create 300+ new pieces of single-colour geometry, so I'm wondering about the feasibility of supplying a single geometry for the strip as a whole, and then texturing it at runtime from a plugin.
I found some info on doing this in Ogre here: http://ogre3d.org/tikiwiki/Creating+dynamic+textures
But I'm wanting to get a general sanity check on what the pitfalls are going to be with this approach. How possible is it to mix native Ogre calls in with rviz's geometry? Is there another plugin which demonstrates something like what I'm wanting to do here?

Originally posted by mikepurvis on ROS Answers with karma: 1153 on 2016-02-22
Post score: 1

Original comments
Comment by natsu on 2017-07-21:
Hi mikepurvis, were u succesfull to do the dynamic texturing part(i.e texturing at runtime)??

A:

Update
I have an rviz plugin that subscribes to an image topic and allows the user to specify the scale and the tf that the image ought to be aligned to:
https://github.com/lucasw/rviz_textured_quads
Video example of a webcam on a quad inside rviz:
https://www.youtube.com/watch?v=RzT0tkuJkwA
I've tested it in jade and kinetic.
It was forked from another project that adapted code and made a standalone version of the texture mesh code from vigir_ocs_rviz_plugins mentioned below.
It uses a texture projection method rather than (the probably simpler) dynamic texturing above, but could be generalized to have non-rectangular shapes to project onto (like provide a mesh via a Marker or some other message).
Old answer
Rviz: Display image in 3D scene had a suggestion to use a custom mesh display plugin developed for the DRC by the Vigir team.
I attempted just that https://github.com/lucasw/vigir_ocs_common/tree/master/vigir_ocs_rviz_plugins/vigir_ocs_rviz_plugin_mesh_display_custom but haven't gotten it working (but also haven't spent much time on it).  They also had a forked rviz that some of the nodes in the original repo needed, hopefully not this one too.
The point of the plugin was to project a texture onto an arbitrary mesh, which is cool, but overkill for you and that other question- a custom plugin that just creates a textured quad at a rviz property defined tf and size and updates the texture via Image topic would be great.
Take a look at any rviz plugin and it is all raw Ogre inside them.  The pitfalls are that code lives in a plugin environment, so rviz has control of global settings and making the main calls to Ogre which have to be respected, and it is possible to do screwy things within a plugin that mess up rendering in the entirety of rviz.
I imagine performance is poor, but if your state doesn't change that quickly it maybe is sufficient to load a textured mesh in a standard mesh resource rviz Marker, and updating the texture on disk and resending the Marker as needed from another node.
marti_visualization_msgs/TexturedMarker is only for mapviz, at first I thought there was an rviz plugin to show it.

Originally posted by lucasw with karma: 8729 on 2016-02-22
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by mikepurvis on 2016-02-22:
Thanks for the response! It's animation, so it'll definitely need to an in-memory texture, but I'll definitely use this as a starting point.
Comment by lucasw on 2016-10-23:
I just found this: https://github.com/MohitShridhar/rviz_textured_quads - I've updated it to work in Kinetic with Qt5 ( https://github.com/lucasw/rviz_textured_quads/tree/kinetic-devel ).  It looks to be working with the test script (I also fixed that up). Did you get anything working you can share?
Comment by William on 2016-10-27:
Cool    :)

