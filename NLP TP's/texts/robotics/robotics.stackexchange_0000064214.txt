Q:

Is it bad practice to create and shutdown services during runtime?

Hi all!
I'm trying to connect my robot to a webserver using a node communication node.
This node creates the service "/get_webdata" when the connection is established and authenticated. When the connection is lost, the service is destroyed again.
This allows me to use wait_for_service in other nodes, which is pretty useful for waiting without ugly sleep-loops.
So my question is: is this a common ros practice to use:
webdata = rospy.Service("/get/webdata", Webdata, self.web_cb)

and
webdata.shutdown("Connection lost")

to signal other nodes if the connection is up?
I didn't read anywhere that it's bad practice, but it feels like I'm abusing this feature.
Would it be a better solution to keep the service running all the time and instead return a status variable, indicating that the connection is unavailable?

Originally posted by didi2002 on ROS Answers with karma: 11 on 2014-11-24
Post score: 1

A:

Hi didi2002!
if you are providing some sort of feedback or action after the service is called I don't see any problem. However, if the only reason why the service is online is to be able to ask if service "X" is available, then maybe a true/false parameter in the parameter server may be enough. The alternative solution that you are proposing is also valid.

Originally posted by Miquel Massot with karma: 1471 on 2014-11-24
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by didi2002 on 2014-11-24:
The ros-service is also used by the other nodes, not only for checking if the connection is up.
I like the idea of using the parameter server, but I want to avoid polling and sleeping because that introduced quite a delay.
Thanks for your reply!

