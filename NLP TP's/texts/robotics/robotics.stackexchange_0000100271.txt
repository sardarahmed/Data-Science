Q:

particle cloud spreads out

when using navigation stack the pose array are going everywhere I am not getting which parameter has to be tuned to make it narrower
amcl
<?xml version="1.0"?>
<launch>

  <!-- Map server -->
  <arg name="map_file" default="$(find udacity_bot)/maps/jackal_race.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!-- Localization-->
  <node pkg="amcl" type="amcl" name="amcl" output="screen">
    <remap from="scan" to="udacity_bot/laser/scan"/>
    <param name="odom_frame_id" value="odom"/>
    <param name="odom_model_type" value="diff-corrected"/>
    <param name="base_frame_id" value="robot_footprint"/>
    <param name="global_frame_id" value="map"/>
    <param name="min_particles"  value="300"/>
    <param name="max_particles"   value="3000"/>
    <param name="kld_err" value="0.01"/>
    <param name="transform_tolerance"  value="1"/>
    <param name="recovery_alpha_slow " value="0.001"/>
    <param name="recovery_alpha_fast" value="0.1"/>
   </node>

<!-- Move base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

    <rosparam file="$(find udacity_bot)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find udacity_bot)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find udacity_bot)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find udacity_bot)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find udacity_bot)/config/base_local_planner_params.yaml" command="load" />

    <remap from="cmd_vel" to="cmd_vel"/>
    <remap from="odom" to="odom"/>
    <remap from="scan" to="udacity_bot/laser/scan"/>

    <param name="base_global_planner" type="string" value="navfn/NavfnROS" />
    <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>
  </node>

</launch>

and cost map common
map_type: costmap

obstacle_range: 1.0
raytrace_range: 1.0

transform_tolerance: 10
update_frequency : 10
publish_frequency: 10
inflation_radius: 1.0

observation_sources: laser_scan_sensor

laser_scan_sensor: {sensor_frame: hokuyo, data_type: LaserScan, topic: /udacity_bot/laser/scan, marking: true, clearing: true}

Originally posted by harish556 on ROS Answers with karma: 74 on 2021-10-10
Post score: 0

A:

I found this to be helpful, back when I first started using AMCL: Basic Navigation Tuning Guide
.

Originally posted by Rick Armstrong with karma: 567 on 2021-10-10
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by harish556 on 2021-10-11:
thanks that worked
Comment by gvdhoorn on 2021-10-11:
What worked?
Comment by harish556 on 2021-10-11:
@gvdhoom I mine I have added odometry model parameters and tuned a bit it worked

