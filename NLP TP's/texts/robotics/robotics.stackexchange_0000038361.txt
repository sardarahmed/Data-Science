Q:

Warehouseviewer on real Care-o-bot hanging up

Hi, i am current working with the arm_navigation stack on our care-o-bot. I have followed the IROS ompl tutorial to run the arm navigation. I have been succeeded to send the arm command from warehouse viewer to the gazebo simulation. But when i switch to the real robot, the warehouse viewer tend to died after i push the accept button.
The arm_navigation seems to work fine, it succeeded to connect to the right action server and i got the output similar like the one i got in simulation. But the warehouse viewer doesn't seem to work. I also try to run both arm navigation and warehouseviewer on the robot and on the desktop pc or one on remote one on robot pc by changing the corresponding warehouse_hostname parameter, but it gives no improvements.
And when i run the warehouse at a desktop pc, which means the warehouse hostname is the robot pc. I got following debug info from the rxconsole. It seems to be a connection error to the database.
Starting mongodb with db location arm_navigation_dbs/cob3_4 listening on cob3-4-pc1:27020
 

Connection::drop(2)

TCP socket [36] closed

Connection::drop(0)

Connection::drop(2)

Connection::drop(2)

Root node has meshes 0xb238d1a0

Setting joint origin for torso_lower_neck_tilt_link to 0.155 0 0.892

Setting joint origin for torso_pan_link to 0 0 0

Root node has meshes 0x8764ff0

Setting joint origin for torso_upper_neck_tilt_link to 0 0 -0.237

Setting joint origin for head_color_camera_l_link to -0.05 -0.1 -0.01

Setting joint origin for head_cam3d_link to 0.0797163 -0.030267 0.00191677

Setting joint origin for head_cam3d_frame to 0 0 0

Setting joint origin for head_color_camera_l_frame to 0 0 0

Setting joint origin for head_color_camera_r_link to 0.120544 0.000735863 -0.00388596

Setting joint origin for head_color_camera_r_frame to 0 0 0

Root node has meshes 0x863b9c8

Setting joint origin for head_cover_link to 0 0 0

Root node has meshes 0xadc9c1d0

Setting joint origin for torso_tray_link to 0.2406 0.19 0.732

Group arm_joints

Joints:

arm_1_joint

arm_2_joint

arm_3_joint

arm_4_joint

arm_5_joint

arm_6_joint

arm_7_joint

Fixed joints:

Group links:

arm_5_link

arm_6_link

arm_3_link

arm_7_link

arm_4_link

arm_1_link

arm_2_link

Group kuka_arm

Joints:

arm_1_joint

arm_2_joint

arm_3_joint

arm_4_joint

arm_5_joint

arm_6_joint

arm_7_joint

Fixed joints:

arm_0_joint

Group links:

arm_5_link

arm_6_link

arm_3_link

arm_7_link

arm_4_link

arm_1_link

arm_2_link

arm_0_link

Calling ODE Init res 1

Initializing new thread (1 total)

Init says 1

Initializing ODE

No entry for sdh_grasp_link

No entry for sdh_tip_link

Link base_footprint padding 0.01

Link base_link padding 0.01

Link arm_0_link padding 0.01

Link arm_1_link padding 0.01

Link arm_2_link padding 0.01

Link arm_3_link padding 0.01

Link arm_4_link padding 0.01

Link arm_5_link padding 0.01

Link arm_6_link padding 0.01

Link arm_7_link padding 0.01

Link sdh_palm_link padding 0.01

Link sdh_finger_21_link padding 0.01

Link sdh_finger_22_link padding 0.01

Link sdh_finger_23_link padding 0.01

Link sdh_finger_11_link padding 0.01

Link sdh_finger_12_link padding 0.01

Link sdh_finger_13_link padding 0.01

Link sdh_thumb_1_link padding 0.01

Link sdh_thumb_2_link padding 0.01

Link sdh_thumb_3_link padding 0.01

Link base_laser_front_link padding 0.01

Link base_laser_rear_link padding 0.01

Link base_laser_top_link padding 0.01

Link bl_caster_rotation_link padding 0.01

Link bl_caster_r_wheel_link padding 0.01

Link br_caster_rotation_link padding 0.01

Link br_caster_r_wheel_link padding 0.01

Link fl_caster_rotation_link padding 0.01

Link fl_caster_r_wheel_link padding 0.01

Link fr_caster_rotation_link padding 0.01

Link fr_caster_r_wheel_link padding 0.01

Link torso_lower_neck_tilt_link padding 0.01

Link torso_pan_link padding 0.01

Link torso_upper_neck_tilt_link padding 0.01

Link head_color_camera_l_link padding 0.01

Link head_cam3d_link padding 0.01

Link head_cam3d_frame padding 0.01

Link head_color_camera_l_frame padding 0.01

Link head_color_camera_r_link padding 0.01

Link head_color_camera_r_frame padding 0.01

Link head_cover_link padding 0.01

Link torso_tray_link padding 0.01

Publisher update for [/planning_scene_warehouse_viewer_controls/feedback]:  already have these connections: 

Hostname is tumias

Initialized warehouse_host to cob3-4-pc1 (default was localhost)

Initialized warehouse_port to 27020 (default was 27017)

Connecting to db at cob3-4-pc1:27020

Accepted connection on socket [29], new socket [34]

Adding tcp socket [34] to pollset

TCPROS received a connection from [192.168.24.160:51619]

Connection: Creating TransportSubscriberLink for topic [/joint_states] connected to [callerid=[/robot_state_publisher] address=[TCPROS connection to [192.168.24.160:51619 on socket 34]]]

Accepted connection on socket [29], new socket [35]

Adding tcp socket [35] to pollset

TCPROS received a connection from [192.168.24.160:51620]

Connection: Creating TransportSubscriberLink for topic [/joint_states] connected to [callerid=[/teleop/teleop_node] address=[TCPROS connection to [192.168.24.160:51620 on socket 35]]]

Accepted connection on socket [29], new socket [36]

Adding tcp socket [36] to pollset

TCPROS received a connection from [192.168.24.160:51621]

Connection: Creating TransportSubscriberLink for topic [/joint_states] connected to [callerid=[/environment_server] address=[TCPROS connection to [192.168.24.160:51621 on socket 36]]]

Connecting to db at cob3-4-pc1:27020

Connecting to db at cob3-4-pc1:27020

Connecting to db at cob3-4-pc1:27020

Connecting to db at cob3-4-pc1:27020

Connecting to db at cob3-4-pc1:27020

Connecting to db at cob3-4-pc1:27020

When i run the warehouse on the robot pc, warehouse dies immediately and i got this on rxconsole
 Starting mongodb with db location arm_navigation_dbs/cob3_4 listening on localhost:27020

Connecting to db at localhost:27020

Connecting to db at localhost:27020

Connecting to db at localhost:27020

Connecting to db at localhost:27020

Connecting to db at localhost:27020

Starting load

Num Planning Scenes: 0

and in the console
ROS_MASTER_URI=http://cob3-4-pc1:11311

core service [/rosout] found
process[mongo-1]: started with pid [19273]
process[planning_scene_warehouse_viewer-2]: started with pid [19274]
QLayout: Attempting to add QLayout "" to WarehouseViewer "", which already has a layout
QObject::connect: Cannot queue arguments of type 'Qt::Orientation'
(Make sure 'Qt::Orientation' is registered using qRegisterMetaType().)
QObject::connect: Cannot queue arguments of type 'Qt::Orientation'
(Make sure 'Qt::Orientation' is registered using qRegisterMetaType().)
QObject::connect: Cannot queue arguments of type 'Qt::Orientation'
(Make sure 'Qt::Orientation' is registered using qRegisterMetaType().)
QObject::connect: Cannot queue arguments of type 'Qt::Orientation'
(Make sure 'Qt::Orientation' is registered using qRegisterMetaType().)
QObject::connect: Cannot queue arguments of type 'Qt::Orientation'
(Make sure 'Qt::Orientation' is registered using qRegisterMetaType().)
[planning_scene_warehouse_viewer-2] process has died [pid 19274, exit code -11].
log files: /u/dong/.ros/log/9a32d9d0-639c-11e1-8dd9-00c08800b64c/planning_scene_warehouse_viewer-2*.log
^C[mongo-1] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
done

Any suggestions?

Originally posted by dong on ROS Answers with karma: 13 on 2012-03-01
Post score: 0

A:

Hmm, that sounds a bit like my problem. As soon as I try to use real robot data the warehouse viewer crashes. Are you using an installation with the newest deb? Maybe there is a bug in that one.
Have you already tried the suggestions in this post? http://answers.ros.org/question/28163/error-when-using-real-robot-data-for
/update
I got the warehouse viewer running for me now. Maybe the below solves your problem, too.
Digging deeper using gdb I found the troublemaker in PlanningSceneEditor::jointStateCallback in move_arm_utils.cpp. In this function the assumption is made, that the velocity array of the joint_state message has the same size as the position array. This is not the case for our robot (we don't publish velocities, only positions). Hence, I changed the code as shown below and the warehouse viewer runs smoothly now.
Original:

//message already been validated in kmsm
for(unsigned int i = 0; i position.size(); ++i)
{
  joint_state_map[joint_state->name[i]] = joint_state->position[i];
  joint_velocity_map[joint_state->name[i]] = joint_state->velocity[i];
}

New:

//message already been validated in kmsm
if ( joint_state->velocity.size() == joint_state->position.size() )
{
  for(unsigned int i = 0; i position.size(); ++i)
  {
    joint_state_map[joint_state->name[i]] = joint_state->position[i];
    joint_velocity_map[joint_state->name[i]] = joint_state->velocity[i];
  }
}
else
{
  for(unsigned int i = 0; i position.size(); ++i)
  {
    joint_state_map[joint_state->name[i]] = joint_state->position[i];
    joint_velocity_map[joint_state->name[i]] = 0.0;
  }
}

PS: I tried attaching the patch to this post, but keep getting the error "TypeError: data is undefined".

Originally posted by bit-pirate with karma: 2062 on 2012-03-03
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by dong on 2012-03-04:
Thanks Marcus. I have the same issue as you did. The velocity value of some joints are not published. I add some code in my driver nodes and now everything goes fine.
Comment by MartinW on 2013-01-30:
Hey guys, I just checked and my warehouse viewer still hangs after these changes. This is what my output from the console is: http://i.imgur.com/w6xMPH4.png. I am also able to visualize in rviz and I am publishing joint_states: http://i.imgur.com/y8WzBtZ.png. Any Ideas?

