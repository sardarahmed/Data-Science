Q:

In Roscpp, can I access parameters from different nodes?

Example: I have always the same node type, lets say with a parameter named "shape"
I make one node (node A) with shape = "square"
I make a second node (node B) with shape = "circle"
in the console if i did rosparam list i would see
/nodeA/shape
/nodeB/shape
and if i did rosparam get /nodeA/shape i would see "Square", but is it possible in my test file, my cpp file, to use some form of get parameter when creating a node, so that I can see that node A shape is "Square"?
pseudocode:
    if(&newNode/shape == &nodeA/shape)
              kill(newNode, SIGINT)

Overall, i want to be able to test and see if a value of the parameter exists, and then if it exists, i will do a kill(pid, SIGINT).
But i am having a hard time accessing the parameter value of the other nodes.

Originally posted by thailor3 on ROS Answers with karma: 25 on 2015-06-24
Post score: 0

A:

ROScpp provides a getParam() interface on the nodeHandle. It accepts "global" (fully qualified) names beginning with a /, as well as "private" names relative to that node.

Originally posted by joq with karma: 25443 on 2015-06-24
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by thailor3 on 2015-06-25:
so in order to get any node's param on the rosparam server, then i can do getParam()? for instance if i have the list of params:
/image1/cam1/1
/image1/cam1/2
/image2/cam2/1
/image2/cam2/2
and i am launching another node that will spawn the paramters /image3/cam3/1, i do getParam("/image1/cam1/1")?
Comment by mgruhler on 2015-06-26:
Correct! Every node has access to the gull parameter server. You just have to get the names correct.

