Q:

Why won't my node exit

I'm running a simple node with a single timer(10hz), when a flag running is set the node should destroy itself and I expect to exit out of rclpy.spin(), however nothing happens. I need to Ctrl+C to exit the program. Is this to be expected?
Code:
def MyNode(Node):
 def __init__(self, name):
  super().__init__(name)
  self.running = false
  self.create_timer(0.1, self.action)
 def action(self):
  self.running=true
  self.destory_timer()
  self.destory_node()

Originally posted by renob321 on ROS Answers with karma: 33 on 2022-01-12
Post score: 0

A:

Destroying the node won't exit rclpy.spin() loop. One way to implement this is by checking your node's self.running status in main loop and using rclpy.spin_once() -function. Here is a fully working example:
#!/usr/bin/env python3
import rclpy
from rclpy.node import Node

class MyNode(Node):
    def __init__(self, name):
        super().__init__(name)
        self.running = True
        self.timer = self.create_timer(0.1, self.action)

    def action(self):
        print("Callback")
        self.running = False
        self.destroy_timer(self.timer)

def main(args=None):
    rclpy.init(args=args)

    my_node = MyNode("my_node")
    while my_node.running and rclpy.ok():
        try:
            rclpy.spin_once(my_node)
        except KeyboardInterrupt:
            break
        
    my_node.destroy_node()
    print("Shutting down rclpy")
    rclpy.shutdown()

if __name__ == '__main__':
    main()

Originally posted by jannkar with karma: 36 on 2022-01-14
This answer was ACCEPTED on the original site
Post score: 1

