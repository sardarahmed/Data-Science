Q:

Multiple usb webcams with their own calibration file

I launched two webcams with the usb_cam package (ROS Indigo).
My launchfile is very simple:
<launch>
  <node name="left" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video0" />
    <param name="image_width" value="960" />
    <param name="image_height" value="720" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="my_stereo/left" />
        <param name="io_method" value="mmap"/>
      </node>

  <node name="right" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video1" />
    <param name="image_width" value="960" />
    <param name="image_height" value="720" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="my_stereo/right" />
    <param name="io_method" value="mmap"/>
  </node>

</launch>

And the correct output is
[ INFO] [1508058286.935975255]: using default calibration URL
[ INFO] [1508058286.936074756]: camera calibration URL: file:///home/marcor/.ros/camera_info/head_camera.yaml
[ INFO] [1508058286.936820975]: using default calibration URL
[ INFO] [1508058286.936874935]: camera calibration URL: file:///home/marcor/.ros/camera_info/head_camera.yaml
[ INFO] [1508058286.936916388]: Starting 'head_camera' (/dev/video0) at 960x720 via mmap (yuyv) at 30 FPS
[ INFO] [1508058286.937664502]: Starting 'head_camera' (/dev/video1) at 960x720 via mmap (yuyv) at 30 FPS

All works and webcams are correctly published.
My question is: both camera are launched with the same calibration file. There is a way to set different calibraton .yaml files for every different camera? (I already have these files, left.yaml and right.yaml)

Originally posted by marcoresk on ROS Answers with karma: 76 on 2017-10-15
Post score: 0

A:

usb_cam reads a camera_info_url parameter at startup. From the parameter documentation:

~camera_info_url (string, default: '')
An url to the camera calibration file that will be read by the CameraInfoManager class

You can use that to provide package:// or file:// urls to the left.yaml and right.yaml that you have.

Originally posted by gvdhoorn with karma: 86574 on 2017-10-15
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by marcoresk on 2017-10-15:
Thank you very much

