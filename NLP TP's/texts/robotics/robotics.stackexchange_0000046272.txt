Q:

Function logic of PR2 Odometry iterativeLeastSquares

Hi all,
Can someone tell what happens in "iterativeLeastSquares" method in http://mirror.umd.edu/roswiki/doc/api/pr2_mechanism_controllers/html/classcontroller_1_1Pr2Odometry.html#af876e6a197abaf3f511d41389a1794d6
According to its description the function is used to compute the most likely solution to the odometry using iterative least squares. And, I tried understanding the code but with no luck.
If someone can give a rough idea, then I would be able to follow the code.
Thank you
CS

Originally posted by ChickenSoup on ROS Answers with karma: 387 on 2012-12-03
Post score: 0

Original comments
Comment by ChickenSoup on 2012-12-06:
what I need to know is what the algorithm does to the individual wheel velocities and steering angles of casters to come up with the final velocity of the base. If someone can give a pointer to a research paper that would be really appreciated.

A:

The "iterativeLeastSquares" function implements an iterative least squares technique to compute odometry.

It actually computes and returns x where A*x = b

x: [Vx Vy W]^T of the whole robot base i.e. Vx = odom_vel_.linear.x; Vy = odom_vel_.linear.y; W = odom_vel_.angular.z

b: [v0 0 v1 0 v2 0 v3 0]^T here v0 = wheel 0's velocity in its steering direction and the 0 = wheel 0's velocity in the direction perpendicular to its steering direction and so on.

A: the matrix that transforms x to individual wheel velocities b.

Originally posted by ChickenSoup with karma: 387 on 2013-02-08
This answer was ACCEPTED on the original site
Post score: 0

