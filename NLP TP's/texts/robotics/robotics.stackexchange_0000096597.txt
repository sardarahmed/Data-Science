Q:

Cannot solve error in XML document

I am working through Python 3 for Robotics on Robot Ignite website and am having issues when trying to execute a script.
The below .py script contains the following:
from robot_control_class import RobotControl

robotcontrol = RobotControl()

laser1 = robotcontrol.get_laser(0)
print ("The laser value received is: ", laser1)

laser2 = robotcontrol.get_laser(360)
print ("The laser value received is: ", laser2)

laser2 = robotcontrol.get_laser(719)
print ("The laser value received is: ", laser2)

When I try execute the script I get the following errors:
user:~/catkin_ws/src/robot_control$ ./variables.py

from: can't read /var/mail/robot_control_class

./variables.py: line 3: syntax error near unexpected token `('

./variables.py: line 3: `robotcontrol = RobotControl()'

I have tried to find the solution using XML validation through a website here https://www.xmlvalidation.com/
The error is at the first line of code. The XML validator states that "Content is not allowed in prolog" for the first line:
from robot_control_class import RobotControl

Does anyone know what I am doing wrong?
Edit:
Robot_control_class and RobotControl are classes and modules created and provided by Robot Ignite for training purposes.

Originally posted by jimc91 on ROS Answers with karma: 29 on 2020-07-21
Post score: 0

A:

My best guess (and verified on my machine):
You forgot the Shebang (https://en.wikipedia.org/wiki/Shebang_(Unix)) to set the interpreter and thereby try to interpret the script as bash/shell script.
This should work:
#!/usr/bin/env python
from robot_control_class import RobotControl

robotcontrol = RobotControl()

laser1 = robotcontrol.get_laser(0)
print ("The laser value received is: ", laser1)

laser2 = robotcontrol.get_laser(360)
print ("The laser value received is: ", laser2)

laser2 = robotcontrol.get_laser(719)
print ("The laser value received is: ", laser2)

edit: the other option would be to explicitly run the interpreter with your script (python variables.py) but this won't work using rosrun my_awesome_package variables.py which relies on the shebang.
I'm not sure how XML comes into place here, so maybe think about another title to help others with similar issues find your question.
If you want to work with python3 (generally recommended, but a pain in kinetic or melodic) the shebang has to be #!/usr/bin/env python3

Originally posted by ipa-jba with karma: 153 on 2020-07-21
This answer was ACCEPTED on the original site
Post score: 1

