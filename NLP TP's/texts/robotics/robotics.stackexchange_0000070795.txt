Q:

Recieving a costmap2dros timeout

Hi everyone,
New to ROS so I'm trying to set up the system with the map and everything to work following the tutorials but I seem to have issues with the costmap2dros giving me timeouts. I finally managed to recieve a map in rviz which I consider a tremendous accomplishment considering the difficulties it has brought me. Anyway, my costmap parameters look as follows:
local_costmap:
  global_frame: odom
  robot_base_frame: base_laser/base_link
  update_frequency: 5.0
  publish_frequency: 2.0
  static_map: false
  rolling_window: true
  width: 6.0
  height: 6.0
  resolution: 0.05

global_costmap:
  global_frame: /map
  robot_base_frame: base_link
  update_frequency: 5.0
  static_map: true

obstacle_range: 1.0
raytrace_range: 1.5
robot_radius: 0.1
inflation_radius: 0.1
transform_tolerance: 0.3
robot_radius: 0.20
observation_sources: my_sensor 

laser_scan_sensor: {sensor_frame: /base_laser, data_type: LaserScan, topic: scan, marking: true, clearing: true}

I have also attached the map yaml code below as maybe there lies the issue:
image: map1.png
resolution: 0.01
origin: [0.0, 0.0, 0.0]
occupied_thresh: 0.56
free_thresh: 0.1
negate: 0

and finally the launch file... I hope that maybe you can spot a mistake I made somewhere here:
<launch>

 <include file="$(find amcl)/examples/amcl_omni.launch" />

  <node pkg="my_sensor" type="my_sensor" name="my_sensor" output="screen">
    <param name="sensor_param" value="param_value" />
  </node>

  <node pkg="my_odom" type="my_odom" name="my_odom" output="screen">
    <param name="odom_param" value="param_value" />
  </node>

  <node pkg="robot_setup_tf" type="tf_broadcaster" name="transform_configuration_name" output="screen">
    <param name="transform_configuration_param" value="param_value" />
  </node>

  <node pkg="robot_setup_tf" type="tf_listener" name="transform_configuration_name2" output="screen">
    <param name="transform_configuration_param2" value="param_value" />
  </node>

  <node name="map_server" pkg="map_server" type="map_server" args="/home/maciejm/catkin_ws/src/map1.yaml"/>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find my_robot_name_2dnav)/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find my_robot_name_2dnav)/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find my_robot_name_2dnav)/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find my_robot_name_2dnav)/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find my_robot_name_2dnav)/base_local_planner_params.yaml" command="load" />
    
  </node>

  <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="1 0 0 0 0 0 1 map odom 100" />

</launch>

Originally posted by maciejm on ROS Answers with karma: 33 on 2015-12-08
Post score: 0

A:

I found the error to be a bad configuration here with the odometry details. I recieved source code that was supposed to make it work without realising that the odom file was looking for base_footprint rather than base_link which I solved. Also had to switch off static transform publisher as mapping with tf_broadcaster proved just as useful.
I hope it helps people in the future.
Kind regards,
MaciejM

Originally posted by maciejm with karma: 33 on 2015-12-09
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by dpingk on 2017-02-15:
So, where did you corrected? tell me directly cause this problem drive me crazy ... thx in advance.

