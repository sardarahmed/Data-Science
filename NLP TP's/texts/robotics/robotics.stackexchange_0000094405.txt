Q:

Debugging tf frame with multiple parents

This is usually a combination of 2 problems

Multiple nodes to be publishing a transform of a frame (i.e. nodeA publishes /map -> /odom and nodeB publishes /map -> /odom) (EDIT: Turns out this is not an error)
Multiple parent frames are published for the same child frame (something publishes /map -> /odom while something else publishes /world -> /odom)

It seems that the usual methods for debugging tf tree don't help in this situation.  Is there any way to help isolate this problem?
In particular, how would one go about finding which is the offending node?

Originally posted by Rufus on ROS Answers with karma: 1083 on 2020-01-16
Post score: 0

A:

I believe roswtf has a tf plugin which checks -- among other things -- reparenting of frames.
Link to the ROS wiki: wiki/tf: roswtf plugin:

roswtf tf comes with a plugin for roswtf that automatically runs whenever you run roswtf. This plugin will analyze your current tf configuration and attempt to find common problems. To run, just invoke roswtf normally:

$ roswtf

Which would seem to be what you are asking.
The wiki page doesn't explain what actually is checked, but from the code:

time deltas ("Received out-of-date/future transforms")
reparenting of frames
cycle detection
multiple authority  (this would help with multiple broadcasters sending out the same frames)
"no msgs" (ie: are there any TF messages being published)
unnormalised quaternions

Link to the various error / warning messages: here.

Originally posted by gvdhoorn with karma: 86574 on 2020-01-17
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by gvdhoorn on 2020-01-17:
And roswtf may not mean what you think it does: #q277428 (and #q285116, a bit).
Comment by stevemacenski on 2020-01-17:
huh, good to know :-)
Comment by gvdhoorn on 2020-01-17:
Happened to remember using it some time (a long time) ago.
I feel roswtf doesn't get the love/attention it deserves. It's saved me quite a few times.

