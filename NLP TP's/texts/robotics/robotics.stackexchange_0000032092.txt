Q:

How to correctly use git with ROS

Hi all!
We are beginning building a stack in ros. And we want to use git as our version control system. But we find a lot of problems with conflicted files created by ROS when we build the packages.
To solve this kind of problems you have done a big .gitignore file ? Or do something to   build the project outsite ?
Thanks for all your answers,
Arnau

Originally posted by Catotaku on ROS Answers with karma: 163 on 2011-06-06
Post score: 10

Original comments
Comment by Arkapravo on 2012-11-20:
Good question !

A:

In our repository, we have a .gitignore file with the following contents:
.cproject
.project
.pydevproject
cmake_install.cmake
build/
bin/
lib/
msg_gen/
srv_gen/

(The first three lines are only relevant if you are using Eclipse.) By placing this file in the top-level directory of the repository, git will ignore all those files/folders even in all subdirectories.
This way, I only need a separate .gitignore file in a package directory to catch some special cases. One not-so-special "special case" is when you have an action definition (e.g., JointMovement in the package katana). In that case, I have the following .gitignore:
msg/JointMovementActionFeedback.msg
msg/JointMovementActionGoal.msg
msg/JointMovementAction.msg
msg/JointMovementActionResult.msg
msg/JointMovementFeedback.msg
msg/JointMovementGoal.msg
msg/JointMovementResult.msg
src/katana/
msg/lisp/

Unfortunately, I have not found a decent way yet to include these patterns into the global .gitignore.

Originally posted by Martin Günther with karma: 11816 on 2011-06-08
This answer was ACCEPTED on the original site
Post score: 8

Original comments
Comment by Lorenz on 2011-06-08:
I think the msg/lisp is not needed anymore, at least for diamondback. Roslisp generates its messages into msg_gen now.
Comment by AHornung on 2013-07-29:
Would the following work for actionlib-generated msgs in package FOO?
Comment by AHornung on 2013-07-29:
FOO/msg/*Action.msg
FOO/msg/*Feedback.msg
FOO/msg/*Goal.msg
FOO/msg/*Result.msg
Comment by AHornung on 2013-07-29:
(replace spaces with line breaks)
Comment by Martin Günther on 2013-07-29:
Yes, that works. Or borrowing from @"felix k"'s answer, you can also put */msg/*Action.msg etc. into the parent directory. Just tried it here.
NB: you can put line breaks into comments using shift-enter. :-)
Comment by Martin Günther on 2013-07-29:
Ooops. Seems like all the fancy markdown (and shift-enter trick) doesn't work any more in comments. My bad.

