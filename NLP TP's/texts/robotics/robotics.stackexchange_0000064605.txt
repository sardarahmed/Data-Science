Q:

ROS performace as number of topics increase

Hi,
I am very curious about how the latency and the communication speed decreases as I increase the number of topics. If I have a package creating 20 topic for control. Is that a good idea? I can make this into a single topic with 20 different options inside it.
I dont know If I am clear but I want to know if there are any guidelines on maximum number of topics a node can create/subscribe. What are the best practice in this regard? Any link or suggestion on it would be welcome. I believe rosservice and ros actionlib all use multiple topics underneath. How many topics does a rosservice create?
Thanking you,
Benzun

Originally posted by Benny on ROS Answers with karma: 132 on 2014-12-12
Post score: 1

A:

I don't think you should bother about the ROS communication speed (ROS will not definitely not die for 20 or even 100 topic). I think you should go more into your system design and look what you need and then implement what you need. E. g. if you have 20 different msgs/ topics you will end up with 20 callback functions on your subscriber side. If you will need to aggregate all the information again of the 20 msgs on your subscriber side before you can start doing some real processing of the information then having 20 topic is probably a bad solution and leaving the information together and publishing one aggregated message would definitelzy be better.
On the other hand if you have on the subscriber side 20 different nodes of which all only need a small part of the information you publish and not your big aggregated information container, then yes well, in this case having 20 different msgs / topic could be a smart approach.

Originally posted by Wolf with karma: 7555 on 2014-12-12
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by Benny on 2014-12-12:
yes part of the problem is good software design but I feel it cannot be done without understanding how ROS behaves. From my understanding you are hand-waving it by saying such delays are insignificant. In a band-limited, computation limited system, it is a huge consideration for design when scaling
Comment by tfoote on 2015-02-26:
If you want to understand how the system works, I suggest you read through the documentation: http://wiki.ros.org/ROS/Introduction

