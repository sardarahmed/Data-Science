Q:

Does ROS support any industrial robot languages?

Does ROS support any industrial robot languages such as KRL, URScript or AS?
If not, what are the alternatives to control a robot arm with ROS industrial?

Edit: We are working on a robot arm for a manufacturing application. Right now we are looking into how an operator can program a robot. As far as we have seen, industrial robots are either programmed via GCode-like language or via some kind of dialog interface.
We were wondering if there is already a standard language that can be used to create robot programs. Something like GCode for CNCs and other similar machines.
Of course, the dialog/teaching programming model is much more attractive, but a standard robot language might be useful too.
Note: The robot arm will be programmed by the end user, not a trained engineer.

Originally posted by machinekoder on ROS Answers with karma: 69 on 2018-02-22
Post score: 1

Original comments
Comment by gvdhoorn on 2018-02-23:
It might be good to explain a little more why you are asking this question. What is it that you're trying to do / thinking of? Are you looking to create 'robot programs' in mfg languages and then have them executed by ROS (whatever that means)? Or would you want to write ROS nodes in robot ..
Comment by gvdhoorn on 2018-02-23:
.. mfg languages and make those first-class citizens in a ROS node graph?
If you can provide some clarification, we might be able to provide (better) answers and also avoid a potential xy-problem.
Comment by arunavanag on 2018-02-23:
UR comes with its teaching pendant, that is very user friendly and a lot of drag and drop feature. No programming experience is required. It is all in the user interface. Also these robots can be manually moved to respective positions and the positions can be stored and played.
Comment by arunavanag on 2018-02-23:
UR is meant for end-user programming. You can choose these collaborative systems based on your payload and workspace size availability.
Comment by gvdhoorn on 2018-02-23:
In light of your edit: it might be good to change your question title. Your question seems to be more about whether there are any UIs or higher-level programming interfaces for 'ROS robots' than about ROS support for 'industrial robot languages'.

A:

Short answer: I'm not aware of any 'common language' that can be used as a generic way to program (industrial) robots in the way you describe.
There are tools for (hierarchical) state machines, behaviour trees and other such formalisms, but those would probably not be suitable for day-to-day programming by operators.

Slightly longer answer: the CRCL project is something that targets similar things, but is not suitable for programming (manually) by humans. Various groups have created programming interfaces for robot tasks -- mostly graphical ones, using drag-and-drop to place boxes in a sequence -- but nothing has emerged as a generic approach afaik.

Originally posted by gvdhoorn with karma: 86574 on 2018-02-23
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by dinesh on 2018-02-23:
noobs... haha
Comment by gvdhoorn on 2018-02-23:
@dinesh: ?
Comment by Nicolas on 2018-03-28:
One graphical tool is http://wiki.ros.org/blockly, based on https://developers.google.com/blockly/. The package seems to be adapted to specific robots. But maybe it's a good starting point?
Comment by Nicolas on 2018-03-28:
@gvdhoorn: Do you know of any other "promising" graphical or textual programming interfaces for robot tasks?
Comment by gvdhoorn on 2018-03-28:
No, not that I can remember right now. Personally I'm fine with using ROS for this and I don't particularly like any graphical approach to programming, so it also isn't really something I actively monitor I'm afraid.
Comment by machinekoder on 2018-06-24:
Long story short, we took the path of implementing our own Python-based programming language. Since our target end-users, the approach is heavily GUI focused, the program code is generated in the background. However, advanced engineers can program the robot directly via Python.
Comment by dinesh on 2018-09-20:
sorry for wrong comment. @gvdhoorn

