Q:

rosmsg can't find message in my catkin workspace

Hi allâ€”
Just getting started with a catkin workspace and package, based on the following tutorials:
http://www.ros.org/wiki/ROS/Tutorials/CreatingPackage
http://www.ros.org/wiki/ROS/Tutorials/CreatingMsgAndSrv
When I run catkin_make, I see that Python, C++, and lisp code is being generated from the msg file in my nnn_msgs package. And when I run catkin_make install, it looks like the Python sources get copied into the appropriate dist-packages directory. I've sourced the workspace/install/setup.bash file, so my PACKAGE_PATH and PYTHONPATH are correct. Indeed, I can pop open the Python REPL and import the message, so it's definitely being built, and is seems like the workspace is set up correctly.
However, rosmsg show xx can't find it, and rosmsg list gives no output either:
Unable to load msg [nnnn_msgs/Nnnn]: Cannot locate message [Nnnn]: unknown package [nnnn_msgs] on search path [{}]

How do I resolve this search path issue? How come it only seems to be affecting rosmsg?

Edit: Okay, looks like I've found another thing affected by this problem: rosversion won't run correctly, which means I can't run roscore. I thought this might have been because my .bashrc was sourcing a Fuerte setup.bash prior to me manually sourcing the Groovy one, but I removed that and it made no difference.
My ROS_PACKAGE_PATH looks okay:
/home/mikepurvis/catkin_ws/install/share:/home/mikepurvis/catkin_ws/install/stacks:/opt/ros/groovy/share:/opt/ros/groovy/stacks

Originally posted by mikepurvis on ROS Answers with karma: 1153 on 2013-04-12
Post score: 1

A:

EDIT: Make sure you have the latest version of rospkg:
sudo apt-get update && sudo apt-get install python-rospkg

If that doesn't work then see this answer:
http://answers.ros.org/question/49143/problems-with-rqt-groovy-ubuntu/?answer=49153#post-id-49153
You might need to clear out a previous version installed by pip.

You must not have your ROS_PACKAGE_PATH set?
I can get output from rosmsg list and rosmsg packages locally:
william@dosa:~
% rosmsg packages
actionlib
actionlib_msgs
bond
diagnostic_msgs
driver_base
dynamic_reconfigure
geometry_msgs
nav_msgs
roscpp
rosgraph_msgs
rospy_tutorials
sensor_msgs
shape_msgs
std_msgs
stereo_msgs
tf
tf2_msgs
trajectory_msgs
turtlesim
visualization_msgs

Your ROS_PACKAGE_PATH is not required for python importing to work, but it is required for tools like rosmsg to find .msg files which have been installed.
You can also ensure that your message files are getting installed by looking in path/to/install/share/nnnn_msgs/msg/ for the Nnnn.msg file.

Originally posted by William with karma: 17335 on 2013-04-12
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by mikepurvis on 2013-04-12:
My $ROS_PACKAGE_PATH seems like it's correct: /home/mikepurvis/catkin_ws/install/share:/home/mikepurvis/catkin_ws/install/stacks:/opt/ros/groovy/share:/opt/ros/groovy/stacks
Comment by William on 2013-04-12:
What about rospack profile && rospack find nnnn_msgs does that work?
Comment by mikepurvis on 2013-04-12:
python-rospkg was the issue. Does this hit everyone upgrading from Fuerte, or was there something particular about my setup which triggered it?
Comment by William on 2013-04-13:
This happens when you installed rospkg from pip at some point in the past. We used to recommend this method, but we have since reverted to using apt-get because pip does not upgrade with apt-get so people were getting mismatching versions. Unfortunately pip override apt python packages.

