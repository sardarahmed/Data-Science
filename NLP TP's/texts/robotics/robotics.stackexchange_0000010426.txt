Q:

Will this pseudocode work as a basis for a flight controller?

I'm programming a flight controller on an Arduino. I've researched how other people have written theirs but without notes it's often so obfuscated that I've decided it will be easier and better to write my own.
This is my pseudocode thus far, will this work?
all of this will happen inside the constant Arduino loop

Read RX signal
Calculate desired pitch, roll, and yaw angles from RX input
Signal ESCs using PWM in order to match desired pitch, roll, and yaw from RX input
Gather IMU values (using Kalman filter to reduce noise)
Compare filtered IMU values vs. RX input to find errors in desired outcome vs. actual outcome
Use PID algo to settle errors between IMU vs. RX
Rinse and repeat

Suggestions are greatly appreciated

A:

The signals to the ESC's using PWM should be sent after the PID algo is done processing the errors. The output calculated from the PID is the PWM value to be sent to the ESC's to actuate the motors in such a way that they move to reduce the error thus obtaining the desired orientation 
So the right order is:

Read RX signal
Calculate desired pitch, roll, and yaw angles from RX input
Gather IMU values (using Kalman filter to reduce noise)
Compare filtered IMU values vs. RX input to find errors in desired outcome vs. actual outcome (Get error (Target - Measured) for PID algorithm input)
Use PID algo to settle errors between IMU vs. RX
Use output of PID controller (assuming gains are already tuned properly) as PWM signal to the ESC's
Rinse and repeat

These resources might be of help in the future:

Quadcopter PID Algorithm 
Different PID Architectures
Cascaded PID Controller Explained
PID output does not reach setpoint precisely enough
Is it possible to stabilize a quadcopter considering only angle measurements?

