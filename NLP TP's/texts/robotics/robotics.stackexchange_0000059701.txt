Q:

costmap_plugins.xml misbehaving

I created a new layer (the overwrite_layer) and declared it in the costmap_plugins.xml. The code compiles without errors but when I run it, I get the following error message:
[ INFO] [1401350861.147988001, 1397467592.599155280]: Using plugin "overwrite_layer"
terminate called after throwing an instance of 'pluginlib::LibraryLoadException'
  what():  According to the loaded plugin descriptions the class scitos_2d_navigation::OverwriteLayer with base class type costmap_2d::Layer does not exist. Declared types are blablabla ...

The puzzeling part to me is, that the plugin loader still looks for a costmap_2d::Layer object even though it is clearly defined as a costmap_2d::CostmapLayer (see costmap_plugins.xml-file below). Acutally I had it first as a costmap_2d::Layer, compiled it, then changed it to costmap_2d::CostmapLayer and then compiled it again. Can I maybe force the compiler somehow to reread the costmap_plugins.xml? Or am I overlooking something obvious? Thanks!
<class_libraries>
    <library path="lib/libdynamic_layer">
        <class type="scitos_2d_navigation::DynamicLayer" base_class_type="costmap_2d::Layer">
            <description>Publishing a static_map and a dynamic_map based on old and current measurments</description>
        </class>
    </library>
    <library path="lib/liboverwrite_layer">
        <class type="scitos_2d_navigation::OverwriteLayer" base_class_type="costmap_2d::CostmapLayer">
            <description>Overwriting the layered costmap with a user defined map.</description>
        </class>
    </library>
</class_libraries>

I'm on Hydro, Ubuntu 12.04

Originally posted by Luke_ROS on ROS Answers with karma: 116 on 2014-05-28
Post score: 1

A:

The base class HAS to be costmap_2d::Layer -- the plugin loader is templated on that base class and can only find/load such a class. Even if your class derives from costmap_2d::CostmapLayer, that class derives from costmap_2d::Layer and so your class eventually has a base class of costmap_2d::Layer, and that is what has to be in the plugins.xml file in order for pluginlib to find the class.

Originally posted by fergs with karma: 13902 on 2014-05-29
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Luke_ROS on 2014-05-30:
Thanks. That helps a lot. For the ultimate learning experience: Where can I look that up?
Comment by fergs on 2014-05-30:
The docs you want to look at are those for pluginlib: http://wiki.ros.org/pluginlib which is used throughout ROS.

