Q:

How to use OpenCV to process image

Hi! Everyone!
I'm a beginner of ROS, and now I've been focusing on imaging processing on ROS, My robot is Turtlebot, and I use the kinect as the camera, so basically what I need to do is to find the changes in the same background, so I followed the tutorials and started to use Gazebo now, and I tested the kinect all is fine. So my question is, I am pretty lost since there is no example or demo for image processing on wiki, I am wondering what is my first step? and what should I do after that.
If there is any good website for image processing on ROS to follow, that would be perfect! Thank you so much!

Originally posted by Henschel.X on ROS Answers with karma: 62 on 2016-03-07
Post score: 0

Original comments
Comment by PKumars on 2016-03-07:
may I know how you are getting images? are you using pictures or video stream? let me know about these and then I'll guide you for ROS and OpenCV image processing.
Comment by Henschel.X on 2016-03-07:
I got the video stream from Kinect, and I need to capture one pic using an order, every time I sent an order, one pic is captured. So what I need to do is to do the rest job upon the pic.

A:

ROS and OpenCV are two totally independent projects. All you need to do in ROS is to transform the image message into an opencv image using cv_bridge. Once you have this image, you can do whatever you want with it using OpenCv functionalities. Check the extremely extensive OpenCV documentation and tutorials either in Python or C++.

Originally posted by Mehdi. with karma: 3339 on 2016-03-07
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Henschel.X on 2016-03-07:
Thank you very much! I know what you mean, It's like I need to write a node using OpenCV library to change ROS image first and I can do the image processing after this step in the node right? I prefer C++, so which means all of these should be done by cpp file is that right?
Comment by PeteBlackerThe3rd on 2016-03-08:
I'm assuming you're using the image transport system and a camera to get your images. You'll need to use the ROS cv_bridge object to convert the image into a cv::Mat image. From here you'll be able to use the significant power of openCV to process your image. All of this can be done in C++
Comment by Henschel.X on 2016-03-08:
Thank you so much!!!! You saved me!

