Q:

Rosjava Theora support

Hi all,
I'm quite new to ROS and we develop a vision android application for a daily-help robot and we re interested in reducing drastically the amount of bandwidth used by the image transport. So far we've been using the compressed topic of image transport but we would like to use the theora one for performance purposes.
My question is the following, is Theora image transport supported in RosJava ?
When subscribing to a Theora topic I get from the client side (android application) with the "classic"  sensor_msgs.CompressedImage type I get :

Subscriber handshake failed: Incoming
MD5 checksum cannot be null.

And from the server side the error message is the following:

[ERROR] [1403525945.051196560]: Client
[/android/imgListener] wants topic
/image/UI/theora to have
datatype/md5sum
[sensor_msgs/CompressedImage/8f7a12909da2
c9d3332d540a0977563f], but our version
has
[theora_image_transport/Packet/33ac4e14a7cff32e7e0d65f18bb410f3].
Dropping connection.

Then I tried to import the image_transport Theora message type with:

dependencies {
...
compile 'org.ros.rosjava_messages:theora_image_transport:1.8.21.+'
}

But I still couldnt make use of the message library theora_image_transport.
Note: my ROS_PACKAGE_PATH include the rosjava folder
So if you have any idea, remarks or solution to this problem, I would be glad to hear it!
Thank you much!

Originally posted by Todd on ROS Answers with karma: 1 on 2014-06-23
Post score: 0

Original comments
Comment by Daniel Stonier on 2014-06-29:
How is it that you trying to connect a sensor_mgs/CompressedImage subscriber to a theora_image_transport/Packet publisher? That shouldn't work at all (need same type) and will throw exactly that error.
Comment by Todd on 2014-06-29:
Thank your for your comment. Yes I was just explaining what I tried and what I got out of it, and my question is, is it possible to handle the "theora_image_transport/Packet" type ?

A:

You can certainly establish a theora_image_transport/Packet subscriber on the java side and read the actual message that is coming through. rosjava itself I don't believe has any library that will actually construct/display the result though. You'd have to get something from java itself or an external 3rd party library and set it up with the parameters and data coming through in the Packet message.

Originally posted by Daniel Stonier with karma: 3170 on 2014-06-29
This answer was ACCEPTED on the original site
Post score: 0

