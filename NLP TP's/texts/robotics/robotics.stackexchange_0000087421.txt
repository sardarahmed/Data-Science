Q:

How to use pose for `move_base` to produce `cmd_vel`?

From the Wiki page of move_base, it seems that move_base obtains the pose estimation of a robot by a tf from map to odom, which is often published by amcl. However, in my application, I use a motion predictor to predict the future pose of the robot, and I want to use that future pose as a basis for my move_base computation (i.e. use the future pose instead of the current pose estimated by amcl).
The message of my future pose is geometry_msgs/PoseWithCovarianceStamped, which is not a tf. How do I control the robot using geometry_msgs/PoseWithCovarianceStamped instead of tf for move_base?
There are several solutions that I have tried:

One alternative is to replace the tf publisher in amcl with a custom tf publisher (from map to odom) using the future pose, but it causes the laser scan misaligned.

Another alternative is to keep the original amcl code unchanged, and write a tf publisher (from map to odom_future frame) using the future pose . This approach seems realistic, because it does not affect localization and sensor readings, but I could not find the pieces of code in move_base to expect the frame odom_future instead of odom.

Could somebody provide me some guidance?

Originally posted by alex_f224 on ROS Answers with karma: 28 on 2018-06-19
Post score: 0

A:

Your second approach seems to be the better one. move_base (or more precisely the navigation_stack) utilizes costmap_2d for its planning "computation", and it uses the robot's base frame as the current pose of the robot. Fortunately you can adjust that by setting the robot_base_frame parameter of both the global and local costmap configuration, or by simply include it in the common configuration. Just set robot_base_frame to your odom_future and that should be it.
See here for more detail : http://wiki.ros.org/navigation/Tutorials/RobotSetup#Costmap_Configuration_.28local_costmap.29_.26_.28global_costmap.29

Originally posted by mathsci with karma: 41 on 2018-06-20
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by alex_f224 on 2018-06-21:
Hi @mathsci, your suggestion works fine at the end. However, I wonder how to compute the tf from map to odom based on a pose estimation? I've searched online for quite a while, but couldn't find how it is done. I looked at the amcl_node.cpp file but it doesn't make much sense.

