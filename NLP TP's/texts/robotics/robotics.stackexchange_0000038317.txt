Q:

Suppressing 3D cloud to 2D cloud

Hi,
I used the gmapping using turtlebot to create the map of the environment. I understand that the turtlebot creates a fake laser which is suppressed 2D cloud from the kinect.
Assuming that the kinect tf frame is such that ^ is x  and  > is y and into the screen is z. I want a 2D cloud in yz plane similar to laser. But every point in this plane should give the obstacle that is present in varying x also.
For example if there is a hanging obstacle from x = 4 to 5, with y = -1 to 1 and z = 2. Then fake laser cloud should have cloud in yz plane at y= - 1 to 1.
My question here is:
a) Is this what done in the fake laser included in the turtlebot launch?
or b) is there any other package that does this?
or c) will this work in real time if i wrote it on my own?
Any suggestions and pointers will be much appreciated!!!
Thanks,
Karthik

What does the min-height n max-height in the launch file signify?
 <!-- Fake Laser -->
  <node pkg="nodelet" type="nodelet" name="kinect_laser" args="load pointcloud_to_laserscan/CloudToScan openni_manager" respawn="true"
  output="screen">
    <param name="output_frame_id" value="/kinect_depth_frame"/>
    <!-- heights are in the (optical?) frame of the kinect -->
    <param name="min_height" value="-0.15"/>
    <param name="max_height" value="0.15"/>
    <remap from="cloud" to="/cloud_throttled"/>
  </node>

I have written as piece of code that results in 640 valid cloud points and the rest to be nans. I give this as the input to the throttle instead of the /camera/depth/points. Its not helping me out as the laser scan at the end is very minimal and the scan matching is failing. Any suggestions ??

Originally posted by karthik on ROS Answers with karma: 2831 on 2012-02-28
Post score: 0

A:

a) The fake laser sort of does not do this.
b) If you tweak the parameters to look over the whole range you want to look for obstacles it can do what you want.  Assuming the obstacles are still in the Kinect field of view.
c) If you rewrote it on your own it could do this in realtime, but is not necessary. See b.

Originally posted by tfoote with karma: 58457 on 2012-02-28
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by karthik on 2012-02-29:
Tweak here you mean param setting in the launch file. Because even for the fake laser a nodelet is written. Could you elaborate on how to do that. Thanks for the help
Comment by karthik on 2012-02-29:
I have edit the question a bit
Comment by tfoote on 2012-02-29:
The min and max heights are the range where points will be considered inside the laser scan.  All other points will be ignored.
Comment by karthik on 2012-03-03:
I have updated my question a bit again.
Comment by tfoote on 2012-03-04:
Most scan matches have trouble with small scans. Especially with small fields of view.  You will likely have to develop ways to assist the algorithm specific to your use case.
Comment by karthik on 2012-03-05:
thanks  :)

