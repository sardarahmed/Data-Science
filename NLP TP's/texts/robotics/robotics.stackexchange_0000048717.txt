Q:

Random Orientation Vector for Hand Pose

Hello all,
I was wondering if there was a way to create a random orientation. In my project I get the xyz coordinates of an object I want my robot to pick up, however I can't get the orientation correct enough that it works with IK services. So I was thinking of making a random orientation vector with my coordinate and just loop over until I find a valid solution. Is this a good way to approach this problem? Or should I just try find a few orientations manually in Warehouse Planner and saved these values in some array and just loop over those when I try to pick up the object.
Kind Regards,
Martin

Originally posted by MartinW on ROS Answers with karma: 464 on 2013-02-26
Post score: 0

A:

Does your robot's workspace cover full 6-Dof? In that case you should be able to find an IK solution.
If it isn't, yes, randomization will work and be simple to implement. However, there might be better solutions. If you use a numeric solver for IK, this could give you the nearest pose, even if the IK was not solved exactly.
Alternatively you could also get the grasps for you object first (if possible) and find IK solutions only for the valid grasps.

Originally posted by dornhege with karma: 31395 on 2013-02-26
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by MartinW on 2013-02-26:
Hey dornhege, yea my robot has 6-Dof and two fingers for grasping. Right now I am using the IK services provided by the warehouse planner, but it can't seem to find any solutions. However these are precise poses I am looking for, is there a way to ask for a position xyz with any orientation?
Comment by dornhege on 2013-02-27:
Are those poses reachable? Then maybe,  you just need a better IK. Technically you can query for xyz, but I'm not sure, if that's possible with the default implementations.
Comment by MartinW on 2013-02-27:
Can a better IK be generated by using a denser search within the sampling modes of the Planning Description Configuration Wizard? I just use the default IK services
Comment by dornhege on 2013-02-28:
Disclaimer: I don't know how the wizard works! But my guess is that the sampling is only used to determine necessary collision pairs for the configuration and has nothing to do with the IK. You should be able to test the IK manually from rviz though. That should give you some insights.
Comment by dornhege on 2013-02-28:
Depending how that goes, you can look into: http://openrave.org/docs/latest_stable/openravepy/ikfast/

