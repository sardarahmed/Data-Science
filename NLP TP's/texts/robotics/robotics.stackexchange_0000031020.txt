Q:

qt creator and ROS

I have a qt creator .pro file from which my makefile is generated, however now I want to include ROS packages in the project and have my project build in a rosmake kind of way of from the build command in QT Creator.
In the project I also make use of a QT designer .ui file.
Is there a script/tutorial how to use ROS together with QT? It's not mentioned on the IDE page.
I found an old discussion here, but this consists out of modifying the CMake file, it isn't a portable solution.

Originally posted by KoenBuys on ROS Answers with karma: 2314 on 2011-04-12
Post score: 3

Original comments
Comment by AHornung on 2011-04-12:
This probably qualifies more for an answer, so I'll give it a try...
Comment by KoenBuys on 2011-04-12:
Okay, so I've got a .pro file and a makefile from a qmake and a ros manifest + cmakelist file from a ros package and how do I continue from there on?
Comment by AHornung on 2011-04-12:
CMake will probably be the most useful solution. Why do you think this is not portable? CMake comes with full support for Qt, so if you wrap qmake it will all work fine.

A:

Switching to qt-cmake development is the easiest way as that directly syncs with the way ros builds. The qt cmake module maintainer I've found is also very accessible to addressing problems whatever may arise (I had a few issues with mingw+qt).
Eros (nevermind that its about embedded/cross compiling) has a few python tools to help set up qt projects in the ros-cmake environment. You can either install eros or use these as a guide for your own packages.

roscreate-qt-pkg : standalone template for a qt program.
roscreate-qt-ros-pkg : template for a ros-qt program with connection settings and empty spinners.

The templates set up ui files and resources as well as sources. This tutorial gives you a picture of the end result (though as mentioned at the bottom, works just as well natively without doing all of the rostoolchain stuff.
For portablility, we're hoping that rosbuild2 (coming soon) will mean that this can be directly compiled via cmake on windows' msvc as well.

Originally posted by Daniel Stonier with karma: 3170 on 2011-04-12
This answer was ACCEPTED on the original site
Post score: 2

