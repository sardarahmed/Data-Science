Q:

OctoMap for collision avoidance / using point clouds

Firstly, following the discussion below, http://answers.ros.org/question/30426/adding-octomap-data-to-planning-scene-in-ros,
I understand that the octomap result is relatively easy to further feed to arm navigation.
Then I wonder that how about the surface case, i.e., is it possible to make use of the octomap data for mobile navigation in an outdoor terrain environment?
Second question, after an octomap is initialized from a point cloud, is it possible to retrieve the points from the cloud that drop within an voxel, given the voxel index or its cooordinate? I am trying both octomap and pcl/octree, and this question arises from the exercise. More explanation about the differences between octomap and pcl/octree would be great helpful.

Originally posted by clark on ROS Answers with karma: 393 on 2012-03-29
Post score: 1

A:

OctoMap by defatult does not store individual points but rather integrates them into an occupancy map for maximum compression in order to reduce memory usage. Have a look at http://octomap.sourceforge.net/ and the paper there for a detailed description.
You can continuously update this map with further sensor readings but the original point clouds are not stored (which you could do yourself instead). If you need individual points, you would need to extend your own octree class. If you are only interested in the points and need the octree just for adressing or neighbor search, then I would suggest the PCL octree instead.
The occupancy map can be used for a variety of tasks such as localization, arm navigation and navigation in cluttered environments. The 3D_navigation stack can serve you as a starting point but it's not quite ready yet to be deployed out of the box directly.

Originally posted by AHornung with karma: 5904 on 2012-03-29
This answer was ACCEPTED on the original site
Post score: 0

