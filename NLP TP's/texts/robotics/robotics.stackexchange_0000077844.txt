Q:

building ROS on macOS 10.12 at `qt_gui_cpp`

Hi, there
I'm following the tutorial Installation Instructions for Kinetic in OS X to get ROS up and running on my Mac. However, I failed (and tried so much methods to solve, still failed) at building qt_gui_cpp when executing:
./src/catkin/bin/catkin_make_isolated --install -DCMAKE_BUILD_TYPE=Release

I bet the problems lie at the package sip (installed via brew) or catkin_ws/src/python_qt_binding, because the failed codes are generated from sip, related error output is like this (with VERBOSE=ON):
[  5%] Linking CXX shared library /Users/victor/Repo/ros/ros_catkin_ws/devel_isolated/qt_gui_cpp/lib/libqt_gui_cpp.dylib
cd /Users/victor/Repo/ros/ros_catkin_ws/build_isolated/qt_gui_cpp/src/qt_gui_cpp && /usr/local/Cellar/cmake/3.7.1/bin/cmake -E cmake_link_script CMakeFiles/qt_gui_cpp.dir/link.txt --verbose=ON
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++  -std=c++11 -fPIC -O3 -DNDEBUG -dynamiclib -Wl,-headerpad_max_install_names  -o /Users/victor/Repo/ros/ros_catkin_ws/devel_isolated/qt_gui_cpp/lib/libqt_gui_cpp.dylib -install_name /Users/victor/Repo/ros/ros_catkin_ws/devel_isolated/qt_gui_cpp/lib/libqt_gui_cpp.dylib CMakeFiles/qt_gui_cpp.dir/composite_plugin_provider.cpp.o CMakeFiles/qt_gui_cpp.dir/generic_proxy.cpp.o CMakeFiles/qt_gui_cpp.dir/plugin_bridge.cpp.o CMakeFiles/qt_gui_cpp.dir/plugin_context.cpp.o CMakeFiles/qt_gui_cpp.dir/plugin_descriptor.cpp.o CMakeFiles/qt_gui_cpp.dir/plugin_provider.cpp.o CMakeFiles/qt_gui_cpp.dir/recursive_plugin_provider.cpp.o CMakeFiles/qt_gui_cpp.dir/settings.cpp.o CMakeFiles/qt_gui_cpp.dir/__/__/include/qt_gui_cpp/moc_plugin.cpp.o CMakeFiles/qt_gui_cpp.dir/__/__/include/qt_gui_cpp/moc_plugin_bridge.cpp.o CMakeFiles/qt_gui_cpp.dir/__/__/include/qt_gui_cpp/moc_plugin_context.cpp.o /usr/local/lib/libboost_filesystem-mt.dylib /usr/local/lib/libtinyxml.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/libclass_loader.dylib /usr/local/lib/libPocoFoundation.dylib /usr/lib/libdl.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/librosconsole.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/librosconsole_log4cxx.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/librosconsole_backend_interface.dylib /usr/local/lib/liblog4cxx.dylib /usr/local/lib/libboost_regex-mt.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/librostime.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/libcpp_common.dylib /usr/local/lib/libboost_system-mt.dylib /usr/local/lib/libboost_thread-mt.dylib /usr/local/lib/libboost_chrono-mt.dylib /usr/local/lib/libboost_date_time-mt.dylib /usr/local/lib/libboost_atomic-mt.dylib /usr/local/lib/libconsole_bridge.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/libroslib.dylib /usr/local/lib/libboost_filesystem-mt.dylib /usr/local/lib/libboost_system-mt.dylib /usr/local/lib/QtWidgets.framework/QtWidgets /usr/local/lib/libtinyxml.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/libclass_loader.dylib /usr/local/lib/libPocoFoundation.dylib /usr/lib/libdl.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/librosconsole.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/librosconsole_log4cxx.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/librosconsole_backend_interface.dylib /usr/local/lib/liblog4cxx.dylib /usr/local/lib/libboost_regex-mt.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/librostime.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/libcpp_common.dylib /usr/local/lib/libboost_thread-mt.dylib /usr/local/lib/libboost_chrono-mt.dylib /usr/local/lib/libboost_date_time-mt.dylib /usr/local/lib/libboost_atomic-mt.dylib /usr/local/lib/libconsole_bridge.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/libroslib.dylib /usr/local/lib/QtGui.framework/QtGui /usr/local/lib/QtCore.framework/QtCore 
[ 83%] Built target qt_gui_cpp
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f src/qt_gui_cpp_sip/CMakeFiles/libqt_gui_cpp_sip.dir/build.make src/qt_gui_cpp_sip/CMakeFiles/libqt_gui_cpp_sip.dir/depend
cd /Users/victor/Repo/ros/ros_catkin_ws/build_isolated/qt_gui_cpp && /usr/local/Cellar/cmake/3.7.1/bin/cmake -E cmake_depends "Unix Makefiles" /Users/victor/Repo/ros/ros_catkin_ws/src/qt_gui_core/qt_gui_cpp /Users/victor/Repo/ros/ros_catkin_ws/src/qt_gui_core/qt_gui_cpp/src/qt_gui_cpp_sip /Users/victor/Repo/ros/ros_catkin_ws/build_isolated/qt_gui_cpp /Users/victor/Repo/ros/ros_catkin_ws/build_isolated/qt_gui_cpp/src/qt_gui_cpp_sip /Users/victor/Repo/ros/ros_catkin_ws/build_isolated/qt_gui_cpp/src/qt_gui_cpp_sip/CMakeFiles/libqt_gui_cpp_sip.dir/DependInfo.cmake --color=
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f src/qt_gui_cpp_sip/CMakeFiles/libqt_gui_cpp_sip.dir/build.make src/qt_gui_cpp_sip/CMakeFiles/libqt_gui_cpp_sip.dir/build
[ 88%] Compiling generated code for qt_gui_cpp_sip Python bindings...
cd /Users/victor/Repo/ros/ros_catkin_ws/build_isolated/qt_gui_cpp/sip/qt_gui_cpp_sip && make
c++ -c -pipe -fPIC -Os -Wall -W -DNDEBUG -DQT_NO_DEBUG -DQT_CORE_LIB -DQT_GUI_LIB -I. -I/Users/victor/Repo/ros/ros_catkin_ws/src/qt_gui_core/qt_gui_cpp/src/qt_gui_cpp_sip/../../include -I/Users/victor/Repo/ros/ros_catkin_ws/install_isolated/include -I/usr/local/include -I/usr/local/Cellar/console_bridge/0.2.5/include -I/usr/include/python2.7 -I/usr/local/Cellar/sip/4.18.1/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -I/usr/local/Cellar/qt5/5.7.0/mkspecs/macx-g++ -I/usr/local/Cellar/qt5/5.7.0/include/QtCore -I/usr/local/Cellar/qt5/5.7.0/include/QtGui -I/usr/local/Cellar/qt5/5.7.0/include/QtWidgets -I/usr/local/Cellar/qt5/5.7.0/include/QtPrintSupport -I/usr/local/Cellar/qt5/5.7.0/include -o siplibqt_gui_cpp_sipcmodule.o siplibqt_gui_cpp_sipcmodule.cpp
In file included from siplibqt_gui_cpp_sipcmodule.cpp:7:
In file included from ./sipAPIlibqt_gui_cpp_sip.h:13:
In file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/QMetaType:1:
In file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/qmetatype.h:44:
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qglobal.h:1133:23: warning: rvalue references are a C++11 extension [-Wc++11-extensions]
void qAsConst(const T &&) Q_DECL_EQ_DELETE;
                      ^
In file included from siplibqt_gui_cpp_sipcmodule.cpp:7:
In file included from ./sipAPIlibqt_gui_cpp_sip.h:13:
In file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/QMetaType:1:
In file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/qmetatype.h:44:
In file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/qglobal.h:1145:
In file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/qatomic.h:46:
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:61:4: error: "Qt requires C++11 support"
#  error "Qt requires C++11 support"
   ^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:90:13: error: unknown type name 'QAtomicOps'
    typedef QAtomicOps<T> Ops;
            ^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:90:23: error: expected member name or ';' after declaration specifiers
    typedef QAtomicOps<T> Ops;
    ~~~~~~~~~~~~~~~~~~^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:93:23: error: use of undeclared identifier 'QAtomicOpsSupport'
    Q_STATIC_ASSERT_X(QAtomicOpsSupport<sizeof(T)>::IsSupported, "template parameter is an integral of a size not supported on this platform");
                      ^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:93:53: error: no member named 'IsSupported' in the global namespace
    Q_STATIC_ASSERT_X(QAtomicOpsSupport<sizeof(T)>::IsSupported, "template parameter is an integral of a size not supported on this platform");
                                                  ~~^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qglobal.h:761:63: note: expanded from macro 'Q_STATIC_ASSERT_X'
#define Q_STATIC_ASSERT_X(Condition, Message) Q_STATIC_ASSERT(Condition)
                                                              ^~~~~~~~~
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qglobal.h:756:110: note: expanded from macro 'Q_STATIC_ASSERT'
    enum {Q_STATIC_ASSERT_PRIVATE_JOIN(q_static_assert_result, __COUNTER__) = sizeof(QStaticAssertFailure<!!(Condition)>)}
                                                                                                             ^~~~~~~~~
In file included from siplibqt_gui_cpp_sipcmodule.cpp:7:
In file included from ./sipAPIlibqt_gui_cpp_sip.h:13:
In file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/QMetaType:1:
In file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/qmetatype.h:44:
In file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/qglobal.h:1145:
In file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/qatomic.h:46:
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:93:5: error: type name requires a specifier or qualifier
    Q_STATIC_ASSERT_X(QAtomicOpsSupport<sizeof(T)>::IsSupported, "template parameter is an integral of a size not supported on this platform");
    ^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qglobal.h:761:47: note: expanded from macro 'Q_STATIC_ASSERT_X'
#define Q_STATIC_ASSERT_X(Condition, Message) Q_STATIC_ASSERT(Condition)
                                              ^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qglobal.h:756:121: note: expanded from macro 'Q_STATIC_ASSERT'
    enum {Q_STATIC_ASSERT_PRIVATE_JOIN(q_static_assert_result, __COUNTER__) = sizeof(QStaticAssertFailure<!!(Condition)>)}
                                                                                                                        ^
In file included from siplibqt_gui_cpp_sipcmodule.cpp:7:
In file included from ./sipAPIlibqt_gui_cpp_sip.h:13:
In file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/QMetaType:1:
In file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/qmetatype.h:44:
In file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/qglobal.h:1145:
In file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/qatomic.h:46:
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:95:14: error: use of undeclared identifier 'Ops'
    typename Ops::Type _q_value;
             ^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:95:19: error: expected a qualified name after 'typename'
    typename Ops::Type _q_value;
                  ^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:95:23: error: expected ';' at end of declaration list
    typename Ops::Type _q_value;
                      ^
                      ;
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:99:44: error: use of undeclared identifier 'Ops'
    T load() const Q_DECL_NOTHROW { return Ops::load(_q_value); }
                                           ^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:99:54: error: use of undeclared identifier '_q_value'
    T load() const Q_DECL_NOTHROW { return Ops::load(_q_value); }
                                                     ^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:100:45: error: use of undeclared identifier 'Ops'
    void store(T newValue) Q_DECL_NOTHROW { Ops::store(_q_value, newValue); }
                                            ^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:100:56: error: use of undeclared identifier '_q_value'
    void store(T newValue) Q_DECL_NOTHROW { Ops::store(_q_value, newValue); }
                                                       ^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:102:51: error: use of undeclared identifier 'Ops'
    T loadAcquire() const Q_DECL_NOTHROW { return Ops::loadAcquire(_q_value); }
                                                  ^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:102:68: error: use of undeclared identifier '_q_value'
    T loadAcquire() const Q_DECL_NOTHROW { return Ops::loadAcquire(_q_value); }
                                                                   ^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:103:52: error: use of undeclared identifier 'Ops'
    void storeRelease(T newValue) Q_DECL_NOTHROW { Ops::storeRelease(_q_value, newValue); }
                                                   ^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:103:70: error: use of undeclared identifier '_q_value'
    void storeRelease(T newValue) Q_DECL_NOTHROW { Ops::storeRelease(_q_value, newValue); }
                                                                     ^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:107:86: error: use of undeclared identifier 'Ops'
    static Q_DECL_CONSTEXPR bool isReferenceCountingNative() Q_DECL_NOTHROW { return Ops::isReferenceCountingNative(); }
                                                                                     ^
/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:108:88: error: use of undeclared identifier 'Ops'
    static Q_DECL_CONSTEXPR bool isReferenceCountingWaitFree() Q_DECL_NOTHROW { return Ops::isReferenceCountingWaitFree(); }
                                                                                       ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
1 warning and 20 errors generated.
make[3]: *** [siplibqt_gui_cpp_sipcmodule.o] Error 1
make[2]: *** [/Users/victor/Repo/ros/ros_catkin_ws/devel_isolated/qt_gui_cpp/lib/python2.7/site-packages/qt_gui_cpp/libqt_gui_cpp_sip.dylib] Error 2
make[1]: *** [src/qt_gui_cpp_sip/CMakeFiles/libqt_gui_cpp_sip.dir/all] Error 2
make: *** [all] Error 2
make: INTERNAL: Exiting with 5 jobserver tokens available; should be 4!
<== Failed to process package 'qt_gui_cpp': 
  Command '['/Users/victor/Repo/ros/ros_catkin_ws/install_isolated/env.sh', 'make', '-j4', '-l4']' returned non-zero exit status 2

Reproduce this error by running:
==> cd /Users/victor/Repo/ros/ros_catkin_ws/build_isolated/qt_gui_cpp && /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/env.sh make -j4 -l4

Command failed, exiting.

There are 2 problems:

qt_gui_cpp is compiled without -std=c++11 that is causing panics. However, I failed to add this compiler flag, no matter I put add_definitions(-std=c++11) or
 set(CMAKE_CXX_FLAGS "-std=c++11 ${CMAKE_CXX_FLAGS}")
 # note the catkin documents explicitly said that CMAKE_CXX_FLAGS is a "Forbidden variables", why is that?

into the CMakeLists.txt file, or set the shell environment variable CXX_FLAGS to '-std=c++11'. The compiler simply don't use this flag!
I've tried to manually run the failed code with -std=c++11 add like this:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++  -std=c++11 -fPIC -O3 -DNDEBUG -dynamiclib -Wl,-headerpad_max_install_names  -o /Users/victor/Repo/ros/ros_catkin_ws/devel_isolated/qt_gui_cpp/lib/libqt_gui_cpp.dylib -install_name /Users/victor/Repo/ros/ros_catkin_ws/devel_isolated/qt_gui_cpp/lib/libqt_gui_cpp.dylib CMakeFiles/qt_gui_cpp.dir/composite_plugin_provider.cpp.o CMakeFiles/qt_gui_cpp.dir/generic_proxy.cpp.o CMakeFiles/qt_gui_cpp.dir/plugin_bridge.cpp.o CMakeFiles/qt_gui_cpp.dir/plugin_context.cpp.o CMakeFiles/qt_gui_cpp.dir/plugin_descriptor.cpp.o CMakeFiles/qt_gui_cpp.dir/plugin_provider.cpp.o CMakeFiles/qt_gui_cpp.dir/recursive_plugin_provider.cpp.o CMakeFiles/qt_gui_cpp.dir/settings.cpp.o CMakeFiles/qt_gui_cpp.dir/__/__/include/qt_gui_cpp/moc_plugin.cpp.o CMakeFiles/qt_gui_cpp.dir/__/__/include/qt_gui_cpp/moc_plugin_bridge.cpp.o CMakeFiles/qt_gui_cpp.dir/__/__/include/qt_gui_cpp/moc_plugin_context.cpp.o /usr/local/lib/libboost_filesystem-mt.dylib /usr/local/lib/libtinyxml.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/libclass_loader.dylib /usr/local/lib/libPocoFoundation.dylib /usr/lib/libdl.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/librosconsole.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/librosconsole_log4cxx.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/librosconsole_backend_interface.dylib /usr/local/lib/liblog4cxx.dylib /usr/local/lib/libboost_regex-mt.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/librostime.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/libcpp_common.dylib /usr/local/lib/libboost_system-mt.dylib /usr/local/lib/libboost_thread-mt.dylib /usr/local/lib/libboost_chrono-mt.dylib /usr/local/lib/libboost_date_time-mt.dylib /usr/local/lib/libboost_atomic-mt.dylib /usr/local/lib/libconsole_bridge.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/libroslib.dylib /usr/local/lib/libboost_filesystem-mt.dylib /usr/local/lib/libboost_system-mt.dylib /usr/local/lib/QtWidgets.framework/QtWidgets /usr/local/lib/libtinyxml.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/libclass_loader.dylib /usr/local/lib/libPocoFoundation.dylib /usr/lib/libdl.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/librosconsole.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/librosconsole_log4cxx.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/librosconsole_backend_interface.dylib /usr/local/lib/liblog4cxx.dylib /usr/local/lib/libboost_regex-mt.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/librostime.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/libcpp_common.dylib /usr/local/lib/libboost_thread-mt.dylib /usr/local/lib/libboost_chrono-mt.dylib /usr/local/lib/libboost_date_time-mt.dylib /usr/local/lib/libboost_atomic-mt.dylib /usr/local/lib/libconsole_bridge.dylib /Users/victor/Repo/ros/ros_catkin_ws/install_isolated/lib/libroslib.dylib /usr/local/lib/QtGui.framework/QtGui /usr/local/lib/QtCore.framework/QtCore

And the error is gone!
SO, my first question is how to enable -std=c++11 in catkin?

I actually have fixed a problem, so the error is not shown in the logs: Qt5 components are frameworks on macOS, but the generated compiler command has something like -lQtCore -lQtGui ..., which causing "library couldn't find" errors.
I've modified the catkin_ws/src/python_qt_binding/cmake/sip_configure.py, related codes:
 def custom_platform_lib_function(self, clib, framework=0):
     if os.path.isabs(clib):
         return clib
     return default_platform_lib_function(self, clib, 1)#framework)
 # call with parameter framework = 1

Any help is appreciated, thank you all!
I've spent a whole night on this issue, it's a pure nightmare :(

Originally posted by ZOU Lu on ROS Answers with karma: 143 on 2016-12-14
Post score: 0

Original comments
Comment by gvdhoorn on 2016-12-15:
Please note: ROS Answers does not use (Github flavoured) Markdown, at least not for formatting code blocks (ie: three backticks won't work). Please use the Preformatted Text button (the one with 101010 on it) next time. Just select the code or console copy/paste and click the button.
Thanks.

A:

I ran into the same problem. sipconfig generates the Makefile. Therefore, tweaking cmake flags does not work. It seems, homebrew's current (bottled) version of sip (418.1) is not fully compatible with homebrew's current version of qt5 (5.7.1_1). I finally ended up editing the configuration in sipconfig.py. The changes I made to
/usr/local/Cellar/sip/4.18.1/lib/python2.7/site-packages/sipconfig.py

are: Inside _pkg_config
  'platform':           'macx-clang++',

and
  'qt_framework':       1,

Inside _default_macros
  'CXXFLAGS':                 '-pipe -std=c++11',

With these changes, the generated Makefiles worked.

Originally posted by dischu with karma: 56 on 2017-01-15
This answer was ACCEPTED on the original site
Post score: 0

