Q:

Failed to fetch from local buildfarm repo

I'm at the rosdistro cache step of deploy_configuration.rst
import_upstream was successful, but other jenkins jobs try to interact with my local buildfarm repo (ros-build-farm-repo) and fail:
 ...
13:46:06 Ign http://ros-build-farm-repo trusty InRelease
13:46:06 Ign http://ros-build-farm-repo trusty Release.gpg
13:46:06 Ign http://ros-build-farm-repo trusty Release
13:46:06 Err http://ros-build-farm-repo trusty/main amd64 Packages
13:46:06   
13:46:06 Err http://ros-build-farm-repo trusty/main amd64 Packages
13:46:06   
13:46:06 Err http://ros-build-farm-repo trusty/main amd64 Packages
13:46:06   
13:46:06 Err http://ros-build-farm-repo trusty/main amd64 Packages
13:46:06   
13:46:06 Err http://ros-build-farm-repo trusty/main amd64 Packages
13:46:06   404  Not Found
...
13:46:19 W: Failed to fetch http://ros-build-farm-repo/ubuntu/building/dists/trusty/main/binary-amd64/Packages  404  Not Found 

http://ros-build-farm-repo/ubuntu/building/dists/trusty/main/binary-amd64/ exists but nothing is inside it both as viewed through a browser and sshed in and looking in ros-build-farm-repo:/var/repos/ubuntu/building/dists/trusty/main/binary-amd64.  building/pool/main/r has 900 GB of ros-jade deb/dsc/tar.gz files but the adjacent directories are empty.
import_upstream import_jade.yaml console output ends like this:
10:21:02 Updating for trusty source to update into repo /var/repos/ubuntu/main
10:21:02 I have a lock on /var/repos/ubuntu/main/lock
10:21:02 Creating updates file /var/repos/ubuntu/main/conf/updates
10:21:02   Name: backfill-ros
10:21:02   Method: http://packages.ros.org/ros/ubuntu/
10:21:02   Suite: trusty
10:21:02   Components: main
10:21:02   Architectures: source
10:21:02   FilterFormula: Package (% ros-jade-* )
10:21:02   
10:21:02 Creating distributions file /var/repos/ubuntu/main/conf/distributions
10:21:02 running command ['reprepro', '-v', '-b', '/var/repos/ubuntu/main', '--noskipold', 'update', 'trusty']
10:21:02 Warning: No VerifyRelease line in 'backfill-ros' or any rule it includes via 'From:'.
10:21:02 Release.gpg cannot be checked unless you tell which key to check with.
10:21:02 (To avoid this warning and not check signatures add 'VerifyRelease: blindtrust').
10:21:02 aptmethod got 'http://packages.ros.org/ros/ubuntu/dists/trusty/InRelease'
10:21:02 Calculating packages to get...
10:21:02 + echo # END SUBSECTION
10:21:02 # END SUBSECTION
10:21:02 + echo # END SECTION
10:21:02 # END SECTION
10:21:02 Finished: SUCCESS

It didn't update much on this run because it already got all the files on a previous execution.

Originally posted by lucasw on ROS Answers with karma: 8729 on 2016-03-07
Post score: 1

A:

The answer turned out to be similar to http://answers.ros.org/question/228169/rosdistro-add-on-fork/?answer=228241#post-id-228241, though it wasn't enough to simply clean out jenkins-slave on the repo machine, I ended up starting over with a clean Ubuntu 14.04 server.
Now I have a Packages file available on my (intranet) http://ros-build-farm-repo/ubuntu/building/dists/trusty/main/binary-amd64/Packages
The gpg/pgp key I generated earlier gave me a problem:
gpgme gave error GPGME:11:  Bad passphrase
14:36:44 ERROR: Could not finish exporting 'trusty'!
14:36:44 This means that from outside your repository will still look...

I went back to the default key pair from the upstream repo for repo/common.yaml, which is not viable for external use but is fine for now.  (Was I supposed to generate a key pair with no pass phrase?   Answer is yes as stated below.  'You can extract the repository PGP key from the buildfarm_deployment configuration.
'  https://github.com/ros-infrastructure/ros_buildfarm/blob/master/doc/basic_configuration.rst)
I initially forgot to also update the corresponding keys in ros_buildfarm_config, which resulted in the following error from the rosdistro cache job:
15:51:26 W: GPG error: http://ros-build-farm-repo trusty InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY ...

Making the keys consistent clears that error up.  (What about rosdistro/repos.key?)

Originally posted by lucasw with karma: 8729 on 2016-03-07
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by tfoote on 2016-03-07:
Yes, the key needs to be useable without a pass phrase. Otherwise the automated scripts cannot sign with it. (You might be able to setup a keyring to unlock the key in some way, but either way it's useable w/o a pass phrase.)
Comment by tfoote on 2016-03-07:
The keys in the rosdistro need to match the signing key for the repo, otherwise apt-get will complain about unsigned keys when downloading on the buildfarm. And users need to have that key in their apt keyring to download as well.

