Q:

catkin_make ignores dependencies?

I'm not sure what's causing this but catkin_make ignores dependencies for one or two of my packages.
The package x_competitor_layer depends on the message generation of x_eth_interface. I've added this dependency in

package.xml (build_depend and run_depend)
CMakeLists.txt (x_eth_interface in find_package as well as x_eth_interface_generate_messages in add_dependencies)

of x_competitor_layer package.
But still catkin_make doesn't build x_eth_interface_generate_messages first and keeps complaining about a missing header file. I can solve this problem manually by calling catkin_make x_eth_interface_generate_messages first. But catkin should be able to solve it on its own, shouldn't it?
So what could possibly have gone wrong? What might be missing?
Thanks guys!
Cheers,
Hendrik

Originally posted by Hendrik Wiese on ROS Answers with karma: 1145 on 2013-10-25
Post score: 0

Original comments
Comment by Artem on 2013-10-26:
Maybe it's a different problem, but have you tried to call catkin_make, a few times in row?
Comment by Hendrik Wiese on 2013-10-26:
Yepp, I have. Sadly to no avail.
Comment by Dirk Thomas on 2013-10-27:
Please provide a minimal rosinstall file for your workspace (or point to repos containing the code in question) which allows to reproduce your issue.

A:

Difficult to tell what goes wrong without seeing the actual cmake code of x_competitor_layer. Check for typos.
Note that it should be preferable not to refer to implicit targets anymore, as discussed here: https://groups.google.com/d/msg/ros-sig-buildsystem/dvVO5QCHBLM/gJpUcUWYHt0J
I realize nobody updated the docs though ( https://github.com/ros/catkin/issues/547 ).

Originally posted by KruseT with karma: 7848 on 2013-10-26
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Hendrik Wiese on 2013-10-30:
Hmm, I'm afraid, I don't really get it, because I don't have that much of an insight into the guts of ROS, yet. I guess, the best for me is to stick with the unresolved dependencies for the time being and solve them manually whenever recompiling comes necessary.
Comment by KruseT on 2013-11-03:
This is not much about ROS, but mostly about cmake. Possibly you made a typo in find_dependencies, or used it on the wrong target, or missed a target, etc. The possibilities are endless, if you want help, paste the error log and the CMakeLists.txt

