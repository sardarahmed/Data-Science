Q:

turtlebot robot_pose_ekf/odom? or odom?

Hi, I was wondering what is more accurate for turtlebot odometry the /robot_pose_ekf/odom or just /odom.
If its robot_pose_ekf/odom, why would the turtlebot gmapping and amcl demos have the move_base node subscribing to /odom instead of robot_pose_ekf/odom

Originally posted by Rydel on ROS Answers with karma: 600 on 2012-08-10
Post score: 3

A:

/robot_pose_ekf/odom will be more accurate than /odom because the kalman filter uses the robot's motion model along with other observations to maintain a better estimate of the robot's pose. /odom, on the other hand simply gives you the raw data provided by the turtlebot base, which is notoriously bad.
AMCL and gmapping attempt to solve similar problems to that solved by robot_pose_ekf, so it doesn't really make sense to use an already filtered pose as input. Additionally I believe that AMCL and gmapping rely on certain properties of the pose that may not hold after kalman filtering.
The reason that all these different pose estimates exist is because there are many different circumstances under which you may be using your robot. If you don't have a map, and don't want to build one, you should use /robot_pose_ekf/odom. If you don't have a map, but would like to build one as part of your application, you should use the map->odom tf frame provided by gmapping. If you already have a map and would like to localize your robot in it, you should use amcl_pose.

Originally posted by Dan Lazewatsky with karma: 9115 on 2012-08-10
This answer was ACCEPTED on the original site
Post score: 7

Original comments
Comment by cagatay on 2012-08-10:
I think the benefit of robot_pose_ekf is it can combine visual odom,imu and odometry data and give you a better result. am i wrong ? does amcl's pose algorithm combine such datas ?
Comment by Dan Lazewatsky on 2012-08-10:
You're right robot_pose_ekf combines visual odometry, imu and odometry (the buzz word for this is  "sensor fusion"). AMCL only uses the laser scan and odometry, but it is a general method and could be modified to use data from other sensors.
Comment by cagatay on 2012-08-10:
is there a disadvantage of using the odom tf provided by robot_pose_ekf for gmapping and amcl ? I am a little bit confused i am sorry
Comment by Dan Lazewatsky on 2012-08-10:
There's no need to, all these techniques attempt to solve the same problem. Which one is best depends on your circumstances. If you have a map, use AMCL with the unfiltered pose. At best, using the filtered pose will introduce extra lag, and will not significantly improve performance, if at all.

