Q:

Bloom: Creating debs. Rosdep can't resolve key

Hi,
I'm trying to create debian packages from my catkin packages with bloom. After the bloom-import-upstream step has finished, the bloom-generate step fails when generating the first package (A) with Could not resolve rosdep key 'B', where B is the name of another package in the same metapackage on which A depends.
rosdep resolve B also returns ERROR: no rosdep rule for 'B'.
Any ideas? Thanks.

Originally posted by danielm0hr on ROS Answers with karma: 73 on 2012-12-11
Post score: 3

A:

Bloom resolves all package names (for all build and buildtool dependencies) using rosdep2 which uses the distro.yaml files (among other things) from https://github.com/ros/rosdistro. Until recently that was a problem for first-time releases (or private releases) since they are not in this list.
With the latest bloom version (0.2.13) this is not a problem anymore since all packages from the repository you are about to release will be considered "ok". So please update your "python-bloom" package and retry.

Originally posted by Dirk Thomas with karma: 16276 on 2012-12-18
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by danielm0hr on 2013-01-02:
OK, thank you. This works now... At least for packages which do not depend on other "private" packages from other repositories. I posted another question regarding this: http://bit.ly/UfbaRz . Perhaps you can help there, too?
Comment by danielm0hr on 2013-01-02:
Another thing: Why do I have to enter my SSH password seven times when accessing the git repo with the new version of bloom? Before, this was two times (Also annoying, but acceptable..)
Comment by harrisonmg on 2018-05-22:
I seem to be having a similar issue - my catkin workspace contains two packages, one of which depends on the other. When I try to use bloom-generate rosdebian just to build a .deb for the pacakge, I receive the same Could not resolve rosdep key error as in the OP. Python-bloom version 0.6.4-1
Comment by tfoote on 2018-05-22:
@harrisonmg This is a 5 year old question. Please ask a new question with enough information to reproduce and reference this one.
Comment by harrisonmg on 2018-05-23:
@tfoote Will do, thanks.

