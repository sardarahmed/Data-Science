Q:

rosdep basic usage

Hi,
I have a couple packages that depend on python libraries ( one depends on rtklib and the other on mxnet)
My first question is do these belong in my package.yml file
  <build_depend>rtklib</build_depend>  
  <run_depend>rtklib</run_depend>  

and
  <build_depend>mxnet</build_depend>  
  <run_depend>mxnet</run_depend>  

I'm trying to get the hang of rosdep by doing a simpler example with pygame. I included
 <run_depend>pygame</run_depend>

in my package.yml and then ran rosdep install <my-package>
but I get the error:

ERROR: the following packages/stacks
could not have their rosdep keys
resolved to system dependencies:
rosdep_tutorial: Cannot locate rosdep
definition for [pygame]

I also tried python_pygame but that did not work either
UPDATE:
Okay, I got my pygame example working by using python-pygame because I found out that rosdep is using the apt package manager. Now I'm stuck because neither rtklib or mxnet are able to be install via apt. How should these be installed?

Originally posted by shoemakerlevy9 on ROS Answers with karma: 545 on 2017-04-27
Post score: 0

A:

Rosdep resolves to local ROS packages, entries in an active rosdistro, or by using the rosdep rules set
python-pygame works because it's already in the rules: https://github.com/ros/rosdistro/blob/master/rosdep/python.yaml#L1959
If you package is not in that set you need to add a local rosdep rule source or submit one upstream.
You can contribute new rules following this procedure: http://docs.ros.org/independent/api/rosdep/html/contributing_rules.html

Originally posted by tfoote with karma: 58457 on 2017-06-21
This answer was ACCEPTED on the original site
Post score: 0

