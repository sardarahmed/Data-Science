Q:

How to implement open package to my robot?

Hi, I am not that good at ROS
I want to implement rrt_package(rrt_exploration, rrt_exploration_tutorial) to my (turtlebot3 robot). The rrt package is based on kobuki robot so I thought it is necessary to remap topic names in the rrt_package with the topic names what turtlebot3 uses. I made some launch files based on the turtlebot3_model.launch file in the turtlebot3_bringup package and I have included some scripts from the single_simulated_house.launch in the rrt_exploration_tutorial package.
I expected my turtlebot3 robot to operate like here but it was not. Master(desktop) did not seem to receive scan data from turtlebot3. Turtlebot3 works well when starting the turtlebot3 package, so it is free from defects.
Bellow are my launch files.
Main launch file: turtlebot3 bring up launch(based on turtlebot3_model.launch in turtlebot3_bringup package)
<launch>
<!--group ns="/robot_1"-->

  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle]"/>

  <include file="$(find turtlebot3_bringup)/launch/includes/turtlebot3_rrt_robot_description.launch.xml">
    <arg name="model" value="$(arg model)" />
  </include>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="use_tf_static" type="bool" value="false" />
    <param name="tf_prefix" type="string" value="$(arg model)"/>    
  </node>

  <include file="$(find turtlebot3_bringup)/launch/includes/rrt.launch">
    <!--arg name="namespace" value="robot_1"/-->  
  </include> 

<!--/group-->

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot3_description)/rviz/model.rviz">
  <!--node pkg="rviz" type="rviz" name="rviz" args="-d $(find rrt_exploration_tutorials)/launch/includes/rviz_config/single.rviz"-->
    <!--remap from="move_base_simple/goal" to="robot_1/move_base_simple/goal"/-->
  </node>

</launch>

Turtlebot3 description xml file(based on description.launch.xml in turtlebot3_bringup package)
<launch>
  <arg name="model"/>
  <arg name="urdf_file" default="$(find xacro)/xacro.py '$(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro'" />
  <param name="robot_description" command="$(arg urdf_file)" />
</launch>

RRT launch file(based on move_baseSafe.launch in rrt_exploration_tutorial package)
<!-- move base -->
<launch>
  <master auto="start"/>

  <!--arg name="namespace"/-->

  <param name="use_sim_time" value="true" />

  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen" >
    <remap from="scan" to="base_scan"/>

      <!--param name="map_frame" value="$(arg namespace)/map"/-->
<param name="map_frame" value="map"/>
      <!--param name="odom_frame" value="$(arg namespace)/odom"/-->
<param name="odom_frame" value="odom"/>
      <!--param name="base_frame" value="$(arg namespace)/base_link"/-->
<param name="base_frame" value="base_link"/>

    <param name="map_update_interval" value="2.0"/>
    <param name="maxUrange" value="50.0"/>
    <param name="maxRange" value="50.0"/>
    <param name="sigma" value="0.05"/>
    <param name="kernelSize" value="1"/>
    <param name="lstep" value="0.05"/>
    <param name="astep" value="0.05"/>
    <param name="iterations" value="5"/>
    <param name="lsigma" value="0.075"/>
    <param name="ogain" value="3.0"/>
    <param name="lskip" value="0"/>
    <param name="srr" value="0.01"/>
    <param name="srt" value="0.02"/>
    <param name="str" value="0.01"/>     
    <param name="stt" value="0.02"/>
    <param name="linearUpdate" value="0.01"/>
    <param name="angularUpdate" value="0.01"/>
    <param name="temporalUpdate" value="0.1"/>
    <param name="resampleThreshold" value="0.5"/>
    <param name="particles" value="30"/>
    <param name="xmin" value="-5.0"/>
    <param name="ymin" value="-5.0"/>
    <param name="xmax" value="5.0"/>      
    <param name="ymax" value="5.0"/>
    <param name="delta" value="0.1"/>
    <param name="llsamplerange" value="0.01"/>
    <param name="llsamplestep" value="0.01"/>
    <param name="lasamplerange" value="0.005"/>
    <param name="lasamplestep" value="0.005"/>
    <param name="minimumScore" value="0.005"/>
  </node>

 
  <node pkg="move_base" type="move_base" respawn="false" name="move_base_node" output="screen">

    <param name="footprint_padding" value="0.01" />
    <param name="controller_frequency" value="5.0" /> 
    <param name="controller_patience" value="3.0" /> 
    <param name="oscillation_timeout" value="30.0" /> 
    <param name="oscillation_distance" value="0.5" /> 
    <param name="planner_patience" value="1" /> 
    <param name="controller_patience" value="1" /> 
    <remap from="cmd_vel" to="mobile_base/commands/velocity"/>
    <param name="recovery_behavior_enabled" value="false" /> 
     
    <rosparam file="$(find rrt_exploration_tutorials)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find rrt_exploration_tutorials)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find rrt_exploration_tutorials)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find rrt_exploration_tutorials)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find rrt_exploration_tutorials)/param/base_local_planner_params.yaml" command="load" />

    <!--param name="global_costmap/global_frame" value="$(arg namespace)/map"/-->
<param name="global_costmap/global_frame" value="map"/>
    <!--param name="global_costmap/robot_base_frame" value="$(arg namespace)/base_link"/-->
<param name="global_costmap/robot_base_frame" value="base_link"/>
    <!--param name="global_costmap/laser_scan_sensor/sensor_frame" value="/$(arg namespace)/base_laser_link"/-->
<param name="global_costmap/laser_scan_sensor/sensor_frame" value="base_laser_link"/>
    <!--param name="global_costmap/laser_scan_sensor/topic" value="/$(arg namespace)/base_scan"/-->
<param name="global_costmap/laser_scan_sensor/topic" value="base_scan"/>
    
    <!--param name="local_costmap/global_frame" value="$(arg namespace)/odom"/-->
<param name="local_costmap/global_frame" value="odom"/>
    <!--param name="local_costmap/robot_base_frame" value="$(arg namespace)/base_link"/-->
<param name="local_costmap/robot_base_frame" value="base_link"/>
    <!--param name="local_costmap/laser_scan_sensor/sensor_frame" value="$(arg namespace)/base_laser_link"/-->
<param name="local_costmap/laser_scan_sensor/sensor_frame" value="base_laser_link"/>
    <!--param name="local_costmap/laser_scan_sensor/topic" value="/$(arg namespace)/base_scan"/-->
<param name="local_costmap/laser_scan_sensor/topic" value="base_scan"/>
    <!--param name="local_costmap/obstacle_layer/laser_scan_sensor/topic" value="/$(arg namespace)/base_scan"/-->
<param name="local_costmap/obstacle_layer/laser_scan_sensor/topic" value="base_scan"/>

  </node>

</launch>

Finally I used rviz launch file in turtlebot3_description package.
I have no clue why it does not work. Can you give me some advice or ideas?
Thanks for your help.
=============================================================
I launched this file in kobuki changed just this
    <node pkg="rplidar_ros" type="rplidarNode" name="laser1">
    <param name="frame_id" value="/robot_1/base_link"/>
    <param name="serial_port" value="/dev/ttyUSB1"/>
    <param name="calibrate_time" type="bool" value="true"/>
    <param name="intensity" type="bool" value="false"/>
    <param name="min_ang" value="-2.356194437"/>
    <param name="max_ang" value="2.35619443"/>
    <param name="cluster" value="1"/>
    <remap from="scan" to="base_scan" />
    </node>

And launched this file in desktop
Below is rqt_tf_graph

Below is rviz

Below is rqt_graph

Originally posted by Sunje on ROS Answers with karma: 3 on 2017-09-21
Post score: 0

A:

It should work with any robot that receives velocity commands and publishes TF, odometery, and laser scan. Turtlebot3 does all that, so it should work. However, I'm not familiar with Turtlebot3 launch files.
To get the full picture, can you please show topic names? and also your TF tree, while everything is running?
For it to work, robot node names, topics and frames, all have to be prefixed by "robot_1". One way to do that is by using
<group ns="/robot_1"> in your launch files.
Your TF tree should look like this:

Your topic names should be like this:

So before you run the rrt_exploration package. Make sure you get this.
====================================================
Since you are using a physical robot,  <param name="use_sim_time" value="true" />, this parameter should be set to false.
In your launch files  you removed everything related to "robot_1" namespace, this is wrong, everything (node names, topics and frames in TF) should be prefixed by "robot_1". This is why the move_baseSafe.launch takes the namespace as an argument.

Originally posted by hasauino with karma: 91 on 2017-09-21
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Sunje on 2017-09-21:
Thanks for your reply hasauino! I really want to use your package. The thing is, I am doing on a physical robot, not on the gazebo simulation. So I execute turtlebot3 robot and run the launch file that I wrote above. But it doesn't work like your youtube real test movie.
Comment by hasauino on 2017-09-21:
Ok, it should work with your robot.
if you are using a real robot, why are you using  "use_sim_time" value="true", this should be set to false.
You didn't add screenshots for your TF tree and node names. If you do I can help.
Comment by Sunje on 2017-09-21:
I changed the value to "false" as you advised but it still doesn't work. I uploaded TF tree, topic names and node names. Thanks for your help.
Comment by hasauino on 2017-09-21:
the pictures you added are not showing for the TF and rqt graph. As I told you earlier, you have to prepare your robot.
Check Setting up your robot section.
Also this
Comment by Sunje on 2017-09-21:
I re-linked image of url. As you can see all the names don't start with /robot_1. The problem is I want to make topics to start with /robot_1 but I don't know how to do that. If I just copy your script and run the following error came up:
Comment by Sunje on 2017-09-21:
Timed out waiting for transform from robot_1/base_link to robot_1/map to become available before running costmap, tf error: canTransform: source_frame robot_1/base_link does not exist.. canTransform returned after 0.100975 timeout was 0.1.
Should I have to change robot description file?
Comment by hasauino on 2017-09-21:
I have edited my answer.
to prefix all nodes in  a launch (its name, and its topics) with a namespace (in our case robot_1), you simply wrap your launch file with the "group ns" tag.
Comment by hasauino on 2017-09-21:
No, I don't think robot description has anything to do with that, it just publishes URDF model to RVIZ for visualization.
I still don't have your topic names and TF tree, it's hard to tell. Bu the problem is with topic names. You have to make sure of them.
Comment by Sunje on 2017-09-21:
Do you still have problem to see topic names..? I tried to solve the problem as you advised but I still could not get through it. Can you share me the launch file that you used in real test with kobuki?
Comment by hasauino on 2017-09-22:
Yes I still can't see the images.
These are the launch files I was using for the real robot:
1- On the robot itself
2- On the master computer
Comment by Sunje on 2017-09-23:
I am currently trying to run the actual turtlebot3 robot by modifying the turtlebot3_robot.launch file based on your launch file.
Comment by Sunje on 2017-09-23:
And I tried your package with my kobuki robot with rplidar. I changed the hokuyo lidar package to rplidar and ran the launch file. The launch file shows no error, but kobuki will not move if I point the 2D Nav Goal from rviz. I updated my question on this issue.
Comment by hasauino on 2017-09-25:
Sorry for the late reply.
Normally Rviz publishes the 2D nav goal on  /move_base_simple/goal, the robot in my launch file has a namespace  /robot_1, so it receives the goal on  /robot_1/move_base_simple/goal.
In my launch file I did the remapping. I'm not sure if you removed that line?
Comment by hasauino on 2017-09-25:
I mean, line 91 in this launch file
Comment by Sunje on 2017-09-26:
I found why it didn't work. Your launch file works perfectly. But the problem was that the obstacle_range and raytrace_range parameter settings in the cost_common_params.yaml file are too large to be used in my space. The robot seems to have not moved at all by recognizing everything as an obstacle.
Comment by Sunje on 2017-09-26:
The robot worked well after resetting the parameter values. Thanks for your great help. For turtlebot3, I need to debug the turtlebot3 launch file by comparing it to your launch file. If I have any progress(and have some questions!), I will update. I'm sorry to bother you.
Comment by hasauino on 2017-09-26:
Great!
No problem, actually, I'm very glad you are using the package
Comment by Yaping659 on 2019-03-05:
In the turtlebot2, we encountered many problems when they were running rrt_exploration. According to your previous reply, they just need to modify the launch file, is that enough?Please help me!

