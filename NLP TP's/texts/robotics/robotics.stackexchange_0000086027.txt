Q:

Is there a way to avoid overwriting node name when launching a node?

If I understand correctly, to run a node, you have to use a launch file, and each launch file includes something of the kind
  <node pkg="pkgname" type="mainprogram.py" name="nodename" output="screen">

where nodename will overwrite the node name specified in rospy.init_node("...") of mainprogram.py
Then,  why does it make sense to name a node with rospy.init_node("..."), provided that that name will be overwritten anyway?

Originally posted by Zhoulai Fu on ROS Answers with karma: 186 on 2018-03-20
Post score: 1

A:

If I understand correctly, to run a node, you have to use a launch file [..]

No, that is not correct.
Nodes are 'just' binaries that happen to use ROS infrastructure for the input and output. So they can be run directly as you would any other binary (ie: ./name_of_binary, or $CATKIN_WS/devel/lib/$PKG/$BINARY). In that case the node would use the name that is hard-coded in the source.
rosrun $PKG $BINARY also does not override the name.

Originally posted by gvdhoorn with karma: 86574 on 2018-03-20
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Zhoulai Fu on 2018-03-20:
Thanks for the clarification!
Comment by Zhoulai Fu on 2018-03-20:
By the way, is that correct that all nodes that you can invoke from a package PKG located at $CATKIN_WS/devel/lib/$PKG/? (Apparently no: I just checked the mavros package. It has >5 launch files, yet only two executable in dev/lib/mavros/mavros. But where are the other nodes, if any?)
Comment by gvdhoorn on 2018-03-20:
All ROS nodes are either binaries or scripts. If they are scripts, they might not be placed in the devel/lib location, but be kept in the source space of your workspace.
But in principle: yes, you should be able to start all nodes as normal programs.

