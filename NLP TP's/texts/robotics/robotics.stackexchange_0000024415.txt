Q:

ROS across computers connected with low-bandwidth bit steams

I am at the early stages in a design project which will involve a complex robotic system operating mostly autonomously (payload) with a very flaky downlink to a ground station.
ROS seems to be useful for the payload side of the project but I am uncertain if ROS is capable of setting up a configurable downlink for the ground station. The message bandwidth within the payload will far exceed the bandwidth capability of the downlink and thus we must be able to: decimate, down-sample, compress, and nitpick topics to broadcast across the radio-link. In addition, this must be configurable in real-time to accommodate the changing signal integrity. The ground station also needs to be able to send commanding to the payload with ideally some form of acknowledgment.
In the past this was achieved using fully custom serialization code which allowed the ground station to request certain fields at given (configurable) resolutions. Since the radio links are usually simple, we did not implement any form of acknowledgment (think UDP) and error correction was also left out due to complexity.
My question is: is there a way to configure ROS messages for decimation/down-sampling and compression? Can these messages be piped across a "custom" radio link (one way bit streams)?
My searches on the topic have not given me anything viable so far (maybe I am using the wrong search terms? I am fairly new to ROS...) so I am looking for anything from an answer to a direction to take my research.

A:

If you have an IP based link ROS can generally be configured to do what you want over that link. You can write nodes that will implement the logic you need to decimate, downsample, compress, or do whatever you want. And then only subscribe to those topics on the other end of the link. You should setup the networking so that only the relevant topics flow over that network interface.
If you can assume it's more like a serial link, another common way to go over lower bandwidth links is via Micro-ROS which is optimized for serial types of links.
However if your link gets down to the range of highly custom, broadcast only that's not a use case where ROS is designed to work and I don't think that you'll find anything general purpose for that case as it's very specific to your system doing customized partial serialization. If you're optimizing to that level general purpose frameworks likely aren't the right tool.

