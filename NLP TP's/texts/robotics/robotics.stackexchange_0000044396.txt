Q:

camera_pose_calibration image format error

Hi,
I'm trying to use camera_pose_calibration to calibrate my Asus Xtion depth camera to a RGB camera. I calibrated both cameras and the launch file, except for this warning
"[ WARN] [1346835528.616595129]: You've passed in true for auto_start for the C++ action server at [/tf2_buffer_server]. You should always pass in false to avoid race conditions."
starts everything normally. But when I try to start calibrate_2_camera.launch, I get the following error:
"Creating aggregator for ['/gscam', '/camera/rgb']
ERROR [1346837613.386631463]: Unable to convert '8UC3' image to bgr8: 'Unsupported conversion from [8UC3] to [bgr8]'  "
Which keeps repeating periodically. This happens both with the built in RGB camera (for that I use a bag file) and an external RGB camera. The version of camera_pose_calibration that I'm using comes from here.
Does anyone know what's causing this and/or how to solve it?
Thanks in advance!

Originally posted by Pedro on ROS Answers with karma: 102 on 2012-09-24
Post score: 1

Original comments
Comment by jbohren on 2012-09-25:
What's the output of 'rostopic echo /camera/rgb/encoding' ?
Comment by Pedro on 2012-09-27:
From Asus Xtion, /camera/rgb/image_rect encoding is mono8.
Comment by jbohren on 2012-09-27:
That's confusing! So if /camera/rgb/image_rect is a mono image, is there something wrong with the openni pipeline with the Xtion?
Comment by Pedro on 2012-09-27:
image_rect is published by image_proc and it's supposed to be mono. image_rect_color is bgr8, but the tutorial about extrinsic calibration in openni_launch says to use image_rect.
Comment by jbohren on 2012-09-28:
Ah right. So have you tried it with image_rect_color?
Comment by Pedro on 2012-10-02:
I did and the same happened. Anyway, with the last ROS update it's finally working (with image_rect). Thanks!

A:

it is a bug as the behavior got broken but it is still doing the right thing: 8UC3 just tells you your image has 3 channels that are uint8. There is absolutely no color information in there: it could be RGB, BGR, YUV .... It therefore does not make sense to convert it to a color coded format.
Then again, 1.8.5 restores that behavior (it assumes 8UC3 is RGB). Groovy will throw that message again (but camera_pose_calibration will be fixed then).

Originally posted by Vincent Rabaud with karma: 1111 on 2012-09-25
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by jbohren on 2012-09-26:
Vincent, are you resurrecting camera_pose_calibration?
Comment by Athoesen on 2014-01-06:
From these comments it seems like this problem was supposed to be fixed but I'm still getting the same errors trying to use the camera_pose_calibration right now.  Is there a more updated package for multiple Kinect calibration that you know of?  Or can this be used with Hydro?

