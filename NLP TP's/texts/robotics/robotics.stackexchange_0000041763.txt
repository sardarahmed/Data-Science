Q:

Update Fuerte to 1.8.10 breaks rospkg

Yesterday, I used apt-get to update my Fuerte to 1.8.10, and then I could no longer run a roscore.  I was getting an error about the author tag in the file /opt/ros/fuerte/share/ros_comm/stack.xml. I did some searching and found this bug which said that it was a problem with rospkg that had been fixed in version 1.0.6.
The problem was fixed by running
sudo easy_install -U rospkg

My question is the following: Using ROS tools, how could I have automatically made this upgrade? Should rosdep be used to handle upgrades to components that are not installed via OS repositories?

Originally posted by jarvisschultz on ROS Answers with karma: 9031 on 2012-06-27
Post score: 16

A:

Actually, rospkg should not be installed using easy_install or pip anymore. It is now provided by the Debian package python-rospkg which is probably already installed on your system since it is a dependency of ros. Just get rid of /usr/local/lib/python2.7/dist-packages/rospkg and the corresponding egg file if present.
Edit: I've investigated the issue a little more and it turns out that rospkg is installed when rosdep is installed according to the install instructions using easy_install or pip in /usr/local. So what I guess happened was that people installed ROS correctly in the first place, then came the breaking ROS update without any message that it's now necessary to also update rosdep/rospkg. So the correct solution, at least for now, is probably to update rospkg by hand using pip or easy_install. I hope this will be fixed soon.

Originally posted by Lorenz with karma: 22731 on 2012-06-27
This answer was ACCEPTED on the original site
Post score: 17

Original comments
Comment by joq on 2012-06-27:
I am having a similar problem. That fix did not work for me (on Oneiric). Although I have python-rospkg installed, it seems to be missing from $PATH.
Comment by joq on 2012-06-27:
The easy_install command (above) did work. Strangely, pip install did not. Something really screwy is going on here.
Comment by Lorenz on 2012-06-27:
Interesting. For me getting rid of the easy_installed thing worked. Just out of curiosity, what was the python backtrace you were getting?
Comment by tfoote on 2012-06-27:
@joq with pip and easy_install I've had some issues with them creating a "build" directory in the current directory and if that already exists, it installs from there instead of the new version.  Even if you use the -U option, and it downloads the new tarball.
Comment by jarvisschultz on 2012-06-27:
Indeed, removing all references to the rospkg egg files, and relying on the already-installed version in python-rospkg also worked.
Comment by tbernhard on 2012-06-28:
Could someone explain how to do this specifically?  I've moved the egg files (never had a plain rospkg folder in the path listed above), fully uninstalled ros-fuerte (using apt-get, so maybe that won't reach everything), did a clean install, and roscore still errors out.
Comment by tbernhard on 2012-06-28:
I can post a full backtrace if requested, but rosversion fails to load with the final error of "pkg_resources.DistributionNotFound: rospkg==1.0.4"
Comment by tbernhard on 2012-06-28:
Sorry for the repeated posts.  The easy_install solution seems to have worked. Is there a reason to prefer one solution over another?  Thanks for the help
Comment by Lorenz on 2012-06-28:
On a freshly installed Ubuntu, the package that provides rospkg is python-rospkg, no easy_install is necessary. It seems like there has also been the package ros-fuerte-rospkg. I would get rid of the easy-installed version and ros-fuerte-rospkg and use python-rospkg.
Comment by tbernhard on 2012-06-28:
Sorry to be a newbie, but how do I get rid of the easy_install version? easy_inst's help says nothing about uninstalling.  And mine was a fresh reinstallation of ROS, but not Ubuntu.  After this, dpkg no longer reports ros-fuerte-rospkg, though it still did not work until I tried the easy_inst way
Comment by Lorenz on 2012-06-28:
easy_install puts the rospkg into /usr/local/lib/python2.7/dist-packages/rospkg or something similar (maybe python 2.6, maybe site-packages depending on your ubuntu version). Delete that directory and the rospkg egg file. In the backtrace you see where the erroneous python files are.
Comment by joq on 2012-06-29:
In addition, on my Fuerte/Oneiric system I had to sudo rm /usr/local/bin/rosversion, which had been left lying around by something.
Comment by tfoote on 2013-03-14:
A good description of how to cleanup the installs: http://answers.ros.org/question/49143/problems-with-rqt-groovy-ubuntu/?answer=49153#post-id-49153

