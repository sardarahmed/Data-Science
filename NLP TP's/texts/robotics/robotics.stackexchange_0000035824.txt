Q:

image_transport between ROS node and ROSJava node

Hi, am getting a picture with kinect and I want to tranfer it a Rosjava node to use it there. I have managed to exchange messages between those two nodes, but the image_transport is unclear on the Rosjava side. I cannot find documentation on which imports to make and what libraries to refer to. I am trying to edit a normal message listener rosjava node to make it able to receive images. This is my base code that I try to change:
public class Javacvtransfer implements NodeMain {
private Node node;
  @Override
  public void main(Node node)
  {
      Preconditions.checkState(this.node == null);
      this.node = node;
        try {
            final Log log = node.getLog();
            node.newSubscriber("camera/image", "std_msgs/String",
                new MessageListener<org.ros.message.std_msgs.String>() 
            {
                  @Override
                  public void onNewMessage(org.ros.message.std_msgs.String message) {
                    log.info("I heard: \"" + message.data + "\"");
                  }
                });
          } catch (Exception e) {
            if (node != null) {
              node.getLog().fatal(e);
            } else {
              e.printStackTrace();
            }
          }
        }
  @Override
  public void shutdown() {
    node.shutdown();
    node = null;
  } }

I dont know what imports to make also for the image_transport in rosjava.
Any help would be appreciated.

Originally posted by spagi on ROS Answers with karma: 33 on 2011-11-19
Post score: 2

A:

I haven't used rosjava yet, but probably you just need to use sensor_msgs/Image instead of std_msgs/String. The class should be org.ros.message.sensor_msgs.Image.
I wouldn't worry about image_transport in Java yet. image_transport is a C++ package that basically wraps a normal ROS image topic and provides compressed versions of the image stream, which can be very useful when publishing over a bandwidth-limited network. I believe rosjava has an example of subscribing to a JPEG-compressed image topic directly, but there isn't a nice wrapper for arbitrary compressed transports like in C++.

Originally posted by Patrick Mihelich with karma: 4336 on 2011-11-21
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by jubeira on 2017-04-17:
See this answer for more info on that!
http://answers.ros.org/question/60086/is-there-a-nice-way-to-convert-the-built-in-jpeg-compressed-image-message-to-an-awt-bufferedimage/?answer=259406#post-id-259406

