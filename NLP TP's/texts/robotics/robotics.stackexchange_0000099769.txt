Q:

Get message published before subscriber start

Hello,
I have a publisher node set to publish only once a message right after it started.
I have a subscriber node that subscribes to this topic but that is sometimes started a little time after the publisher (so its message is published before the subscriber has started)
How can the subscriber retrieve this message published before it started ?
I feel this may be done with QoS policies.
I created the subscription with a QoS History depth of 10 (according to the documentation), but this message is not retrieved (but QoS policies are at least compatible since if a republish regularly the message after the subscriber started I receive it):
m_subMap = this->create_subscription<nav_msgs::msg::OccupancyGrid>("/map", 10, std::bind(&MapDataCallback, this, _1));

Originally posted by PatoInso on ROS Answers with karma: 109 on 2021-08-03
Post score: 0

A:

You're right to look into QoS, but I think the setting you will want to look at is transient local (aka latching)

Originally posted by shonigmann with karma: 1567 on 2021-08-03
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by PatoInso on 2021-08-04:
"latching" was indeed what I was looking for, thanks.
This code works, by setting bith the subscriber and the publisher to durability "transient local" (in a way insopired from the slam_toolbox code):
/* Publiher side */
m_mapPublisher = this->create_publisher<nav_msgs::msg::OccupancyGrid>(
"/map", rclcpp::QoS(rclcpp::KeepLast(1)).transient_local().reliable());

/* Subscriber side */
rclcpp::QoS qosLatching = rclcpp::QoS(rclcpp::KeepLast(1));
qosLatching.transient_local();
qosLatching.reliable();
m_subMap = this->create_subscription<nav_msgs::msg::OccupancyGrid>("/map", qosLatching, std::bind(&MapDataCallback, this, _1));

