Q:

How to Adjust Turtlebots odometry manually?

I would like to adjust the encoder information coming from my turtlebot so that it is accurate for building maps in gmapping, etc. Im trying to build a better robot base without having to reinvent the wheel, as I am very pleased with turtlebots performance over all. So basically I am fitting custom wheels(5X larger) and motors to a larger robot base but would still like to use the create with encoders and base sensors (create base still onboard the robot). I would add the creates encoders to the new shafts but instead of using gears to tune the create encoders to turtlebot specs I figured it would be easier to adjust the code. Is this possible manually , if so where should I start to play with the numbers? ,Turtlebot_node ..
self.odom_angular_scale_correction = rospy.get_param('~odom_angular_scale_correction', 1.0)
self.odom_linear_scale_correction = rospy.get_param('~odom_linear_scale_correction', 1.0)
??
Also theoretically might turtlebot calibration work for this task aswell, along with some manual fine tuning of the code? I would like to understand this a bit better before breaking down the create base.. Thanks for viewing
I thought this might be a simple hardware hack to get bigger motors and wheels to carry larger payloads. I know the creates encoders might not be the most accurate but I have found them to be reliable for my needs. Maybe later I could try writing a new set of code to a new more advanced base.

Originally posted by Atom on ROS Answers with karma: 458 on 2012-01-26
Post score: 0

Original comments
Comment by Atom on 2012-01-26:
I'm also aware that the the dimensions of turtlebot might be comprimised leading to unaccuate mapping and navigation as the dimensions of the urdf in rviz might be smaller in comparison to my new hybrid turtlebot. But This is the first step and would deal with issues as they arose..

A:

I figured out that in order to get Turtlebot to move in rviz relative to my predefined speed set on my motor control, I had to play with the keyboard_teleop.launch parameters to match my actual speed emulated in rviz. My speed was faster than the stock turtlebot speed so I reduced my parameters from
param name="scale_linear" value="1.0" type="double"/
param name="scale_angular" value="1.0" type="double"/
to
param name="scale_linear" value="0.2" type="double"/
param name="scale_angular" value="0.2" type="double"/
this worked for me ...

Originally posted by Atom with karma: 458 on 2012-03-01
This answer was ACCEPTED on the original site
Post score: 0

