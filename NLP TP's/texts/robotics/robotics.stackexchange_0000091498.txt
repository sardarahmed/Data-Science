Q:

Printing time values along with pose

I’m an absolute newbie and I got hold of someone’s simple program to navigate a robot by setting a goal position and including random obstacles. The python script uses ROS move_base and navigation packages, subscribes to nav_msgs and prints out pose and twist outputs to the terminal/a text file. Everything works fine but I’m not able to figure out the time values for each pose/twist output. How can I get the script to output time; or is it an output frequency parameter set in any of the yaml files. I tried searching and I could not figure out.

Originally posted by kkulkarn on ROS Answers with karma: 3 on 2019-04-24
Post score: 0

A:

I guess your script subscribes to nav_msgs/Odometry messages since you said you have a twist output. If you check the documentation of the message you'll find that there are different fields :
std_msgs/Header header
string child_frame_id
geometry_msgs/PoseWithCovariance pose
geometry_msgs/TwistWithCovariance twist

Your script gets the info from the fields pose and twist, if you want to get the time you have to check in the field header , and within the header there is the field time.
So in your script you probably have a print function with something like data.pose.pose.position in it. You just have to add data.header.time somewhere in your print.

Originally posted by Delb with karma: 3907 on 2019-04-24
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by kkulkarn on 2019-04-24:
Yes, you are correct on the pose and twist. I tried including what I thought would be the correct syntax., which obviously not. Gave me an error saying bad call back. What am I doing wrong?
import roslib
roslib.load_manifest('anvel_2dnav')
import rospy
from nav_msgs.msg import Odometry
from std_msgs.msg import Header

def navCallback(data):
    print "---------------------------"
    print data.header.time
    print data.pose.pose
    print data.twist.twist
if __name__ == '__main__':

rospy.Subscriber("odom", Odometry, navCallback)
rospy.Subscriber("time", Header, navCallback)

Comment by Delb on 2019-04-25:
Your error is because of the last line, just get rid of it. With a subscriber, you are supposed to give a topic name, the type of the topic and the name of the callback. The first subscriber already subscribe to the topic odom and you will deal with the Odometry message within the navCallback function. Since the data do have the header field there is no need to have another subscriber.
To go further on your issue : your last line try to subscribe to the topic time (which I feel it doesn't exist, if you do rostopic list there shouldn't be this topic) specifying that the topic is a Header msg (this type do exist but is usually used within another message, just like inside Odometry.msg) and you assign a callback that is already assigned to another message type.
I would recommand you to go through the ros tutorials to understand the different ROS concepts :)
Comment by kkulkarn on 2019-04-25:
Got it. Noted on reviewing the tutorials. I was in a hurry and excited to see some initial results without really understanding all the communications between ROS and the dynamics solver. Thanks.

