Q:

using cmd_vel and navigation stack for our robot

Hi! We have our own robot which has two wheels in the back (each one with an independent motor) and one free wheel on the front. It can already accept commands to move a certain distance forwards or backwards or to move at a certain speed. It can also be told to spin at a certain velocity (one wheel goes backwards and the other forwards, differential). For odometry we have the encoders plus visual odometry from a kinect using ccny_rgbd. That is already working.
Now we are looking up the NAVIGATION STACK and trying to see if we can use it:
The tutorial states that our robot has to be able to accept messages on topic /cmd_vel of type "twist". These messages contain linear velocities Vx and Vy and angular velocities Vtheta.
In the case of our robot, for example, if it is looking towards the x-axis, it has to spin before it can have a a Vy velocity. To have them both at the same time would require calculating the different speeds needed in each wheel to have them both Vx and Vy at the same time. Any suggestions, help?
How about having all three of these velocities at the same time. Is that possible? Or are the messages coming out of the navigation stack supposed to contain all zeros but one of the three componentes?

Originally posted by fersarr on ROS Answers with karma: 57 on 2013-05-06
Post score: 2

A:

It sounds like you have a non-holonomic robot, so you can set the holonomic_robot param of the base_local_planner node to false to make sure that it won't output cmd_vel messages that your robot won't be able to perform.

Originally posted by Ernest with karma: 341 on 2013-05-06
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by fersarr on 2013-05-06:
wow, awesome, thanks! That's all I needed to hear (wish I hadn't missed it in the tutorials). Thanks!
Comment by Ernest on 2013-05-06:
no worries!
Comment by Dhagash Desai on 2018-09-27:
can you tell me how are you controlling the motors I have written the following code in arduino but its not efficient can you suggest any changes?
https://github.com/Dhagash4/autonavi/blob/master/sketch_sep20a.ino

