Q:

Access parameters set from another node

Hi,
I'm using ROS2 Bouncy.
I have two nodes. What I would like to do is to allow the first node to set some parameters on the parameters server and then make the second node to retrieve these parameters.
The problem is that I'm able to see the parameters only from the node that has set them.
NODE 1
  rclcpp::init(argc, argv);
  rclcpp::Node::SharedPtr node = rclcpp::Node::make_shared("node_1");

  rclcpp::SyncParametersClient::SharedPtr parameters_client = std::make_shared<rclcpp::SyncParametersClient>(node);

  while (!parameters_client->wait_for_service(1s)){ 
     if (!rclcpp::ok()) { 
         RCLCPP_ERROR(node->get_logger(), "Interrupted while waiting for the service. Exiting.");
         return 0;}
    RCLCPP_INFO(node->get_logger(), "service not available, waiting again..."); }

  std::vector<rcl_interfaces::msg::SetParametersResult> set_parameters_results = parameters_client->set_parameters({rclcpp::Parameter("wheels.radius", 1)});

  rclcpp::spin(node);
  rclcpp::shutdown();

NODE 2
  rclcpp::init(argc, argv);
  rclcpp::Node::SharedPtr node = rclcpp::Node::make_shared("node_2");

  rclcpp::SyncParametersClient::SharedPtr parameters_client = std::make_shared<rclcpp::SyncParametersClient>(node);

  while (!parameters_client->wait_for_service(1s)){ 
     if (!rclcpp::ok()) { 
         RCLCPP_ERROR(node->get_logger(), "Interrupted while waiting for the service. Exiting.");
         return 0;}
    RCLCPP_INFO(node->get_logger(), "service not available, waiting again..."); }

    rclcpp::spin_some(node);

    auto parameters_and_prefixes = parameters_client->list_parameters({ }, 0);
    std::cout<<"READING PARAMS"<<std::endl;
    for (auto & name : parameters_and_prefixes.names) {
        std::cout<<"P: "<< name << std::endl;
    }

The parameters_and_prefixes variable in the second node is an empty vector. On the other hand, if I try to list all parameters from node 1 (where they are actually set), everything works fine.
It looks like I'm setting the parameters for node 1 only... What should I change ?
Thanks

Originally posted by alsora on ROS Answers with karma: 1322 on 2018-10-17
Post score: 1

A:

I believe the issue is that in NODE 2 you're not providing a remote node name:
http://docs.ros2.org/bouncy/api/rclcpp/classrclcpp_1_1_sync_parameters_client.html#ad7d9189ce6b12fbe0d23890ed61bb928
(it's the second argument after the handle to the local node)
Basically that defaults to "" which implicitly means "this node", which I admit isn't very clear.
So yes, in NODE 2 you're listing parameters on yourself rather than NODE 1.
Try this change in NODE 2:
auto parameters_client = std::make_shared<rclcpp::SyncParametersClient>(node, "node_1");

Originally posted by William with karma: 17335 on 2018-10-17
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by alsora on 2018-10-17:
Thank you for the clarification! Is there a way to have some sort of global parameters? Which can be accessed even without knowing which node has created them? They can still live within one node and have its lifetime, but I really would like to throw away the node name from the method..
Comment by Marc Testier on 2018-10-17:
For global parameters, from what I see here, I don't think it will be possible:
For the sake of validating parameter lifecycle, all parameters will be hosted on a node. Their lifetime will be implicitly tied to the nodes lifetime.
Comment by Marc Testier on 2018-10-17:
Nm, forget my previous comment, if you read a bit further it says : Backwards compatibility Parameter Server like behavior [...] To this end we propose to write a simple node which emulates the policy of the ROS 1.0 parameter server: it runs in namespace / and simply accepts all changes requested.
Comment by Marc Testier on 2018-10-17:
It was the proposed approach though, so I don't know what has been implemented yet or if it changed.
Comment by William on 2018-10-17:
There's no global parameters right now. We have always talked about having a special node that accepts all parameter changes and maybe some convenience functions in rclcpp for accessing it, but we haven't done that yet.
Comment by alsora on 2018-10-25:
@William is setting the remote node to "" and then setting/getting parameters equivalent to use the methods Node::set_parameters, Node::get_parameters defined here https://github.com/ros2/rclcpp/blob/master/rclcpp/src/rclcpp/node.cpp#L122 ?
Comment by William on 2018-10-25:
Yup! In fact I've considered removing the ability to use the parameter client on "self", but it's useful for tests.
Comment by alsora on 2018-10-25:
@William Thanks! If I do not create a parameter client on "self" can I still register a rcl_interfaces::msg::ParameterEvent callback for the parameters owned by this node? Despite the name, it looks to me that register_param_change_callback should be used for accepting/rejecting changes only
Comment by William on 2018-10-25:
You can use (misuse?) register_param_change_callback http://docs.ros2.org/bouncy/api/rclcpp/classrclcpp_1_1_node.html#aed9fcbbe42dbe03008ae4bfcfa0452f0 to monitor what changes are requested (and just accept them all), but you can also just make a subscriber to the parameter event's topic.
Comment by William on 2018-10-25:
We should probably have a way to get a callback for each "parameter event" which works locally without any ROS mechanisms in place (no topics or services).

