Q:

realtime_publisher&realtime_buffer

I'm trying to figure out how to use realtime_tools (mainly realtime_publisher&realtime_buffer), but there are to few information about it. I can only find this:
#include <realtime_tools/realtime_publisher.h>

bool MyController::init(pr2_mechanism_model::RobotState *robot,
                        ros::NodeHandle &n)
{
  realtime_pub = new 
    realtime_tools::RealtimePublisher<mgs_type>(n, "topic", 4);
  return true;
}

void MyController::update()
{
  if (realtime_pub->trylock()){
    realtime_pub->msg_.a_field = "hallo";
    realtime_pub->msg_.header.stamp = ros::Time::now();
    realtime_pub->unlockAndPublish();
  }
}

Hope someone can give me more detailed help.
Thanks a lot.

A:

Welcome at RSE.
ros-control is based on a realtime-loop (update methods of the controllers and read/write methods of the hardware components, sharing data with a shared-memory layer). realtime_tools provide mechanisms to use non-realtime-safe code in this loop: E.g., publishers, or buffers exchanging data between the realtime-loop and subscriber callbacks.
It seems that you are working with ROS 1.
Both, the buffer and publisher are used in several places of the ros_controllers, or in a simpler form in the control_toolbox's PID implementation

