Q:

Sending data stream to c++ Struct

Hi,
I'm looking to use the a Data Stream from RoS to fill out a C++ Struct for visual output on a Windows GUI.
Currently, the data would go from being published on Ubuntu to a listener on Windows, then the data needs to be put into the C++ struct. I'm not sure how to accomplish that last bit. How would you normally move a data stream to a usable output (outside of RoS)?
Thanks for any help!

Originally posted by bzt on ROS Answers with karma: 15 on 2012-02-13
Post score: 0

A:

The easiest way to send data from a ROS program to a Windows program (assuming that you don't want to use ROS for Windows) would be through sockets. Your Windows program could provide the client socket, and your ROS application could provide the socket server. Whenever you want to send a message to the Windows program, you would serialize the message however you see fit (since if you're not using ROS, you can't use ROS's serialization). If the message type is constant, this should be trivial.
Sockets also allow two-way communication, so you could then send messages from ROS to Windows and vice versa with no problem. In my opinion, sockets are the easiest, most practical method by which to perform IPC (Inter-Process Communication) over networks.

Originally posted by DimitriProsser with karma: 11163 on 2012-02-13
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by bzt on 2012-02-13:
Thanks! If I were to use RoS for Windows, so that RoS would already handle the networking/communication, how would I pull that data stream from Windows RoS to put it in a seperate C++ struct?
Comment by DimitriProsser on 2012-02-13:
If you were using ROS for Windows, you'd simply have to create a subscriber (just like in Ubuntu) and the ROS backend would take care of the rest. It would act as a regular message from any other ROS node.

