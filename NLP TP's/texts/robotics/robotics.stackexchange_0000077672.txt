Q:

Fusion of odometry from different sourses

I have three different sensor generating odometry . The three sources are

laser
Wheel
camera
i want to fuse these odometry using robot localization package .

Do the fame_id of the all the sources generating odometry be parent odom child base_link or it should be different for different  source ( odom_laser-->base_link) ?

Originally posted by shashank on ROS Answers with karma: 70 on 2016-12-05
Post score: 2

Original comments
Comment by Humpelstilzchen on 2016-12-06:
Missing details to answer: The point of the whole tf tree is to link the different objects (e.g. sensors) together. One sensor could be e.g. rotated by 90Â° or placed 1m away. The tf then needs to reflect that.

A:

This is tricky because if you're fusing N>1 Odometry messages, each Odometry needs a unique frame for header.frame_id.
Since frames can only have one parent, these frames (such as the proposed odom_laser) typically end up children of base_link, and must be broadcast by your components, while the fused odom frame broadcast by robot_localization ends up the parent of base_link.
Another approach may be to have your sensors publish TwistWithCovarianceStamped, which will be transformed to the local frame of the vehicle and does not require a distinct coordinate frame.
See http://docs.ros.org/kinetic/api/robot_localization/html/preparing_sensor_data.html

Originally posted by paulbovbel with karma: 4518 on 2016-12-06
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by shashank on 2016-12-07:
according to my understanding your are saying that my frame ids should be ( base_link-->laser_odom , base_link--> camera_odom, base_link-->wheel_odom) . The ekf_localization should publish me odom-->base_link. Am i correct ???
Comment by paulbovbel on 2016-12-07:
that's correct
Comment by Tom Moore on 2016-12-19:
Note that the odometry messages/inputs can have the same frame_id, but unless the measurements are in agreement with each other (e.g., odom0 and odom1 both provide measurements that don't diverge), it's going to produce ugly results. I try to stick to one pose and N velocity inputs.
Comment by shashank on 2016-12-20:
So u are saying i should choose the pose input from the most reliable source of odometry(say laser odometry) and for rest odometry (camera,wheel)  source i should only choose twist(velocity) messages and omit out pose. Am i correct??
Comment by Tom Moore on 2017-01-04:
Yes, correct.
Comment by Abdur on 2022-03-31:
I have the same confusion. As per the comments, did you set the frames laser_odom , camera_odom and wheel_odom as the children of base_link ? That cant work for me because these are the fixed frames..
Comment by Tom Moore on 2022-04-14:
If those frames are from sensors that are onboard the robot, then yes, they should be children of base_link. If they come from an external reference like a motion capture system, they would not be. You'd want a transform from your EKF world frame directly to that frame.
Note that the case of pose data that is being generated from a sensor onboard the robot where the sensor is not aligned with the vehicle origin is not well supported, but will be once this PR is merged. Then you can do something different: make the child_frame_id in the odom message your sensor frame (e.g., camera_odom) and set odomN_pose_use_child_frame to true, and then also set odomN_differential to true.

