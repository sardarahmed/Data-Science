Q:

missing symbol from libroscpp.so?

Hello there,
I built a ROS package in Ubuntu 14.04 LTS and ROS Indigo and now I test these executables that I built in different Linux and ROS distributions.
Giving an example, when I setup a VM with Ubuntu 12.04 LTS and ROS Hydro everything worked fine.
Now I am trying to run my package in Ubuntu 16.04 LTS and ROS Kinetic and I am getting this error:
maria@maria-VirtualBox:~/devel/lib/execDir$ ./executableName 
./executableName: symbol lookup error: ./executableName: undefined symbol: _ZN3ros4initERiPPcRKSsj

and when I filter the symbol:
maria@maria-VirtualBox:~/devel/lib/execDir$ echo _ZN3ros4initERiPPcRKSsj|c++filt
ros::init(int&, char**, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)

Also If i search for this symbol in libroscpp.so in ROS Indigo I can find it, but in Kinetic I do not!
Any ideas?

Originally posted by MariaKrgr on ROS Answers with karma: 20 on 2016-09-02
Post score: 0

Original comments
Comment by gvdhoorn on 2016-09-02:
Are you actually compiling on Ubuntu version X, then trying to run the same binaries on Ubuntu version Y?

A:

ROS does not guarantee ABI compatibility between major versions, and neither does Ubuntu. The ROS developers do their best to make sure that there aren't ABI changes within patch releases for a particular version of ROS, but sometimes they slip through testing too.
I don't expect your experiment to work, and I'm not surprised that it doesn't.

Originally posted by ahendrix with karma: 47576 on 2016-09-04
This answer was ACCEPTED on the original site
Post score: 2

