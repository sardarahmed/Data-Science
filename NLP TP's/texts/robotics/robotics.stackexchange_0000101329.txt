Q:

How to handle empty fields and default values in service call

I have a service with a float32 in the request definition. If this service is called from the command line, and the field is not set to anything by the user, it defaults to the value 0. For example
$ rosservice call /my_service ""

In the callback I print the request, and it shows as
float_field: 0.0

Is there any way to avoid or detect that the field was not set by the user? Zero is a valid option for my service, but I would like to raise an error if the field was left empty by the user.

Originally posted by FSund on ROS Answers with karma: 33 on 2022-03-09
Post score: 0

A:

No, there is no way to detect this. Service is called with a service request object, and all its fields always get initialized, either to zero-values or to user-given values.
If zero is a valid value for the field, why would you want to raise an error if it's not explicitly set? It is rather handy to not have to explicitly set all fields in a service request from the command-line.
If you really, really want to have this, your best option is to make the field into a variable-length array, and raise an error if the array does not have a single element. But it's a hacky option.

Originally posted by suurjaak with karma: 26 on 2022-03-12
This answer was ACCEPTED on the original site
Post score: 1

