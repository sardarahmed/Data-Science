Q:

Giving high-level control programatically on tum_simulator

I am confused how I can give high-level control like take off, landing etc programatically on tum_simulator. Via terminal of course, I can do something like (taken from the link provided):
Take off:
rostopic pub -1 /ardrone/takeoff std_msgs/Empty

Fly forward:
rostopic pub -r 10 /cmd_vel geometry_msgs/Twist  '{linear:  {x: 1.0, y: 0.0, z: 0.0}, angular: {x: 0.0,y: 0.0,z: 0.0}}'

Can anybody give me a hint or better still directly give a C++ snippet for take off and fly forward for me to easily grasp it.
Thanks in advance

Originally posted by alfa_80 on ROS Answers with karma: 1053 on 2014-08-25
Post score: 0

A:

Here is snippet for publish for "Fly forward", create a node for publishing messages.
ros::Rate loop_rate(10); // publishing frequency
while (ros::ok())
{

    //define publisher with topicname "/cmd_vel"
    ros::Publisher cmd_vel_pub;
    cmd_vel_pub = nh_.advertise<geometry_msgs::Twist>("/cmd_vel", 1); 
    //declare message of geometry_msgs::Twist type
    geometry_msgs::Twist cmd_vel;    
    //populate message
    cmd_vel.linear.x = 1.0;
    cmd_vel.linear.y = 0.0;
    cmd_vel.linear.z = 0.0;
    cmd_vel.angular.x = 0.0;
    cmd_vel.angular.y = 0.0;
    cmd_vel.angular.z = 0.0;    
    //publish message
    cmd_vel_pub.publish(cmd_vel);

    ros::spinOnce(); // not required if you dont have callbacks

    loop_rate.sleep();
}

Originally posted by bvbdort with karma: 3034 on 2014-08-25
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by alfa_80 on 2014-08-26:
@bvbdort:thanks, this is awesome :-)

