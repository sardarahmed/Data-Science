Q:

How to add clang dependency to ROS package

I'm trying to release one ROS package,
but the automatic build of the package on Jenkins fails, with this error:
CMake Error at CMakeLists.txt:16 (project):
The CMAKE_C_COMPILER:

 clang

is not a full path and was not found in the PATH.

Tell CMake where to find the compiler by setting either the environment
variable "CC" or the CMake cache entry CMAKE_C_COMPILER to the full path to
the compiler, or to the compiler name if it is in the PATH.

CMake Error at CMakeLists.txt:16 (project):
The CMAKE_CXX_COMPILER:

 clang++

is not a full path and was not found in the PATH.

Tell CMake where to find the compiler by setting either the environment
variable "CXX" or the CMake cache entry CMAKE_CXX_COMPILER to the full path
to the compiler, or to the compiler name if it is in the PATH.

I understand that the problem is that clang is not installed in the docker container used by Jenkins to compile the package, but I don't know what to configure in the package to add this system dependency, I have tried to add both
<build_depend>clang</build_depend>

and
<buildtool_depend>clang<buildtool_depend>

but in both cases I have the error
KeyError: 'clang'

can someone please help me to understand how to add this system dependency?

Originally posted by codavide on ROS Answers with karma: 3 on 2020-02-13
Post score: 0

A:

It sounds like you need to add a rosdep entry for clang: http://docs.ros.org/independent/api/rosdep/html/contributing_rules.html

Originally posted by ahendrix with karma: 47576 on 2020-02-13
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by gvdhoorn on 2020-02-13:
Should we first wonder why the build is failing due to a missing Clang. By that I mean: is the OP specifically forcing the use of Clang? If so: why?

