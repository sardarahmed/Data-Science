Q:

Differences between rosjava core and roscpp core?

I seem to have noticed some unusual differences between the rosjava core and roscpp core.  Keeping it simple my two test setups are as follows:

Ros Java Core, Ros Java Publisher, Ros Java Subscriber.  When the publisher is stopped and restarted the subscriber automatically reconnects with no issues.  This is also the case when the publisher is based on roscpp.  If the subscriber is started before the publisher it will wait for data.

Ros cpp core, Ros Java publisher, Ros Java Subscriber.  When the publisher is stopped and restarted the subscriber is never notified.  If the subscriber is restarted before the publisher is ready then the subscriber will time out rather than wait for data.

My setup is Java 7, ROS Groovy running under Ubuntu 12.04.
My simply stated questions are:
Q1.  Why does the java subscriber not automatically reconnect to a publisher using a roscpp core?
Q2.  Why does the java subscriber not block while waiting for a publisher when using a roscpp core?
Q3.  Are there any ways around the issues describe?
Thanks in advance!!

Originally posted by DaveT on ROS Answers with karma: 1 on 2013-03-16
Post score: 0

A:

This sounds like a bug to me. Please file an issue.

Originally posted by damonkohler with karma: 3838 on 2013-05-07
This answer was ACCEPTED on the original site
Post score: 0

