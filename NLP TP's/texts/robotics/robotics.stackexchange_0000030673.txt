Q:

VIM code completion under ROS

I was following this link: http://www.ros.org/wiki/IDEs to get my code completion working. On top of the plugin rosvim.vim installed, I also have OmniCppComplete. I don't get the code completion working under ROS, how should I do that? By the way, code completion for any other codes excluding ROS-related codes are just working out of the box.
Any ideas..
EDIT:
How should I tailor my ~/.vimrc file. Anyway. I've tried to add yours with the existing one like below:
syntax enable
se nu
set tabstop=4
set shiftwidth=4
set expandtab
filetype on
filetype plugin on
set nocp
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#CompleteCpp

set tags+=~/.vim/tags/ros
" OmniCppComplete settings to be tweaked
let OmniCpp_NamespaceSearch=1                                                                                         
let OmniCpp_GlobalScopeSearch=1
let OmniCpp_ShowAccess=1
let OmniCpp_MayCompleteDot=1
let OmniCpp_MayCompleteArrow=1
let OmniCpp_MayCompleteScope=1
let OmniCpp_DefaultNamespaces=["std","_GLIBCXX_STD"]
" Hotkey to generate tags for you current project
map <F5> :!/usr/bin/ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<cr>

*I've uninstalled and reinstalled the autocompletion with both methods below but still does not work

Originally posted by alfa_80 on ROS Answers with karma: 1053 on 2011-03-24
Post score: 8

Original comments
Comment by alfa_80 on 2011-03-28:
Thanks Eric for editing that..
Comment by Felix Endres on 2011-03-28:
Could you edit your post and set   tags around the .vimrc part. Thanks

A:

To use OmniCppComplete with ROS, you have to generate a set of tags for the ROS stacks.  There are probably better ways of doing this, but I was successful with find and grep.
First, generate a list of files that you want to generate tags from:
find /opt/ros/diamondback/stacks | grep -E '*/include/*/.*\.(h|hpp)' > /tmp/ros.filelist

Then use ctags to generate a tags database from this list:
ctags --sort=foldcase --c++-kinds=+p --fields=+iaS --extra=+q -f /tmp/ros.tags -L /tmp/ros.filelist

Once you have done this, you can move your tags file into your ~/.vim directory
mv /tmp/ros.filelist ~/.vim/tags/ros

And edit your ~/.vimrc file accordingly
set tags+=~/.vim/tags/ros
" OmniCppComplete settings to be tweaked
let OmniCpp_NamespaceSearch=1                                                                                         
let OmniCpp_GlobalScopeSearch=1
let OmniCpp_ShowAccess=1
let OmniCpp_MayCompleteDot=1
let OmniCpp_MayCompleteArrow=1
let OmniCpp_MayCompleteScope=1
let OmniCpp_DefaultNamespaces=["std","_GLIBCXX_STD"]
" Hotkey to generate tags for you current project
map <F5> :!/usr/bin/ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<cr>

Hope this helps.

Originally posted by mjcarroll with karma: 6414 on 2011-03-24
This answer was ACCEPTED on the original site
Post score: 6

Original comments
Comment by alfa_80 on 2011-03-28:
I've realized one thing. It works for the autocompletion provided  I have to press ctrl-N or ctrl-P while I'm in insert mode. All this while, it works well for stl just after "dot"(.) it straightaway suggests some options/members of the class say. Is it working that way using this ros tag? Another thing is that the options given are too broad in fact all words found in the source code, including the comments work and also author's name, somehow weird.
Comment by alfa_80 on 2011-03-27:
yeah, I've updated the namespace, but, it's still does not work..huhu, I think there are still ways to resolve this problem..
Comment by mjcarroll on 2011-03-27:
Update your vimrc to let OmniCpp_DefaultNamespaces=["std","_GLIBCXX_STD","ros"]
Comment by alfa_80 on 2011-03-26:
it's a good suggestion I guess, how to add "ros" to my default namespace? I can try that at least to see the output..
Comment by mjcarroll on 2011-03-26:
You can load all of your tags, that shouldn't be a problem.  In fact, you probably want to keep the tags from qt, sdl, and boost in addition to the ros tags.  You may be able to add "ros" to your default namespaces, and that would cure your problem, I'm not sure.
Comment by alfa_80 on 2011-03-26:
When I run command ":set tags", it returns   "tags=./tags,./TAGS,tags,TAGS,~/.vim/tags/stl,~/.vim/tags/gl,~/.vim/tags/sdl,~/
.vim/tags/qt4,~/.vim/tags/ros", seems to be okay right? Let me explain about my directory components..In my .vim directory, it has "after",  "autoload",  "doc",  "omnicppcomplete.zip", "qttags_backup, "tags",  "tags_backup"..Going deeper, in ../tags/ros directory, there reside "ros.filelist" and "ros.filelist2" files..Should I put  "qttags_backup,  and "tags_backup" together with "ros.filelist" and "ros.filelist2" files..BTW,  "qttags_backup,  and "tags_backup" are my previous tags files that I have prior to setting up ros tags..
Comment by mjcarroll on 2011-03-26:
If you enter the command ":set tags" in VIM, you should see a list of tags files.  Make sure that you ~/.vim/tags/ros file is included in that list.
Comment by alfa_80 on 2011-03-26:
"Are you sure that you are actually sourcing the tags file that you generated for ROS", what did you mean by sourcing the tags file? How can I check it? Thanks..
Comment by mjcarroll on 2011-03-26:
You can compare to my vim files, here: https://github.com/mjcarroll/dotfiles  Are you sure that you are actually sourcing the tags file that you generated for ROS?
Comment by alfa_80 on 2011-03-26:
Some strange things happened. It partially works with the one on /opt/ros/diamondback/stacks directory. It can autocompletes for boost:: (trying on point_cloud_converter package) but for ros:: still fails (expecting NodeHandle). The one my home directory is still not working (pattern not found returned)..Any remedy for this?
Comment by mjcarroll on 2011-03-26:
Following the guide that I posted above, point cloud and ros:: sucessfully completes.
Comment by alfa_80 on 2011-03-25:
I think it's also useful if you can check the command that I've invoked. Below is the command that I've run: (1) find /opt/ros/diamondback/stacks | grep -E '/include//..(h|hpp)' > /tmp/ros.filelist (2) ctags --sort=foldcase --c++-kinds=+p --fields=+iaS --extra=+q -f /tmp/ros.tags -L /tmp/ros.filelist (3) mv /tmp/ros.filelist ~/.vim/tags/ros (4) find /home/user/dev/code | grep -E '/include//..(h|hpp)' > /tmp/ros.filelist2 (5)  ctags --sort=foldcase --c++-kinds=+p --fields=+iaS --extra=+q -f /tmp/ros.tags -L /tmp/ros.filelist2  (6) mv /tmp/ros.filelist2 ~/.vim/tags/ros
Comment by alfa_80 on 2011-03-25:
Did you mean at the end I will have two files (one for /opt/ros/diamondback/stacks and another one for /home/user/code/dev ) of ros.filelist in ~/.vim/tags/ros directory? Is my edited version of ~/.vimrc file correct (please refer to the question part, the bottom part in the "EDIT" section)?
Comment by mjcarroll on 2011-03-25:
Obviously, you would have to repeat the process for each of the directories that you keep your ROS files in.  In my case, I also keep (personal) ROS stacks in ~/devel/ros, so I have an additional step to make sure that the /include/.h files from that directory as well.
Comment by alfa_80 on 2011-03-25:
Since my ROS files also reside in /home/user/code/dev then I do like this instead. "find /opt/ros/diamondback/stacks | grep -E '/include//..(h|hpp)' > /tmp/ros.filelist && find /home/user/code/dev  | grep -E '/include//..(h|hpp)' > /tmp/ros.filelist"..is that right that way?
Comment by alfa_80 on 2011-03-25:
Thanks mjcarroll, kindly refer to .vimrc file that I've included in the question part.
Comment by mjcarroll on 2011-03-25:
Yeah, Omni completion is not very straightforward to set up.  I can't speak to that particular error, but if you have a vanilla Ubuntu and ROS install, my scripts above will work.  I would check over your ~/.vimrc file again and make sure you aren't doing anything "bad" elsewhere in the file.
Comment by alfa_80 on 2011-03-24:
I still got this error message: "-- Omni completion (^O^N^P) Pattern not found" What is possible solution?

