Q:

Calling ROS subscriber callback functions from another function

Hi,
Is it OK (both technically and in terms of good programming practice) to call the callback function of a certain subscriber from within another function?
For example:
void callback(sensor_msgs::Image::ConstPtr & msg)
{
    /*do stuff*/
}

void otherFunction()
{
    sensor_msgs::Image::ConstPtr image_ptr;
    /*do stuff*/
    callback(image_ptr);
}

Thank you

Originally posted by 2ROS0 on ROS Answers with karma: 1133 on 2017-03-16
Post score: 0

A:

This should be ok, provided that you take care of potential concurrency issues that might arise due to your callback queues being driven by any kind of multithreaded spinners. As your callbacks could then be called in parallel, otherFunction(..) might call callback(..) at a point where callback(..) is already being executed by the callbackqueue instance(s) in your node.
If callback(..) performs any operations that must be atomic or has critical sections, you would need to add some mutual exclusion infrastructure to make sure that two calls to callback(..) can be executed in parallel.

Originally posted by gvdhoorn with karma: 86574 on 2017-03-17
This answer was ACCEPTED on the original site
Post score: 2

