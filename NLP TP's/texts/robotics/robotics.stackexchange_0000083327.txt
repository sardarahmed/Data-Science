Q:

How can I integrate Python rosunit unit tests into the cmake build?

I would like to run rosunit Python unit tests as part of make test in the CI environment. In the wiki and in the catkin docs it is recommended to use cmake_add_nodetest() for that. Is cmake_add_nosetest() specific to nosetest or can it used with the plain unittest test runner as well/instead? (I know that rosunit depends on unittest. I didn't recognize a dependency from nosetest.) If it's possible: Could you guide me to an integration example in the ROS code base?

Originally posted by thinwybk on ROS Answers with karma: 468 on 2017-10-16
Post score: 0

A:

nosetest is a test runner. It will collect and run detected unittest test cases found in the test files.  See: https://nose.readthedocs.io/en/latest/testing.html

Originally posted by tfoote with karma: 58457 on 2017-10-16
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by thinwybk on 2017-10-17:
Sorry, my question is not precise enough. I was interested in if I can use only nosetest 's test runner or any other as well (e.g. the one of unittest).
Comment by tfoote on 2017-10-18:
It's likely you could add integration for it but it's not currently supported.
Comment by thinwybk on 2017-10-19:
Ok. If I would like to add integration where in the sources I should dive into first?
Comment by tfoote on 2017-10-19:
I would look inside catkin and make a parallel function like catkin_add_nosetests: https://github.com/ros/catkin/blob/kinetic-devel/cmake/test/nosetests.cmake

