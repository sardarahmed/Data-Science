Q:

ethzasl_icp_mapper service Minimal Example

I'm trying to use the ethzasl_icp_mapper service to match some very simple point clouds. However, I get errors like:
ICP failed to converge: no outlier to filter
I create two simple point clouds and try to line them up using the MatchClouds service.
http://pastebin.com/2seS1jUq
Is this example too simple? Am I missing something?
(currently using groovy_released, but have tried other versions with similar results)

Originally posted by David Lu on ROS Answers with karma: 10932 on 2015-03-11
Post score: 0

A:

It all depend on your YAML file used when launching the node ethzasl_icp_mapper. The default launch files of the repository are made for large point clouds with a lot of redundant information. The default ICP solution (trigger if no YAML file is given) also assume many points.
I suspect that in your case, the chosen configuration is too aggressive on the downsample and on the outlier filter. We've made the registration solution highly configurable to suit a large range of applications. The downside of that is that you need to tune for your needs.
Here some suggestion to start:

remove all data filters
remove all outlier filters
use point-to-point error

For more information on all module available, you can use the pmicp -l. I think you should find that in the bin folder of the node. This executable can also take two point clouds from disk and a yaml configuration to register point clouds. It might be useful for your tests.
This node rely on libpointmatcher, a library independent of ROS. Lately, I'm putting more effort on maintaining that part. The node ethzasl_icp_mapper is mainly a showcase for it. Don't hesitate to read our tutorial page.

Originally posted by Francois with karma: 101 on 2015-03-12
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by David Lu on 2015-03-12:
Excellent. Thanks Francois. The tutorial page you linked to was very helpful. I had previously only looked at the documentation on this page which doesn't specify exactly how to build the yaml file. Also, the point-to-point reference was super-useful.

