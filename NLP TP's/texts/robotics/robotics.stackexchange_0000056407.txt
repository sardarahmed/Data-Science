Q:

Adding obstacles (lines) to costmap

I have a vehicle that uses sbpl to travel through an environment.  The vehicle uses lidar to populate the costmap during travel, but data may also be received through other means (visual, other vehicles).  Is there a way to populate a costmap using other data?
Currently, I may have obstacle information such as x,y,z position as well as shape information (lenght, width, etc).  The only way I can see how to populate the map at the moment is to generate a point cloud with the known obstacle information and then to publish that data.
Another question is whether there is a way to remove that same information from the costmap?  For example, what if I travel through the environment near that previous target and find that it is actually not there or has moved?

Originally posted by orion on ROS Answers with karma: 213 on 2014-01-06
Post score: 0

A:

If you are using Hydro+, you can create a custom layer to include this information. Layered Costmap Tutorials

Originally posted by David Lu with karma: 10932 on 2014-05-14
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by nanaky on 2014-08-05:
Is this possible in Groovy anyhow?
Comment by David Lu on 2014-08-06:
There's a fork of the navigation stack with layered costmaps for Groovy here: https://github.com/DLu/navigation/tree/groovy_dev
However, the easier approach might be to just make a fake sensor that puts imaginary obstacles where you don't want the robot to go.

