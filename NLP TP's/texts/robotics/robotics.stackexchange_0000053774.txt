Q:

Can I define publishers in a function and then I can call that function in main() file? Can I really?

I just wanted to ask whether I can define my publisher in a function and then call the function in a main() file like the following code sniplet exhibits:
static void myfunct(stream* str, strble *conv, unsigned char *buff, int n){
ros::NodeHandle nh;
ros::Publisher pub_navigation_msg = nh.advertise<rtklib::Navigation>("nav_topic", 10);

rtklib::Navigation navmsg;
navmsg.time= conv->time;
    
pub_navigation_msg.publish(navmsg);
}

int main(int argc, char** argv){
   
    ros::Rate r(1); 
    while (ros::ok()){
      myfunct();
    }   
ros::spinOnce();
}

Originally posted by Gudjohnson on ROS Answers with karma: 100 on 2013-08-29
Post score: 0

A:

Yes, you can, in principle. However, your code won't work.
I'm not sure which of several problems you want us to ignore, but to at least address the major concerns regarding publishers: You need to create a publisher just once, but once it is created you need to make sure that the publisher stays somewhere and isn't destroyed.

Originally posted by dornhege with karma: 31395 on 2013-08-29
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Gudjohnson on 2013-08-29:
I have edited the above code. Do you think it will work like this. Because I also defined by Nodehandler inside the function. I thought we can only define nodehandler and publisher inside a main file.
Comment by dornhege on 2013-08-29:
The problem is that you are always recreating a new publisher and the old one gets destroyed before you leave the function. When you publish to you newly created one it will very likely not have build up a connection yet.
Comment by dornhege on 2013-08-29:
It is no problem to create a publisher in a function, just do it once before your main loop, make sure that it doesn't get destroyed and not re-create a new one over and over in a loop.

