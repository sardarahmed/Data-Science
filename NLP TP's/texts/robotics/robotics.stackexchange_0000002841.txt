Q:

What approaches should I consider to create rotating a turret

First a bit of background, I am planning to make a highly maneuverable airship controlled by four thrust vectored propellers. I don't want to rely on a rudder and forward momentum for turns but instead be able to maneuver with direct prop thrust. I want to be able to point each prop anywhere within a half sphere/dome. So two axis, 360 degrees traversal for the forward/back/up/down and 180 degrees for the left/right. The nearest thing I can think of is a ball turret similar to this ball turret but instead of a gun, have a motor and propeller. The turret can rotate infinitely through 360 degrees, but the gun rotates through 90 degrees.
My first thought was for a servo for both axis, but they are limited in range and I would like the 360 axis to be able to rotate continuously. This would allow for the turret to rotate to the desired angle using the shortest path. 
My question is, What do I need to be able to rotate the turret and still know what angles the turret is currently pointing?

A:

Servos should be able to accomplish both the 90 degree and 360 degree (i.e. "continuous rotation") movements.  
Servos operate on the concept of "steps", so you simply need to figure out how many servo steps represent the range of motion of each servo, then keep track of the current step (which can be used to calculate position) in your code.  
Alternatively, you could directly measure the position with a separate sensor (like a wheel encoder).  This is traditionally used in cases where the servo could slip, and cause the steps and the position to become out of sync.  This will probably not be an issue in an airship, where the only load on the motor will be the turning of the turret in free space.

