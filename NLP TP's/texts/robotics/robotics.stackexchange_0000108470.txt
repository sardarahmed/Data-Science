Q:

How to give Moveit! local orientation goal to my end effector, but global position?

As the title says, how to give a local orientation to my end effector, but global position?
Basically this would mimic the goal orb in RVIZ, where you can drag it around to give global position, but the orientation is still relative to the end effector itself.
For example here is a simple command to set pose target:
ref_frame = "base"
self.arm_move_group.set_pose_reference_frame(ref_frame)
# Arm in front of robot
pose_goal.position.x = 0.5
pose_goal.position.y = 0
pose_goal.position.z = 0

# Pitched 45 degree
quat_local.quaternion.x = 0
quat_local.quaternion.y = 0.707
quat_local.quaternion.z = 0
quat_local.quaternion.w = 0.707

self.arm_move_group.set_pose_target(pose_goal)

Where I can set the reference frame to the base for global pos & quat goals with 45degree pitch to the end effector when the goal position is in front of the robot.
But as you'd expect, if I the goal position is not directly in front, or even 90degree to the side, then the end effector goal orientation is no longer 45degree to itself, but 45 degree roll.
So is there a way to give it global position while using local orientation? Is it using the tf library to transform an OrientationStamped from local to the global?

A:

Turns out there's no direct solution to this. Overall I have to transform (using the tf library) my desired orientation from a local frame, into a world frame.
There are various mathematical ways to do it, the route I took is this:

Define the goal orientation around Y-axis, relative to X-axis (my eef at neutral angle).
Get the expected Y-axis angle of the goal position by using tan(y/x).
Rotate the goal orientation by the expected Y-axis angle.

