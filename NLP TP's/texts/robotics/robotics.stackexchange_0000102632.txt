Q:

Moveit with two planning groups

Hello!
I have a universal robot that I want to control with moveit, but I have added a custon actuator near the eef, that also needs a goal in order to make the TCP get to the requested positions.
I did the following:

Created a Planning group only for the
Universal Robots arm, with the
'scaled_pos_joint_traj_controller'

Created a different planning group
for the other actuator (called
"reaction arm"), with a custom
FollowJointTrajectory controller

Created a 'robot' planning group,
joining both planning groups. This is
the one I aim to control using
moveit.

If I send a group of joint values (7 values = 6 of the arm + the custom actuator) to the moevit commander server, everything works fine. I get the request to move both arm and reaction arm actuator, and both move without any issues.
However, when sending a position in space (x, y, z, qx, qy, qz, qw) it doesn't move and the following gets printed on the console:
 [ INFO] [1666971418.092952411]: Ready to take commands for planning group robot.
[ INFO] [1666971418.391112115]: Planning request received for MoveGroup action. Forwarding to planning pipeline.
[ WARN] [1666971418.392079703]: Cannot find planning configuration for group 'robot' using planner 'RRTConnectkConfigDefault'. Will use defaults instead.
[ INFO] [1666971418.400985505]: Planner configuration 'robot' will use planner 'geometric::RRTConnect'. Additional configuration parameters will be set when the planner is constructed.
[ INFO] [1666971418.402447013]: robot/robot: Starting planning with 1 states already in datastructure
[ INFO] [1666971418.402565255]: robot/robot: Starting planning with 1 states already in datastructure
[ INFO] [1666971418.402650253]: robot/robot: Starting planning with 1 states already in datastructure
[ INFO] [1666971418.402705428]: robot/robot: Starting planning with 1 states already in datastructure
[ERROR] [1666971428.401849115]: robot/robot: Unable to sample any valid states for goal tree
[ INFO] [1666971428.402132673]: robot/robot: Created 1 states (1 start + 0 goal)
[ERROR] [1666971428.405928852]: robot/robot: Unable to sample any valid states for goal tree
[ INFO] [1666971428.406043602]: robot/robot: Created 1 states (1 start + 0 goal)
[ERROR] [1666971428.410176418]: robot/robot: Unable to sample any valid states for goal tree
[ INFO] [1666971428.410264698]: robot/robot: Created 1 states (1 start + 0 goal)
[ERROR] [1666971428.411304502]: robot/robot: Unable to sample any valid states for goal tree
[ INFO] [1666971428.411387055]: robot/robot: Created 1 states (1 start + 0 goal)
[ WARN] [1666971428.411545666]: ParallelPlan::solve(): Unable to find solution by any of the threads in 10.010131 seconds
[ INFO] [1666971428.566960910]: Unable to solve the planning problem
[ WARN] [1666971428.567648014]: Fail: ABORTED: No motion plan found. No execution attempted.
[ INFO] [1666971428.567749494]: Visualizing plan 2 (Pose Goal) FAILED
[ERROR] [1666971428.690040606]: Failed to call srv: Moveit commander

I don't know if there's something I can configure differently but it's weird to me that planning with joint values work, while commanding to a certain position doesn't. Shouldn't it be similar? Is it the IK solver the problem here?
I hope someone has anything to share with me in order to solve the issue, and if more information is needed, please let me know.
Thanks!

Originally posted by sophvk on ROS Answers with karma: 16 on 2022-10-28
Post score: 0

Original comments
Comment by gvdhoorn on 2022-10-29:\

Is it the IK solver the problem here?

likely. You typically see "Unable to sample any valid states for goal tree" if that's the case.
Comment by sophvk on 2022-11-02:
Any ideas on what I could try to make it move?
I find it weird that when I command the robot to a joint based position it moves. It's only with position based commands that it doesn't.

A:

Ok, so it was a dumb mistake after all and had nothing to do with the IK solver.... The eef link was wrong: when the two planning groups were joined in the new 'robot' one, moveit took the wrong eef link. By setting the correct one within the code, the issue was solved. Thanks!

Originally posted by sophvk with karma: 16 on 2022-11-03
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by fvd on 2022-11-05:
It might be helpful if you could share your configuration (or the lines that would have helped you) as an example
Comment by sophvk on 2023-01-25:
Sure thing. I added a line to set the end effector to the desired link:
move_group.setEndEffectorLink("eef_link");

In this occasion, that was all.

