Q:

Accessing point32 under geometry_msgs/PolygonStamped

Hi,
I am new to ROS so excuse me for the silly doubt.
There is a topic being published by a package, of type geometry_msgs/PolygonStamped. On executing rosmsg  show this is what I got
std_msgs/Header header
uint32 seq
time stamp
string frame_id
geometry_msgs/Polygon polygon
geometry_msgs/Point32[] points
float32 x
float32 y
float32 z
Now I want to subscribe this topic and access Point x,y,z. How do I do it?
Thanks in advance!

Originally posted by BotLover on ROS Answers with karma: 5 on 2017-07-19
Post score: 0

A:

Follow this tutorial, the Subscriber part, exchange std_msgs/String with geometry_msgs/PolygonStamped and then access with msg->polygon.points[i].x etc. Note that points is actually an std::vector so make sure to access this correctly.

Originally posted by mgruhler with karma: 12390 on 2017-07-19
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by BotLover on 2017-07-19:
my callback function looks like void Callback(const PolygonStampedConstPtr& poly). Inside callback I am doing float u = poly->polygon.points.x; float v = poly->polygon.points.y;. But according to your answer what should my i be?
Comment by mgruhler on 2017-07-19:
i depends on the vector. You have multiple elements, so it should be within the range of the number of polygons. You could also iterate over the full vector...
Comment by BotLover on 2017-07-19:
It solved my problem. Thanks mig.
I also want the time difference between consecutive calls to callback function. Can you tell how it would be done? I was thinking of difference b/w ros::time::now, but don't know how to use it!
Comment by mgruhler on 2017-07-20:
please post a new question..
Comment by BotLover on 2017-07-22:
Yaa got it!

