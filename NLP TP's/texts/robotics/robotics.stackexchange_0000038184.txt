Q:

Simple... open a serial port and send a value to microcontroller

I'm looking through the rosserial tutorials and the basics are escaping me.  Does anyone have an example of python code that connects to a serial port (a linked USB in my case) and sends values to a Microcontroller (BS2 in my case). I'm using the BS2 to actuate a very basic remote controlled arm (OWI Arm Trainer) from an Ubuntu/ROS diamondback laptop.  I've been through most of the tutorials but cannot determine a simple way to open the serial port and send values to the BS2.  Can someone at least get me started in the right direction?

Originally posted by kleekru on ROS Answers with karma: 71 on 2012-02-23
Post score: 2

A:

If you are not using rosserial, I would work on getting basic serial communication working outside of ROS first.  @kleekru mentioned he is working in Python.  I would look at the documentation for pySerial, and figure out how to just send the characters you want to send.  For example, the following snippet would send the ascii character for '2' as you requested
import serial
com = serial.Serial('/dev/ttyUSB0',baudrate=115200)
com.write('2')
com.close()

For @nachoarreola, you need to look up termios.h (assuming you are on linux). A bunch of good examples can be found here.  Once you understand how to send commands programmatically, you can then write a ROS node that helps you out.
The system I'm currently working with has robots that cannot run ROS onboard.  So I have a serial node that advertises a ServiceServer.  This serial node is responsible for opening the connection and sending data.  When a different node wants to send a serial packet to a robot, it calls the service advertised by the serial node, the serial node assembles the serial packet, sends the data out the serial port, and then replies to the client node with the robot's response.

Originally posted by jarvisschultz with karma: 9031 on 2012-04-18
This answer was ACCEPTED on the original site
Post score: 1

