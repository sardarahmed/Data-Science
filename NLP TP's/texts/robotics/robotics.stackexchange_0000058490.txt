Q:

How do I use OpenCV 3.0 in ROS python?

I have downloaded the newest development version of OpenCV ( 3.0) which I am using in python. But when using ROS Hydro I am including the "old" version (2 point something). But then I cannot use certain functions and some of the constants are named differently.
How do I include ROS, but still use my own version of OpenCV?

Originally posted by Frederik Hagelskj√¶r on ROS Answers with karma: 23 on 2014-04-05
Post score: 1

A:

I'm not sure that there is any well supported way to do this, but if you really really need to hack it you could probably modify sys.path at the top of your python script.
When you do ". /opt/ros/hydro/setup.bash" the PYTHONPATH environment variable gets set to "PYTHONPATH=/opt/ros/hydro/lib/python2.7/dist-packages". The opencv python module is there, in "/opt/ros/hydro/lib/python2.7/dist-packages/cv.py".
When your python script starts, it sets up its module search path (sys.path) using the PYTHONPATH environment variable. You can modify this and it will change where python looks for modules:

#!/usr/bin/env python                                                                                                                                            
import sys                                                                                                                                                       
sys.path = ['/path/to/your/opencv'] + sys.path                                                                                                                   
print sys.path                                                                                                                                                   
# do stuff.... 

This will cause python to see your installed opencv3.0 before the opencv that got installed by ROS. This is a pretty big hack though, so it might not go completely smoothly.

Originally posted by jbinney with karma: 606 on 2014-04-06
This answer was ACCEPTED on the original site
Post score: 2

