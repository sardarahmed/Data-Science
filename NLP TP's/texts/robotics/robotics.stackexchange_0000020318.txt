Q:

How to design a controller for a robotic arm given two velocity profiles

See image for reference:

Essentially I have a robotic arm with two linear actuators. Lets say, for example, I wanted the endpoint on the arm (where you see the stepper motors) to move purely in the x direction (extending outwards). Both linear actuators would have to move in tandem with each other at the correct velocities to ensure that they cancel out each others y movements and sum up their x movements. 
I have equations that relate the required angular velocity of each segment (and therefore velocities of each linear actuator) to get from point A to point B. I am just confused how to implement this now.
My electronics consist of an arduino and H-bridge. Feedback are potentiometers at the joints. 
I'm just looking for general guidance on the procedure, as I am just not sure what steps I need to take here. I have taken a number of classes in control systems, but don't quite understand how to relate all the theory to practice. 

A:

At a high level, you would need to do something like this:

Create a kinematic chain the helps you map from the 2D configuration space (the position of the linear actuators) to the 3D task space (the position of the end of the robotic arm).
Use inverse kinematics (IK) to figure out how the actuators needs to be positioned for a desired task space position. If you use a library like KDL to represent your kinematics, it is easy to use one of their inverse kinematic solvers.
Write a controller that uses this IK solver to move the arm as needed... This part depends on how you are able to control your linear actuators. If your interface to these actuators is a position, identify a sequence of positions in configuration space that you need to traverse will end in the desired task space position.

