Q:

Problem while integrating GPS data into robot_localization

Hi to Tom and everybody,
I'm currently making some experiments with robot_localization, and I'm having some problems with the integration of GPS data for global localization of a non-holonomic mobile robot constrained to a 2D plane (no Z coordinate and no roll/pitch).
Here is the overview of my setup for odometry which is very similar to the one described in this section of the wiki where the use of a dual EKF node is discussed.

X and Y are bidimensional coordinates
Vx and Vy are linear velocities
H^, X^^ and Y^^ are angular velocity and linear accelerations, respectively
The topic name is inside parentheses
The provided TF transformation is inside square brackets

This is my launch file (only the part relevant to replay the bag file):
<launch>

<!-- Reference frames -->
<arg name="world_frame"  default="earth"/>
<arg name="map_frame"    default="map_link"/>
<arg name="odom_frame"   default="odom_link"/>
<arg name="robot_frame"  default="base_link"/>
<arg name="camera_frame" default="camera_link"/>

<!-- Odometry topics -->
<arg name="wheels_odom"  default="/odometry/wheels"/>
<arg name="imu_odom"     default="/odometry/imu"/>
<arg name="gps_odom"     default="/odometry/gps"/>
<arg name="navsat_odom"  default="/odometry/navsat"/>
<arg name="visual_odom"  default="/odometry/visual"/>
<arg name="local_odom"   default="/odometry/local"/>
<arg name="global_odom"  default="/odometry/global"/>

<!-- Sensor fusion 1 -->
<node pkg="robot_localization" type="ekf_localization_node" name="ekf1_local" clear_params="true" output="screen">
    <param name="frequency"         value="50"/>
    <param name="sensor_timeout"    value="0.2"/>
    <param name="two_d_mode"        value="true"/>
    <param name="map_frame"         value="$(arg map_frame)"/>
    <param name="odom_frame"        value="$(arg odom_frame)"/>
    <param name="base_link_frame"   value="$(arg robot_frame)"/>
    <param name="world_frame"       value="$(arg odom_frame)"/>

    <param name="use_control"       value="false"/>
    <param name="print_diagnostics" value="true"/>
    <param name="debug"             value="false"/>
    <param name="debug_out_file"    value="~/Log/ekf1.txt"/>

    <remap from="odometry/filtered" to="$(arg local_odom)"/>

    <param name="odom0" value="$(arg wheels_odom)"/>
    <rosparam param="odom0_config">
        [ false, false, false,
          false, false, false,
          true,  true,  false,
          false, false, false,
          false, false, false ]
    </rosparam>
    <param name="odom0_differential" value="false"/>
    <param name="odom0_relative"     value="false"/>
    <param name="odom0_queue_size"   value="10"/>
    <param name="odom0_nodelay"      value="true"/>

    <param name="imu0" value="$(arg imu_odom)"/>
    <rosparam param="imu0_config">
        [ false, false, false,
          false, false, false,
          false, false, false,
          false, false, true,
          true,  true,  false ]
    </rosparam>
    <param name="imu0_differential" value="false"/>
    <param name="imu0_relative"     value="false"/>
    <param name="imu0_queue_size"   value="10"/>
    <param name="imu0_nodelay"      value="false"/>
    <param name="imu0_remove_gravitational_acceleration" value="false"/>
</node>

<!-- GPS coordinates transformation -->
<node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform" clear_params="true" output="screen">
    <param name="frequency"            value="20"/>
    <param name="yaw_offset"           value="1.570796327"/>
    <param name="zero_altitude"        value="true"/>
    <param name="publish_filtered_gps" value="false"/>
    <param name="use_odometry_yaw"     value="false"/>
    <param name="wait_for_datum"       value="true"/>
    <param name="broadcast_utm_transform" value="false"/>
    <param name="delay"                value="3"/>
    <param name="magnetic_declination_radians" value="0.00383972"/>
    <rosparam param="datum">[43.542883, 11.571365, 0]</rosparam>

    <remap from="imu/data"          to="$(arg imu_odom)"/>
    <remap from="odometry/filtered" to="$(arg local_odom)"/>
    <remap from="gps/fix"           to="$(arg gps_odom)"/>
    <remap from="odometry/gps"      to="$(arg navsat_odom)"/>
</node>

<!-- Sensor fusion 2 -->
<node pkg="robot_localization" type="ekf_localization_node" name="ekf2_global" clear_params="true" output="screen">
    <param name="frequency"         value="10"/>
    <param name="sensor_timeout"    value="0.2"/>
    <param name="two_d_mode"        value="true"/>
    <param name="map_frame"         value="$(arg map_frame)"/>
    <param name="odom_frame"        value="$(arg odom_frame)"/>
    <param name="base_link_frame"   value="$(arg robot_frame)"/>
    <param name="world_frame"       value="$(arg map_frame)"/>

    <param name="use_control"       value="false"/>
    <param name="print_diagnostics" value="true"/>
    <param name="debug"             value="false"/>
    <param name="debug_out_file"    value="~/Log/ekf2.txt"/>

    <remap from="odometry/filtered" to="$(arg global_odom)"/>

    <param name="odom0" value="$(arg wheels_odom)"/>
    <rosparam param="odom0_config">
        [ false, false, false,
          false, false, false,
          true,  true,  false,
          false, false, false,
          false, false, false ]
    </rosparam>
    <param name="odom0_differential" value="false"/>
    <param name="odom0_relative"     value="false"/>
    <param name="odom0_queue_size"   value="10"/>
    <param name="odom0_nodelay"      value="true"/>

    <param name="odom1" value="$(arg navsat_odom)"/>
    <rosparam param="odom1_config">
        [ true,  true,  false,
          false, false, false,
          false, false, false,
          false, false, false,
          false, false, false ]
    </rosparam>
    <param name="odom1_differential" value="false"/>
    <param name="odom1_relative"     value="false"/>
    <param name="odom1_queue_size"   value="10"/>
    <param name="odom1_nodelay"      value="true"/>

    <param name="imu0" value="$(arg imu_odom)"/>
    <rosparam param="imu0_config">
        [ false, false, false,
          false, false, false,
          false, false, false,
          false, false, true,
          true,  true,  false ]
    </rosparam>
    <param name="imu0_differential" value="false"/>
    <param name="imu0_relative"     value="false"/>
    <param name="imu0_queue_size"   value="10"/>
    <param name="imu0_nodelay"      value="false"/>
    <param name="imu0_remove_gravitational_acceleration" value="false"/>
</node>

And below there is the output of rqt_graph which I suppose it's correct, except I don't know why "navsat_transform" is not subscribed to topic "/odometry/imu" even if I specified it with a remap.
image description http://i67.tinypic.com/2wgw3h1.jpg
This is the link to download the bag file that can be used with the above launch file.
When launched, this is the TF tree I'm seeing with rosrun rqt_tf_tree rqt_tf_tree that makes sense to me.
TF http://i68.tinypic.com/iy0ob5.jpg
Here you can download the RVIZ config file to obtain the same visualization I'm using.
While replaying the bag file, the odom_link-->base_link transformation is correctly calculated by the Kalman filter (I'm having pretty good accuracy, too!), but it seems there are problems with the map-->odom transformation, because I see these warnings multiple times:
[ WARN] [1485356716.681560393]: Transform from odom_link to map_link was unavailable for the time requested. Using latest instead.
[ WARN] [1485356718.683456544]: Transform from map_link to base_link was unavailable for the time requested. Using latest instead.

Other than that, the estimated global pose start diverging after a few seconds and the coordinates become huge, it is not so clear in the following image, but this is what I see in RVIZ after setting "map" as the fixed frame.
Map http://i67.tinypic.com/281zqya.jpg
I would like to obtain something similar to what was presented by Tom here, but the GPS data is giving a really unpredictable behavior.
Does anybody having these kind of issues with a similar setup?
Many thanks,
Guido

Originally posted by GuidoBartoli on ROS Answers with karma: 31 on 2017-01-25
Post score: 2

A:

Thanks for the nicely formatted question! I'm not positive this will do anything, but before I start looking at bag files, I do see that your navsat_transform_node instance is listening to the wrong EKF output. navsat_transform_node will work with a two-level EKF setup, but doesn't require it, so this line in your navsat_transform_node configuration:
<remap from="odometry/filtered" to="$(arg local_odom)"/>

should be
<remap from="odometry/filtered" to="$(arg global_odom)"/>

The circular dependency between navsat_transform_node and the EKF is intentional. Again, I'm not sure that's your issue, but we should fix it before continuing.

Originally posted by Tom Moore with karma: 13689 on 2017-01-26
This answer was ACCEPTED on the original site
Post score: 2

