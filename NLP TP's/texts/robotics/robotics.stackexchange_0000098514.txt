Q:

Trajectory following test with Autoware.Auto and LGSVL simulator

Greetings!
I'm trying to run the trajectory following test on a Jetson AGX (Autoware.Auto installed from source + ROS Dashing) with the LGSVL simulator running on another machine. I see that in the lgsvl_interface node it is expected the odometry information from the vehicle in the format of lgsvl_msgs::VehicleOdometry messages. However, when I add the corresponding sensor in the .json file, LGSVL throws an error saying that that sensor is not currently supported.
To deal with this issue, in the LgsvlInterface::on_odometry method, I set the longitudinal velocity of the nav_base frame equal to the linear velocity of the base_link frame, Vx, (comming from the /lgsvl/gnss_odom topic). This is true assuming planar motion and because the rotation matrix between the two frames is the identity 3x3.
However, for the front_wheel_angle_rad field, I do not know where I can get the proper value, which is required by the controller node.

Originally posted by guillermoherreraf on ROS Answers with karma: 51 on 2021-03-08
Post score: 1

A:

The current release of LGSVL (2020.06) had an unfortunate oversight during release: They forgot to add support for the VehicleOdometry message in the ROS2 plugin. However, Autoware.Auto provides a custom version of LGSVL which uses the Ros2NativeBridge developed by Robotec.ai instead of the LGSVL bridge and that plugin does support the VehicleOdometry message. To use this on your simulation machine, install ade using these instructions and then follow the instructions on our LGSVL Simulator page to launch the simulator from ade. I tried to build a one-line Docker command that would allow you to run the LGSVL sim that we provide stand-alone (without ADE) but the command that ade builds is way too complex to try to generate myself.

Originally posted by Josh Whitley with karma: 1766 on 2021-03-08
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by guillermoherreraf on 2021-03-09:
Hello @Josh Whitley. Thanks for your answer. The machine where I'm running the LGSVL simulator is running on Windows 10. Will I be able to install ade there? I see in the ADE website that the instructions are for Linux. Furthermore, will it be possible to have the simulator running within the ade environment in my Windows machine, talking to the Autoware.Auto stack installed in the AGX from source?
If not, as a workaround right now I'm taking the linear velocity of the nav_base frame equal to the linear velocity of the base_link. For the front_wheel_angle value, I'm taking the steer_pct from the CanBusData message, and I map it to the [-0.331, 0.331] range. What do you think about that?
Comment by guillermoherreraf on 2021-03-09:
update: I installed ADE on a Linux machine, to be able to connect it to the AGX via ethernet. Running the simulator within ADE in the Linux machine, and the Autoware stack compiled from source in the AGX. When I enter the ade environment with ade --rc .aderc-amd64-dashing-lgsvl start --update --enter, and then running /opt/lgsvl/simulator from within the ade environment I get the message: Found path: /opt/lgsvl/simulator. However, when I open the web browser and input the IP address: 127.0.0.1:8080, I get Unable to connect. Any idea why this is happening?
Comment by Josh Whitley on 2021-03-09:
@guillermoherreraf Thanks for the update. For your two questions:

Yes, mapping the SteerPct to the radian range of the tires should work fine.
What version of Autoware.Auto are you using? The 1.0.0 release or master?

Comment by guillermoherreraf on 2021-03-09:
@Josh Whitley.
Regarding 1. I get some strange behavior when doing this. Sometimes the vehicle starts oscillating around the steering angle.
2. I installed Autoware.Auto from the master branch.
3. Any idea why the LGSVL simulator is not working from within the ADE container?
Comment by Josh Whitley on 2021-03-19:
Please open a seperate question for LGSVL not working in ADE. However be aware that we no longer support Dashing on master after the 1.0.0 release.

