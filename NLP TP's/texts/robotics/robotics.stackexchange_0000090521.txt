Q:

Call getPid to obtain node pid via XMLRPC in C++

I am trying to get the process IDs for all ROS nodes via the getPid ROS Slave API. I have been able to run the following:
XmlRpc::XmlRpcValue args, result, payload;
args[0] = "name of some node";
ros::master::execute("getPid", args, result, payload, true);

Unfortunately, this snippet appears to return the pid of rosmaster, and is independent of the args value I pass in.
I tried creating my own XmlRpc::XmlRpcClient instance with master host and port but different URIs. I cannot figure out how to get access to node URIs. If I do get them, I am not convinced that my approach works
std::string method = "getPid";
XmlRpc::XmlRpcClient* c = ros::XMLRPCManager::instance()->getXMLRPCClient(master_host, master_port, uri);
c->execute(method.c_str(), request, response);

Has anyone been successful here in the past? I found the following Python approach, but would very much like to do it in C++. I am using kinetic.
Thanks

Originally posted by timwheeler on ROS Answers with karma: 23 on 2019-02-14
Post score: 2

A:

I would think the result you receive from the master makes total sense right now, as you're asking it (ie: the master) to return its pid.
Haven't done this myself in C++, but I would imagine the control flow being similar to Python:

retrieve all node names from the master
retrieve URIs for all returned names
construct clients for all URIs
invoke getPid on all clients

Edit:

"I cannot figure out how to get access to node URIs" - do you know how to do step (2) of what you suggest?

You can use lookupNode in the Master API.

Originally posted by gvdhoorn with karma: 86574 on 2019-02-15
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by timwheeler on 2019-02-15:
"I cannot figure out how to get access to node URIs" - do you know how to do step (2) of what you suggest?
Comment by timwheeler on 2019-02-19:
Perfect, thank you.
Comment by marinamrr on 2020-09-28:
Could someone please write  working template of this working? I get the URI, but the "getPID" call fails:
// Get URI of the node
XmlRpc::XmlRpcValue args, result, payload;
args.setSize(2);
args[0] = "caller_name";
args[1] = "node_name";
ros::master::execute("lookupNode", args, result, payload, true);

// Make new client of node
std::string uri = result[2];
XmlRpc::XmlRpcClient* client =
ros::XMLRPCManager::instance()->getXMLRPCClient(ros::master::getHost(), ros::master::getPort(), uri.c_str());

// Get PID of the node
XmlRpc::XmlRpcValue request, response;
request.setSize(1);
request[0] = "node_name";
client->execute("getPid", request, response);

The client execute call (last line) always returns false, am I missing something here?
Comment by aravindsaiUR on 2021-05-19:
Be sure to close the client created by the XmlRpc::XmlRpcClient, since it opens a socket for every client created. In case you run this in loop, you could get "Too many files opened" error or "Error:24" especially in linux. Since for each client a socket is created and sockets are defined as file descriptors in linux. This will be a memory leak. So always close an opened client after processing. Releasing the client connection is recommended.
ros::XMLRPCManager::instance()->releaseXMLRPCClient(xclient);

