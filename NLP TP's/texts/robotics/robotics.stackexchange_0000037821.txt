Q:

ROS for Parallax Eddie robot (to develop)

Hi, all..
I'm about to start some work on the Parallax Eddie robot, and I'm interested in developing with ROS. But I see ROS doesn't have an SDK for this robot yet - well, the robot itself is still new in the market. Does ROS have any intention in developing an SDK for this robot?? (looking at the calibre of developers in ROS, it would probably take them a day or two, I believe).
I've tested it with drivers from Windows and it seems to be a pretty robust and slick device. It's a really potential research platform.
So, what do you guys think?
Edit:
I've been doing some google-ing around, and I think I wanna give it a shot at trying to build the SDK for this robot for myself (if it's good enough, then I hope to contribute it to ROS). THE THING IS: I'm a big time newbie (just a computer science student) so i don't have any experience in these low level device stuff. I kinda got the rough idea, of need for the program to connect the microcontroller through a serial port, and communicate serial commands to it. Then, start building core features to operate it on top of these functions. Should then head to be an initial SDK, i guess. Does anyone have any suggestion to point me to certain direction? e.g. certain USB drivers to use, certain library that would be helpful, certain patterns i should follow.. And btw, I'm on ubuntu 10.04 and I'll be coding with C++ (if it matters to what information you want to suggest)
Thank you all, guys. I'm really excited to start developing this, and really appreciate and looking forward to all the support.
EDIT: FOR THOSE WHO STUMBLED TO THIS PAGE LOOKING FOR A EDDIE ROBOT DRIVER, THE DRIVER IS NOW AVAILABLE AT: http://www.ros.org/browse/repo.php?repo_host=haikalpribadi-ros-pkg

Originally posted by Haikal Pribadi on ROS Answers with karma: 103 on 2012-02-12
Post score: 0

A:

I think you have two possible directions:

Use your own serial protocol. If you're doing this, I would suggest starting on the ROS-side with the TurtleBot code, which uses a serial port to control an iRobot Create. The ROS part is found here, and the serial interface can be found here. Incidentally, these are both written in Python.

Compile rosserial for your microcontroller, and have your microcontroller (I'm presuming it's a Propeller chip) participate directly on your ROS network. That may be a pain - I don't know how difficult convincing rosserial to compile for that chip will be.

Originally posted by Ryan with karma: 3248 on 2012-02-13
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Haikal Pribadi on 2012-02-14:
Thanks for the input, Ryan. I think I'm going to try the first one. As the firmware for the robot is given from Parallax, i'm going to start off with a little serial port programming to communicate to the board and call it the driver node.
Comment by Haikal Pribadi on 2012-02-14:
I'm planning to build the functions based on the TurtleBot SDK source code, cause I believe they should have really similar behavior. However, is that allowed? if it is, do you happen to know where the source code is hosted? i'm sure it's in an svn or git repo somewhere, i just cant find the link..
Comment by Ryan on 2012-02-14:
Yes, the link to the source is in Section 1 of those links I posted.

