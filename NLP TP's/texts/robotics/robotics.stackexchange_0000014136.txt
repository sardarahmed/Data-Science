Q:

Fire Fighting robot searching for fire in arena algorithm

i am working on a firefighting robot and i am struggling to find a way to search all rooms in an arena like this
 
i thought of using the Wall follower rule but it will miss a room , if i am understanding it correctly.

A:

Wall following is a good local strategy, but as you point out it might miss a room because it does not consider the global map. Your problem could be cast as a simultaneous localization and mapping problem (SLAM), where the robot builds a map while it travels around. This way, it can track where it has/has not been and find rooms it missed earlier. 
In 2D, you would represent the map using an occupancy grid, which assigns values (occupied, unknown, free) to small squares of space. There many algorithms for handling how to use sensor data to estimate which cells are free/occupied - let's ignore that for now. 
Assuming you have perfect knowledge of where you are and what you are seeing, then your grid cells will be in one of three states: occupied, unknown and free. A simple but effective strategy for exploring a room is called next-best view planning, where the robot travels to the location where it thinks it will see the most. This depends on a sensor model (e.g. "can see 5 cells away in all directions but not through walls"), and a model of the room (e.g. "assume straight walls continue going straight"). This planner is greedy, so you will want to enforce some common sense rules to keep it from going to the other side of the room unless there's nothing left where it is. 
This is a fundamental problem for roboticists, and there are quite a few packages out there for solving the exploration problem. This ROS package looks like a good starting place (or this one). 

