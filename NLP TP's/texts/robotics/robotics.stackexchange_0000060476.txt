Q:

Odometry with optical mouse?

Hi guys,
I am currently looking at using odometry with the position given by an optical mouse.
As I couldn't find any package/node driver that would allow me to have access to the position of the mouse, I was wondering if anyone had already looked into that and could give some feedback.
Thanks in advance for the replies

Originally posted by Antoine on ROS Answers with karma: 91 on 2014-07-01
Post score: 5

Original comments
Comment by ccapriotti on 2014-07-01:
Very good approach ! Thinking outside the box at its best !
Comment by Antoine on 2014-07-01:
can't really take any credit for that, many people have already successfully done what I'm trying to do :), just wondering if anyone has done with ROS
Comment by ccapriotti on 2014-07-02:
Since we are thinking outside of the box here, you could use two mouse-based sensors: one on the robot, close to the floor, and another on your wheel's surface (mechanics permitting) , so you could measure skidding, implement cliff-avoidance, and some other good stuff.
Comment by Antoine on 2014-07-03:
I am definitely interested in any idea that may help the odometry work better, although I do not see where you want to put the second sensor. Could you maybe draw a quick sketch or just elaborate a bit might be enough for me to understand?
Comment by Mehdi. on 2014-07-03:
I think he means to fix the second mouse above one of the wheels, with very small distance between the mouse's sensor and the wheels surface (wheel has to be flat in this case)
Comment by stevej_80 on 2015-11-26:
Hi, did you finally happen to work on this type of Odom? any good resources?

A:

Just adding the sketch as requested:
@Mehidi: Your description is right. Indeed, that was what I meant.
One comment: if the sensor on the base is too far from the floor, it may not work, or you will need lenses to focus/compensate the distance.
This also reduces the hight of your base and the possibility of going over obstacles.
But it is cheap, and tends to be precise: optical mouses can work with resolution of typically 300 dpi.
Quick explanation of sketch: gray wheel: free wheel. Black wheel (yellow core) drive wheels. "Robot" is mounted on a triangular base.

Ok, so let's think about the possibilities on what kind of data you can gather from this.
The concept is simple physics: distance over time.

If the wheel sensor reads
movement, you can actually calculate
the linear speed of the wheel.

If the linear speed of the wheel and
the linear speed detected by the
base sensor are the same, you robot
is moving.

If the linear speed of
the wheel is greater than the linear
speed of the "floor", your drive
wheel is skidding.

If the linear
speed of the floor is greater than
the linear speed of the wheel, your
robot is being dragged or going down
a very slippery path.

if the
base sensor detects movement in the
X and Y axes, your robot is either
making a curve, or spinning. You can
calculate angular speed of the
curve, if you think you need it.

If you detect that the wheel speed
is fluctuating, your robot may be on
some sort of low cohesion soil, like
pebbles.

Originally posted by ccapriotti with karma: 255 on 2014-07-03
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by dornhege on 2014-07-03:
For tracking the wheels encoders seem more suited although they work the old fashioned style.
Comment by dornhege on 2014-07-03:
With regard to odometry from mice: If I remember correctly from experiments a few year ago your comment about the distance is indeed a problem. Unless you have a very flat surface like a table top (i.e. the same a mouse works on) it won't work.
Comment by Antoine on 2014-07-04:
Thanks for the sketch ccapriotti. So if the sensor on the wheel tells you that the wheel is rotating but the one at the back tells you that the robot isn't moving then you can tell that you're robot is skidding. Is that about right or can you actually get more out of your sensors?
Comment by Antoine on 2014-07-04:
I mean except for the position from the back sensor and the rotation direction of the wheel from the other sensor
Comment by Antoine on 2014-07-06:
Thanks ccapriotti for the explanation, you kept it nice and simple, I got it now. I strongly recommend the link to the first paper that Stefan Kohlbrecher gave, great practical solutions.
Comment by Antoine on 2014-07-07:
2nd link actually

