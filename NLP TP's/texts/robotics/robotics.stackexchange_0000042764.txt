Q:

rosdep doesn't recognize OS

Hi,
I'm trying to install ROS fuerte on my raspberry pi running raspian (debian based). Everything is running fairly smooth, however rosdep doesn't seem to recognize my OS, even though I've set it using ROS_OS_OVERRIDE.
Executing: python -m rospkg.os_detect
results in:

OS Name:     debian
OS Version:  squeeze
OS Codename:

But executing: rosdep install -a
results in:

Executing script below with cwd=/tmp
{{{
#!/bin/bash
export PREFIX=/usr/
[ f932cebad87302d8ea0ec1fd39b24d99 = `cat $PREFIX/include/eigen3/eigen-version.installed` ]

}}}

cat: /usr//include/eigen3/eigen-version.installed: No such file or directory
/tmp/tmpeXADPG: line 3: [: f932cebad87302d8ea0ec1fd39b24d99: unary operator expected
Executing script below with cwd=/tmp
{{{
#!/bin/bash
export PREFIX=/usr/
if [ -f $PREFIX/include/assimp/assimp-version.installed ]; then
  [ 2ed0b9954bcb2572c0dade8f849b9260 = `cat $PREFIX/include/assimp/assimp-version.installed` ]
else
  false
fi

}}}

ERROR: the following packages/stacks could not have their rosdep keys resolved
to system dependencies:
rosconsole: No definition of [log4cxx] for OS version []
srdf: No definition of [log4cxx] for OS version []
nodelet_topic_tools: No definition of [log4cxx] for OS version []
collada_urdf: No definition of [log4cxx] for OS version []
filters: No definition of [log4cxx] for OS version []
test_bond: No definition of [boost] for OS version []
diagnostic_aggregator: No definition of [log4cxx] for OS version []
roslib: No definition of [boost] for OS version []
eigen_conversions: No definition of [log4cxx] for OS version []
tf: No definition of [log4cxx] for OS version []
nodelet: No definition of [log4cxx] for OS version []
simmechanics_to_urdf: No definition of [log4cxx] for OS version []
timestamp_tools: No definition of [boost] for OS version []
test_nodelet: No definition of [log4cxx] for OS version []
robot_state_publisher: No definition of [log4cxx] for OS version []
resource_retriever: No definition of [log4cxx] for OS version []
test_diagnostic_aggregator: No definition of [log4cxx] for OS version []
tf_conversions: No definition of [log4cxx] for OS version []
bondcpp: No definition of [boost] for OS version []
pluginlib: No definition of [log4cxx] for OS version []
bondpy: No definition of [boost] for OS version []
bond: No definition of [boost] for OS version []

Since the version brackets are empty, I'm guessing that rosdep doesn't acurately recognizes the OS Override. Is there another flag I can set?

Originally posted by NsN on ROS Answers with karma: 95 on 2012-07-28
Post score: 5

A:

ROS_OS_OVERRIDE does not (seem to) affect rosdep install.  I don't know if this is by design or an oversight. However, I got it to work by manually setting the os override option on the command line when calling rosdep:
rosdep resolve <key-name> --os=OS_NAME:OS_VERSION

This option will work with the other rosdep commands such as rosdep install. I did this (to trick rosdep for my Linaro/Ubuntu system):
rosdep install -ay --os=ubuntu:oneiric

Originally posted by rlinsalata with karma: 271 on 2012-08-02
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by tfoote on 2012-08-26:
Related ticket: https://github.com/ros/rosdep/issues/10
Comment by mozcelikors on 2013-07-20:
what is  in this post. please explain. thanks in advance.

