Q:

Simulate openni compatible camera

And again, hi folks,
it seems that for built in object recognition an openni compatible camera is way to go. I don't have such a cam here at home but what I do have is a simulator that's capable of creating simulated captured image data (rgb and depth).
I could send that data to ROS. But I don't have a clue on how to convert that data in such a way that it will be interpreted by ROS as real image data coming from an openni compatible camera.
Any idea on how to do that, use simulated image/depth data for openni respectively object recognition?
Thanks again and again and again! You're a great community!
Cheers,
Hendrik

Originally posted by Hendrik Wiese on ROS Answers with karma: 1145 on 2013-10-21
Post score: 1

A:

I'm no expert on the openni stack in ROS, so you may get better answers later.
First, determine which topics & message types your object recognition node needs. For my application, this is /camera/rgb/image_color, /camera/depth_registered/points, /camera/depth_registered/camera_info, /camera/depth_registered/image. I think some of the tabletop object detection applications only require the points. You probably don't need to simulate the whole set of nodelets that you'd get with roslaunch openni_launch openni.launch.
Next, convert the information you have from your simulator into sensor_msgs/PointCloud2 and/or sensor_msgs/Image messages. The best way to do it will depend on your incoming data format. If you have to send images, I find it easier to deal with cv::Mat as a data type and use cv_bridge to convert to a ROS message just before publishing.

Originally posted by lindzey with karma: 1780 on 2013-10-22
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Hendrik Wiese on 2013-10-22:
Okay, I have raw RGB8 image data available from the simulator. I send it to a ROS node via TCP which converts it to sensor_msgs/Image. I can see the image in RViz (it's upside down, but I'll deal with that later). I'll try to combine that with the object recognition stack and keep you informed. Thx!

