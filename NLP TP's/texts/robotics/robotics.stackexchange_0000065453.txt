Q:

How to compile ros application manually by g++ and form object or library files

Hi,
I have been working on a project where I use ROS to create a c++ publisher and subscriber application. Publisher is running on my machine and the subscriber running on another remote machine connected through Wi-Fi. I use single master uri for both. Everything works fine.
Now I need to include my publisher program as library to another my c++ program, I know how to create headers and include them in another program for normal c++ applications.
But i don't know how to make a library file (as I understood it should compiled as static library) from my ros package.?
I am using ros indigo, Thanks in advance.

Originally posted by m_ramshad on ROS Answers with karma: 3 on 2015-01-27
Post score: 0

A:

You don't have to compile it by hand. Catkin can compile libraries too.
The command you need is add_library(). Have a look at the CMakeLists.txt documentation section 7.5.
The library then gets put in den lib folder of your devel space.

Originally posted by BennyRe with karma: 2949 on 2015-01-28
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by m_ramshad on 2015-01-28:
Thanks Benny, I was able to produce .so library file and i am now trying to include it in my program
I have a small clarification, do you think it is possible for me to compile and run my c++ program just by including the above mentioned .so file while that .so program have many dependencs in ros
Comment by BennyRe on 2015-01-28:
If you use ROS functions in your library it will not work without the ROS dependencies.
You could use the recommended ROS design and put all your logic an a ROS-independent library and use this library in your ROS node.

