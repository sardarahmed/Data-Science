Q:

GPS navigation and Arduino ECU

Does Autoware.Auto support the Arduino ECU? Additionally is there a link to compatible ECUs somewhere
Also does it support GPS based navigation? I wanted to try using it in a racetrack situation like the IAC racetrack in the LGSVL simulation environment. How would I go about doing so? I saw a RecordPlanner in the documentation which would be helpful but I am not sure how GPS and waypoints translate here
I see that the RecordPlanner( https://autowarefoundation.gitlab.io/autoware.auto/AutowareAuto/recordreplay-planner-howto.html ) uses the 3D Perception Stack. Does that mean while following waypoints it will also avoid obstacles that we see through the 3D Perception Stack?
Lastly, What's the difference b/w the RecordPlanner and the TrajectoryFollowing (https://autowarefoundation.gitlab.io/autoware.auto/AutowareAuto/test_trajectory_following-package-design.html). It seems the TrajectoryFollowing does have support for avoidance
Thanks in advance for taking the time to answer these questions!

Originally posted by sisaha9 on ROS Answers with karma: 90 on 2021-03-25
Post score: 0

A:

Let me try to answer your questions. For future reference, you should only ask one question per post on this site to make answers easier for others to find.

If you are talking about the Arduino microcontroller, it is not capable of running ROS so it can not be used for Autoware.

Autoware.Auto does not currently support GPS-based navigation. We are working to add this for our currently-targeted development ODD: Cargo Delivery. We are also working with Clemson University to provide a reference implementation which will include this.

RecordReplayPlanner currently records and replays waypoints in a local, but earth-fixed frame. It does not use GPS or any earth-level measurement to do this. The X, Y, amd Z coordinates that are recorded are relative to some local origin and their relation to GPS coordinates is not stored.

Yes, it can avoid static obstacles using lidar-based perception and stop for them automatically. However, due to some problems with our object-collision-estimation algorithm, it can detect dynamic objects but will not properly stop in time to avoid a collision. This is something else we are working on in the current development cycle.

The TestTrajectoryFollowing package is for simulating certain inputs for testing and debugging different control algorithms and not for recording and replaying waypoints.

Originally posted by Josh Whitley with karma: 1766 on 2021-03-27
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by sisaha9 on 2021-03-28:
Sorry will make sure to split them more next time. Thanks for the answer! A followup on the ECU portion. I was looking through the documentation and it seems that Autoware.Auto communicates with vehicles that are compatible with the PACMod firmware. Which PACMod version does it work with? I see there are 3 versions: v1, v2 and v3
Edit: Nvm I see on the main tree it uses v3. Thanks!
Comment by Josh Whitley on 2021-03-28:
Please ask this as a seperate question as well.

