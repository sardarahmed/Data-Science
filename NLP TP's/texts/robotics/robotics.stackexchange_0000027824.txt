Q:

Apply angular velocity to wheel via plugin

Hi, I'm trying to implement a skid steer plugin (I can't use the already implemented one), but I have some problems. I was able to apply a linear velocity to the whole model using:
this->model = _parent;
model->SetLinearVel(math::Vector3(.03, 0, 0));

but I wasn't able to select one of the wheels (also which is the type of a link element?) nor to apply an angular velocity to it. I've tried with this:
left_front_wheel = _parent->GetEntityByName("left_front_wheel");

This is the SDF of one of the wheels:
        <joint type="revolute" name="right_back_wheel_hinge">
        <pose>0 0 0 0 0 0</pose>
        <child>rigth_back_wheel</child>
        <parent>chassis</parent>
        <axis>
            <xyz>0 1 0</xyz>
        </axis>
    </joint>

Originally posted by Hanteus on Gazebo Answers with karma: 13 on 2016-07-23
Post score: 0

A:

I was able to do it with the following lines of code:
private: physics::JointPtr leftFrontWheelJ,oint;
    
this->model = parent;
leftFrontWheelJoint = this->model->GetJoint("left_front_wheel_hinge");
leftFrontWheelJoint->SetVelocity(0, .1);

The parameters of SetVelocity are the index of the axis on which you want to apply the velocity and the velocity itself (I write this for people who may have my same problem).

Originally posted by Hanteus with karma: 13 on 2016-07-24
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by guido_sanchez on 2016-11-16:
Have a look at https://github.com/gmsanchez/gazebo_stuff/tree/master/WheelSpeedPlugin
It is a plugin that applies each of the two wheels of a differential drive robot a velocity received on vel_cmd topic. The code has two standalone programs to test if it works. You can also check the differential_drive.world model where it was tested.
Cheers!

