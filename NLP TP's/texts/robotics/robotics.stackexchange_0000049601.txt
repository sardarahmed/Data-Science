Q:

Programatically load yaml config file to the Parameter Server in Python

How should I do that?
I've looked up along the roslaunch and dynamic reconfigure code but I don't find it. Do you know any standard function to do it?
By the momment I've done this (but I understand that should exist another way):

config = yaml.load(open(custom_configuration_file))
rospy.loginfo(config)
self.recursive_set_param(config)
...

def recursive_set_param(self, config, key_path=""):
        for k in config.keys():
            data = config[k]
            
            full_qualified_key = key_path + "/" + k
            if data.__class__ == dict:
                self.recursive_set_param(data, full_qualified_key)
            else:
                rospy.set_param(full_qualified_key, config[k])
                rospy.loginfo("SETTING PARAM %s -> %s", full_qualified_key, data)

Originally posted by Pablo Iñigo Blasco on ROS Answers with karma: 2982 on 2013-03-21
Post score: 3

Original comments
Comment by dornhege on 2013-03-21:
Any reason why you want to do that? There might be simpler ways to achieve your goal.
Comment by Pablo Iñigo Blasco on 2013-03-27:
For sure! and that is what I was looking for!

A:

Following the guidelines of dornhege, this looks the code that it is needed to load a yaml file dynamically (tested in Fuerte).
I firstly expected to be able to use the rosparam.yamlmain method. But it is not possible because it is programed using as argument sys.args.
The below for loop looks like it could be avoided using some method, but if such method exist I haven't found it.

import roslib
roslib.load_manifest("rosparam")
import rosparam

paramlist=rosparam.load_file("/path/to/myfile",default_namespace="my_namespace")
for params, ns in paramlist:
    rosparam.upload_params(ns,params)

Originally posted by Pablo Iñigo Blasco with karma: 2982 on 2013-03-27
This answer was ACCEPTED on the original site
Post score: 4

