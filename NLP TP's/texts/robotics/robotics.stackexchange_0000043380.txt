Q:

tf.getYaw() in python?

Well I feel very foolish to ask this question, but I am looking for the equivalent of tf::getYaw() that exists in the C++ API for Python. I've tried looking in the API docs and using the dir() and help() functions in the Python console, but so far coming up short. Does this function exist?
If not, can anyone point to a reliable implementation where I can pass a Quaternion message and get the yaw back? I can go back and rewrite my code in C++, but that would be a little silly.
I'm on Electric
Thanks!

Originally posted by dougbot01 on ROS Answers with karma: 342 on 2012-08-19
Post score: 1

A:

You can use euler_from_quaternion:
 (roll,pitch,yaw) = euler_from_quaternion(quaternion)

Originally posted by michikarg with karma: 2108 on 2012-08-19
This answer was ACCEPTED on the original site
Post score: 6

Original comments
Comment by michikarg on 2012-08-19:
It's basically not a real equivalent but i guess the easiest way to get yaw from a quaternion.
Comment by dougbot01 on 2012-08-21:
Thank you, that works! As a note one must add "from tf.transformations import euler_from_quaternion" to the top of the file. I don't know why I cannot mark this as answered. Someone please help if you can!
Comment by Micha Sende on 2022-06-08:
Beware that this function expects a list of values, not a geometry_msgs/Quaternion! So, if you have a geometry_msgs/PoseStamped message, you have to convert it before like this: quaternion = [pose.pose.orientation.x, pose.pose.orientation.y, pose.pose.orientation.z, pose.pose.orientation.w]

