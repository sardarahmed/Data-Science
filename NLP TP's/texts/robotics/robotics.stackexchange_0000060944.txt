Q:

tf that has stopped publishing still can be found by lookupTransform

Hi guys,
My problem is that lookupTransform function can still get the transformation and rotation of a frame that has stopped publishing already (I tried tf_echo and tf_monitor and it is not there.)
What I am doing is that I use Kinect and openni_tracker to get the skeleton, then use a frame from the skeleton to set up another frame relative to the world frame. However, when the human is not present in the Kinect view anymore, the skeleton's frames are still in the list got from listener.getFrameStrings(). Anyway, my broadcaster.sendTransform(...) is not called, as far as I have checked, so my frame is not published. (tf_monitor also shows that it is not there.)
But, another node that is waiting for this frame can still get translation and rotation from lookupTransform function, which is not what I want.
Any possible causes? Thank you.

Originally posted by Veerachart on ROS Answers with karma: 86 on 2014-07-18
Post score: 3

A:

The frames still exist but have the old data. You just need to check the timestamps for the latest data to know how long you want to consider a non-observation to be no person present.  If you query with time 0 it will give you the latest known info, which may be old. But the resultant value will have the timestamp of the result that you can check for the age.

Originally posted by tfoote with karma: 58457 on 2014-10-22
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by Veerachart on 2014-10-22:
So, tf_echo checks for that and does not display it? Is there any function to remove a frame (I mean, manually or automatically)?
Comment by tfoote on 2014-10-23:
New processes which start up do not have the historical data that an already running process has. That's why they do not have information about the transform. You need to pay attention to the timestamps in your queries.

