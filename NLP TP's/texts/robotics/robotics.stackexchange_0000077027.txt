Q:

Where is the source code of installed packages?

I have installed ROS Kinetic and it sits is the /opt/ros/kinetic/ folder which has the following structure:
.
├── bin
├── env.sh
├── etc
├── include
├── lib
├── setup.bash
├── setup.sh
├── _setup_util.py
├── setup.zsh
└── share

Now suppose I want to view the source code which makes rosrun turtlesim turtle_teleop_key possible. It is a node of the turtlesim package, so I navigate to this package using roscd turtlesim. This puts me into the directory /opt/ros/kinetic/share/turtlesim, which has the following files:
.
├── cmake
├── images
├── msg
├── package.xml
└── srv

The actual .cpp source files are nowhere to be found! How can I view the source files for a given package? turtlesim is just an example, there are of course other packages whose source I'm interested in looking at.

Originally posted by danyloM on ROS Answers with karma: 43 on 2016-10-30
Post score: 3

A:

You can retrive path to sources of specific package by typing roslocate uri <package_name>, for more information about roslocate see reference.
Getting the sources for turtlesim can be done by: git clone $(roslocate uri turtlesim 2> /dev/null | awk '/https/')

Originally posted by abrzozowski with karma: 290 on 2016-10-30
This answer was ACCEPTED on the original site
Post score: 7

Original comments
Comment by danyloM on 2016-10-30:
Thanks, this worked for me!
Comment by gvdhoorn on 2016-10-30:
This works, but note that you don't necessarily get the sources that were used to build the (debian) pkg that you installed. git clone <url> checks out whatever the repository has configured as the default HEAD, while apt-get source $pkg downloads a tarball for a specific version.
Comment by abrzozowski on 2016-10-30:
I agree with @gvdhoorn 100 percent. If you download sources by above command, you'll get devel (it means develop) branch (branch set as main for this specyfic repository e.g. kinetic-devel), not released sources (based on https://github.com/ros-gbp/ros_tutorials-release debian package).
Comment by abrzozowski on 2016-10-30:
So, if you choose this approach, you should check the branch of downloaded repository to make sure you are on right (for kinetic call: git checkout kinetic-devel).
Comment by gvdhoorn on 2016-10-30:
If you really want the specific version of the sources used to build a pkg, checking out the 'devel branch' corresponding to your ROS distribution is not enough. You'd have to checkout the commit that was used to draft a release from. The repo should have been tagged. Use those.
Comment by abrzozowski on 2016-10-30:
Yes, i understand. A release pkg is always behind or equal/on beginning/ to a 'devel branch'. If you want download the latest sources with 'fixes/features', using command based on a roslocate is appropriate. Otherwise, apt-get source $pkg_name is better solution.

