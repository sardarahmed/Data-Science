Q:

cross compilation of groovy using catkin: librospack.so not found

Hi,
I am trying to cross compile ROS groovy on a x86_64 machine for an atom 32 bit system.
I got my toolchain file setup, cross-compiled the dependencies (log4cxx, poco), created a catkin workspace with
wstool init src -j8 http://packages.ros.org/web/rosinstall/generate/raw/groovy/robot

and finally started compiling the system with
./src/catkin/bin/catkin_make_isolated --install --cmake-args -DCMAKE_TOOLCHAIN_FILE=/mytoolchain_file

Here is when everything starts breaking apart:
<== Finished processing package [45 of 100]: 'rosconsole'
==> Processing catkin package: 'pluginlib'
==> Building with env: '/home/maierd/ros/ros_catkin_ws/install_isolated/env.sh'
==> cmake /home/maierd/ros/ros_catkin_ws/src/pluginlib -DCATKIN_DEVEL_PREFIX=/home/maierd/ros/ros_catkin_ws/devel_isolated/pluginlib -DCMAKE_INSTALL_PREFIX=/home/maierd/ros/ros_catkin_ws/install_isolated -DCMAKE_TOOLCHAIN_FILE=/home/maierd/cross/groovy/toolchain
-- Using CATKIN_DEVEL_PREFIX: /home/maierd/ros/ros_catkin_ws/devel_isolated/pluginlib
-- Using CMAKE_PREFIX_PATH: /home/maierd/ros/ros_catkin_ws/install_isolated
-- This workspace overlays: /home/maierd/ros/ros_catkin_ws/install_isolated
-- Found gtest: gtests will be built
-- Using CATKIN_TEST_RESULTS_DIR: /home/maierd/ros/ros_catkin_ws/build_isolated/pluginlib/test_results
-- catkin 0.5.65
-- Configuring done
-- Generating done
CMake Warning:
  Manually-specified variables were not used by the project:

    CMAKE_TOOLCHAIN_FILE

...

make[2]: Entering directory `/home/maierd/ros/ros_catkin_ws/build_isolated/pluginlib'
Linking CXX executable CMakeFiles/CMakeRelink.dir/plugin_tool
/usr/bin/cmake -E cmake_link_script CMakeFiles/plugin_tool.dir/relink.txt --verbose=1
/home/maierd/cross/linux64-nao-atom-cross-toolchain-1.14.3/cross/bin/i686-aldebaran-linux-gnu-g++    --sysroot /home/maierd/cross/linux64-nao-atom-cross-toolchain-1.14.3//sysroot/ -pipe -fomit-frame-pointer -fno-align-jumps -fno-align-functions -fno-align-labels -fno-align-loops -m32 -mtune=generic -DOE_CROSS_BUILD -g  -Wl,--sysroot,/home/maierd/cross/linux64-nao-atom-cross-toolchain-1.14.3//sysroot/ CMakeFiles/plugin_tool.dir/src/plugin_tool.cpp.o  -o CMakeFiles/CMakeRelink.dir/plugin_tool -rdynamic -L/media/external/ros/groovy-atom-1.14.3/ros-deps/lib /home/maierd/ros/ros_catkin_ws/install_isolated/lib/libclass_loader.so /home/maierd/cross/linux64-nao-atom-cross-toolchain-1.14.3/sysroot/usr/lib/libboost_thread-mt.so /media/external/ros/groovy-atom-1.14.3/ros-deps/lib/libPocoFoundationd.so /home/maierd/cross/linux64-nao-atom-cross-toolchain-1.14.3/sysroot/usr/lib/libdl.so /home/maierd/ros/ros_catkin_ws/install_isolated/lib/libconsole_bridge.so /home/maierd/cross/linux64-nao-atom-cross-toolchain-1.14.3/sysroot/usr/lib/libboost_system-mt.so /home/maierd/ros/ros_catkin_ws/install_isolated/lib/librosconsole.so /home/maierd/cross/linux64-nao-atom-cross-toolchain-1.14.3/sysroot/usr/lib/libboost_regex-mt.so /media/external/ros/groovy-atom-1.14.3/ros-deps/lib/liblog4cxx.so /home/maierd/ros/ros_catkin_ws/install_isolated/lib/libcpp_common.so /home/maierd/ros/ros_catkin_ws/install_isolated/lib/librostime.so /home/maierd/cross/linux64-nao-atom-cross-toolchain-1.14.3/sysroot/usr/lib/libboost_date_time-mt.so /home/maierd/ros/ros_catkin_ws/install_isolated/lib/libroslib.so /home/maierd/cross/linux64-nao-atom-cross-toolchain-1.14.3/sysroot/usr/lib/libboost_filesystem-mt.so /home/maierd/cross/linux64-nao-atom-cross-toolchain-1.14.3/sysroot/usr/lib/libboost_system-mt.so -ltinyxml /home/maierd/ros/ros_catkin_ws/install_isolated/lib/librosconsole.so /home/maierd/cross/linux64-nao-atom-cross-toolchain-1.14.3/sysroot/usr/lib/libboost_regex-mt.so /media/external/ros/groovy-atom-1.14.3/ros-deps/lib/liblog4cxx.so /home/maierd/ros/ros_catkin_ws/install_isolated/lib/libcpp_common.so /home/maierd/ros/ros_catkin_ws/install_isolated/lib/librostime.so /home/maierd/cross/linux64-nao-atom-cross-toolchain-1.14.3/sysroot/usr/lib/libboost_date_time-mt.so /home/maierd/ros/ros_catkin_ws/install_isolated/lib/libroslib.so /home/maierd/cross/linux64-nao-atom-cross-toolchain-1.14.3/sysroot/usr/lib/libboost_filesystem-mt.so -ltinyxml 
/home/maierd/cross/linux64-nao-atom-cross-toolchain-1.14.3/cross/bin/../lib/gcc/i686-aldebaran-linux-gnu/4.5.3/../../../../i686-aldebaran-linux-gnu/bin/ld: warning: librospack.so, needed by /home/maierd/ros/ros_catkin_ws/install_isolated/lib/libroslib.so, not found (try using -rpath or -rpath-link)
/home/maierd/ros/ros_catkin_ws/install_isolated/lib/libroslib.so: undefined reference to `rospack::ROSPack::run(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'
collect2: ld returned 1 exit statu

From what I get, pluginlib links against libroslib.so which again depends on librospacks.so but cannot be found. librospack.so is built and located in
/home/maierd/ros/ros_catkin_ws/install_isolated/lib/librospack.so
/home/maierd/ros/ros_catkin_ws/devel_isolated/rospack/lib/librospack.so
/home/maierd/ros/ros_catkin_ws/build_isolated/rospack/CMakeFiles/CMakeRelink.dir/librospack.so

If I built everything without appending the toolchain file, everything compiles nicely. Any ideas what could be the problem?
Here is the content of my toolchain file:
include("/home/maierd/cross/linux64-nao-atom-cross-toolchain-1.14.3/toolchain-atom.cmake")
set(CMAKE_FIND_ROOT_PATH  "/home/maierd/cross/linux64-nao-atom-cross-toolchain-1.14.3/sysroot" "/media/external/ros/groovy-atom-1.14.3/ros-deps")
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM BOTH) # tried out-commenting this line
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY) # and this one
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY) # and this one but without effect
include_directories("/media/external/ros/groovy-atom-1.14.3/ros-deps/include" "/home/maierd/cross/linux64-nao-atom-cross-toolchain-1.14.3/sysroot/usr/include/tinyxml")
link_directories("/media/external/ros/groovy-atom-1.14.3/ros-deps/lib")

edit:
I sort of worked-around the problem by adding rospack to the
find_package(catkin ...) 

line in the CMakeLists.txt of pluginlib.
However, this seems to be necessary for modules like nodlet and dynamic_aggregator as well. For collada_urdf, I even needed to add roslib and rospack to the find_package instruction. Therefore I think, it is just a work-around not a proper fix.
How is this supposed to work? Should a cmake dependency on roslib automatically find rospack? Is it ok if modules require a find_package (rospack/roslib) or should this automatically be determined by resolving the dependencies?
edit2:
I also noted a similar problem occurs when trying to link robot_state_publisher: it depends on libcollada_parser.so and hence also on libcollada-dom2.4-dp.so.0. However, it fails to find that library, even though it exists and collada_parser built just fine. According to readelf -d, there is no RPATH in libcollada_parser.so, and also not in libroslib.so.

Originally posted by daniel_maier on ROS Answers with karma: 290 on 2013-06-06
Post score: 1

Original comments
Comment by Dirk Thomas on 2013-06-10:
The downstream packages should not need to know about the dependency of roslib on rospack, so adding it there is not the right way to solve it. libroslib.so is linked against librospack.so and by default using rpath information. Is your build moving the libraries at some point?
Comment by daniel_maier on 2013-06-13:
I am just following the instructions from here: http://ros.org/wiki/groovy/Installation/Source. I am not moving anything manually. Is there anything I can do to (help) debug this problem?
readelf -d ./install_isolated/lib/libroslib.so shows no RPATH entry. However, neither does
readelf -d /opt/ros/groovy/lib/libroslib.so (and I installed this one via apt-get) or my natively (i.e. without cross-compilation) built libroslib.so.

A:

Hello Daniel,
I've spent a fair amount of time these last 2 days trying as well to cross-compile ROS for Nao.
I think your issue with roslib not finding rospack is due to the fact that the installation prefix of the various ros packages must be inside Nao's sysroot.
I've actually the same issue with log4cxx: many ROS packages fail to link because they do not find libapr, one of the dependency of log4cxx.
I could install correctly libapr in $sysroot (ie, configure with `--prefix=/usr` and install with `make install DESTDIR=$sysroot), but I've not been able to compile libapr-util` (they have a m4 macro to find libapr that is not too happy with sysroots).
How did you cross-compile log4cxx?

Originally posted by severin with karma: 240 on 2013-07-30
This answer was ACCEPTED on the original site
Post score: 0

