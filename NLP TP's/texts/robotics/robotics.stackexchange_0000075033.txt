Q:

Should C/C++ packages run_depend on *_msgs packages?

While cleaning up MoveIt!'s build structure (https://github.com/ros-planning/moveit_core/pull/305#issuecomment-230609078), I noticed that the packages run_depend on all the *_msgs packages they use. (std_msgs, geometry_msgs, sensor_msgs, ...)
To the best of my knowledge all these _msgs packages w.r.t. C++-only projects only consist of header files
that are not required at run-time. Should the run_depends be removed? Is it good/bad practice to have them in there?

Originally posted by v4hn on ROS Answers with karma: 2950 on 2016-07-06
Post score: 2

A:

In most cases, you should keep the run_depends on the message packages.
If you're building a ROS node in C++ that subscribes or publishes messages of a particular type, you should have a run_depend on that type so that it's available to debugging tools like rostopic that are written in python.
If you're building a C++ library that publishes or subscribes to messages, the same idea applies.
In either case, don't assume that another package will provide the dependency for you; that package may not need it.

Originally posted by ahendrix with karma: 47576 on 2016-07-06
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by v4hn on 2016-07-06:
There is no need to have "another package provide the dependency", because the binary/library itself simply does not have that dependency.
However, it does make sense to require the run_depend for generic python tools like rostopic!

