Q:

Task worker blocked when compiling turtlebot3_node for ROS2 on the RPI 3B+

Hello,
I'm having troubles when following the robotis ros2 humble SBC setup instructions when it is time to  colcon build --symlink-install --parallel-workers 1
This does not work and the worker gets blocked.
Following suggestions in several posts I found, I tried to reduce the CPU and memory footprint of the compilation by running the following command
colcon build --symlink-install --executor sequential --cmake-args " -DCMAKE_C_FLAGS_RELWITHDEBINFO=-O0" --cmake-args " -DCMAKE_CXX_FLAGS_RELWITHDEBINFO=-O0"
But, around 28% of compiling turtlebot3_node, it displays
`
INFO: task kworker/0:0:1149 blocked for more than 120 seconds.
Tainted: G              C  E        5.15.0-1030-raspi # 32-Ubuntu
INFO: task kworker/0:0:1149 blocked for more than 241 seconds.
Tainted: G              C  E        5.15.0-1030-raspi # 32-Ubunt
...
INFO: task kworker/0:0:1149 blocked for more than 1208 seconds.
Tainted: G              C  E        5.15.0-1030-raspi # 32-Ubunt
`
Then I hit Ctrl+C and the compilation resumed, skipping the compilation of turtlebot3_node.
I do not know if this is relevant but, when (or just before maybe) I pressed Ctrl+C, I also got the message
systemd[1]: snapd.service: Watchdog timout (limit 5 min)
From what I see from htop, one cc1plus process is taking 65.7% of the RAM. There are also several snapd processes that take some 1.6% of the RAM, some of them takes 20% of the CPU as well .

Originally posted by Jeremy Fix on ROS Answers with karma: 31 on 2023-06-19
Post score: 1

Original comments
Comment by Jeremy Fix on 2023-06-19:
One follow up ,
I noticed in the second command that I forgot to add --parallel-workers 1 , therefore, I'm now retrying with
colcon build --symlink-install --executor sequential --cmake-args " -DCMAKE_C_FLAGS_RELWITHDEBINFO=-O0" --cmake-args " -DCMAKE_CXX_FLAGS_RELWITHDEBINFO=-O0" --parallel-workers 1
And building is running.  The console (I'm running ubuntu server 22.04) is not super responsive, but the build percent progress is rising.
Comment by AnhHazz on 2023-06-23:
Have you solved this prolem? I got the same today
Comment by Jeremy Fix on 2023-06-23:
Unfortunately not !  I'm currently trying several things for compiling on the RPI : like killing all the snapd processes, trying to compile without colcon (with the usual cmake process). For now, no success.
I do not know if we can cross compile.
Comment by Jeremy Fix on 2023-06-27:
I tried bypassing colcon and using the usual cmake way of building a package, still with the cmake options above, but this is still failing;
I'm at the point where I do know if there is another option than cross compiling.
Comment by AnhHazz on 2023-06-27:
I asked chatgpt for help. It show some ways but i can't try until this weekend.
Can you try it if you have time?
Here is the conversation link: https://chat.openai.com/share/b063d502-3458-44b4-8432-942d0832e903
Comment by AnhHazz on 2023-07-12:
Hey, i posted this on github and got some help. Look like it's gonna work this time
Here is the issue link : https://github.com/ROBOTIS-GIT/turtlebot3/issues/965#issuecomment-1633344157
Comment by Jeremy Fix on 2023-07-13:
Wow, great ! I cannot test it right now but in one week or so I should be able to test it. Thank you for the github discussion that led to some solution !:

A:

Great, that finally worked by following the proposition on https://github.com/ROBOTIS-GIT/turtlebot3/issues/965#issuecomment-1633344157
To keep a trace of the answer, although this is just a copy/paste of the github issue :
sudo swapoff /swapfile
sudo fallocate -l 2G /swapfile
sudo chmod 600 /swapfile
sudo mkswap /swapfile
sudo swapon /swapfile
sudo nano /etc/fstab

and then add
/swapfile swap swap defaults 0 0

to the /etc/fstab file
On my RPB3 , it took almost 2 hours to compile the turtlebot3_node package. And on the swap, I looked at it from time to time, it occupied at most 1.5 GB out of the 2 GB.
One last thing, I ran the compilation with colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release, i.e. no more with the debug or sequential flags.
By the way, I also release ansible roles for deploying ROS2 on either Turtlebot2 or Turtlebot3. Some parts are custom to my own devices but should still be pretty customilzable and useful for others. The ansible scripts are provided at https://github.com/jeremyfix/ros2_ansible_turtlebot

Originally posted by Jeremy Fix with karma: 31 on 2023-07-18
This answer was ACCEPTED on the original site
Post score: 0

