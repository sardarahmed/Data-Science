Q:

How to define new topic in UWSIM?

Hello,
I want to add a topic through which two vehicles can communicate with each other. Currently, the vehicles communicate to ROS and vice-versa. I want the vehicles to communicate with each other. I tried to create my own example code and put it along other examples present, but I was not able to compile it. I just want to pass timestamp from one vehicle to another. Can someone please tell me where should I start? I saw timestamp information is already included in standard message header. But I donâ€™t know where to define my topic. Should it be in RosInterface.cpp? And how do I add my own cpp code for testing?

Originally posted by User_810 on ROS Answers with karma: 5 on 2015-04-13
Post score: 0

A:

ROS is designed so that communication between nodes, regardless of where they are running, happens through the ROS master.
I'm not familiar with UWSIM, but if it's a sim that just has ROS plugins the following architecture is pretty standard:
You can write your nodes so that each robot has a publisher and subscriber.
When you initialize a publisher or subscriber with a topic:
ros::Publisher chatter_pub = n.advertise<std_msgs::String>("chatter", 1000);

That topic is created and the ROS master handles all communication to it. In this case the topic is called chatter. Aside from writing the publisher/subscriber nodes there are no additional steps to take when you want a topic created.
So, for each simulated robot you would have a node that handles outbound communication through a publisher and inbound through a subscriber. If your robots are called rob_one and rob_two, then their publishers can publish on topics: rob_one_timestamp and rob_two_timestamp, respectively. Then rob_one's subscriber can subscribe to rob_two_timestamp and vice versa.
It's a bit tough without seeing some of your code, and your CMakeLists.txt to understand why it isn't compiling.

Originally posted by aak2166 with karma: 593 on 2015-04-13
This answer was ACCEPTED on the original site
Post score: 2

