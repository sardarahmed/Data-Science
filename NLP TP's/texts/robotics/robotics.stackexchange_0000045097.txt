Q:

compiling ROS on Debian

Hello,
I am trying to get started with ROS under debian. I followed the install instructions for debian until the point where it is compiled using make. There I run into trouble building the rxtools with the following error:
make[2]: *** No rule to make target '/usr/lib/python3.2/config/libpython3.2.so', needed by `lib/_rxtoolscpp.so'.  Stop.
make[1]: *** [rx/rxtools/CMakeFiles/python_rxtools.dir/all] Error 2
make: *** [all] Error 2
The folder 'rx/rxtools/CMakeFiles' does not exist in my ros-underlay folder! I also think it is strange, that libpython is built by ROS.
I ran into some small, solvable problems during the installation process before, but I could not find anything about this error in the net and am kind of lost here.
Thank you in advance,
Maximilian
[Edit:]
I did my research and found out that for some reason make wants to build libpython3.2.so which is already installed on my system.
A workaround for me was to remove the line "lib/_rxtoolscpp.so: /usr/lib/python3.2/config/libpython3.2.so" from the file build/rxtools/CMakeFiles/python_rxtools.dir/build.make and change "-lpython3.2" in build/rxtools/CMakeFiles/python_rxtools.dir/link.txt to "-L/usr/lib/python3.2/config/libpython3.2.so".
make and make install now runs without any errors but I do not think that this ugly fix is the right way to compile ROS. Maybe there is a problem with the CMake files somewhere and this could be a bug.

Originally posted by erniejunior on ROS Answers with karma: 21 on 2012-10-20
Post score: 2

A:

I'm not sure for Debian, but for Ubuntu Python 2.7 will be the default until 14.04 (source).
If you are working with sources, than you might have used rosdep to install system dependencies. rosdep resolves the dependency on python to python-dev, what for Ubuntu Precise points to python2.7-dev.
However, if you have python3.2 installed cmake might look for python3.2-dev, which won't be pulled in by rosdep.
So, you could manually install python3.2-dev or force cmake to look for a specific version, e.g.
find_package(PythonLibs 2.7 REQUIRED)

Hope this helps!

Originally posted by bit-pirate with karma: 2062 on 2013-09-11
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Rasoul on 2014-12-11:
Thanks for your answer! It solved my problem :-)

