Q:

robot axes in wrong position

imported robot model from solidworks and now axes is wrong position ,how to correct it ?
here is my urdf file
```<robot
  name="urdfkarbrs">
  <link
    name="base_link">
    <inertial>
      <origin
        xyz="0.0024688 0.33762 -0.098216"
        rpy="0 0 0" />
      <mass
        value="293.45" />
      <inertia
        ixx="."
        ixy="."
        ixz="."
        iyy="."
        iyz="."
        izz="." />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://urdfkarbrs/meshes/base_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.1098 0.1098 0.1098 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://urdfkarbrs/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>
  <link
    name="wheel_left">
    <inertial>
      <origin
        xyz="0 6.9389E-18 0"
        rpy="0 0 0" />
      <mass
        value="1.232" />
      <inertia
        ixx="0.0033433"
        ixy="-1.1064E-19"
        ixz="2.0298E-20"
        iyy="0.0033433"
        iyz="3.9954E-21"
        izz="0.0062939" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://urdfkarbrs/meshes/wheel_left.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.1098 0.1098 0.1098 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://urdfkarbrs/meshes/wheel_left.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="base_to_wheel_left"
    type="fixed">
    <origin
      xyz="0.200006504170248 -0.117214105335033 0.0322348664686984"
      rpy="1.5707963267949 6.12303176911189E-17 1.5707963267949" />
    <parent
      link="base_link" />
    <child
      link="wheel_left" />
    <axis
      xyz="0 0 0" />
  </joint>
  <link
    name="wheel_right">
    <inertial>
      <origin
        xyz="-1.38777878078145E-17 0 0"
        rpy="0 0 0" />
      <mass
        value="1.23201604934254" />
      <inertia
        ixx="0.00334328321751409"
        ixy="-8.08731176170645E-19"
        ixz="-6.85412539663736E-19"
        iyy="0.00334328321751409"
        iyz="6.76489684109897E-19"
        izz="0.00629386357236665" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://urdfkarbrs/meshes/wheel_right.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.109803921568627 0.109803921568627 0.109803921568627 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://urdfkarbrs/meshes/wheel_right.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="base_to_wheel_right"
    type="fixed">
    <origin
      xyz="-0.2 -0.117214105335033 0.0322348664686984"
      rpy="1.5707963267949 -5.3987124996798E-05 -1.5707963267949" />
    <parent
      link="base_link" />
    <child
      link="wheel_right" />
    <axis
      xyz="0 0 0" />
  </joint>
  <link
    name="imu_link">
    <inertial>
      <origin
        xyz="4.03180014199E-05 -0.0156879017748662 -0.00151010441324315"
        rpy="0 0 0" />
      <mass
        value="0.0322916953109473" />
      <inertia
        ixx="1.00363686277193E-05"
        ixy="-1.00690641922697E-08"
        ixz="2.46871412698827E-10"
        iyy="1.70223765399293E-05"
        iyz="5.97014858901897E-07"
        izz="9.87585772922106E-06" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://urdfkarbrs/meshes/imu_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://urdfkarbrs/meshes/imu_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="base_to_imu_link"
    type="fixed">
    <origin
      xyz="0 0.23641495135205 0.766160557219361"
      rpy="1.59079366076805 -1.22411670713952E-16 3.14159265358979" />
    <parent
      link="base_link" />
    <child
      link="imu_link" />
    <axis
      xyz="0 0 0" />
  </joint>
  <link
    name="laser_frame">
    <inertial>
      <origin
        xyz="-0.0907919754569901 0.695494682602849 0.132608559375515"
        rpy="0 0 0" />
      <mass
        value="0.324259802512443" />
      <inertia
        ixx="0.000798471309935871"
        ixy="1.18350468594385E-05"
        ixz="-1.67478154694352E-06"
        iyy="0.000599157159287243"
        iyz="3.42109748409017E-07"
        izz="0.000864530960816478" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://urdfkarbrs/meshes/laser_frame.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.752941176470588 0.752941176470588 0.752941176470588 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://urdfkarbrs/meshes/laser_frame.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="base_to_lidar"
    type="fixed">
    <origin
      xyz="-0.132917570962768 -0.290962272142665 0.217559326738122"
      rpy="1.5707963267949 6.12303176911189E-17 1.5707963267949" />
    <parent
      link="base_link" />
    <child
      link="laser_frame" />
    <axis
      xyz="0 0 0" />
  </joint>
</robot>```

update
here is my transforms after creating mock_base_linl

Originally posted by kallivalli on ROS Answers with karma: 53 on 2019-09-17
Post score: 0

A:

You can either modify your URDF, add 90 degrees or 1.57 rad yaw to your base_link rpy="0 0 1.57"
Or you can change name of base_link to mock_base_link or whatever, and publish a static transform called base_link that is offset by 1.57 rad in yaw to your mock_base_link, adding this to your launch file
<node pkg="tf" type="static_transform_publisher" name="mock2base" args="0 0 0 1.57 0 0 mock_base_link base_link 20" />

You can read about args here
EDIT:
Current node will have mock_base_link as parent and base_link as it's child, you need to switch them like,
<node pkg="tf" type="static_transform_publisher" name="mock2base" args="0 0 0 1.57 0 0 base_link mock_base_link 20" />

Originally posted by Choco93 with karma: 685 on 2019-09-17
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by kallivalli on 2019-09-19:
TF tree doesn't show a base_link frame at all, which tells me that while publishing mock_base_link -> base_link, there's nothing publishing the base_link frame or a completed tree of base_link -> odom. ! how to solve this ?
Comment by Choco93 on 2019-09-20:
Do you see rest of the links for your robot? What are you using to publish odom?
Comment by kallivalli on 2019-09-20:
yes i have edited my question and pasted the transforms map >odom
Comment by Choco93 on 2019-09-20:
I am a little confused now, your tf-tree and URDF don't match. you have changed base_link to mock_base_link in urdf, right?
Comment by kallivalli on 2019-09-20:
yes check is there anything wrong with wrong [launch] (https://hastebin.com/imeqerigep.xml) file ?
Comment by Choco93 on 2019-09-20:
So one thing I just checked, args should be 0 0 0 1.57 0 0 base_link mock_base_link 20". But this is actually a nicer solution when you are adding a child link and not a parent link.
Alternatively you can take your original URDF, and add 1.57 to yaw for base_link, and add a child (mock_base_link) to it with -1.57 yaw, and all other links will then be connected to mock_base_link.
Comment by kallivalli on 2019-09-20:
root Link: base_link has 1 child(ren)
child(1):  mock_base_link
child(1):  imu
child(2):  laser_frame
child(3):  wheel_left
child(4):  wheel_right
it became like this axes are all working now ~ thank you

