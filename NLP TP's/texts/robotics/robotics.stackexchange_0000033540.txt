Q:

Calling ROS services in Python using yaml notation for the parameters?

Hey everybody!
I was wondering if it was possible to call a ROS service from within a python node using YAML notation for the parameters like the console tool rosservice. Something like:
rosservice call /add_two_ints '{a:1, b:2}'

But from within a python node:
add_two_ints = rospy.ServiceProxy( 'add_two_ints', AddTwoInts )
add_two_ints( "{a:1, b:2}" )

I already know that the following is possible, but it's not what I'm looking for:
add_two_ints( a=1, b=2 )

Thank you!

Originally posted by pparescasellas on ROS Answers with karma: 95 on 2011-08-08
Post score: 0

A:

No, but the Python yaml module is very easy to use and will convert the yaml notation into a form suitable for Python.
In [5]: yaml.load("{a: 1, b: 2}")
Out[5]: {'a': 1, 'b': 2}

similarly, the add_two_ints( a=1, b=2 ) form is equivalent to
d = {'a': 1, 'b': 2}
add_two_int(**d)

NOTE: the keyword-form is not recursive

Originally posted by kwc with karma: 12244 on 2011-08-09
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by kwc on 2011-08-10:
You can look at the source code for rosservice, which is in Python.
Comment by pparescasellas on 2011-08-10:
Is it possible to call the service without specifying the service message name? I'm trying to do a generic service caller and that's why I wanted to send parameters in yaml-format. I'd like to be able to call any service by just knowking the service name and the yaml parameters
Comment by pparescasellas on 2011-08-10:
Oh great! I'll give it a try, thanks ;)

