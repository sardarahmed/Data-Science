Q:

Is collision checking easier when using primitves vs equivalent stls (moveit)

I am wondering whether collision checking using primitive shapes (defined in the URDF) is faster than using equivalent .STL or .obj geometries.
With equivalent i mean creating cylinders, spheres and boxes in a cad software to enclose the robot goemetry (in solidworks using different configuratons  ) and exporting those geometries in .STL files

A:

In the context of collision checking, using primitive shapes (like boxes, cylinders, and spheres) defined in the URDF is faster and more efficient than using equivalent STL or OBJ (mesh) files that represent these geometries.
Primitive shapes have fewer parameters to be considered during collision detection, reducing the computational load. Mesh files, even those representing simple geometries, contain many more data points (vertices and edges), making the collision detection process more resource-intensive because the process will include checking every vertex.
It is recommended to use meshes for visualization and primitive models for collision checking. Inside the link we have <visual> and <collision> tags. The <visual> is used for rendering robot links in simulations, where the detailed geometry of mesh files is beneficial. The <collision> tag defines the geometry used for collision detection, where primitives simplicity is more advantageous due to their lower computation cost.
We can use programs like MeshLab to see the number of vertices on STL meshes, and we can even use the same software to simplify the mesh, but primitives will still be more efficient.

