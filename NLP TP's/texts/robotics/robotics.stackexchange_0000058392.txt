Q:

how to set parameters (publish_voxel_map)

I'm trying to navigate a turtlebot with eband_local_planner on hydro. I have already navigated a turtlebot with base_local_planner. With eband_local_planner, next error is displayed on a terminal.

load_parameters: unable to set parameters (last param was [/move_base/local_costmap/publish_voxel_map=True]): cannot marshal None unless allow_none is enabled

As if I chage publish_voxel_map false in costmap_common_params.yaml, new error is displayed on a terminal.

load_parameters: unable to set parameters (last param was [/move_base/local_costmap/publish_voxel_map=False]): cannot marshal None unless allow_none is enabled

I don't understand yaml file enough yet. What is difference between yaml on eband_local_planner and one on base_local_planner? Could anyone give me some advice?
costmap_common_params.yaml

global_frame: /map
robot_base_frame: /hokuyo_link
update_frequency:
publish_frequency: 1.0

publish_voxel_map: false

map_type: voxel
origin_z: 0.0
z_resolution: 0.2
z_voxels: 10
unknown_threshold: 10
mark_threshold: 0

max_obstacle_height: 0.60
obstacle_range: 3.0
raytrace_range: 3.0
robot_radius: 0.18

observation_sources: scan bump

scan: {data_type: LaserScan, topic: /base_scan, marking: true, clearing: true, min_obstacle_height: 0.6, max_obstacle_height: 0.6}
bump: {data_type: PointCloud2, topic: mobile_base/sensors/bumper_pointcloud, marking: true, clearing: false, min_obstacle_height: 0.0, max_obstacle_height: 0.1}

global_costmap_params.yaml

global_costmap:
   global_frame: /map
   robot_base_frame: /base_link
   update_frequency: 3.0
   publish_frequency: 1.0
   static_map: true
   transform_tolerance: 1.0
   width: 100
   height: 100
   resolution: 0.05
   inflation_radius: 0.4 

local_costmap_params.yaml

local_costmap:
   global_frame: odom
   robot_base_frame: base_footprint
   update_frequency: 3.0
   publish_frequency: 1.0
   static_map: false
   rolling_window: true
   meter_scoring: true
   width: 4.0
   height: 4.0
   resolution: 0.05
   transform_tolerance: 0.25
   footprint_padding: 0.02

move_base_params.yaml

foot_print: [[-0.18, -0.18], [0.18, -0.18], [0.18, 0.18], [-0.18, 0.18]]

shutdown_costmaps: false

controller_frequency: 5.0
controller_patience: 3.0

planner_frequency: 2.0
planner_patience: 5.0

oscillation_timeout: 10.0
oscillation_distance: 0.2

eband_planner_params.yaml

EBandPlannerROS:

#TRAJECTORY CONTROL
differential_drive: true

# velocity limits
max_vel_lin: 0.8
max_vel_th: 0.5
min_vel_lin: 0.5
min_in_place_vel_th: 0.25

# goal tolerance
xy_goal_tolerance: 0.15
yaw_goal_tolerance: 0.15
# angular velocity PID
k_prop: 0.3
#eband parameters

Originally posted by Ken_in_JAPAN on ROS Answers with karma: 894 on 2014-04-01
Post score: 0

Original comments
Comment by ahendrix on 2014-04-01:
It sounds like there's an error in your yaml file; can you add it to your question?
Comment by Ken_in_JAPAN on 2014-04-02:
Could you wait for my edit? I don't know how to show my .yaml directly on this page.

A:

Thank you, @ahendrix! After adding an indent to eband_local_params.yaml as I follow your instruction, Errors went out  and my turtlebot2 worked with eband_local_planner.

Originally posted by Ken_in_JAPAN with karma: 894 on 2014-04-04
This answer was ACCEPTED on the original site
Post score: 0

