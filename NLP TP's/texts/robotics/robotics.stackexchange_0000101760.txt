Q:

Odometry orientation in radians is giving me weird numbers

I am trying to better understand the information I am receiving from odometry.
oquat = msg.pose.pose.orientation
_, _, yaw = euler_from_quaternion([oquat.x, oquat.y, oquat.z, oquat.w])

I expect yaw to be a number between 0 and 2*pi or maybe between -pi and +pi. It doesn't seem to be doing that which means I am misunderstanding what yaw means in this context. Can you help me better understand? Here is the data for one full 360 degree rotation for a Turtlebot3 in Gazebo.

Originally posted by pitosalas on ROS Answers with karma: 628 on 2022-05-18
Post score: 0

Original comments
Comment by gvdhoorn on 2022-05-19:
@pitosalas: please restore your original question.
The fact you made a mistake which resulted in what you reported is not sufficient reason to remove your question.
There's a good chance others could have made similar mistakes, and they would still be helped by seeing how you diagnosed and eventually found a solution.
I would recommend you revert the edit to your OP and post your solution as an answer. That will clearly show your question was answered.

A:

Hi @gvdhoorn! Ok it looks like you restored it for me. My bug was that in trying to understand better what was happening I had inserted a one line "normalization" function which had a bug in it. I removed the call to the normalization function call and odom rotation data, converted to yaw, made sense once again.
How did I solve this? By asking questions here, using the formula from wikipedia and noticing the same exact results as euler_from_quaternion. I also added print statements to generate the raw results in csv format so that i could easily load them into excel to see the graphs.

Originally posted by pitosalas with karma: 628 on 2022-05-19
This answer was ACCEPTED on the original site
Post score: 1

