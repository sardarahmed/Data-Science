Q:

ROS Answers SE migration: ROS Beginning

Hi All,
I am new to ROS. I have been programming Pioneer and Coroware robots using Player for a while now. But now I have to venture into ROS.
I went through more or less the whole ROS tutorials on ROS-Wiki, but could not find any convincing place where it explains how to write an application in ROS to run a robot.
Any help will be highly appreciated.
Thanks,
Sen

Originally posted by sen on ROS Answers with karma: 61 on 2012-01-11
Post score: 4

Original comments
Comment by Arkapravo on 2012-01-15:
@sen have a look here, http://answers.ros.org/question/1350/im-new-to-ros-how-do-i-get-started#2303
Comment by sen on 2012-01-13:
@ahendrix : I did come across the coroware corobot package .Since I have no idea how to use ROS as of now, I could not play around with it much. But thanks.I have installed ROS diamondback and have gone through the publisher/ subscriber & Service/Client C++ codes bt still not able to figure out much
Comment by ahendrix on 2012-01-13:
@Arkapravo I haven't worked with that package or the corobot at all; I just spotted it on the wiki and thought it might be of interest.
Comment by Arkapravo on 2012-01-12:
@ahendrix Have you used that Corobot package ? Does it have a stage/ gazebo model for the Corobot ?
Comment by ahendrix on 2012-01-12:
Take a look at the ROS page for Corobot: http://ros.org/wiki/Robots/Corobot if you haven't already.
Comment by sen on 2012-01-12:
@Dimitar ...Yes Coroware Explorer is the robot and language C++ . I am trying to go through the suggested links. Thanks
Comment by joq on 2012-01-11:
ROS is more powerful than Player, but not fundamenately different.
Comment by Arkapravo on 2012-01-11:
@sen Patience ! spend enough time before coming down to conclusions ! You may need 1 - 2 weeks to let it all absorb into you. ROS tutorials are the best resource known to me.
Comment by Dimitar Simeonov on 2012-01-11:
Do you have a specific robot in mind? Does it matter for you in what language is the program?

A:

Just like you, I was new to ROS just 3 months ago. So my idea of "programming a robot" was to write codes that will run on a microcontroller (that pretty much runs everything from the motor control to the sensors and communication).
How I finally got my two wheel robot running using ROS:

The tutorials (the publishing/subscribing one that Dimitar pointed out was very useful)
Looking at the codes for turtlebotsim and turtlebot
Using the tutorials to see how the turtlebot codes are related (in particular what each node publishes, and which nodes subscribe to that topic)
The easiest was the 'cmd_vel' topic where you can see the result in both turtlebotsim and turtlebot (if you have it). So this was the starting point to get my own robot working.
With the turtlebot_teleop node/code already there, I started writing my own subscriber to printout what was on 'cmd_vel' while running the teleop program, and then progressing to pushing the 'cmd_vel' values out onto my robot motors.
Once I got the basic idea of how the nodes run separately, yet are connected through ROS topics, I progressed to writing publishers/subscribers for sensor data.

I think the crucial step for me while learning ROS was the understanding that there is no longer a need for a central brain/control to tell the robot to 'do this at this time'. Instead, each robot module (sensors, motors) would just do what they do best when they see something published. Eg. motors subscribe to a robot velocity command and convert that into wheel velocity; sensors just keep reading and publishing their readings, without the need to know what the readings are used for.

Originally posted by weiin with karma: 2268 on 2012-01-11
This answer was ACCEPTED on the original site
Post score: 10

