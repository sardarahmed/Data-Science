Q:

print UInt8MultiArray values in python

Hi! I would like to save into 3 arrays the fields of a custum message:

std_msgs/UInt8MultiArray  pixel
std_msgs/Float64MultiArray nord
std_msgs/Float64MultiArray est

this is my callback to listen to the message. When I try to print pixel I get letters. How could I transform them to integers from 0 to 255? thanks
 def callback(data):
        #rospy.loginfo(rospy.get_caller_id() + "I heard %s", data.pixel.data)
        #rospy.loginfo(rospy.get_caller_id() + "I heard %s", data.est.data)
        #rospy.loginfo(rospy.get_caller_id() + "I heard %s", data.nord.data)
        pixel= np.array(data.pixel.data)
        print(pixel)
        est = np.array(data.est.data)
        nord= np.array(data.nord.data)
    

Originally posted by v.leto on ROS Answers with karma: 44 on 2021-12-27
Post score: 1

Original comments
Comment by osilva on 2021-12-27:
Hi @v.leto can you please post what you get? Is it hexadecimal values?
Comment by v.leto on 2021-12-27:
Hi @osilva!
 print(pixel)

outputs
hcc`hda`dadhgcfc_bcccaacaacebfdhfcifggadfhhbihiffcgfddbeafbceacfgbfbdcgfddebab_`da_bccfgeb`ceedce`dac`fad`bcbcacfaddcacdfchbcafecibhchcfefjifgaddfggdieeg`cdffgdgfjhdgbdedjdhdfdegcfddd`eb`fecehjefdhhdcfcdcdhicdbbhbadgchgfijggiehflikpikighhffhhgchdeccdegfhbda`badaecdgdedb`adbcbc``dgiggd`ceegcbbhbhdbbadccdbbbaaahgggfedgdefddecbifffciijiefbgchfeffgaddfeefbddcdcbdecacaaabcce`ededdeafcdaabaaaed`fade`cb`c^^_bbbeba`_dcbcb``cddcdffdfgddhlggjjnlimlijh 

they are numbers from 0 to 255 but they are stored like strings
Comment by v.leto on 2021-12-27:
I have read that it is a base64 because uint8[] are converted by rosbridge to base64,...
Comment by osilva on 2021-12-27:
Ok then use this tutorial to decode: https://stackabuse.com/encoding-and-decoding-base64-strings-in-python/
import base64

base64_message = 'UHl0aG9uIGlzIGZ1bg=='
base64_bytes = base64_message.encode('ascii')
message_bytes = base64.b64decode(base64_bytes)
message = message_bytes.decode('ascii')

print(message)

Should Python is fun
Comment by v.leto on 2021-12-28:
Your code works. I tried to modify mine in order to look like yours but I get errors. I used an online decorder and I think  my sting is not base64 as it doesn't end with ==.
my stringÂ· eehggehhdeagefhfddbcadbecbcdcdaciffabbfchaaddbdcecafabbedecccececdbfdehhfibcaabfddcgegaabacddfcbcbfeedfdccddccfbagdfceceddadcefhggbfjdebicfggffddfcgcefhehcddfchdgcfacdbfegfifgdahceidiehjjghhddafhgdaggegaefkihngihhejifehjikjdkgjgighechgehdedcbdadddaddccfcdebdcacbcacafddecdadbacedbbadbcbcabbccgdbfgdebekifidghdegbehfhfdfgihigifbcighidcdcbefcccgceaddcfhdhfbdbbcdehddcccfddbceaecacbbbbfegidfbfddbdcfdegfchfeaeeidcbccgfbh``efcfgdhkhhhjimkkhffiljjnlhmgicbfeffgeefdbeggfdbaegfdeidcbfdhdjiihdhhhccdihfhifahehgdehhigjihhllemmlimgfjwrfmlnliflldbcfiijfhhhaehhhlmllqoqojlmnkfllorrqstgnirqmejppnkhqmjiijildghgehdihjnnnlkfklkkhiiaffgmkgejijhdihhhkefgddjklihjoqfnnqiimqmomnlnlikhedcgfhgjkihgighfhjfkikkhghmohhhacghehfeeghlkihdgfiehcfddbachchcabadeeegedffdejkhkmrmpqslnkolrrsklqpxtsqpxsuyxxrqpprurrmqrslnifklckpk`
Comment by osilva on 2021-12-28:
Hi @v.leto, take a look at this discussion as there is more to the conversion that I thought: https://github.com/gramaziokohler/roslibpy/issues/38
pil_img = Image.fromarray(img)
buff = BytesIO()
pil_img.save(buff, format="JPEG")
new_image_string = base64.b64encode(buff.getvalue()).decode("utf-8")

A:

Hi! Thank you very much for your interest @osilva. I finally found a solution...and maybe it was easier than what I thought:
 pixel =data.pixel.data
 x=[ord(c) for c in pixel]

gives you a list in x that can be used in python

Originally posted by v.leto with karma: 44 on 2021-12-28
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by osilva on 2021-12-28:
Glad you found the answer.

