Q:

Node Name Collision with multiple talker node instances

I have modified the android_tutorial_pubsub app to send and receive text at the same time. I am trying to run a listener instance, two talker instances, and two RosTextView instances. I have seen some info on private naming, but nothing has been very clear. How do I ensure that two instances of the same kind of node don't collide?
The warning follows:
07-21 07:14:56.276: W/System.err(15939): Node name collision. Existing node /rosjava_tutorial_pubsub/talker (http://143.192.2.2:36426) will be shutdown.

Originally posted by Srogacki on ROS Answers with karma: 74 on 2012-05-06
Post score: 0

A:

The warning means that another node with the same name has been started. In ROS, node names need to be unique, and the convention is that when a new node with the same name is started, the old one should exit.
Presumably, you create a NodeConfiguration somewhere in order to start your talker node. There, you can change the node name using the following method:
nodeConfiguration.setNodeName("node")

You should make sure you set a different name for both talker instances.

Originally posted by Martin Günther with karma: 11816 on 2012-05-06
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Dan Lazewatsky on 2012-05-07:
Also, rospy and roscpp both have ways of initializing a node as anonymous, which allows you to start multiple instances of the same node and automatically assign them different names. I couldn't find a way to do this in rosjava, though the docs seem a bit broken at the moment.
Comment by Srogacki on 2012-05-08:
that was perfect. thanks.
Comment by jatowler on 2012-05-15:
Another option: if you never set a node name in your NodeConfiguration, the node name will be set to the default from your NodeMain's getDefaultNodeName() method instead. Of course, this is only useful if you only start one instance of each node class, but it lets you re-use the NodeConfiguration.
Comment by Martin Günther on 2012-05-15:
... which is why it isn't useful in this particular situation. :-)

