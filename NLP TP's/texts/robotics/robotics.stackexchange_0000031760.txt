Q:

Problem using subscribed motor position topic

Hi, I am new to ROS and I am trying to get access to my servo motor position to use in broadcasting a transform. I have done the listener tutorial and my listen program below runs and compiles fine, it even triggers the void function when the motor publishes a position topic. How can I get pull the position variable that I am subscribed to  in order to use it in a program? Specifically what do I need to change "sg->data.c_str()" to in order for it to say the motor position integer in the message?
======================listener.cpp==============
#include "ros/ros.h"

#include "ax12_driver_core/MotorStateList.h"

void motorchatterCallback(const ax12_driver_core::MotorStateList::ConstPtr&)
{

 // ROS_INFO("I heard: [%s]", msg->data.c_str());

}

int main(int argc, char **argv)
{
   ros::init(argc, argv, "listener");

  ros::NodeHandle n;

  ros::Subscriber sub = n.subscribe("motor_states/ttyUSB0", 1000, motorchatterCallback);
  
ros::spin();

  return 0;

}

Originally posted by kp3509 on ROS Answers with karma: 11 on 2011-05-23
Post score: 1

A:

ax12_driver_core::MotorStateList contains an array of ax12_driver_core::MotorState messages.
In C++, ROS arrays are converted to C++ std::vector.
To print the motor position of the first MotorState in the array you might use something like:
ROS_INFO("I heard : %d", msg->motor_states[0].position;);

You might want to also check that motor_states vector has at least 1 element :
if (msg->motor_states.size() > 0)

Originally posted by dking with karma: 116 on 2011-06-13
This answer was ACCEPTED on the original site
Post score: 0

