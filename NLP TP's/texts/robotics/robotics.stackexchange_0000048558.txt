Q:

tf::Quaternion syntax question

Hello,
Recently I've found out, that I must give the navigation stack a quaternion describing rotation in addition to the vector3D goal. Quaternions were new to me, so I learnt about them because I would like to use them in ROS. My question is about actual  implementation.
Suppose that I would like to go from (0,0,0) to (1,1,0). Then I know, that the robot would probably face to 45Â°, so...
double inRadian = radian(degree);
tf::Quaternion rotateByThis(tf::Vector3(0,0,1), inRadian); // is this call okay?
goal.target_pose.pose.orientation.w = ? // tf::Quaternion has getW() method, should I use that value?
goal.target_pose.pose.orientation.x = ?
goal.target_pose.pose.orientation.y = ?
goal.target_pose.pose.orientation.z = ?

Originally posted by Peter Roos on ROS Answers with karma: 119 on 2013-02-21
Post score: 0

A:

tf provides some methods for the use case that you want to do (2D navigation).
In general there is:
tf::createQuaternionFromYaw
Specifically for setting ROS messages, there is also:
tf::createQuaternionMsgFromYaw
So, your code can be shortened to:
goal.target_pose.pose.orientation = tf::createQuaternionMsgFromYaw(inRadians)

You'll almost never have to set quaternion components manually when dealing with ROS data types. There are also conversions between tf types and messages for all common tf types.

Originally posted by dornhege with karma: 31395 on 2013-02-21
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by Reza Ch on 2013-03-21:
Hello, I have the question of other way round. How to get rotations of a quaternion to RPY? I mean in my code I use a /tf listener. So after lookupTransform, now I need to call the rotations and have themin  RPY. So how to call and convert them? Any wiki link is also appreciated.

