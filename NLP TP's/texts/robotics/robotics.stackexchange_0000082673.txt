Q:

How to subscribe the topic only once

I have a problem about how to sucscribe the topic only once,In some time, I only hope to get the first data from the topic, rather than change the publisher. So how should I do?
This is my code:
#include  <ros/ros.h>
#include <sensor_msgs/NavSatFix.h>
#include <geometry_msgs/PointStamped.h>
static geometry_msgs::PointStamped point;

void imageCallback(const sensor_msgs::NavSatFix::ConstPtr &msg)
{
  point.point.x=msg->latitude;
  point.point.y=msg->longitude;
  point.point.z=msg->altitude;
}

int main(int argc, char **argv)
{
  ros::init(argc, argv, "test");
  ros::NodeHandle nh;
  ros::Subscriber positions_sub = nh.subscribe("/POSITIONS", 3, &imageCallback);
  ros::spin();
}

In this code, I can get many points, but I only hope to get the first point. What should I change in tthe code  ?
THANKS!

Originally posted by hudaming on ROS Answers with karma: 13 on 2017-09-06
Post score: 1

A:

While @bvbdort's answer will probably work, there is a convenience method that essentially does all that for you in a single line: ros::topic:waitForMessage(..).
It also supports specifying timeouts, which NodeHandle to use and some other niceties.

Edit:
#include <ros/ros.h>
#include <sensor_msgs/NavSatFix.h>
#include <geometry_msgs/PointStamped.h>

int main(int argc, char *argv[])
{
  ros::init(argc, argv, "test");
  ros::NodeHandle nh;

  sensor_msgs::NavSatFixConstPtr navsatfix_msg = ros::topic::waitForMessage("/POSITIONS");

  geometry_msgs::PointStamped point;
  point.point.x = navsatfix_msg->latitude;
  point.point.y = navsatfix_msg->longitude;
  point.point.z = navsatfix_msg->altitude;

  // do something with 'point'
  ...
}

Originally posted by gvdhoorn with karma: 86574 on 2017-09-06
This answer was ACCEPTED on the original site
Post score: 5

Original comments
Comment by hudaming on 2017-09-06:
Sorry, I can not get the solution. Can you give me an example?  My hope is to loop the imageCallback only once. Thanks!
Comment by gvdhoorn on 2017-09-06:
See my edit. This is somewhat pseudo-code though, I haven't (even) compile-tested it.
Comment by max11gen on 2019-01-24:
@gvdhoorn Your code didn't work for me, because the return value of waitForMessage is a boost::shared_ptr. So in this case I'd need to change that to boost::shared_ptr<sensor_msgs::NavSatFix> msg = ros::topic::waitForMessage<sensor_msgs::NavSatFix>("/POSITIONS");. You might want to fix this.
Comment by gvdhoorn on 2019-01-24:
Thanks, you were correct.
I've opted to use NavSatFixConstPtr though. It's more "ROS-onic".

