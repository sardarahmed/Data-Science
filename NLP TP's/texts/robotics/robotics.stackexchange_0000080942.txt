Q:

Publishing diagnostics from C++?

Are there any examples of how to publish diagnostics messages from C++? I can only find examples using Python.

Originally posted by Cerin on ROS Answers with karma: 940 on 2017-05-21
Post score: 0

A:

Its like publishing anything else.
Setup a Publisher, fill in the Message and publish it.
Here is a completely senseless example but gives you perhaps an idea:
#include "ros/ros.h"
#include <diagnostic_msgs/DiagnosticArray.h>
#include <diagnostic_msgs/DiagnosticStatus.h>
#include <diagnostic_msgs/KeyValue.h>

int main(int argc, char **argv)
{
  ros::init(argc, argv, "diagnostics");
  ros::NodeHandle nh;

  ros::Publisher diagnostic_pub = nh.advertise<diagnostic_msgs::DiagnosticArray>("/diagnostics", 1);

  ros::Rate loop_rate(10);
  while (ros::ok())
  {
    diagnostic_msgs::DiagnosticArray dia_array;
    diagnostic_msgs::DiagnosticStatus robot_status;
    robot_status.name = "Robot";
    robot_status.level = diagnostic_msgs::DiagnosticStatus::OK;
    robot_status.message = "Everything seem to be ok.";
    diagnostic_msgs::KeyValue emergency;
    emergency.key = "Emgergencystop hit";
    emergency.value = "false";
    diagnostic_msgs::KeyValue exited_normally;
    emergency.key = "Exited normally";
    emergency.value = "true";

    robot_status.values.push_back(emergency);
    robot_status.values.push_back(exited_normally);

    diagnostic_msgs::DiagnosticStatus  eth_status;
    eth_status.name = "EtherCAT Master";
    eth_status.level = diagnostic_msgs::DiagnosticStatus::OK;
    eth_status.message = "Running";

    dia_array.status.push_back(robot_status);
    dia_array.status.push_back(eth_status);

    diagnostic_pub.publish(dia_array);

    ros::spinOnce();

    loop_rate.sleep();
  }

  return 0;
}

Originally posted by chwimmer with karma: 436 on 2017-05-22
This answer was ACCEPTED on the original site
Post score: 5

Original comments
Comment by Cerin on 2017-05-22:
I'm compiling to an Arduino using rosserial_arduino, so push_back() isn't available. How do I dynamically allocate lists of type diagnostic_msgs::DiagnosticArray::_status_type*?
Comment by TheMilkman on 2018-08-14:
Did you ever end up working this out? @Cerin

