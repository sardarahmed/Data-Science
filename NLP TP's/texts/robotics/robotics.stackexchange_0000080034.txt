Q:

building opencv dependent ros packages from source?

I am trying to get ros-kinetic-desktop onto Ubuntu 16.04 - ARM. However, I would like to build opencv library 3.1.0 with cuda support and use it for ROS applications instead of the custom ros package opencv3. Looking at the reverse dependencies on ros-kinetic-opencv3, I am assuming that I need to build the packages rqt-image-view and cv-bridge from source and link them with the new opencv that I am building. However, I am clueless of how to do this. Could someone please confirm if the above mentioned two packages are the only ones required to be built and I would appreciate if you could also guide me through the procedure of how it is to be done. Thank you.

Originally posted by sam26 on ROS Answers with karma: 231 on 2017-04-05
Post score: 0

A:

Hey,
why you want to use the Version 3.1.0 at the moment opencv3 package of ROS use 3.2.0.
Therefore when you compile 3.2.0 with cuda support a build of rqt-image-view and cv-bridge
should not be necessary or I'm wrong with this idea? Take a look on the opencv3 package side.

Originally posted by Mondi with karma: 51 on 2017-04-06
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by sam26 on 2017-04-06:
Oh. You mean that instead of building two packages that depend on opencv, I could just fetch the source code for opencv3 and add Cuda support while building it. That makes sense but I'm not sure if it works. I'll probably give it a try. But if anyone who is sure can confirm it, that'd be assuring

