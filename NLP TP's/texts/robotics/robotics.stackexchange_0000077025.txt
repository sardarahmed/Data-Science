Q:

Writing Robot Dynamics Based Control in ROS

Please excuse me if my question is too basic.
I have gone through ROS control package and moveit etc. But, I want to test my own controller. My question is simple. How can I do this? For example, I want to write my controller like
M(q)q_ddot + C(q,q_dot)q_dot +G(q) = tau

and so I design my control law "tau" as
tau = M^-1(a_q) + C(q,q_dot)q_dot + G(q) 

Can anyone guide me for the steps I should take? I have modeled my robot in ROS using URDF etc. Now, I want to evaluate my own control law.
I have been following book Learning ROS for robotics programming and Mastering ROS for robotics programming but I could not understand this. Your words will be highly appreciable. Thanks.

Originally posted by Abdul Mannan on ROS Answers with karma: 167 on 2016-10-30
Post score: 0

Original comments
Comment by JoshMarino on 2016-10-30:
With ROS control you should have a controller for each joint, so you would apply the results of tau to each joint. Do you already have the control law written?
Comment by Abdul Mannan on 2016-10-30:
Thanks. I have simulated this in Matlab but I don't know how to do it in ROS. It will be great if you could guide me in steps the procedure to do that. It will be highly appreciated.
Comment by Abdul Mannan on 2016-10-31:
Thank you so much for your comment. I am going to follow your link thoroughly. Please, put your link in the answer so that I may accept it. It was a great tutorial and it was exactly I was looking for.

A:

You need to create a joint effort controller for each actuated joint. Then you send a force/torque command to the controllers based on your control law computation. Here is a tutorial I wrote a little while back for it.

Originally posted by JoshMarino with karma: 592 on 2016-10-30
This answer was ACCEPTED on the original site
Post score: 4

