Q:

[SOLVED] How do we transmit trajectories to our ABB IRB 140 using the ABB Package

We have the ABB driver communicating with ROS, but we are having difficulties issuing commands to the robot.
So far we haven't been able to find any documentation on how to send trajectories to the robot, so we have been going through all of the code to try and understand it better.
It seems like the ABB driver is a complete solution, however; we haven't been able to find which node we are able to send trajectories from.
We would like to use a planned path from Moveit (Rviz) to create our trajectory and then send that trajectory to the robot.

Originally posted by DHCustomPak on ROS Answers with karma: 70 on 2014-12-12
Post score: 1

Original comments
Comment by gvdhoorn on 2014-12-12:
It would help if you could tells us what 'having difficulties' means exactly. What are you trying to do, and what isn't working? What do you think should happen?
Comment by DHCustomPak on 2014-12-15:
Sorry for the vague question on Friday, it was a long day of learning and research. I added more information to the question up above.

A:

Provided that you are using the ABB driver from the ROS-Industrial community, you can find the topics it publishes and subscribes to on the abb_driver page.
Most users will want to interact with the joint_trajectory_action node. It accepts msgs of the type control_msgs/FollowJointTrajectoryActionGoal on the joint_trajectory_action/goal topic (similar to other action servers controlling arm motion).
The joint_trajectory_action node then translates these msgs into suitable trajectory_msgs/JointTrajectory msgs for the  /joint_path_command topic, to which the specific driver nodes subscribe. In this case the motion_download_interface from the abb_driver package.

We would like to use a planned path from Moveit (Rviz) to create our trajectory and then send that trajectory to the robot.

The ROS-Industrial drivers all implement the basic (standardised) ROS interface for arm control that lets MoveIt (or one of it's controllers) interact with them. Controlling a ROS-Industrial driver (or the arm connected to it) is no different from working with any other ROS driver implementing the same interface.
There isn't yet a support package or MoveIt configuration package for the IRB140, but they aren't too difficult to create. See wiki.ros.org/abb for some existing packages, the Create a URDF for an Industrial Robot tutorial for some pointers on how to create a proper URDF, and the Create a MoveIt Package for an Industrial Robot tutorial for ROS-Industrial compatible MoveIt configuration packages.
You might also be interested in the ROS-Industrial training exercises. They take you through the process of setting up and interacting with some (simulated) industrial robots, and also planning and execution motions with them.

Originally posted by gvdhoorn with karma: 86574 on 2014-12-15
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by DHCustomPak on 2014-12-15:
Thanks for the fast reply! We did have success just about 15 minutes ago transmitting a trajectory, and having the robot execute that trajectory.
Comment by gvdhoorn on 2014-12-15:
Issues solved then?
Comment by DHCustomPak on 2014-12-16:
I think so, we still have a ways to go on this project but this was a great first step. We were able to use the cartesian path planner to plan a path, and we were able to develop a simple publisher to publish the trajectory to the joint path command topic.
Comment by jaam002 on 2015-10-05:
Hi @DHCustomPak , I'm currently working with an IRB140 and i have succesfully implemented the path planning with RVIZ and MOVEIT. However, I'm having problems with the joint_3;I mean, the IRB execute the path, but the joint_3 some times set in a wrong direction. Did you have a similar problem?

