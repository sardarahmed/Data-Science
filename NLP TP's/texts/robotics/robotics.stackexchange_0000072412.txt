Q:

Tuning AMCL's diff-corrected and omni-corrected odom models

I just read the discussion on amcl's incorrect odometry models. See:

http://answers.ros.org/question/54467
https://github.com/ros-planning/navigation/issues/20

I was wondering if anyone has figured out how to properly tune the parameters odom_alpha1 through odom_alpha5 (relative to the "incorrect" models). The consensus seems to be that the old defaults (0.2) don't work properly with the corrected models. I tried a few things, such as lowering them by an order of magnitude, but didn't get decent results.
PS. To be more specific, here's my experience with a made-up omni-drive robot in Stage (drive "omni") and the omni-corrected odom model. If I tell the DWAPlanner to treat the robot as nonholonomic (holonomic_robot: false), then AMCL does OK. If I let it command lateral  velocities (holonomic_robot: true and same y velocity params as x params), all hell breaks loose. Interestingly, it's mainly the position that's off, not the orientation.

Originally posted by spmaniato on ROS Answers with karma: 1788 on 2016-02-29
Post score: 4

A:

I found some numbers in this test config: amcl/test/small_loop_crazy_driving_prg_corrected.xml
They seem to be in the right ballpark for my omnidirectional platform.
<param name="odom_alpha1" value="0.005"/>
<param name="odom_alpha2" value="0.005"/>
<param name="odom_alpha3" value="0.010"/>
<param name="odom_alpha4" value="0.005"/>
<param name="odom_alpha5" value="0.003"/>

Originally posted by spmaniato with karma: 1788 on 2016-04-10
This answer was ACCEPTED on the original site
Post score: 7

