Q:

Moveit RobotTrajectory time_from_start not correct

Hello,
I want to find out for how long my robot will be moving on a cartesian path. For that I plan the path between two waypoints with:
(plan, fraction) = self.move_group.compute_cartesian_path(pose_waypoints, self.eef_step, self.jump_threshold)

and then look into plan by doing:
duration_in_sec = plan.joint_trajectory.points[-1].time_from_start.nsecs / 1000000

The problem is that the duration I get is wrong. I do this multiple times for multiple waypoints and add the durations together. Something of about 30 seconds comes out, but the robot needs more than 100 seconds in this example. What am I doing wrong?
Thanks for your help, ask me anything if something is unclear.

Originally posted by joff on ROS Answers with karma: 40 on 2022-06-27
Post score: 0

A:

You are only accessing the nanoseconds (minor unit) property of duration, and then are actually dividing by the incorrect unit. There are 1e9 nanoseconds in a second. You are dividing by 1e6, so the "30 seconds" that you're getting is actually 30 milliseconds, or .03 seconds.
To get the total trajectory time , you can add the secs property to nsecs/1e9. Or, IIRC there is a built in method to_sec() for duration objects that you can use.

Originally posted by saltus with karma: 131 on 2022-06-27
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by joff on 2022-06-27:
Hey saltus, thanks a lot for the answer! I also stumbled around the wrong unit, somehow I must have copied an old piece of code. You are totally right, and also the to_sec() method works very nicely. Thanks!

