Q:

Rosjava error: package org.ros.concurrent does not exist

Hi,
When I follow the Creating Rosjava Packages (Catkin Style) tutorial, the system gives the following error:
error: package org.ros.concurrent does not exist
More specifically, the error occurs in the Library Project (Jar) step:
> cd src/rosjava_catkin_package_a
> catkin_create_rosjava_library_project rosjava_gradle_subproject_a
> cd ../..
> catkin_make 

The console output is:
oliver@oliver-VirtualBox:~/myjava/src/rosjava_catkin_package_a$ catkin_create_rosjava_library_project rosjava_gradle_subproject_a

Creating rosjava project 
  Name      : rosjava_gradle_subproject_a
  File      : build.gradle
  File      : settings.gradle
  File      : Dude.class
  File      : CMakeLists.txt (gradle task update)
oliver@oliver-VirtualBox:~/myjava/src/rosjava_catkin_package_a$ cd ..
oliver@oliver-VirtualBox:~/myjava/src$ cd ..
oliver@oliver-VirtualBox:~/myjava$ catkin_make
Base path: /home/oliver/myjava
Source space: /home/oliver/myjava/src
Build space: /home/oliver/myjava/build
Devel space: /home/oliver/myjava/devel
Install space: /home/oliver/myjava/install
####
#### Running command: "make cmake_check_build_system" in "/home/oliver/myjava/build"
####
-- Using CATKIN_DEVEL_PREFIX: /home/oliver/myjava/devel
-- Using CMAKE_PREFIX_PATH: /home/oliver/rosjava/devel;/opt/ros/indigo
-- This workspace overlays: /home/oliver/rosjava/devel;/opt/ros/indigo
-- Using PYTHON_EXECUTABLE: /usr/bin/python
-- Using Debian Python package layout
-- Using empy: /usr/bin/empy
-- Using CATKIN_ENABLE_TESTING: ON
-- Call enable_testing()
-- Using CATKIN_TEST_RESULTS_DIR: /home/oliver/myjava/build/test_results
-- Found gtest sources under '/usr/src/gtest': gtests will be built
-- Using Python nosetests: /usr/bin/nosetests-2.7
-- catkin 0.6.14
-- BUILD_SHARED_LIBS is on
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- ~~  traversing 2 packages in topological order:
-- ~~  - rosjava_catkin_package_a
-- ~~  - rosjava_catkin_package_b
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- +++ processing catkin package: 'rosjava_catkin_package_a'
-- ==> add_subdirectory(rosjava_catkin_package_a)
-- +++ processing catkin package: 'rosjava_catkin_package_b'
-- ==> add_subdirectory(rosjava_catkin_package_b)
-- Configuring done
-- Generating done
-- Build files have been written to: /home/oliver/myjava/build
####
#### Running command: "make -j2 -l2" in "/home/oliver/myjava/build"
####
[100%] Gradling tasks for rosjava_catkin_package_a
/home/oliver/myjava/src/rosjava_catkin_package_a/rosjava_gradle_subproject_a/src/main/java/com/github/rosjava_catkin_package_a/rosjava_gradle_subproject_a/Talker.java:19: error: package org.ros.concurrent does not exist
import org.ros.concurrent.CancellableLoop;
                         ^
34 similar errors omitted

FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':rosjava_gradle_subproject_a:compileJava'.
> Compilation failed; see the compiler error output for details.

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.
make[2]: *** [rosjava_catkin_package_a/CMakeFiles/gradle-rosjava_catkin_package_a] Error 1
make[1]: *** [rosjava_catkin_package_a/CMakeFiles/gradle-rosjava_catkin_package_a.dir/all] Error 2
make: *** [all] Error 2
Invoking "make -j2 -l2" failed

The previous step, Binary Projects (App), was successful.
Oliver

Originally posted by Oliver on ROS Answers with karma: 1 on 2015-08-05
Post score: 0

A:

In you package.xml file, add
 <build_depend>message_generation</build_depend>
 <build_depend>std_msgs</build_depend>
 <run_depend>message_runtime</run_depend>
<run_depend>std_msgs</run_depend>
and in your subproject's build.gradle, add or uncomment
compile 'org.ros.rosjava_core:rosjava:[0.2,)'

Originally posted by cyber with karma: 26 on 2017-06-08
This answer was ACCEPTED on the original site
Post score: 1

