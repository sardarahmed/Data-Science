Q:

Youbot Inverse Kinematics using Planning Description Configuration Wizard

Hi,
did anyone try the arm_navigation Tutorials to get an inverse kinematic for the KUKA youbot including the collision avoidance?
The provided inverse kinematics control in rviz doesn't work as i expected.
Here is what i did:
I created the urdf file using xacro:
rosrun xacro xacro.py `rospack find youbot_description`/robots/youbot_arm.urdf.xacro
-o `rospack find youbot_navigation`/urdf/my_youbot.urdf

youbot_navigation is a package i created for storing files containing the youbot. I also altered the name from youbot to my_youbot inside the created urdf file, because the wizard uses the name later to create a package called robotname_arm_navigation and this already exists in my ROS environment.
Next i checked the file:
rosrun urdf check_urdf `rospack find youbout_navigation`/urdf/my_youbot.urdf

and got the following output:
robot name is: my_youbot
---------- Successfully Parsed XML ---------------
root Link: base_link has 1 child(ren)
    child(1):  arm_link_0
        child(1):  arm_link_1
            child(1):  arm_link_2
                child(1):  arm_link_3
                    child(1):  arm_link_4
                        child(1):  arm_link_5
                            child(1):  gripper_palm_link
                                child(1):  gripper_finger_link_l
                                child(2):  gripper_finger_link_r

Then i started the Wizard:
roslaunch planning_environment planning_description_configuration_wizard.launch urdf_package:=youbot_navigation urdf_path:=urdf/my_youbot.urdf

I tested various settings, using the easy or the advanced mode, dense or sparse sampling modes. For the kinematic chain i added the group:
Base Link:    arm_link_0
Tip Link:     arm_link_5

Afterwards i choosed a directory and the wizard created the package. At least i launch the vizualiser via:
roslaunch my_youbot_arm_navigation planning_components_visualizer.launch

When i now click interact and try to use the ik_control only very few movements can be solved. I can only use translation of or rotation around the x-axis of arm_link_5 in a small range. All other positions i navigate the tip link to can not be solved, though i think they should be possible.
Using the manual joint control many many more positions can be solved. Is it because i'm not precise enough moving the tip link in a possible position? Did i do anything else wrong?

Originally posted by boFFeL on ROS Answers with karma: 31 on 2012-11-16
Post score: 1

A:

It's been half and a year from your question but there is one thing i can tell you, I'm doing just the same as you and i noticed that problem. But it makes sense in some way because when you try to move it, the ik_control tries to keep the orientation (Roll, Pitch and Yaw) of the end effector, If you try the pr2 example you may notice that, but it can solve it because of its joints. I've just started with this and don't know if this matters with having an IK controller for my programs and you may have solved this, but this may help you.

Originally posted by Varelix with karma: 16 on 2014-05-21
This answer was ACCEPTED on the original site
Post score: 0

