Q:

compile error with tf transformation

Hi everybody,
I have written some codes as below:
#include <ros/ros.h>
#include <tf/transform_broadcaster.h>
#include <nav_msgs/Odometry.h>
int main(int argc,char ** argv){
    ros::init(argc,argv,"odometry_publisher");
    ros::NodeHandle n;
    ros::Publisher pubOdom= n.advertise<nav_msgs::Odometry>("odom",50);
    tf::TransformBroadcaster odomBroadcaster;
    //some other codes
    ros::Rate r(10);
    while(n.ok()){
        //some other codes
        r.sleep();
    }
    //
    return 0;
}

and put
rosbuild_add_executable(OdomOFPS1_X64 src/OdomOFPS1.cpp)

in the end of the "CMakeLists.txt" file.
There is an error when compile:
OdomOFPS1.cpp.o: In function `main':
src/OdomOFPS1.cpp:22: undefined reference to `tf::TransformBroadcaster::TransformBroadcaster()'
src/OdomOFPS1.cpp:127: undefined reference to `tf::TransformBroadcaster::sendTransform(geometry_msgs::TransformStamped_<std::allocator<void> > const&)'
collect2: error: ld returned 1 exit status

It seems like a link error,the compiler could not find the "tf::TransformBroadcaster" class.Should I put the source code of the tf package in my project and compile them together or solve this problem by some other way?

Originally posted by redskydeng on ROS Answers with karma: 118 on 2015-07-19
Post score: 0

A:

You need to link the executable against the tf libraries which are installed on your system. There's documentation of how to do that for rosbuild here

Originally posted by tfoote with karma: 58457 on 2015-07-19
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by redskydeng on 2015-07-20:
Thanks,tfoote.
I have solved this problem by adding "target_link_libraries(OdomOFPS1_R32 tf)" in the "CMakeLists.txt" file. It seems like that the compiler linked the libtf.so shared object file in the lib directory.
Comment by Boris on 2015-07-20:
Isn't it enough to add dependency to tf package in manifest.xml? As I understand rosbuild_init() in CMakeLists.txt will take care of these dependencies, when rosbuild_add_executable() is used.
Comment by redskydeng on 2015-07-21:
Hi,Boris,
Should I add   into the manifest.xml?
I will try,thank you very much!
Comment by Boris on 2015-07-24:
I made a package from scratch and it did work with just a dependency, so it should be enough. Anyway, I guess you have tried it already :)
Comment by redskydeng on 2015-07-25:
Boris,
YES,It works.Thanks a lot!:D

