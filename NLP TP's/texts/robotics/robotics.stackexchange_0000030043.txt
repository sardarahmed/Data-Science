Q:

Planning and joint state map cache

Hi all,
I've been playing with arm motion planning (OMPL) on a non-PR2 robot for a while now. I am currently working with a Schunk arm and a ShadowRobot hand at the tip. Both devices are controlled on different computers, and a custom made node fuses the joint information from both so that a single robot_description (and robot state) is obtainable. The problem I am having is that OMPL generates a collision-free plan, possibly even the Trajectory Filter, but during the execution move_arm stops crying for collisions that don't exist. The symptoms are:

Right after a goal is requested, all of the nodes that use the motion_planning_common stack complain that "Empty joint state map cache" and "Got joint state update but did not update some joints for more than 1 second.  Turn on DEBUG for more info"
If I send a MoveArmAction request where disable_collision_monitoring is true, somebody (OMPL? TrajectoryFilter?) decides that there are not obstacles and plans a perfect straight line trajectory.

In the past I have successfully generated plans with a hand-less 7dof arm, now I don't understand what I am doing wrong! In particular, the warning messages I receive are really puzzling...

Originally posted by Lorenzo Riano on ROS Answers with karma: 1342 on 2011-03-04
Post score: 0

A:

Lorenzo,
the planning stacks currently require joint state information for all joints in the robot. With incomplete information, its not possible to compute the full state of the robot for planning. Its possible that you have joints states for your arm but maybe you are missing a few joints on the hand in the joint states message. That's why the first failure is happening.
disable_collision_monitoring does exactly what it says. It disables the monitoring when executing a trajectory. move_arm is the only node that uses it currently. The fact that you are getting straight line trajectories implies that the planner thinks there is empty space everywhere. How are you adding obstacles to the environment? Do you have sensors that do this? Can you try and visualize your collision_map and the collision_environment using these tutorials - http://www.ros.org/wiki/motion_planning_environment/Tutorials

Originally posted by Sachin Chitta with karma: 1304 on 2011-03-05
This answer was ACCEPTED on the original site
Post score: 0

