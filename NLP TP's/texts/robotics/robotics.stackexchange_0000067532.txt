Q:

Problems using descartes package

Hi!
I would like to use the descartes-package and I'm facing some issues.
I'm using an UR5 with the moveit- and universal_robot package and want use the descarts-package parallel to that. To achieve that I just copied the code of the descartes-tutorial in the existing c++-API and adjusted it for the UR5.
Until // 3. Create a planner and initialize it with our robot model everything seems to work fine, the robot model initialization seems to be okay but at // 4. Feed the trajectory to the planner I get errors.
[ INFO] [1431433577.983985044]: PreviousID: ID0 was not found
[ERROR] [1431433578.183296398]: Found 0 joint solutions out of 10 iterations
[ERROR] [1431433578.383429099]: Found 0 joint solutions out of 10 iterations
[ERROR] [1431433578.578341457]: Found 0 joint solutions out of 10 iterations
[ERROR] [1431433578.771480441]: Found 0 joint solutions out of 10 iterations
[ERROR] [1431433578.971189692]: Found 0 joint solutions out of 10 iterations
[ WARN] [1431433578.971260392]: Failed for find ANY joint poses, returning
[ INFO] [1431433578.971298149]: CartID: ID1 JointPoses count: 0
[ WARN] [1431433578.971329605]: no joint solution for this point... potential discontinuity in the graph
[ERROR] [1431433579.168980816]: Found 0 joint solutions out of 10 iterations

and so on until
[ERROR] [1431433587.831773855]: no joint solutions defined, thus no graph vertices
[ERROR] [1431433587.831796860]: unable to populate graph from input points
[ERROR] [1431433587.831822842]: Could not solve for a valid path

First I thought it's because it cannot reach the target pose, but I checked it for several poses which should be reachable and every time I get the same errors.
Does somebody know how I could solve this?
An additional question would be, whether the descartes-planner is considering the collision_scene of moveit?
Thanks and regards
EDIT:
This is one of the trajectories I trying to reach. I think those could definitely be reached.
// 1. Define sequence of points
  TrajectoryVec points;
  for (unsigned int i = 0; i < 10; ++i)
  {
    Eigen::Affine3d pose;
    pose = Eigen::Translation3d(0.370 - 0.05 * i, -0.450, 0.675);
    descartes_core::TrajectoryPtPtr pt = makeTolerancedCartesianPoint(pose);
    points.push_back(pt);
  }

Originally posted by bluefish on ROS Answers with karma: 236 on 2015-05-12
Post score: 1

A:

What kinematics plugin are you using? You can find this in the kinematics.yaml file inside the ur5 moveit config package used by your application.

Originally posted by jrgnicho with karma: 486 on 2015-05-12
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by bluefish on 2015-05-12:
I use the universal_robot-package and there in the file you described it says kdl_kinematics_plugin/KDLKinematicsPlugin
Comment by jrgnicho on 2015-05-12:
You could be running into some joint limits; these are set in the robots urdf file.  Also, make sure that the tool orientation at those points in the example is reachable by your robot.
Comment by bluefish on 2015-05-21:
I think, the position I insert is inside the joint limits. In the tutorial, there is no orientation specified, so I did not specify anything either. However, the target position I insert should be reachable with q = 1.0 0.0 0.0 0.0, if that's the default value.
Comment by bluefish on 2015-05-21:
As written in this question already, I didn't try to hard to solve this as I found another solution for my problem. So don't strive to much helping me. Thanks @jrgnicho anyway for your support!
Comment by jrgnicho on 2015-05-21:
It's good that you found a solution.  The UR5 robot could have it's tool oriented differently than the motoman arm used in the example.  If this is the case then you'd have to apply an orientation offset to each pose so that it accommodates the orientation of the UR5 tip link.
Comment by bluefish on 2015-06-22:
Hi @jrgnicho. As I'd like to add another fuctionality to my system, I think I can only achieve with descartes, I'm again trying to get it to run. But still I have the same problem as mentioned above.
I tried a lot of different pose-variations but still the same error. Could it be another problem?
Comment by gvdhoorn on 2015-06-23:
@bluefish: please see if descartes/pull/126 affects your use case.
Comment by jrgnicho on 2015-06-25:
@bluefish, how are you validating the tool orientation?

