Q:

What are the semantics of 'reconfiguration level' for dynamic reconfigure?

In the dynamic_reconfigure tutorial, it is claimed that dependence on driver_base is specific to the tutorial, yet an enum type from driver_base is used to set the 'reconfiguration level'.
Is this just a field to be interpreted however we like, and just used with the driver_base/SensorLevels message in this case? Or is the driver_base/SensorLevels message the standard for the 'reconfiguration level' field semantics?

Originally posted by Asomerville on ROS Answers with karma: 2743 on 2011-05-03
Post score: 10

A:

Whatever value you send there gets passed through to the dynamic_reconfigure callback as a second argument (note that the callback takes two arguments, not the usual one). Ergo, the reconfiguration level semantics are up to you.
Sticking with the driver_base model probably isn't a bad idea, though.

Originally posted by Mac with karma: 4119 on 2011-06-17
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Asomerville on 2011-06-19:
Thanks : )
Comment by Mac on 2011-06-18:
I've created us a ticket; see #5015.
Comment by Mac on 2011-06-18:
Correct by the standard of "what I wrote correctly describes the behavior". I agree that the wiki documentation should be improved to specify the intended semantics.
Comment by Asomerville on 2011-06-17:
Correct by what standard? Yes, it will compile/function, but the question is more about agreed convention to prevent confusion in the future/prevent code rot.
Comment by Mac on 2011-06-17:
Deductive, but correct.
Comment by Asomerville on 2011-06-17:
Is your answer authoritative, or deduced?  It seems like a really bad idea for people to be arbitrarily determining their own semantics for such a thing?

