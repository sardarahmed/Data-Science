Q:

How to write a custom ros control plugin using tensor flow in c++?

Hello,
I am quite new to ROS and Tensor flow. From a basic google search, I found out that tensor flow c++ API is only supported by bazel build but I intend to use tensor flow in my custom plugin in ROS and the problem is Bazel build can not read cmake files that are built with catkin workspace, Is there any method to use tensor flow with c++ API in ROS ? like can I somehow use the tensor flow standalone C API by including it to my code in C++ ? or If you can think of any particular direction where I can use tensor flow C++ API in ROS, please point me towards it. Thank you.

Originally posted by microbot on ROS Answers with karma: 96 on 2019-01-22
Post score: 0

A:

The simplest way by far to do this, is compile your tensorflow controller into a shared object library using bazel. Then you can add a dependency to that library to your catkin workspace. That way you can use bazel for tensorflow and catkin for ROS.
The downside is that you'll have to develop your controller with no dependencies on ROS, then take the controller library and link it into ROS later.
Hope this helps.

Originally posted by PeteBlackerThe3rd with karma: 9529 on 2019-01-22
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by microbot on 2019-01-23:
Thank you, this pointed me in the right direction, although I am wondering wouldn't it be a bit complicated to develop the controller with no dependencies on ROS i.e. not calling any ros functions in the source file and then linking it to ROS later ?
Comment by gvdhoorn on 2019-01-23:
the "controller" can be ROS-dependent (ie: the ros_control controller implementation). But the tensorflow side of it should not (need to) be. Use an intermediate representations of your state and control variables fi. Don't use any ROS msgs/types in the tensorflow-based library.
Essentially ..
Comment by gvdhoorn on 2019-01-23:
.. treat the tensorflow library as a system dependency, which your ros_control Controller implementation uses.
This could mean that the ros_control Controller is a very thin wrapper, and only "forwards" information to tensorflow. But that would be fine.
Comment by microbot on 2019-01-23:
Thank you very much, I guess I have got a basic idea now, this really is helpful.

