Q:

How to build documentation for ROS2 packages?

Wondering how, e.g. rclpy, got it's documentation built (you can find it's crystal docs here so I can build documentation for submitted packages.
There is nothing on the build farm indicative of a doc job, nor is there anything special of rclpy's package.xml apart from a dependency on sphinx.
Additionally, does the ros index always expect to be pointed at https://docs.ros2.org for apidocs?

Originally posted by Daniel Stonier on ROS Answers with karma: 3170 on 2019-03-24
Post score: 3

A:

currently we have a manual process to build and generate the content at docs.ros2.org:
https://github.com/ros2/docs.ros2.org/blob/doc_gen/README.md
We want to have an automated way to build documentation for any ROS 2 package (Python or CMake, doxygen or sphinx), but we don't have that yet. Setting up the ROS index was done first, and no more time has been allocated to it since then.

Originally posted by William with karma: 17335 on 2019-03-25
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Geoff on 2019-03-25:
We're going to be looking at documentation generation for Autoware over the next half a year or so. We haven't decided if we will use the same style as the ROS 2 documentation or the docs.ros2.org stuff or ReadTheDocs yet (we're not even sure which are valid options for us yet), but I think that in doing it for ourselves, we may be able to contribute to wider ROS documentation systems.
Comment by Daniel Stonier on 2019-03-25:
Wondering if you could unpack 'contribute to wider ROS documentation systems'. Are you talking about contributing to helping automate the ROS doc generation or something different entirely?
Comment by Daniel Stonier on 2019-03-25:
Thanks for the update William.
I wouldn't be averse to having something like a
<url type="docs">https://py-trees.readthedocs.io/en/release-1.1.x/</url>

element in package.xml that redirects the API Docs link for a package in ROS index to a different place.  That would certainly fill a void in the short term till the OSRC build farm automates it and might even be a flexible option for some use cases in the future.
Comment by Geoff on 2019-03-26:\

Are you talking about contributing to helping automate the ROS doc generation or something different entirely?

If that turns out to be what we need, then yes. We need auto-generated documentation capabilities, preferably in an extendable way.
Comment by Dirk Thomas on 2019-03-26:
The significant downside of hosting package documentation somewhere non central is that you are not able to search through all package documentation. For ROS 1 that is possible by hosting all generated docs on http://docs.ros.org/ The goal is to to the same for ROS 2 at some point.
Comment by gvdhoorn on 2019-03-26:
@Dirk Thomas: has a central "index" of some sort been considered? That would avoid the need to host the actual documentation centrally, but would still facilitate visibility of it.
Or was that the idea with index.ros.org?
Comment by Dirk Thomas on 2019-03-26:
I am not sure what you mean with a central "index of some sort. Index.ros.org is central but only shows metadata and README content - not any generated content (like API docs).
Comment by gvdhoorn on 2019-03-26:
One of the problems identified with the ROS 1 approach was the fact that the documentation on the wiki tends to go stale quickly. One of the suggested approaches to help avoid that was to host documentation close(r) to the code: perhaps even in the same repository. Problem with that is/was that the wiki doesn't support this sort of setup.
The advantage of the wiki is that it provides a single location to search for documentation. This would be lost if docs are stored in a distributed way.
A central index/table-of-contents with which projects/packages can be registered (in some form/way) could mitigitate this partly: it could provide a unified "view" over all registered documentation, while still allowing for that content to be hosted elsewhere.
One system that does something similar would be Sphinx using the interlinking feature.
Comment by christophebedard on 2020-05-07:
Has there been any updates/progress on this? I see that documentation is generated e.g. for rclcpp using a Doxyfile hosted in the repo itself, but I can't find any instructions on how to do the same thing for my own repo.
Comment by tfoote on 2020-05-07:
We are manually generating that content. We don't yet have an automated system for documenting all packages automatically. For now we recommend using sphinx and doxygen manually as appropriate in your package. And we are planning to be able to bring that together in the future automatically. There may be some config adjustment necessary but the actual documentation will remain valid when we setup automation.
Comment by christophebedard on 2020-05-07:
Got it, thank you!
Comment by christophebedard on 2020-05-18:
For what it's worth, I ended up writing a basic/small-ish Python tool to generate doxygen & sphinx documentation automatically for packages in a given repository (configured through a .yml file). Here it is, in case it can help someone: https://github.com/christophebedard/gen_docs and I'm using it for: https://gitlab.com/micro-ROS/ros_tracing/ros2_tracing-api.

