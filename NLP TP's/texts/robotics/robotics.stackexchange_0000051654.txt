Q:

why need a dummy trajectory in joint_trajectory_action_controller.cpp

Hi,
in joint_trajectory_action_controller.cpp (robot_mechanism_controllers package)
// Creates a dummy trajectory
boost::shared_ptr<SpecifiedTrajectory> traj_ptr(new SpecifiedTrajectory(1));
SpecifiedTrajectory &traj = *traj_ptr;
traj[0].start_time = robot_->getTime().toSec();
traj[0].duration = 0.0;
traj[0].splines.resize(joints_.size());
for (size_t j = 0; j < joints_.size(); ++j)
  traj[0].splines[j].coef[0] = 0.0;
current_trajectory_box_.set(traj_ptr);

Why need to create a dummy trajectory?
Thanks for any help in advance!

Originally posted by AdrianPeng on ROS Answers with karma: 441 on 2013-06-03
Post score: 0

A:

This is a hold position trajectory: A single-waypoint at the current time set to maintain the current joint positions.
When the JointTrajectoryActionController starts, it defaults to holding the current position while it awaits for the first command to arrive.
Note: The code snippet you reference is from the init() method. Something similar also happens in starting(), so it seems that the snippet in init() is unnecessary and IMO could be removed.
Since you are asking many questions about this controller, are you planning on reimplementing it for a custom non-PR2 robot, or are you simply studying its internals?. FYI, a robot-agnostic implementation of this controller should land in the ros_control project sometime in the next 3 months.

Originally posted by Adolfo Rodriguez T with karma: 3907 on 2013-06-03
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by AdrianPeng on 2013-06-04:
Right now, I am just studying its internals. I might write other package to interface with it later.

