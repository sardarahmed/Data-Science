Q:

Assigning Serial number and GUID to a microcontroller

This might be a out of league question and may seems to be very odd.I am using multiple Arduino UNO boards over network and want to assign a GUID and Serial number to each board so that when ever they send any data to a central server, server is able to find which Device it is if we have assign name for each device.

first way to do this is to assign GUID and serial number of device before each message that is send to central server manually while programming and then burn that hex to arduino.

Now is there any way out that we can burn a program that always give a output as a string (GUID+Serial number of device) like we program EEPROM for this and then burn our main code in Arduino which pick the GUID+Serial ID combo from EEPROM and write it before every message which arduino is pushing to central server.
Or my another way of asking is can we program EEPROM with a different program and our Arduino separately like 2 files running in parallel or is it not possible?
Is there any other way of doing this?

A:

The answer to this question depends entirely on the type of connection you are using to build your network.
Assuming that when you say you have arduinos "on a network" you are using ethernet shields or similar to put them on an ethernet network, one way to accomplish your goal would be to take advantage of the MAC address on the ethernet shield as this is a pre-existing globally-unique identifier. The MAC address is appended to every ethernet frame. Now, you only have access to that data at Level 2 (the "link layer") of ethernet and you are not going through a switch / hub which will modify the frames which you almost certainly are.
So instead, you could have your hub or switch assign IP addresses through DHCP based on the MAC address of the ethernet shield. This is sometimes referred to as "link layer filtering." Then when you get packets with data from the Arduino, you know which one it comes from by the source IP address on the packet.
You suggested you might be using cellular data, IP addresses are probably dynamic and the problem becomes more difficult. You would need to talk to your provider and see if you can get static IP addresses.
If you are using SMS, then simply identify by phone number.

A:

I would create a small sketch that allows you to communicate over serial port that will let you create a GUID on the desktop computer and write it to the EEPROM of your uno to a known location.
Then later on in your networked arduino code you can use that saved value.  I've done this before and it's pretty simple to implement.  You can even copy / paste guid values from the web like this Online GUID Generator.
See this for simple usage.  Arduino EEPROMWrite Command
Another option if you have networking already active is to setup a server on your network and have the machines request a GUID from a network server if they don't have one already present on the device, then write that to the EEPROM.
Either way it should be a small step you perform when first programming your devices.

