Q:

Suppressing the ROS_CREATE_SIMPLE_SERIALIZER_ARM warnings when building from source

When building ros_comm from source for an ARM architecture, I get multiple warnings about the ROS_CREATE_SIMPLE_SERIALIZER_ARM macro. Here's a snippet:
In file included from /usr/catkin_ws/src/ros_comm/rosbag_storage/include/rosbag/message_instance.h:39:0,
                 from /usr/catkin_ws/src/ros_comm/rosbag_storage/include/rosbag/view.h:41,
                 from /usr/catkin_ws/src/ros_comm/rosbag_storage/src/view.cpp:28:
/opt/ros/indigo/include/ros/serialization.h:207:56: warning: unused parameter ‘t’ [-Wunused-parameter]
     inline static uint32_t serializedLength(const Type t) \
                                                        ^
/opt/ros/indigo/include/ros/serialization.h:214:5: note: in expansion of macro ‘ROS_CREATE_SIMPLE_SERIALIZER_ARM’
     ROS_CREATE_SIMPLE_SERIALIZER_ARM(uint8_t);
     ^
/opt/ros/indigo/include/ros/serialization.h:207:56: warning: unused parameter ‘t’ [-Wunused-parameter]
     inline static uint32_t serializedLength(const Type t) \
                                                        ^
/opt/ros/indigo/include/ros/serialization.h:215:5: note: in expansion of macro ‘ROS_CREATE_SIMPLE_SERIALIZER_ARM’
     ROS_CREATE_SIMPLE_SERIALIZER_ARM(int8_t);
     ^

Is there a simple way to get rid of (or just suppress) these specific warnings? For example, I'm guessing I can pass a make flag that suppresses all warnings of this type: -Wunused-parameter. What would that look like?

Originally posted by spmaniato on ROS Answers with karma: 1788 on 2016-09-04
Post score: 0

A:

Well, generally you can disable gcc warnings and errors by passing a -Wno-.. variant of the involved warning option.
In this case that would be -Wno-unused-variable.
Btw, this is really not ROS specific at all, but a simple gcc configuration problem, and well documented:

You can request many specific warnings with options beginning with ‘-W’, for example -Wimplicit to request warnings on implicit declarations. Each of these specific warning options also has a negative form beginning ‘-Wno-’ to turn off warnings; for example, -Wno-implicit.

From GCC Command Options - Warning Options in the GCC manual.

Edit: suppressing these kinds of warnings and errors is typically not a good idea. If you must do it, try to narrow the scope of the suppression as much as possible by setting the flag on the CMake target using set_target_properties(${TARGET} PROPERTIES ...) instead of globally using add_definitions(..).

Originally posted by gvdhoorn with karma: 86574 on 2016-09-04
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by spmaniato on 2016-09-04:
Thanks a lot! And yes, the question was mostly non-ROS-specific. It's just that I was thinking there might be a way to suppress warnings for a specific package via a combination of catkin/cmake/make arguments and flags.

