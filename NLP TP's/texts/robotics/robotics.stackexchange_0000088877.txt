Q:

Does ROS_INFO break realtime?

Is the realtime lost if I use ROS_INFO inside a ros_control controller update method or inside a ros_control hardware interface write/read method?
edit:
this question may have different answers according with the real time environment you are using, for instance (Xenomai or RT-Preempt)

Originally posted by Pablo Iñigo Blasco on ROS Answers with karma: 2982 on 2018-09-05
Post score: 2

Original comments
Comment by gvdhoorn on 2018-09-05:
Btw: this is not specific to ros_control. Any deterministic context in which `ROS_* log macros are used would be affected similarly.
Comment by Pablo Iñigo Blasco on 2018-09-05:
Developing controllers or hardware nodes via ros_control is some kind of "standard approach" to interface hardware and develop your control algorithms.
I assumed here that in general for any controller is desirable to be real time.
Comment by gvdhoorn on 2018-09-05:
I meant to say with my comment that even without ros_control, but in a general situation where deterministic execution is desired, using ROS_INFO(..) or any of the other variants will probably have exactly the same effect.
ros_control is not special.
Comment by Pablo Iñigo Blasco on 2018-09-09:
We are in agreement, ros_control is not special.

A:

Is the realtime lost if I use ROS_INFO inside a ros_control controller update method or inside a ros_control hardware interface write/read method?

yes. It depends / probably.
In the end, ROS_INFO(..) gets expanded to ROSCONSOLE_PRINT_AT_LOCATION_WITH_FILTER(filter, ...) which calls ::ros::console::print(..) which in the end makes use of either printf(..), fprintf(..) or a function in that group and/or calls upon one of the backends (glog, log4cxx) to do the work.
Unless a custom implementation of the printf(..) family is used, calling it typically results in loss of determinism. Xenomai wraps printf(..) and could work-around this. Not sure about RT-PREEMPT.
But apart from that there are multiple places where objects are instantiated and functions in various libraries are called. Those are also a bit suspect.

Originally posted by gvdhoorn with karma: 86574 on 2018-09-05
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by Pablo Iñigo Blasco on 2018-09-05:
Thanks. I guess that the precise question would be. "Can be used ROS_INFO in a realtime controller?"
Xenomai: yes
RT-PREEMPT: ??
I can edit the question if you agree
Comment by gvdhoorn on 2018-09-05:
No, I don't think you can conclude: Xenomai, yes.
Comment by Pablo Iñigo Blasco on 2018-09-06:
okok. Specifically what i was looking for is if that ROS_INFO would break the realtime. That is the question. I am going to rename the title of the cuestion to "does ROS_INFO break realtime?"

