Q:

Convert python launch arg to normal python variable

Is there a way to pass an argument to a python launch file and convert it to a normal in-built python type to use within the python launch file?
E.g. ros2 launch my_launch_file.launch.py temp_arg:="some string" and then
# my_launch_file.launch.py
str_arg = LaunchConfiguration("temp_arg")
print(type(str_arg)) # <class 'launch.substitutions.launch_configuration.LaunchConfiguration'>
# Instead, I would like the value of str_arg to be of type <class 'str'>
# NOTE: the code below doesn't work due to the type of str_arg
if (str_arg == "config1"):
  # some logic here
else:
  # some other logic here

The reason being that I want to use the str_arg var to do some other logic in the launch file

Originally posted by jn42 on ROS Answers with karma: 43 on 2022-04-11
Post score: 0

A:

You can use e.g.
self.get_parameter("your_parameter").get_parameter_value().string_value

EDIT:
After the updated question - can you maybe use the PythonExpression substitution?

Originally posted by ljaniec with karma: 3064 on 2022-04-11
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by jn42 on 2022-04-11:
I see the confusion. I modified the question to make it more clear that I want to use the argument within the python launch file and NOT a python node (I understand how to get the value of a parameter from within a node in ROS2)
Comment by jn42 on 2022-04-11:
Should I rename the question title to something like "Convert LaunchConfiguration to inbuilt python type for python launch files"?
Comment by ljaniec on 2022-04-11:
Thanks, I updated the answer with a suggestion

