Q:

IMU linear acceleration to position

Hey guys,
I have IMU 3dm_GX2 and I want to get position from it. I know that there will be accumulated error and will not be accurate but I need to get the best out of it. I excluded the gravity effect from linear acceleration
     acceleration_x = (msg->linear_acceleration.x + 9.81 * sin(pitch)) * cos(pitch);
     acceleration_y = (msg->linear_acceleration.y - 9.81 * sin(roll))  * cos(roll); 

so whats is the best way for integrating linear acceleration twice because the ordinary integration is very bad.
     Velocity_x= Velocity_old_x+acceleration_x*dt;
     x_pos += Velocity_x*dt;

Thanks in advance

Originally posted by ozo on ROS Answers with karma: 5 on 2015-06-19
Post score: 0

Original comments
Comment by alextoind on 2015-06-19:
You should implement an Inertial Navigation Stabilized (or Strapdown) Platform algorithm to get a sort of reliability.
Comment by Astronaut on 2021-09-21:
have same issue. Any help to find implementation of that?

A:

Integrating acceleration twice to get position is terrible. I think you're discovering just how bad it actually is.
additionally, your current approach integrates the acceleration without taking into account any possible rotation of the sensor, which means that your results will probably be terrible if the sensor rotates at all.
If you have gyro or compass data from the 3dm_GX2, you may be able to feed all of your data into something like a kalman filter to get better results.

Originally posted by ahendrix with karma: 47576 on 2015-06-19
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by jafecasu on 2016-05-26:
Hi. I have almost the same problem. And checking your inputs, you are taking a velocity value, where is it coming from?
And how do you exclude the gravity effect ???

