Q:

Multiple rigid bodies crash optitrack node

I am running the optitrack mocap node found here.
http://wiki.ros.org/mocap_optitrack
Everything is fine when i have 1 rigid body data streaming from my windows PC. If i enable more than one then the program shuts down immediately, without giving any error. This is what i see in the terminal
... logging to /home/vivekr/.ros/log/2ed18b8c-55ec-11e5-bb88-001fbc0efc2f/roslaunch-but-5283.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.

started roslaunch server http://but:52380/

SUMMARY
========

PARAMETERS
 * /mocap_node/rigid_bodies/1/child_frame_id: drone1
 * /mocap_node/rigid_bodies/1/parent_frame_id: world
 * /mocap_node/rigid_bodies/1/pose2d: Drone_1/ground_pose
 * /mocap_node/rigid_bodies/1/pose: Drone_1/pose
 * /mocap_node/rigid_bodies/2/frame_id: drone2
 * /mocap_node/rigid_bodies/2/parent_frame_id: world
 * /mocap_node/rigid_bodies/2/pose2d: Drone_2/ground_pose
 * /mocap_node/rigid_bodies/2/pose: Drone_2/pose
 * /mocap_node/rigid_bodies/3/child_frame_id: drone3
 * /mocap_node/rigid_bodies/3/parent_frame_id: world
 * /mocap_node/rigid_bodies/3/pose2d: Drone_3/ground_pose
 * /mocap_node/rigid_bodies/3/pose: Drone_3/pose
 * /mocap_node/rigid_bodies/4/child_frame_id: drone4
 * /mocap_node/rigid_bodies/4/parent_frame_id: world
 * /mocap_node/rigid_bodies/4/pose2d: Drone_4/ground_pose
 * /mocap_node/rigid_bodies/4/pose: Drone_4/pose
 * /mocap_node/rigid_bodies/5/child_frame_id: drone5
 * /mocap_node/rigid_bodies/5/parent_frame_id: world
 * /mocap_node/rigid_bodies/5/pose2d: Drone_5/ground_pose
 * /mocap_node/rigid_bodies/5/pose: Drone_5/pose
 * /rosdistro: jade
 * /rosversion: 1.11.13

NODES
  /
    mocap_node (mocap_optitrack/mocap_node)

ROS_MASTER_URI=http://localhost:11311

core service [/rosout] found
process[mocap_node-1]: started with pid [5301]
================================================================================REQUIRED process [mocap_node-1] has died!
process has died [pid 5301, exit code -11, cmd /home/vivekr/workspace/catkin/devel/lib/mocap_optitrack/mocap_node __name:=mocap_node __log:=/home/vivekr/.ros/log/2ed18b8c-55ec-11e5-bb88-001fbc0efc2f/mocap_node-1.log].
log file: /home/vivekr/.ros/log/2ed18b8c-55ec-11e5-bb88-001fbc0efc2f/mocap_node-1*.log
Initiating shutdown!
================================================================================
[mocap_node-1] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
done

Can someone please help me out
Regards
Vivek

Originally posted by vivek rk on ROS Answers with karma: 56 on 2015-09-09
Post score: 0

Original comments
Comment by mgruhler on 2015-09-10:
Well, we have it working with two rigid bodies. Have you tried this and not with 5 rigid bodies?
From the error output, it is basially not possible to extract any information, so it is hard to help you.
Do you somehow have more information?

A:

I figured out what the problem was.
In the function parse(), the program does not add the counter for buffer exactly. To fix this error we need to add
seek(2);
after the line
//skip mean marker error
seek(sizeof(float));
This is in the for loop that keeps iterating for each rigid bodies.
Since after the 1st rigid body the counter was not at the right place, the function
read_and_seek(model.rigidBodies[m].NumberOfMarkers);
would return a value like 24533 instead of 3.
So after the 1st rigid body the function
model.rigidBodies[m].marker = new Marker [model.rigidBodies[m].NumberOfMarkers];
would allocate more memory and the functions
size_t byte_count = model.rigidBodies[m].NumberOfMarkers * sizeof(Marker);
memcpy(model.rigidBodies[m].marker, packet, byte_count);
So the value for bytecount was more than 60000 when it should have been 36 (since i have 3 markers), and this would lead the memcpy to acces data out of the buffer which caused the crash
So we correct this by adding the seek(2) which will get everything to the right indices

Originally posted by vivek rk with karma: 56 on 2015-09-10
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by mgruhler on 2015-09-10:
if this is actually a bug, could you open a PR to the original Repo? This would help fixing this for all users...
Thanks
Comment by aorait on 2016-02-08:
This is may be an obvious thing but I didn't understand how did you arrive at seek(2)? As in why 2?
Comment by vivek rk on 2016-02-09:
@aorait looking at the code above and the sample from NatNet SDK for a long time i couldn't realize what was missing and where. So my next best option was to bruteforce it. So i started with seek(2), which will move it by 2 and it worked
Comment by vivek rk on 2016-02-09:
@mig sorry i dont know how to use those advanced features of github
Comment by mgruhler on 2016-02-12:
@vivek rk https://help.github.com/articles/using-pull-requests/
Comment by fapofa on 2016-05-10:
Hi! Same issue with multiple rigid bodies... Has anybody solved already this problem?
Comment by GroundMelon on 2016-05-19:
I've checked the NatNet SDK and find out that there is an extra data field in newer version of NatNet SDK. Use  this branch will help resolve it.
Comment by kali on 2016-12-10:
@vivek rk I'm experiencing the same issue and it doesn't work even after making the mentioned changes, could you please help me out here ? I'm using motive 1.10.1 with ros indigo
Comment by vivek rk on 2016-12-11:
@kali i havent used motive and ros in a long time. try using the branch GroundMelon suggested in his comment
Comment by kali on 2016-12-11:
@vivek rk I have solved the problem, there is little modification required in that code. Anyway Thanks. I will share the code later.

