Q:

Message generation at runtime

Hi all,
My program should be able to create nodes and messages during runtime, depending on the users preferences. For example, the user wants to create a node, which should be able to send a message containing a fieldtype int32 and a fieldtype string. After some time he decides to change, lets say the fieldtype from int32 to another string and wants to add a fieldtype of geometry_msgs/Point, for example.
Currently I'm using roscpp from the groovy distrbution on Windows to generate a simple message, which would be sent to a ROS-System running on a Kubuntu-machine.
The normal approach would be to generate a msg-file (containing the fieldtypes int32 and string) and build the message-file to generate a header-file, which would be included in my program afterwards.
Due to the fact that I have to change the message during runtime this approach wouldn't work for me.
So which options do I have?
What I've thought of until now was to include rospy for this functionality (the other parts of the program have to use cpp) and interpret the userinput on the fly. But would this be possible, or am I missing something?
Or are there way more better ways to solve this issue? (Thinking of dynamical reconfiguration, which seems to work only for small changes)
Any help on this is welcome.

Originally posted by mdtobi on ROS Answers with karma: 36 on 2013-09-21
Post score: 0

A:

There is some level of support in rospy for dynamically processing messages not know about at runtime. They are not fully fledged APIs. If you want to see an example check out rostopic.

Originally posted by tfoote with karma: 58457 on 2016-08-08
This answer was ACCEPTED on the original site
Post score: 0

