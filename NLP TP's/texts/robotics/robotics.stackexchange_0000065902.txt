Q:

Pointcloud from Xtion in Matlab with ROS IO package

Hey there,
I'm trying to get a Pointcloud from ROS to MATLAB via ROS IO. Getting the Data works so far with

function pointCloudMessage( message )
    pclmsg.width = message.getWidth();
    pclmsg.height = message.getHeight();
    pclmsg.offset = message.getData().arrayOffset();
    pclmsg.pointStep = message.getPointStep();
    pclmsg.rowStep = message.getRowStep();
    pclmsg.isDense = message.getIsDense();
    pclmsg.isBigendian = message.getIsBigendian();
    pclmsg.data = uint8(message.getData().array());

    numberOfPoints = pclmsg.width*pclmsg.height;

    pcl = pclmsg.data(pclmsg.offset+1 : numberOfPoints * pclmsg.pointStep+pclmsg.offset);
    pcl = reshape(pcl, pclmsg.pointStep, numberOfPoints );
end

as file, and

>> roscore.RosMasterUri='http://localhost:11311';
>> node = rosmatlab.node('MATLAB', roscore.RosMasterUri);
>> ir_subscriber = rosmatlab.subscriber('/camera/depth_registered/points','sensor_msgs/PointCloud2',1,node);
>> ir_subscriber.setOnNewMessageListeners({@pointCloudMessage});

in the console.
This code generates a 32x307200 matrix with uint8 data.
Now I'm stuck at interpreting the resulting data.
Is is float (4 byte) data? Is the reshaping of the data correct? What is included in the data? RGBD as floats would be 6*4= 24 byte.
Thanks for the help.

Originally posted by dd_diode on ROS Answers with karma: 11 on 2015-02-18
Post score: 1

A:

It depends on the number of fields, and the size of the fields. These are defined in the message (http://docs.ros.org/api/sensor_msgs/html/msg/PointCloud2.html) fields[] array (http://docs.ros.org/api/sensor_msgs/html/msg/PointField.html).
If you're doing something quick and dirty and you know the shape of your incoming data, you can always hardcode the sizes, however the more robust approach would be to process based on the fields[] data.

Originally posted by paulbovbel with karma: 4518 on 2015-02-21
This answer was ACCEPTED on the original site
Post score: 0

