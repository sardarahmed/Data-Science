Q:

build warning for kinetic release - "missing whitespace after the macro name"

Hiho,
while preparing one of our packages for release I encountered a strange problem. While building for ros indigo and jade worked as supposed (no errors), there are warnings for ros kinetic and lunar, which in turn leads to an "unstable" build state. Before releasing to kinetic, i would like to get rid of the warnings.
It seems as the warning message "missing whitespace after the macro name" is related to some macro passed via command-line: 

e.g. https://stackoverflow.com/questions/38529540/what-causes-this-missing-whitespace-after-the-macro-name-error 

The package is hosted here:

https://github.com/peterweissig/ros_pcdfilter

The build-results can be found here: 

indigo: http://build.ros.org/job/Idev__pcdfilter_pa__ubuntu_trusty_amd64/ 
kinetic: http://build.ros.org/job/Kdev__pcdfilter_pa__ubuntu_xenial_amd64/10/warnings21Result/

Console-Log:
http://build.ros.org/job/Kdev__pcdfilter_pa__ubuntu_xenial_amd64/10/consoleFull 

12.1. build workspace in isolation and install 
... 
00:06:42.344 Scanning dependencies of target pcdfilter_pa 
00:06:42.361 [  4%] Building CXX object CMakeFiles/pcdfilter_pa.dir/src/pcdfilter_pa.cpp.o 
00:06:42.370 :0:15: warning: missing whitespace after the macro name 
00:06:43.034 [  8%] Building CXX object CMakeFiles/pcdfilter_pa.dir/src/pcdfilter_pa_parameter.cpp.o 
00:06:43.043 :0:15: warning: missing whitespace after the macro name 
00:06:43.609 [ 12%] Building CXX object CMakeFiles/pcdfilter_pa.dir/src/pcdfilter_pa_filter.cpp.o 
00:06:43.621 :0:15: warning: missing whitespace after the macro name 
... 

In contrast a similar package is build stable for all releases:
https://github.com/peterweissig/ros_parameter 

indigo: http://build.ros.org/job/Idev__parameter_pa__ubuntu_trusty_amd64/ 
kinetic: http://build.ros.org/job/Kdev__parameter_pa__ubuntu_xenial_amd64/

Thank you for your help in advance 
Peter

Originally posted by peter on ROS Answers with karma: 26 on 2017-08-03
Post score: 0

A:

Hi,
I finally found the core of the problem:
During the make-process the CXX-Flag "-DDISABLE_LIBUSB-1.0" will be set in the file "flags.make". This flag has a bad name as it consists of a "-" Symbol. The file itself was created during the cmake-process based on the added definitions.
The solution was to remove the bad named macro within the "CMakeLists.txt" file be adding 
remove_definitions(-DDISABLE_LIBUSB-1.0)
See also link text
Greetings
Peter

Originally posted by peter with karma: 26 on 2018-01-04
This answer was ACCEPTED on the original site
Post score: 1

