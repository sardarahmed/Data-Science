Q:

Dependency on python module `sys`

I am working on a ROS noetic package which includes a node which imports the python sys module (in Ubuntu 20.04 with python3).
Is it necessary to declare the dependency on the sys module in the package.xml file?

If yes, which <exec_depend> is required? I had a look at the documentation on the documentation to python module dependencies, but I have not been able to find the <exec_depend> for sys in the rosditro repository.

If no, why is it not necessary to declare dependency on this import?

Originally posted by CoffeeKangaroo on ROS Answers with karma: 65 on 2021-12-01
Post score: 0

A:

Is it necessary to declare the dependency on the sys module in the package.xml file?

No.
sys is a part of the Python standard library, which means it comes installed by-default whenever you install a version of the Python interpreter. Apart from that, you cannot "install" sys yourself as a stand-alone component or library for Python.
What you should exec_depend on would be rospy. This already depends on the correct version of Python.
Technically, your package should not depend on one of its dependencies to bring in one of its other direct dependencies (ie: if A depends on B and C, and B depends on C, A should not just depend on B, but also on C itself). But as rospy will almost certainly never drop its own dependency on Python, it would be safe to just depend on rospy.

Originally posted by gvdhoorn with karma: 86574 on 2021-12-01
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by gvdhoorn on 2021-12-01:
Compare this to regular Python packaging: would you add a dependency on sys in your pyproject.toml and/or setup.py/setup.cfg? If the answer is "no", then you wouldn't need to add it to your ROS package.xml.
Comment by CoffeeKangaroo on 2021-12-02:
@gvdhoorn: Thanks for the detailed clarification.
So, can "would you add a dependency on xyz in your pyproject.toml?" be taken as a rule of thumb for dependencies on python packages which have to be defined in package.xml?
Comment by gvdhoorn on 2021-12-02:
Any time you use something which is not part of the standard library it will have to be installed separately.
Anything that needs to be installed / present for your node to function should be expressed as a dependency.

