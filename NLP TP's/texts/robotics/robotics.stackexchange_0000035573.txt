Q:

collada dae resource not updated in rviz

Hello
I am using colladadom to produce a dae file of a simple 3D structure (a simple polygon with a color)
Then I send a visualization_msgs::Marker to rviz of the type MESH_RESOURCE pointing to that dae file.
I all works great, the polygon is drawn on rviz.
My problem is that I want to be able to change this 3D structure in real time (no so fast, but to change it in runtime)
So what I do is rewrite a the dae file and then send a new visualization_msgs::Marker message to rviz so that it draws the new polygon (the new rewritten dae file)
The problem is that after the first draw, which goes well, rviz seems never to update the marker again, even if I change the dae file to a different polygon the old one is drawn.
I was thinking and it could be one of the following things:

the header.stamp of the marker msgs: I checked and the new polygon marker message has a newer timestamp, so it should override the old polygon.
the action field in the msg. I tried ADD and MODIFY (although I think now they are the same). Nothing changed.
the id field of the marker_msg. I was wondering if it was a problem of receiving always the same id. I tried changing this and nothing happens.

If the problem is not related to any of the previous points, I was wondering if rviz has some behaviour of loading the collada files just the first time. Or could it have something to do with the resource retriever?
Thanks for the help
Miguel Oliveira

Originally posted by Miguel Riem de Oliveira on ROS Answers with karma: 254 on 2011-11-09
Post score: 1

A:

I think I found the problem
In the rviz code, at /rviz/default_plugin/markers/mesh_resource_marker.cpp
line 101,
there is something like this
void MeshResourceMarker::onNewMessage(const MarkerConstPtr& old_message, const MarkerConstPtr& new_message)
{
ROS_ASSERT(new_message->type == visualization_msgs::Marker::MESH_RESOURCE);
scene_node_->setVisible(false);
if (!entity_ || old_message->mesh_resource != new_message->mesh_resource)
{
//DO THE WHOLE PROCESSING HERE
}
(...)
I think that for efficiency reasons the rviz author decided not to reload a dae file, and that if test checks just that.
I am able to solve the problem using two different files and alternating between both.
The problem now is that the rviz also loads the mesh once. In rviz package
rviz/src/rviz/mesh_loader.cpp, line 532 the following code
if(Ogre::MeshManager::getSingleton().resourceExists(resource_path))
{
return Ogre::MeshManager::getSingleton().getByName(resource_path);
}
else
{
//LOAD THE MESH HERE NORMALY
Also prevents a previously loaded file to be reloaded. Is there any way I can force rviz to reload files?
Thank you
Miguel Oliveira

Originally posted by Miguel Riem de Oliveira with karma: 254 on 2011-11-09
This answer was ACCEPTED on the original site
Post score: 2

