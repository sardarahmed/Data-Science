Q:

dumping parameters from c++ node

Hi all,
I have a simple question but I can't seem to find a nice solution.
My problem is the following:
I have a YAML file that stores some parameters. These parameters are loaded into the parameter server at execution time. For some reason I want to change some parameters and store them permanently in the YAML file.
That is, I retrieve a certain field of the parameter:
XmlRpc::XmlRpcValue param;
nh.getParam("param_name", param);
ROS_ASSERT(param.getType() == XmlRpc::XmlRpcValue::TypeStruct);
std::string field = static_cast<std::string>(param["field]);

and then, after modifying it, I'd like not only to set the new value in the parameter server but also to permanently store this change.
I have seen that rosparam has the dump option and I was wondering if there is an analogous function in roscpp. I'd be very glad if someone could show me how it can be done.
Thanks.

Originally posted by schizzz8 on ROS Answers with karma: 183 on 2019-07-02
Post score: 1

Original comments
Comment by ahendrix on 2019-07-02:
I do not believe there is a C++ equivalent to rosparam dump

A:

You can do that with the tool I am working on -> https://github.com/asherikov/ariles, a slightly dated version is available as a package in melodic.

Originally posted by asherikov with karma: 16 on 2020-04-27
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by gvdhoorn on 2020-04-27:
Could you please expand a little on your answer? It's not apparent from the readme of that repository how this could be used to achieve what the OP describes.
Comment by asherikov on 2020-12-17:
Think of it as a serializer that supports ROS parameter server:

define a class with parameters
deserialize it from parameter server
modify
serialize to a yaml file

