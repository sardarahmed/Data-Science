Q:

Problem with Stereo ORB SLAM2 in ROS Creating Strange Transformations

Hi,
I have recently started trying to use the ROS implementation of ROS ORB SLAM2 but have encountered an issue with it being very inaccurate and imprecise on the transformations. There are no warnings or errors that arise and all my tests so far have been in a simulated environment. I am using ROS melodic and have this specific package installed. Below I have a picture of what happens when I drive straight and the second one is when I turn in one spot. The tracking seems to be fine but the actual path it believes the robot is taking isn't even close as motion seems to be way off and unpredictable in all 3 axes. I tried using some of the default settings file and the one that includes everything tuned for my simulation environment and they both exhibit the same results. From the debug image everything looks normal and plenty of points are being tracked.
After moving in a straight line I get the following:

I reset the map and rotated the robot slowly on point and got the following:

Here are the contents of my settings.yaml file for the stereo camera configuration:
Camera.fx: 762.7249337622711
Camera.fy: 360.5
Camera.cx: 640.5
Camera.cy: 0.0
Camera.k1: 0.0
Camera.k2: 0.0
Camera.p1: 0.0
Camera.p2: 0.0
Camera.width: 1280
Camera.height: 720
Camera.fps: 15.0
Camera.bf: 152.54498675245424
Camera.RGB: 1
ThDepth: 35
LEFT.height: 720
LEFT.width: 1280
LEFT.D: !!opencv-matrix
rows: 1
cols: 5
dt: d
data: [0.0, 0.0, 0.0, 0.0, 0.0]
LEFT.K: !!opencv-matrix
rows: 3
cols: 3
dt: d
data: [762.7249337622711, 0.0, 640.5, 0.0, 762.7249337622711, 360.5, 0.0, 0.0, 1.0]
LEFT.R:  !!opencv-matrix
rows: 3
cols: 3
dt: d
data: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]
LEFT.P:  !!opencv-matrix
rows: 3
cols: 4
dt: d
data: [762.7249337622711, 0.0, 640.5, -152.54498675245424, 0.0, 762.7249337622711, 360.5, 0.0, 0.0, 0.0, 1.0, 0.0]
RIGHT.height: 720
RIGHT.width: 1280
RIGHT.D: !!opencv-matrix
rows: 1
cols: 5
dt: d
data:[0.0, 0.0, 0.0, 0.0, 0.0]
RIGHT.K: !!opencv-matrix
rows: 3
cols: 3
dt: d
data: [762.7249337622711, 0.0, 640.5, 0.0, 762.7249337622711, 360.5, 0.0, 0.0, 1.0]
RIGHT.R:  !!opencv-matrix
rows: 3
cols: 3
dt: d
data: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]
RIGHT.P:  !!opencv-matrix
rows: 3
cols: 4
dt: d
data: [762.7249337622711, 0.0, 640.5, -152.54498675245424, 0.0, 762.7249337622711, 360.5, 0.0, 0.0, 0.0, 1.0, 0.0]
ORBextractor.nFeatures: 1200
ORBextractor.scaleFactor: 1.2
ORBextractor.nLevels: 8
ORBextractor.iniThFAST: 20
ORBextractor.minThFAST: 7
Viewer.KeyFrameSize: 0.05
Viewer.KeyFrameLineWidth: 1
Viewer.GraphLineWidth: 0.9
Viewer.PointSize: 2
Viewer.CameraSize: 0.08
Viewer.CameraLineWidth: 3
Viewer.ViewpointX: 0
Viewer.ViewpointY: -0.7
Viewer.ViewpointZ: -1.8
Viewer.ViewpointF: 500
Any help is greatly appreciated!

Originally posted by mequi on ROS Answers with karma: 111 on 2020-03-26
Post score: 0

A:

Well, this is a bit embarrassing. The problem stemmed from incorrectly filled out camera configuration parameters in the yaml file. I overlooked the error several times but finally caught it. To prevent this from happening again I have updated my fork of the node to use a camrea_info message to take in the configuration rather than the yaml file. https://github.com/BytesRobotics/orb_slam_2_ros

Originally posted by mequi with karma: 111 on 2020-04-04
This answer was ACCEPTED on the original site
Post score: 0

