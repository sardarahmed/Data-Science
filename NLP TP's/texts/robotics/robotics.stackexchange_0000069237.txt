Q:

single rosmaster multi-turtlebots 2

Hi Ros community,
Has anyone successfully implemented single Master network on many turtlebots 2 as a distributed multi-robots?
ADDED: If some has implemented this on the actual turtlebots 2, if so could someone guide me as I have tried everything. Please help me setting it up from the beginning. I am having difficulty with running the default bring up command for turtlebot 2 which is

roslaunch turtlebot_bringup minimal.launch

update: it seem that the command

roslaunch turtlebot_bringup minimal.launch

is the issue. For those who have implemented the single master, how do you get the turtlebots to work ?
or the least what command does one use to launch the turtlebots?
Thanks

Originally posted by Vinh K on ROS Answers with karma: 110 on 2015-08-14
Post score: 0

Original comments
Comment by LucYang on 2018-07-30:
Hello, I wonder if you have solved this problem? If so, please tell me how to do it, I am dealing with the same problem as you.Please.Thank you.
Comment by Vinh K on 2018-07-30:
try to have use multimaster_fkie as your connection for multi-robot. In addition, rather than roslaunch turtlebot_bringup minimal.launch use roslaunch kobuki_node minimal.launch. I can not remember exactly, but turtlebot_bringup does not work for this case
Comment by LucYang on 2018-07-30:
So you have done this problem at last?
Thank you very much for giving the advice and hope.
Comment by Vinh K on 2018-07-30:
I did not continue after that attempt.  But the other engineers from my team did.
Comment by LucYang on 2018-07-31:
It is really good to know someone has done it. Could please help me to ask the other engineers what are their solutions?
English is not my native language, I am sorry if my asking way is rude, but I really want to solve this problem, I have been stuck here for more than a week.
Comment by Vinh K on 2018-07-31:
Hi Luc,
I have asked and here is what I can tell from it.

Ensure that you have Ubuntu with ROS Kinetic installed and have your ROS installations working properly.

Follow this instruction to install multimaster_fkie

Comment by Vinh K on 2018-07-31:
Instead of running
roslaunch turtlebot_bringup minimal.launch

run
roslaunch kobuki_bringup minimal.launch

Good luck
Comment by LucYang on 2018-07-31:
Thank you for your advice, I have successfully implemented multi-master with multimaster_fkie.
As my turtlebot is not the standard equipmentï¼Œroslaunch turtlebot_bringup minimal.launch is good for me if I export ROS_NAMESPACE=client1 on my turtlebot client1 , the same as my turtlebot client2.
Comment by Vinh K on 2018-07-31:
Awesome. That should work too
Comment by LucYang on 2018-07-31:
I can also teleop them by roslaunch turtlebot_teleop keyboard_teleop.launch under different ROS_NAMESPACE. I am trying to figure out if the navigation is ok in this situation, since I found even in different ROS_NAMESPACE, the tf tree is still the same.
Comment by LucYang on 2018-08-01:
Hello. I have tried it. My worry is right, because the tf trees on different turtlebot is the same , when I launch the second amcl_demo_rplidar.launch , Warning comes outTF_OLD_DATA ignoring data from the past for frame ***. How did your colleagues solved the tf tree issue? My ros is indigo.
Comment by Vinh K on 2018-08-01:
Hi Luc,  I think you may have to create a specific question regarding to tge tf tree. That's about all that I know. Good luck

A:

Hi Vinh,
People have definitely done this. The "best" approach will be dependant on many factors, including (perhaps most importantly) the quality of the wireless links between the robots, as well as the amount of data that needs to be sent around, and so on.
If the robots will always have really good WiFi (i.e., they are always very close to an access point), you could try just running everything "out of the box" and just pushing each robot into its own namespace on the same master that is running either on one of the robots or on a separate machine (say, a machine that connects via wired Ethernet to the wired network connecting your wireless access point(s).
However, if the robots will sometimes have intermittent network connectivity, things get much more complicated. ROS1 "out of the box" does not handle this situation gracefully; the TCP buffers will back up, and then things get ugly. You can help some of this by running all your ROS1 connections over a VPN, which (surprisingly) can behave much better than "normal" TCP.
Alternatively, you could use an additional middleware, such as OpenSplice DDS, to handle the inter-robot links, and run a separate ROS master on each robot. (Note that ROS2 is being built on DDS for exactly this reason, among others, but it's not yet ready for day-to-day use.)
More specifically for the multiple-robots-on-wireless-LAN approach (the simplest):
Let's assume there is a computer that seems like a good candidate to run the ROS master (say, a workstation that will also run the RViz or other "system-wide" nodes). Let's pretend that computer is called overlord.local on the network and can be reached from all of the robots. When debugging this type of thing, it's important to ensure that, first, the LAN and mDNS is properly configured, so that when you run ping overlord.local on your robot laptops, it works.
Let's assume further that overlord.local can ssh into all of the laptops on the Turtlebots. You can make this work password-less using ssh-keygen to create a public/private keypair on overlord.local, and then ssh-copy-id to copy the private key to all of your robot laptops.
To run some robots, you'll start roscore on the overlord.local machine, and then shell into the robots, say turtle1.local and turtle2.local. The key thing to do once you've shelled into a robot is to point its ROS_MASTER_URI environment variable back to overlord.local. More specifically, from a shell (or in a .bashrc alias):
export ROS_MASTER_URI=http://overlord.local:11311
then, you'll need to have each turtlebot launch inside its own namespace; otherwise, the node names on turtle1 will be the same as on turtle2, and the ROS master will tell the previously-launched node to shut down when the new one starts. There are a few ways to set the namespace, but one fairly easy one is to set ROS_NAMESPACE to something unique, like:
export ROS_NAMESPACE=$(hostname)
Then, you can roslaunch the turtlebots as you've been doing, and they will appear in their own unique namespace on the ROS master running on overlord.local
Cheers,
-mq

Originally posted by Morgan with karma: 521 on 2015-08-14
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Vinh K on 2015-08-14:
thanks for the reply Morgan. For my case, the wifi is good since I am using 6 turtlebots in our robotics lab. However, the only issue is the bringup command that I have not been able to resolve for turtlebots 2.
Comment by Vinh K on 2015-08-14:
This is the command to bring up turtlebots: roslaunch turtlebot_bringup minimal.launch.
I can not run this command for more than 1 turtlebot. I needed to run this command for the robot to turn on and be able to move as well as all the sensors that it has.
Comment by Morgan on 2015-08-14:
Hi Vinh, again, lots of approaches are valid here, but one would be to make a "cluster mega-launch file" that has six  tags that specify the __ns attribute differently for each robot. That way, their nodes won't collide in the ROS namespace.
Comment by Vinh K on 2015-08-14:
well Morgan, what i have done previously is to have that bring up command under different namespace for each turtlebots PC. For instance, this is what I have done:
Turtlebot 1 PC
  <group ns="robot1"
           <include file="$(find turtlebot_bringup)/launch/minimal.launch"/>
 </group>

Comment by Vinh K on 2015-08-14:
I am not sure if this is what I am supposed to do. But after I did this, I have trouble moving turtlebot with:
roslaunch turtlebot_teleop keyboard_teleop.launch which is what I normally use for a single robot.
Comment by Vinh K on 2015-08-14:

       <include file="$(find turtlebot_bringup)/launch/minimal.launch"/>

I believed I did something similar like that, I just could not remember Morgan.
Comment by Vinh K on 2015-08-14:
or what should I do since I am very new and lost with ROS networking for these turtlebots. should each robot PC have that ns above or but just replace robot1 to robotN corresponding to the robot number. Thanks
Comment by Morgan on 2015-08-14:
i'll edit my answer and attempt to include some suggestions in a longer post
Comment by Vinh K on 2015-08-15:
Hi Morgan, does this command
export ROS_NAMESPACE=$(hostname)

then
roslaunch turtlebot_bringup minimal.launch

works exactly as this ?
<launch>
    <group ns="turtle1">
                   <include file="$(find turtlebot_bringup)/launch/minimal.launch"/>
    </group>
</launch>

Comment by Vinh K on 2015-08-15:
For turtle1 in this instance
Comment by Vinh K on 2015-08-28:
After launching this command, I have other topics related issues where teleop does not work.

