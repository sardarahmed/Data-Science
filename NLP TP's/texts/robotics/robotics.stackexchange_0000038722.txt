Q:

import a 'roshlet' from another roshlet

Hi,
If I have two rosh scripts - lets say a.py and b.py that work perfectly when invoked independently (rosrun rosh rosh a.py) - is there a simple mechanism for importing one into the other that ensures the globals() have been set up during the import.
e.g.,

#### b.py ####

def getpoint():
  return msg.geometry_msg.PointStamped()

#### a.py ####
import b

actions.foo_controller.move_to(b.getpoint())

The problem is that if I 'rosrun rosh rosh a.py', global variables like msg, actions, etc in module a are set up but these do not carry across when I 'import b'. As a result, b will not load (with an error the msg is not defined).

Originally posted by Benjamin Johnston on ROS Answers with karma: 50 on 2012-03-15
Post score: 0

Original comments
Comment by Benjamin Johnston on 2012-03-20:
I had a typo in the program that bhaskara replied to. I've fixed this typo but the question still remains: how can a roshlet be imported from another roshlet?

A:

The msg/actions/etc... variables are only setup in the global namespace, so its not currently possible to do what you are doing automatically.  rosh, and roshlets even moreso, are fairly experimental.  The current workaround is to pass in the symbols as parameters to the functions you are calling.  Another possibility is patch rosh to enable easier initialization of globals() in submodules.

Originally posted by kwc with karma: 12244 on 2012-03-20
This answer was ACCEPTED on the original site
Post score: 1

