Q:

Cartesian RRT or SBPL Motion Planning for non-PR2?

Hi all,
There are some limitations with using joint-space motion planners with numeric IK solvers.
Does anyone have experience using, or can suggest an effective cartesian space planner for a 7-10 DOF robot? ...with ROS?  ;-)
Are there any plans on the drawing board, for new additions to the OMPL planners?
Cheers,
David.

References: 
http://www.ros.org/wiki/sbpl 
http://www.ros.org/wiki/sbpl_arm_planner www.ri.cmu.edu/pub_files/2011/10/ijrr10.pdf 

Originally posted by dbworth on ROS Answers with karma: 1103 on 2013-01-30
Post score: 1

Original comments
Comment by Jeffrey Kane Johnson on 2013-02-06:
Could you clarify the limitations you're referring to? It's unclear how a task space planning method is going to resolve your IK issues.

A:

We have seen similar limitations, and have typically used application-specific solutions.  Which means I haven't found any better tools in the core ROS architecture for high-DOF cartesian planning.
One of our recent projects uses a new constraint-aware IK solving method.  In this solver, you can specify a number of different constraints (mesh distances, desired cartesian path, allowable pose-error tolerances, etc.) in Cartesian space.  The solver uses a Jacobian-based damped-least-squares solution that computes joint angles that minimize the various constraints.
This method allows us to use "under-constrained" DOFs in our robot (e.g. >6DOF robot or < 6DOF goal pose) to help optimize the robot's behavior relative to the specified constraints.  For example, a 7-DOF robot can use its redundant DOF to help avoid obstacles.  Or, a 6-DOF robot can introduce a small "pointing error" to its end-effector if it helps avoid joint limits.  This optimization happens "naturally" in the new IK method, rather than through the more brute-force obstacle-avoidance approach currently used in most ROS planners.
We are hoping to "clean up" this IK solver for an open-source release, probably targeting moveIt.  We're still in the very early stages of this effort, and I expect it will still be several months before something is formally released.
However, it sounds like we may have interests/needs in similar types of problems.  Feel free to contact me if you'd like to discuss further, to see if our approach addresses your need, or if it would be worth trying to coordinate efforts in this area.

Originally posted by Jeremy Zoss with karma: 4976 on 2013-02-05
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by bit-pirate on 2013-02-05:
This IK solver sounds nice! However, I don't think you can compare it with the mentioned planners. Although your solver respects various constraint, you are still dependent on the "desired cartesian path", as you wrote. The planners might not yield similarly optimised solution like your solver, ...
Comment by bit-pirate on 2013-02-05:
but allows you to find a path to the goal pose (joint state) respecting obstacles, joint limits etc.

