Q:

applying a force to a rigid body

Hi all,
I'm trying to write a controller for a robot that is modelled as a rigid body. In particular the robot is made by several link connected through fixed joints. I would like to apply a simple force along one of the axis to the main link of the robot. I tried to look at the erratic controller but i just found a way to apply velocity to the joints connected to the wheels. Is there a way to apply a force to a link?
thanks for your help!
EDIT: I'm working with gazebo and I would like to apply a force when a certain key is pushed (I already have implemented the teleoperation module). Is it possible to apply both an impulsive force and a continuos force?

Originally posted by erpa on ROS Answers with karma: 111 on 2011-08-29
Post score: 0

Original comments
Comment by Martin G端nther on 2011-08-29:
Are you talking about Gazebo? If yes, you could add the Gazebo tag to your question.

A:

Assuming you are talking about Gazebo, you can apply a force to a body using this command on the command line:
rosservice call /gazebo/apply_body_wrench '{body_name: "object_1::object_1_base_link", reference_frame: "object_1::object_1_base_link", wrench: { force: { x: 0, y: 0, z: -20.0 } }, start_time: 0, duration: -1 }'

Of course, you can also call the apply_body_wrench service from a program.
Edit: Another alternative is accessing the body from a Gazebo plugin. I haven't done that yet, but I think it should run along these lines:

you get a Gazebo Model object in the constructor of your controller

use Model->GetBody(const std::string &name) to get the body representing your link by name

use Body->SetForce(const Vector3 &force) to apply the force

I also found looking at turtlebot_gazebo_plugins as an example for some of these steps very helpful.

Originally posted by Martin G端nther with karma: 11816 on 2011-08-29
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by erpa on 2011-08-31:
Solved! To apply the force in the object reference frame first you have to get the pose of the object itself with GetWorldPose() and rotate the force vector accordingly ( i used RotateVector() ), last you can apply the force to the object. thanks again for help.
Comment by Martin G端nther on 2011-08-30:
That could be true. I don't know if there's a better way, but perhaps you have to rotate the force vector yourself (grep for "rotate" in gazebo_plugins to see some examples).
Comment by erpa on 2011-08-30:
thanks, it's exactly what i was looking for! Just one last question, trying to run my simulation it appears that the force is applied using world reference frame instead then body frame, am i mistaken? I will also take a look at turtlebot_gazebo_plugins as soon as it finish the download :D
Comment by Martin G端nther on 2011-08-30:
Okay, I've edited my answer to that effect.
Comment by erpa on 2011-08-30:
hi, thanks for answering! yes i work with gazebo (i edited both the tags and the question for future reference) but rather then calling rosservice through a new terminal i would like to apply it in my controller so i was looking for the cpp function. i'm sorry if my question was missleading.

