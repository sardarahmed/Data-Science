Q:

Is it possible to call a ros service from another service's callback function in the same node?

I have a node advertising several services (A, B, C), and I want the service callback function for service A, to call services B and C. Is this allowed?
From my first tests it seems that this blocks something in the underlying service mechanism. Maybe the different services in a node are served sequentially using a single thread?
I know doing this may sound strange, and not the right way to do it, but this node is a quite complex etherCAT realtime node, and the C++ object that serves A doesn't have (easily) access to the objects that serve B and C.

Originally posted by toniOliver on ROS Answers with karma: 159 on 2012-10-25
Post score: 0

A:

You might need more than one spin threads. When you call spin, roscpp starts a loop that serves service and topic requests, i.e. it calls the callback. When calling a service inside a service, you might need a second spin loop. Have a look at roscpp's AsyncSpinner and this page.

Originally posted by Lorenz with karma: 22731 on 2012-10-25
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by toniOliver on 2012-10-26:
Thanks for pointing me to the right information. It looks like AsyncSpinner is what I'd need. Although I will try to do it by taking the second service call out of the callback function, as the code I'm working in is a plugin and the ros::spin() declaration is not in my package (not my code).

