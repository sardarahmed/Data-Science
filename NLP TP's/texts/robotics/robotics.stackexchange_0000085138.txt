Q:

Subscriber logic

Hi guys,
I'm stuck here now,
I have this common listener with a subscriber:
def listener():
    rospy.init_node('teleop_list', anonymous=True)

    rospy.Subscriber('key_vel', Twist, callback)

    # spin() simply keeps python from exiting until this node is stopped
    rospy.spin()

I want to know if there is a way to call the callback when no data is received (I already know the callback theory, when something happens the callback is triggered, and this is why I'm asking) or find a way to do something while the callback is not triggered
Ty

Originally posted by julimen5 on ROS Answers with karma: 17 on 2018-02-05
Post score: 0

A:

You can make a new thread in your Python program and have it call a function called callback that doesn't take inputs.
def callback():
    while True:
        crunchData()

# ... somewhere in the daemon startup code ...
t = threading.Thread(target=callback)
t.daemon = True
t.start()

https://stackoverflow.com/questions/19600737/how-to-use-daemon-that-has-a-while-loop?noredirect=1&lq=1
I copied over the sample example you might want to reference for what you want to do.

Originally posted by kparikh with karma: 53 on 2018-02-05
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by julimen5 on 2018-02-05:
I can't imagine how can I connect what you are saing with the rospy.Subscriber.
I have this:
def callback(data):
    #do something with the data

def listener():
    rospy.Subscriber('key_vel', Twist, callback)

listener is the daemon startup code.
Comment by kparikh on 2018-02-05:
I'm telling you how to do something when the subscriber isn't triggered. Plus, you can't call callback(data) without providing data. You can either make another function which doesn't require the data or provide a predefined piece of data.
Comment by julimen5 on 2018-02-05:
yeah, after think a bit and read the whole stackoverflow post I think i get it. Thank you!
Comment by kparikh on 2018-02-05:
If you want to connect it, then try.
rospy.init_node('teleop_list', anonymous=True)
rospy.Subscriber('key_vel', Twist, callback)
def listener():
    #some logic to call a function or spin

t = threading.Thread(target=listener)
t.daemon = True
t.start()

Comment by kparikh on 2018-02-05:
Mark as answered and close if it works.
Comment by julimen5 on 2018-02-05:
the thread is called the same time with the Subscriber
def callback(data):
       #
def listener():
    #do smt

def main ():
    rospy.init_node('teleop_list', anonymous=True)
    rospy.Subscriber('key_vel', Twist, callback)

    t = threading.Thread(target=listener)

Comment by julimen5 on 2018-02-05:
I got it, with some mods but thank you!!!
Comment by kparikh on 2018-02-05:
Yeah, not sure it would do what you want otherwise.
Comment by gvdhoorn on 2018-02-06:\

Mark as answered and close if it works.

no need to close the question. Marking it as answered is enough.

