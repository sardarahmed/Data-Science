Q:

tf negative time change messages

I suddenly started getting a lot of messages like these
Saw a negative time change of -0.000165 seconds, clearing the tf buffer.

and am not surprisingly having a lot of trouble with code that relies on tf now. I can't think of anything that changed, and am at a bit of a loss. There's a ros-users message about this from a while ago, but no real solution.
EDIT:
tf_monitor is also showing that all my static_transform_publishers have negative average delays.
Also, all nodes are running on the same machine, so there are no issues with clocks not being synced. This is all with live data, no bags.

Originally posted by Dan Lazewatsky on ROS Answers with karma: 9115 on 2014-01-29
Post score: 1

Original comments
Comment by dornhege on 2014-01-29:
Are you using bag files or live data? For live data: One single computer or multiple ones?
Comment by Dan Lazewatsky on 2014-01-29:
Updated the question.
Comment by tfoote on 2014-01-29:
Are you using a haswell machine? I've heard a report that this is a problem on haswell machines.
Comment by Dan Lazewatsky on 2014-01-29:
Nope, Ivy Bridge (i7-3820QM).
Comment by bchr on 2014-01-30:
I have a similar issue (i7-3740QM) on hydro as well.

A:

It's a very weird issues. Somehow time is not being monotonic. There's a patch here which should prevent this from happening. https://github.com/ros/geometry/commit/36dbe5c13475701715d1253e3b372ef878a3d781
I'd really like to know the root cause. It must be something like floating point issues.
Could you try changing it to:
ros_dt = (rospy.Time.now() - self.last_update_ros_time)
if ros_dt.to_sec() < 0.0:

And see if that helps?

Originally posted by tfoote with karma: 58457 on 2014-01-29
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by bchr on 2014-01-30:
In my case, the patch "solves" the problem, but your suggested test doesn't.
Comment by Dan Lazewatsky on 2014-01-30:
Same here.
Comment by Dan Lazewatsky on 2014-01-30:
Wrapping a RLock around anything that touches last_update_ros_time fixes it, but I don't know that's because it's actually a threading issue, or because it just adds a few CPU cycles which makes the time differences longer.
Comment by fergs on 2014-01-31:
I've opened a pull request to patch this in hydro-devel. https://github.com/ros/geometry/pull/53 There is a fairly extensive write up, and I concur with Dan that the real problem is a threading issue.

