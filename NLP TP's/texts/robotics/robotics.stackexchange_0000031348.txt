Q:

Can I run swissranger_camera along side with a pointcloud_to_laserscan nodelet?

I have a swissranger SR4000 3D camera that I mounted on an erratic and I would like to use it for navigation instead of a laser.
I changed the navigation configuration files to input a point cloud instead of a laser scan, however since I'm using amcl for localization I kind of need a laser scan!
So I checked the turtlebot stack to see how you guys do it with the kinect and I found out you have a nodelet that turns a point cloud into a virtual laser scan.
Now my problem is the kinect driver is a nodelet, and the swissranger driver node is not. I am aware of what nodelets are, however I have never looked into them.
In order to use the pointcloud_to_laserscan nodelet should I create a nodelet version of the swissranger_camera node? Or can I just run the swissranger_camera node as I normally would and run the  pointcloud_to_laserscan nodelet on its own?

Originally posted by Gon√ßalo Cabrita on ROS Answers with karma: 591 on 2011-04-29
Post score: 1

A:

Nodelets use the same ROS interface as Nodes.  The major difference is that they are dynamically loaded into the same process.  This is done because when run in the same process using publish and subscribe with boost const shared pointers roscpp will not serialize and deserialize and will simply pass the pointer to the subscriber.
Thus if you have a nodelet it can be run in it's own process or loaded into another process using a nodelet loader.
There are a few options to optimize the swiss ranger driver.  As you stated you could make the swiss ranger driver into a nodelet like the openni_camera nodelet.  The other option is to simply add a nodelet loader into the swissranger driver node into which you can load other nodelets.  The first is noteably more work, but makes the system more flexible in the future.

Originally posted by tfoote with karma: 58457 on 2011-04-29
This answer was ACCEPTED on the original site
Post score: 1

