Q:

SOme help with launch files

In response to a request for the launch file and the error. Here is the launch file,
<launch>
  <node pkg="newrobot" type="/src/usb.py" name='base_scan' output="screen">
  </node>

  <node pkg="newrobot" type="src/odompublish.py" name="odom" output="screen">
  </node>

  <node pkg="newrobot" type="src/odompublish.py" name="base_pos" output="screen">
  </node>
</launch>

And the error message
ERROR: cannot launch node of type [newrobot/src/usb.py]: newrobot
ROS path [0]=/opt/ros/groovy/share/ros
ROS path [1]=/opt/ros/groovy/share
ROS path [2]=/opt/ros/groovy/stacks
ERROR: cannot launch node of type [newrobot/src/odompublish.py]: newrobot
ROS path [0]=/opt/ros/groovy/share/ros
ROS path [1]=/opt/ros/groovy/share
ROS path [2]=/opt/ros/groovy/stacks
ERROR: cannot launch node of type [newrobot/src/odompublish.py]: newrobot
ROS path [0]=/opt/ros/groovy/share/ros
ROS path [1]=/opt/ros/groovy/share
ROS path [2]=/opt/ros/groovy/stacks

Originally posted by Massbuilder on ROS Answers with karma: 71 on 2013-11-17
Post score: 0

Original comments
Comment by Tirjen on 2013-11-17:
Can you post the .launch file you are trying to launch and the full error you get?
Comment by dornhege on 2013-11-17:
type is the binary to launch.

A:

Remove all the paths in the type, e.g. /src/usb.py should be usb.py. ROS finds this by itself.

Originally posted by dornhege with karma: 31395 on 2013-11-18
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by jarvisschultz on 2013-11-18:
Also, since you are using Python-based nodes, make sure that your files have executable permissions or ROS won't find nodes of that type e.g. chmod a+x [PATH_ON_ROS_PACKAGE_PATH]/newrobot/src/usb.py
Comment by Massbuilder on 2013-11-18:
one question I use a class for the laser scan publisher that called within usb. Do I use usb ore the node that makes up the class?
Comment by Massbuilder on 2013-11-18:
IS the catkin workspace suppose to be the ROS directory? I got mine in seperate. Could be what causing the problem
Comment by jarvisschultz on 2013-11-18:
As @dornhege mentioned above, the type field is the Python script to run.  Regardless of how imports are structured and what classes are involved, the "top-level" script is what goes in the type field.
Comment by jarvisschultz on 2013-11-18:
Let's say your catkin ws is at ~/catkin_ws/, then your package should be in ~/catkin_ws/src/.  Therefore, one of your example nodes would be ~/catkin_ws/src/newrobot/src/usb.py.  If everything is working, TAB key should autocomplete both the package name, and the nodename when using rosrun.
Comment by Massbuilder on 2013-11-19:
Seems the tab is not working, is there another way to find the package path
Comment by jarvisschultz on 2013-11-19:
The command echo $ROS_PACKAGE_PATH will print out the current package path.  In the above example ~/catkin_ws/src  should be listed in that output if it's not, try source ~/catkin_ws/devel/setup.bash.  I'm assuming you setup a workspace http://wiki.ros.org/catkin/Tutorials/create_a_workspace

