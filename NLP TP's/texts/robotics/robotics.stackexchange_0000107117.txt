Q:

rclcpp - float conversion warning when using `declare_parameter`

Compiling a node with the following snippet and -Wfloat-conversion leads to the following:
component.cpp:24:56: warning: conversion from ‘double’ to ‘float’ may change value [-Wfloat-conversion]
24 |   float linear_acceleration_stddev = declare_parameter<float>("linear_acceleration_stddev", 1e-3f);

even if:

I used float as template param
I assigned as default value a float literal
I am assigning to a float variable

What am I doing wrong?

A:

All floating point Parameters end up being doubles under the hood - so your "declare_parameter" is basically being recast as "declare_parameter" - and then the implicit conversion from double to float generates the warning.
My suggestion would be to explicitly do the cast - which should get rid of the warning:

float linear_acceleration_stddev = static_cast<double>(declare_parameter("linear_acceleration_stddev", 1e-3));

As a side note - rclcpp will NOT do this automatic recasting the it is a vector (for instance, you can have a vector<double> parameter type - but vector<float> won't even compile). This very fun limitation is the sole reason I had once dug deep enough into rclcpp to be able to answer your question...

