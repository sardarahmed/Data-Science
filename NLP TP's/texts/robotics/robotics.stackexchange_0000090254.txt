Q:

Using a single node to process 2 input image files

I was reading a tutorial using OpenCV Image Processing (Python) in ROS and I got some doubts.
The exercise consists on:

Creating a new node to determine the angular pose of a pump housing using the OpenCV image processing library. The pump’s orientation is computed using a series of processing steps to extract and compare geometry features:

Resize the image (to speed up processing)

Threshold the image (convert to black & white)

Locate the pump’s outer housing (circle-finding)

Locate the piston sleeve locations (blob detection)

Estimate primary axis using bounding box

Determine orientation using piston sleeve locations

Calculate the axis orientation relative to a reference (horizontal) axis

Firstly, out of a static image file (.jpg) it creates a node just for making an image_publisher so that it's transferred to a topic. I don't get this point since the python scrip could just open it from the input image directory, isn't it?
Secondly, I was wondering if a node can publish two different topics or in affirmative previous case open two inputs.
In third place, if the mentioned case is affirmative (1st Q), is it possible to create just a single node to do all the work? That is, getting the file inputs and output (a file) like a normal python script.
The point of everything is that I want to process two file images saved in a certain directory using a ros node which outputs a processed image file which should be saved in a certain directory.
Thanks for the support :)

Originally posted by chbloca on ROS Answers with karma: 94 on 2019-01-28
Post score: 0

A:

The point of everything is that I want to process two file images saved in a certain directory using a ros node which outputs a processed image file which should be saved in a certain directory.

Can you explain why you'd want to do that with a ROS node?
If you're going to read files from a directory and write the output to files in (a different) directory, that sounds like something that could be realised without using ROS -- or at least, without using any of the communication infrastructure ROS offers for input/output of the images (you could of course still use ROS for other functionality).
Answers to all of your questions would be: "yes".
The point of the exercise you link to is to show you how to setup a message processing pipeline with different nodes using topics to communicate (intermediate) results and to make you familiar with the OpenCV integration provided by cv_bridge.
If you're not looking for distributing computation or are comfortable with using file I/O for everything, then that would certainly be ok. But it wouldn't be a ROS image processing application.

Originally posted by gvdhoorn with karma: 86574 on 2019-01-28
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by chbloca on 2019-01-28:
I intend to compare two maps (obtained by laser scanners) and output another map (image file .pgm) which would represent the differences between them (subtract in CV). The point of using a ROS node is that I want to integrate this function in the set of packages I am using for my project. Thanks!

