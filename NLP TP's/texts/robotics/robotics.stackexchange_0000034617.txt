Q:

How pr2_mechanism to use hard real-time mechanism?

pr2_mechanism doc says: The pr2_mechanism stack contains the infrastructure to control the PR2 robot in a hard realtime control loop.
When I using normal ubuntu not linux-rt,does pr2_mechanism will also make sure it can use hard real-time mechanism?
Or should I install linux-rt and install ROS on that kernel?
Thank you~

Originally posted by sam on ROS Answers with karma: 2570 on 2011-09-30
Post score: 1

A:

Vanilla Linux kernels have provided good real-time performance for many years. For most robotics applications, the generic Ubuntu kernel should work fine.
If you observe performance problems with your robot running your specific mix of software, there are several kernel options you can try.

Originally posted by joq with karma: 25443 on 2011-09-30
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Wim on 2011-11-03:
Yes, pr2_mechanism allows you to run controllers in hard realtime.
Comment by joq on 2011-10-20:
I do not know the internal implementation of pr2_mechanism. Since it says it supports hard real-time, I suppose it must use real-time scheduling.
Comment by sam on 2011-10-20:
Thank you for these information. And what's the answer of my question? Do pr2_mechanism have that ability or not? Yes or no?
Comment by joq on 2011-10-19:
The vanilla Ubuntu kernel provides soft realtime, which is good enough for most robotics. It supports POSIX realtime scheduling. If you believe you need harder guarantees, you should first measure the jitter while running your actual hardware and software.
Comment by sam on 2011-10-19:
Thank you~ But when I using normal ubuntu not linux-rt,does pr2_mechanism will also make sure it can use hard real-time mechanism? Or will it just no hard rt functionalities?

