Q:

Trying to transmit a 1 by 4 array message to subscriber

I am having trouble trying to publish correctly a 1 by 4 array message generated using a for loop based on test data. My system is a ubuntu 16.04 running Kinetic.
The error occurred in the pub.publish(message) line. Below is my code:
# Import Packages
import sys

sys.path.remove('/opt/ros/kinetic/lib/python2.7/dist-packages')

from raisim_gym.algo.ppo2 import PPO2
import os
import math
import argparse
import pickle

def action2Thrust(mylist):       
    _actionMean = 2.5
    _actionStd = 2
        
    Newthrust = mylist.astype(float)*_actionStd
    Newthrust += _actionMean
    return Newthrust

# Have to add the path again so that import rospy works. 
sys.path.append('/opt/ros/kinetic/lib/python2.7/dist-packages')

import rospy
from std_msgs.msg import String
from transmit_thrust.msg import ThrustAction

# Function to map the action value to true thrust range none negative to the range between 
# 0.5 to 4.5 scale

if __name__ == '__main__':
    try:
        # configuration
        parser = argparse.ArgumentParser()
        parser.add_argument('-w', '--weight', help='trained weight path', type=str, default='')
        args = parser.parse_args()

        weight_path = args.weight
    
        if weight_path == "":
            print("Can't find trained weight, please provide a trained weight with --weight switch\n")

        else:

            print("Loaded weight from {}\n".format(weight_path))
            model = PPO2.load(weight_path)

         # Needed to load observations here to test this script would be using pickle here
            with open('/home/ted/raisim_workspace/raisimGym/scripts/obArray.pickle', 'rb') as f:
                obs = pickle.load(f)
         # Needed to instantiate an array to save Thrust for outputting         
            ThrustArray = ThrustAction()
            pub = rospy.Publisher('chatter', ThrustAction, queue_size=10)
            rospy.init_node('talker', anonymous=True)
            rate = rospy.Rate(100) # 10hz

            for i in range(len(obs)):

                action, _ = model.predict(obs[i])
                # print("Action: {}".format(action))
        
                Thrust = action2Thrust(action)
                # print("Thrust: {}".format(Thrust))

                ThrustArray = Thrust
            
                while not rospy.is_shutdown():
                    rospy.loginfo(ThrustArray)
                    pub.publish(ThrustArray)
                    rate.sleep()

    except rospy.ROSInterruptException:
        pass

The obs obtain a set of test data in a large array in the form of 18 by 47093, which is 18 columns and 47093 rows. The arrays are fed into a for loop generating individual thrust command of 1 by 4 which are published to the subscriber node.
I have tried to replace the line:
ThrustArray = Thrust

to
ThrustArray.action = Thrust

where action is the attribute of ThrustArray.msg which is defined as a float32[].
Below is the error outputï¼š
[INFO] [1569343371.533475]: [[0.5
3.76598799 0.6819396 0.91531122]] Traceback (most recent call last):
File "/home/ted/catkin_ws/devel/lib/python2.7/dist-packages/transmit_thrust/msg/_ThrustAction.py", line 55, in serialize buff.write(struct.pack(pattern, *self.action)) struct.error: required argument is not a float

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
File "/opt/ros/kinetic/lib/python2.7/dist-packages/rospy/topics.py", line 882, in publish self.impl.publish(data) File "/opt/ros/kinetic/lib/python2.7/dist-packages/rospy/topics.py", line 1066, in publish serialize_message(b, self.seq, message) File "/opt/ros/kinetic/lib/python2.7/dist-packages/rospy/msg.py", line 152, in serialize_message msg.serialize(b) File "/home/ted/catkin_ws/devel/lib/python2.7/dist-packages/transmit_thrust/msg/_ThrustAction.py", line 56, in serialize except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self))))) File "/opt/ros/kinetic/lib/python2.7/dist-packages/genpy/message.py", line 334, in _check_types check_type(n, t, getattr(self, n)) File "/opt/ros/kinetic/lib/python2.7/dist-packages/genpy/message.py", line 254, in check_type raise SerializationError('field %s must be a list or tuple type'%field_name) genpy.message.SerializationError: field action must be a list or tuple type

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
File "/home/ted/catkin_ws/src/transmit_thrust/scripts/transmitThrust.py", line 108, in <module> pub.publish(ThrustArray) File "/opt/ros/kinetic/lib/python2.7/dist-packages/rospy/topics.py", line 886, in publish raise ROSSerializationException(str(e)) rospy.exceptions.ROSSerializationException: field action must be a list or tuple type

Perhaps there is something wrong with how I am defining my custom message of a 1 by 4 array? Any help would be appreciated.

Originally posted by haloted on ROS Answers with karma: 32 on 2019-09-24
Post score: 0

Original comments
Comment by LeoE on 2019-09-24:
Ok, so what returns model.predict(obs[i])? It seems to me it is a numpy array, as you use astype(float) laster on with it, right? And what exactly is your message definition? Since you asked, if there is something wrong with defining your custom message
Comment by haloted on 2019-09-24:
Hi LeoE,
Yes you are right, model.predict(obs[i])  returns a 1 by 4 numpy array in the form like [1 1 -1 -1], where the numbers are in between -1 to 1. It could have many decimal places that's why I assigned ThrustAction.msg as following:
float32[] action

where action is the attribute of ThrustAction as my custom message file. I did this following this question on stackflow Publishing Array
It seemed to me the resulting output ThrustAction had two square brackets but I only needed one to be a list. I am not sure why this is. Or it could be that I needed to assign float64[] instead, but I highly doubt it.
Comment by haloted on 2019-09-24:
I think it's highly likely that I needed to numpize my array before publishing since as LeoE pointed out that my arrays are numpy arrays not lists. So I will follow the tutorial here and see if it works:
Numpize Array

A:

All you need to do is convert your numpy array to a python list and assign it to your message.action.
This means replace the line ThrustArray = Thrust with (as you tried before) ThrustArray.action = list(Thrust). This should do the trick. This works since you know, that Thrust is a 1D array making the numpy-array to list conversion rather easy.

Originally posted by LeoE with karma: 196 on 2019-09-24
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by haloted on 2019-09-24:
@LeoE
Thanks for the reply, at least the list error is gone but I got the following error output:
 [INFO] [1569374940.181282]: action: 
  - [0.5        3.78099775 0.5        1.07836843]
Traceback (most recent call last):
  File "/home/ted/catkin_ws/devel/lib/python2.7/dist-packages/transmit_thrust/msg/_ThrustAction.py", line 55, in serialize
    buff.write(struct.pack(pattern, *self.action))
struct.error: required argument is not a float

Comment by haloted on 2019-09-24:
Traceback (most recent call last):
File "/opt/ros/kinetic/lib/python2.7/dist-packages/rospy/topics.py", line 882, in publish
self.impl.publish(data)
File "/opt/ros/kinetic/lib/python2.7/dist-packages/rospy/topics.py", line 1066, in publish
serialize_message(b, self.seq, message)
File "/opt/ros/kinetic/lib/python2.7/dist-packages/rospy/msg.py", line 152, in serialize_message
msg.serialize(b)
File "/home/ted/catkin_ws/devel/lib/python2.7/dist-packages/transmit_thrust/msg/_ThrustAction.py", line 56, in serialize
except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
File "/opt/ros/kinetic/lib/python2.7/dist-packages/genpy/message.py", line 336, in _check_types
raise SerializationError(str(exc))
genpy.message.SerializationError: <class 'struct.error'>: 'required argument is not a float' when writing 'action:

[0.5        3.78099775 0.5        1.07836843]'

Comment by haloted on 2019-09-24:
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/home/ted/catkin_ws/src/transmit_thrust/scripts/transmitThrust.py", line 108, in <module>
    pub.publish(ThrustArray)
  File "/opt/ros/kinetic/lib/python2.7/dist-packages/rospy/topics.py", line 886, in publish
    raise ROSSerializationException(str(e))
rospy.exceptions.ROSSerializationException: <class 'struct.error'>: 'required argument is not a float' when writing 'action: 
  - [0.5        3.78099775 0.5        1.07836843]'

Comment by haloted on 2019-09-24:
This is my current code for the same error:
    while not rospy.is_shutdown():

        for i in range(len(obs)):

            action, _ = model.predict(obs[i])
            # print("Action: {}".format(action))

            Thrust = action2Thrust(action)
            # print("Thrust: {}".format(Thrust))

            ThrustArray.action = list(Thrust)
        
            rospy.loginfo(ThrustArray)
            pub.publish(ThrustArray)
            rate.sleep()

Comment by haloted on 2019-09-24:
Here are some of the output I have for data types:
Thrust is type: <class 'numpy.ndarray'>
ThrustArray is type: <class 'transmit_thrust.msg._ThrustAction.ThrustAction'>
ThrustArray.action is type: <class 'list'>
[INFO] [1569379841.331428]: [array([0.5       , 3.83800876, 0.71245861, 0.77146018])]
Thrust is type: <class 'numpy.ndarray'>
ThrustArray is type: <class 'transmit_thrust.msg._ThrustAction.ThrustAction'>
ThrustArray.action is type: <class 'list'>
[INFO] [1569379841.341008]: [array([0.5       , 3.90113711, 0.7153132 , 0.95803189])]

Comment by jayess on 2019-09-24:
@haloted Please don't use comments to post code/terminal output, please update your question instead. It's easier to keep track of the question that way
Comment by LeoE on 2019-09-25:
This is because your numpy array is actually a ndarray. In this case use numpys tolist() function:
ThrustArray.action = Thrust.tolist()
Comment by haloted on 2019-09-25:
@LeoE:
Yes it now works with tolist(). Sorry that I am kind of new to python.

