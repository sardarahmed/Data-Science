Q:

Is that a good choice for the architecture?

Hello,
I want to ask whether this idea will be good:

All of my navigation and other high level algorithms will be written in ROS 2 and will be stored in cloud (AWS,Heroku).
I have a sensor (more specifically camera), which will be mounted on a robot and will send the image data to my cloud via ROS2 bridge.
After receiving data, further computations will be done in the cloud.

Originally posted by stevemartin on ROS Answers with karma: 361 on 2018-11-19
Post score: 0

Original comments
Comment by PeteBlackerThe3rd on 2018-11-19:
This really depends on if you have the bandwidth to transfer enough sensor data to the could, if the latency is not going to be a problem and if you really need the processing power of the amazon cloud. Also are there any safety concerns around an unexpected loss of connection?

A:

This is not a good idea.
Navigation, path-planning and path-following controllers generally requires loop rates between 10 and 100Hz, and a corresponding processing (and network) latency of less than 10 to 100mS.
The average WiFi and 3G/4G/LTE cellular networks can barely meet these latency guarantees, and even when they do, there isn't a lot of latency budget left over to do computation. If the AWS or Heroku servers are more than a few hundred kilometers away, the round-trip time to the servers and back can start to add up, too!
You might be able to get acceptable performance if you work directly with a wireless carrier to get dedicated bandwidth and latency guarantees, or if you control your local wifi network and communicate with servers that are in the same building, but those options are out of reach for most users.
It is possible to offload some of your very heavy processing to cloud services, but keep in mind that the latency will be high. This could be good for things like recognizing objects, updating a very large map shared between many robots, or a variety of other things that aren't terribly sensitive to latency.

Originally posted by ahendrix with karma: 47576 on 2018-11-19
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by stevemartin on 2018-11-20:
What will be your suggestion? Basically, we have a low level stuff happening in the cloud (actually moving the wheels and etc) and latency there will not be a problem. So should I get the hardware to implement navigation locally? What will be a good choice here?
Comment by gvdhoorn on 2018-11-20:
@stevemartin:

Basically, we have a low level stuff happening in the cloud (actually moving the wheels and etc) and latency there will not be a problem

can you clarify this sentence? Are you saying you already have this working?
Comment by stevemartin on 2018-11-20:
@gvdhoorn What I mean is that the actual wheel encoders are already implemented in the cloud. So I was thinking to implement navigation internally in a robot and use some socket communication to obtain the wheel encoder values (for odometry), do navigation and send the required motions back to cloud
Comment by gvdhoorn on 2018-11-20:
What sort of connections are you using? Decoding encoder signals is typically something done with cycle times of milliseconds or less. How are you delegating that to a cloud instance? Or are you describing a system in which a base driver publishes ints (for example) and a remote node ..
Comment by gvdhoorn on 2018-11-20:
.. subscribes to that and publishes the conversion to engineering units (and proper ROS msgs)?

