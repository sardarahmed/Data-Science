Q:

Multiple Service Calls in ROS2

I have a sensor library that I am using ROS2 services to make function calls to that library. Is there a way to have multiple services  in one node or do I need to make a new node for each individual service call?

Originally posted by mikepark93 on ROS Answers with karma: 47 on 2019-07-31
Post score: 0

A:

A node can have any number of publisher, subscription, service or client.
using std::placeholders::_1;
using std::placeholders::_2;
using std::placeholders::_3;

class MyNode : public rclcpp::Node
{
public:
MyNode(std::string name = "my_node") : Node(name)
{
    _service1 = this->create_service<ServiceT1>("service1", std::bind(&MyNode::handle_service_1, this, _1, _2, _3));
    _service2 = this->create_service<ServiceT2>("service2", std::bind(&MyNode::handle_service_2, this, _1, _2, _3));
}

private:
    void handle_service_1(
        const std::shared_ptr<rmw_request_id_t> request_header,
        const std::shared_ptr<ServiceT1::Request> request,
        const std::shared_ptr<ServiceT1::Response> response)
    {
     std::cout<<"This is service 1"<<std::endl;
    }

    void handle_service_2(
        const std::shared_ptr<rmw_request_id_t> request_header,
        const std::shared_ptr<ServiceT2::Request> request,
        const std::shared_ptr<ServiceT2::Response> response);
    {
     std::cout<<"This is service 2"<<std::endl;
    }

    rclcpp::Service<ServiceT1>::SharedPtr _service1;
    rclcpp::Service<ServiceT2>::SharedPtr _service2;
};

Originally posted by alsora with karma: 1322 on 2019-07-31
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by ShivamPR21 on 2020-07-29:
Can we have the same service names for both services and let it be decided by the request type which service to be used for the response.

