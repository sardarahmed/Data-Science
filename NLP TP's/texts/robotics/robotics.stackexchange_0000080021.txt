Q:

catkin_package(INCLUDE_DIRS include) vs. include_directories(include)

Hi,
What does the catkin_package call do when you specify include as an INCLUDE_DIRS and is that the same as specifying include inside of include_directories?
There is a short explanation on the template CMakeLists.txt file but it doesn't mention anything about the two above methods being the same effectively (if at all they are)? If they are not the same then what is the purpose of each individual one.
Thank you.

Originally posted by 2ROS0 on ROS Answers with karma: 1133 on 2017-04-04
Post score: 0

A:

The include_directories command will let the Compiler search For headers in the respective folder when compiling Files in the package the CMakeLists.txt belongs to.
The INCLUDE tag in command catkin_package will let the Compiler search for headers in the respective folder when compiling other catkin packages that depend in the package in which you added this to CMakeLists.txt.

Originally posted by Wolf with karma: 7555 on 2017-04-04
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by 2ROS0 on 2017-04-04:
So the path entered in INCLUDE_DIRS tag in catkin_package() is relative to all the dependent packages? That seems counterintuitive - what if different dependent packages had their header files in different relative locations?
Comment by Wolf on 2017-04-05:
No, if you add include to catkin_package all dependent packages will user the include sub folder of the package in which you added it.  There own (relative) include folder still has to be added using include_directories
Comment by 2ROS0 on 2017-04-05:
So if I had two packages A and B such that package B depends on A. Then in the CMakeLists.txt of package A, I should add my INCLUDE_DIRS so that package B can know where to find the files when it's compiling? That means, I should always add INCLUDE_DIRS whenever I have headers?
Comment by joq on 2017-04-06:
Yes, assuming the headers are not just internal.

