Q:

build errors when trying to use CVbridge with ROS Hydro

I'm trying to follow this tutorial - http://wiki.ros.org/cv_bridge/Tutorials/UsingCvBridgeToConvertBetweenROSImagesAndOpenCVImages
to stream images to a node.
After I added the node see_image.cpp, I'm adding an executable by name image_viewer.
To be clearer, my CMakeLists.txt looks like this -
cmake_minimum_required(VERSION 2.8.3)
project(visual_odometry)

find_package(catkin REQUIRED COMPONENTS
  ardrone_autonomy
  roscpp
  rospy
  sensor_msgs
  cv_bridge
  std_msgs
  image_transport
)
include_directories(
  ${catkin_INCLUDE_DIRS}
)
add_executable(subscriber_test src/subscriber.cpp)
target_link_libraries(subscriber_test
${catkin_LIBRARIES}
)
   find_package(OpenCV REQUIRED)
   include_directories(${OpenCV_INCLUDE_DIRS})
   add_executable(image_viewer src/see_image.cpp)
   target_link_libraries(image_viewer ${OpenCV_LIBRARIES})

And my package.xml looks like this:
<package>
  <name>visual_odometry</name>
  <version>0.0.0</version>
  <description>The visual_odometry package</description>
 <maintainer email="voladoddi@todo.todo">voladoddi</maintainer>
 <buildtool_depend>catkin</buildtool_depend>
  <build_depend>ardrone_autonomy</build_depend>
  <build_depend>roscpp</build_depend>
  <build_depend>rospy</build_depend>
<!--adding build_depend and run_depend according to page http://wiki.ros.org/cv_bridge/Tutorials/UsingCvBridgeToConvertBetweenROSImagesAndOpenCVImages Example 1.4 - ROS node-->
  <build_depend>sensor_msgs</build_depend>
  <build_depend>cv_bridge</build_depend>
  <build_depend>std_msgs</build_depend>
  <build_depend>image_transport</build_depend>
  

  <run_depend>ardrone_autonomy</run_depend>
  <run_depend>roscpp</run_depend>
  <run_depend>rospy</run_depend>
<!--run dependencies for the 4 build dependencies added above-->
  <run_depend>sensor_msgs</run_depend>
  <run_depend>cv_bridge</run_depend>
  <run_depend>std_msgs</run_depend>
  <run_depend>image_transport</run_depend>

  <!-- The export tag contains other, unspecified, tags -->
  <export>
    <!-- You can specify that this package is a metapackage here: -->
    <!-- <metapackage/> -->

    <!-- Other tools can request additional information be placed here -->

  </export>
</package>

After all this, I try to build using catkin_make and I'm getting the following errors:
  Linking CXX executable /home/voladoddi/catkin_ws/devel/lib/visual_odometry/image_viewer
[  5%] Performing install step for 'ardronelib'
make[3]: warning: jobserver unavailable: using -j1.  Add `+' to parent make rule.
[  6%] Completed 'ardronelib'
[  8%] Built target ardronelib
[  9%] Built target subscriber_test
CMakeFiles/image_viewer.dir/src/see_image.cpp.o: In function `main':
see_image.cpp:(.text+0x55): undefined reference to `ros::init(int&, char**, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)'
see_image.cpp:(.text+0x81): undefined reference to `ros::spin()'
CMakeFiles/image_viewer.dir/src/see_image.cpp.o: In function `image_transport::TransportHints::TransportHints(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, ros::TransportHints const&, ros::NodeHandle const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':
see_image.cpp:(.text._ZN15image_transport14TransportHintsC2ERKSsRKN3ros14TransportHintsERKNS3_10NodeHandleES2_[_ZN15image_transport14TransportHintsC5ERKSsRKN3ros14TransportHintsERKNS3_10NodeHandleES2_]+0x53): undefined reference to `ros::NodeHandle::NodeHandle(ros::NodeHandle const&)'
see_image.cpp:(.text._ZN15image_transport14TransportHintsC2ERKSsRKN3ros14TransportHintsERKNS3_10NodeHandleES2_[_ZN15image_transport14TransportHintsC5ERKSsRKN3ros14TransportHintsERKNS3_10NodeHandleES2_]+0x84): undefined reference to `ros::NodeHandle::~NodeHandle()'
CMakeFiles/image_viewer.dir/src/see_image.cpp.o: In function `image_transport::TransportHints::~TransportHints()':
see_image.cpp:(.text._ZN15image_transport14TransportHintsD2Ev[_ZN15image_transport14TransportHintsD5Ev]+0x19): undefined reference to `ros::NodeHandle::~NodeHandle()'
CMakeFiles/image_viewer.dir/src/see_image.cpp.o: In function `ImageConverter::ImageConverter()':
see_image.cpp:(.text._ZN14ImageConverterC2Ev[_ZN14ImageConverterC5Ev]+0x47): undefined reference to `ros::NodeHandle::NodeHandle(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)'
see_image.cpp:(.text._ZN14ImageConverterC2Ev[_ZN14ImageConverterC5Ev]+0x82): undefined reference to `image_transport::ImageTransport::ImageTransport(ros::NodeHandle const&)'
see_image.cpp:(.text._ZN14ImageConverterC2Ev[_ZN14ImageConverterC5Ev]+0x11a): undefined reference to `ros::NodeHandle::NodeHandle(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)'
see_image.cpp:(.text._ZN14ImageConverterC2Ev[_ZN14ImageConverterC5Ev]+0x291): undefined reference to `ros::NodeHandle::~NodeHandle()'
see_image.cpp:(.text._ZN14ImageConverterC2Ev[_ZN14ImageConverterC5Ev]+0x31d): undefined reference to `image_transport::ImageTransport::advertise(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, bool)'
see_image.cpp:(.text._ZN14ImageConverterC2Ev[_ZN14ImageConverterC5Ev]+0x42e): undefined reference to `ros::NodeHandle::~NodeHandle()'
see_image.cpp:(.text._ZN14ImageConverterC2Ev[_ZN14ImageConverterC5Ev]+0x505): undefined reference to `image_transport::ImageTransport::~ImageTransport()'
see_image.cpp:(.text._ZN14ImageConverterC2Ev[_ZN14ImageConverterC5Ev]+0x519): undefined reference to `ros::NodeHandle::~NodeHandle()'
CMakeFiles/image_viewer.dir/src/see_image.cpp.o: In function `ImageConverter::~ImageConverter()':
see_image.cpp:(.text._ZN14ImageConverterD2Ev[_ZN14ImageConverterD5Ev]+0x49): undefined reference to `image_transport::ImageTransport::~ImageTransport()'
see_image.cpp:(.text._ZN14ImageConverterD2Ev[_ZN14ImageConverterD5Ev]+0x55): undefined reference to `ros::NodeHandle::~NodeHandle()'
see_image.cpp:(.text._ZN14ImageConverterD2Ev[_ZN14ImageConverterD5Ev]+0x9f): undefined reference to `image_transport::ImageTransport::~ImageTransport()'
see_image.cpp:(.text._ZN14ImageConverterD2Ev[_ZN14ImageConverterD5Ev]+0xb0): undefined reference to `ros::NodeHandle::~NodeHandle()'
CMakeFiles/image_viewer.dir/src/see_image.cpp.o: In function `ImageConverter::imageCb(boost::shared_ptr<sensor_msgs::Image_<std::allocator<void> > const> const&)':
see_image.cpp:(.text._ZN14ImageConverter7imageCbERKN5boost10shared_ptrIKN11sensor_msgs6Image_ISaIvEEEEE[ImageConverter::imageCb(boost::shared_ptr<sensor_msgs::Image_<std::allocator<void> > const> const&)]+0x3f): undefined reference to `cv_bridge::toCvCopy(boost::shared_ptr<sensor_msgs::Image_<std::allocator<void> > const> const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'
see_image.cpp:(.text._ZN14ImageConverter7imageCbERKN5boost10shared_ptrIKN11sensor_msgs6Image_ISaIvEEEEE[ImageConverter::imageCb(boost::shared_ptr<sensor_msgs::Image_<std::allocator<void> > const> const&)]+0x18c): undefined reference to `cv_bridge::CvImage::toImageMsg() const'
see_image.cpp:(.text._ZN14ImageConverter7imageCbERKN5boost10shared_ptrIKN11sensor_msgs6Image_ISaIvEEEEE[ImageConverter::imageCb(boost::shared_ptr<sensor_msgs::Image_<std::allocator<void> > const> const&)]+0x1bf): undefined reference to `image_transport::Publisher::publish(boost::shared_ptr<sensor_msgs::Image_<std::allocator<void> > const> const&) const'
see_image.cpp:(.text._ZN14ImageConverter7imageCbERKN5boost10shared_ptrIKN11sensor_msgs6Image_ISaIvEEEEE[ImageConverter::imageCb(boost::shared_ptr<sensor_msgs::Image_<std::allocator<void> > const> const&)]+0x259): undefined reference to `ros::console::g_initialized'
see_image.cpp:(.text._ZN14ImageConverter7imageCbERKN5boost10shared_ptrIKN11sensor_msgs6Image_ISaIvEEEEE[ImageConverter::imageCb(boost::shared_ptr<sensor_msgs::Image_<std::allocator<void> > const> const&)]+0x269): undefined reference to `ros::console::initialize()'
see_image.cpp:(.text._ZN14ImageConverter7imageCbERKN5boost10shared_ptrIKN11sensor_msgs6Image_ISaIvEEEEE[ImageConverter::imageCb(boost::shared_ptr<sensor_msgs::Image_<std::allocator<void> > const> const&)]+0x2b2): undefined reference to `ros::console::initializeLogLocation(ros::console::LogLocation*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, ros::console::levels::Level)'
see_image.cpp:(.text._ZN14ImageConverter7imageCbERKN5boost10shared_ptrIKN11sensor_msgs6Image_ISaIvEEEEE[ImageConverter::imageCb(boost::shared_ptr<sensor_msgs::Image_<std::allocator<void> > const> const&)]+0x2ed): undefined reference to `ros::console::setLogLocationLevel(ros::console::LogLocation*, ros::console::levels::Level)'
see_image.cpp:(.text._ZN14ImageConverter7imageCbERKN5boost10shared_ptrIKN11sensor_msgs6Image_ISaIvEEEEE[ImageConverter::imageCb(boost::shared_ptr<sensor_msgs::Image_<std::allocator<void> > const> const&)]+0x2f7): undefined reference to `ros::console::checkLogLocationEnabled(ros::console::LogLocation*)'
see_image.cpp:(.text._ZN14ImageConverter7imageCbERKN5boost10shared_ptrIKN11sensor_msgs6Image_ISaIvEEEEE[ImageConverter::imageCb(boost::shared_ptr<sensor_msgs::Image_<std::allocator<void> > const> const&)]+0x35b): undefined reference to `ros::console::print(ros::console::FilterBase*, void*, ros::console::levels::Level, char const*, int, char const*, char const*, ...)'
CMakeFiles/image_viewer.dir/src/see_image.cpp.o: In function `void ros::NodeHandle::param<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const':
see_image.cpp:(.text._ZNK3ros10NodeHandle5paramISsEEvRKSsRT_RKS4_[void ros::NodeHandle::param<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const]+0x27): undefined reference to `ros::NodeHandle::hasParam(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'
see_image.cpp:(.text._ZNK3ros10NodeHandle5paramISsEEvRKSsRT_RKS4_[void ros::NodeHandle::param<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const]+0x42): undefined reference to `ros::NodeHandle::getParam(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const'
CMakeFiles/image_viewer.dir/src/see_image.cpp.o: In function `image_transport::Subscriber image_transport::ImageTransport::subscribe<ImageConverter>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, void (ImageConverter::*)(boost::shared_ptr<sensor_msgs::Image_<std::allocator<void> > const> const&), ImageConverter*, image_transport::TransportHints const&)':
see_image.cpp:(.text._ZN15image_transport14ImageTransport9subscribeI14ImageConverterEENS_10SubscriberERKSsjMT_FvRKN5boost10shared_ptrIKN11sensor_msgs6Image_ISaIvEEEEEEPS6_RKNS_14TransportHintsE[image_transport::Subscriber image_transport::ImageTransport::subscribe<ImageConverter>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, void (ImageConverter::*)(boost::shared_ptr<sensor_msgs::Image_<std::allocator<void> > const> const&), ImageConverter*, image_transport::TransportHints const&)]+0xaa): undefined reference to `image_transport::ImageTransport::subscribe(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, boost::function<void (boost::shared_ptr<sensor_msgs::Image_<std::allocator<void> > const> const&)> const&, boost::shared_ptr<void> const&, image_transport::TransportHints const&)'
collect2: ld returned 1 exit status
make[2]: *** [/home/voladoddi/catkin_ws/devel/lib/visual_odometry/image_viewer] Error 1
make[1]: *** [visual_odometry/CMakeFiles/image_viewer.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
[ 39%] Built target ardrone_autonomy_generate_messages_py
make: *** [all] Error 2
Invoking "make" failed

I have a feeling this has to do with incorrect declarations / missing declarations in package.xml and CMakeLists.txt.
NOTE: the errors before in the first version of the code were because there were line numbers in my code from the tutorial.
EDIT: the above issue is solved.
CPP file is as below:
#include <ros/ros.h>
#include <image_transport/image_transport.h>
#include <cv_bridge/cv_bridge.h>
#include <sensor_msgs/image_encodings.h>
#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/highgui/highgui.hpp>

static const std::string OPENCV_WINDOW = "Image window";

class ImageConverter
{
  ros::NodeHandle nh_;
  image_transport::ImageTransport it_;
  image_transport::Subscriber image_sub_;
  image_transport::Publisher image_pub_;
  
public:
  ImageConverter()
    : it_(nh_)
  {
    // Subscrive to input video feed and publish output video feed
    image_sub_ = it_.subscribe("/ardrone/image_raw", 1, 
      &ImageConverter::imageCb, this);
    image_pub_ = it_.advertise("/image_converter/output_video", 1);

    cv::namedWindow(OPENCV_WINDOW);
  }

  ~ImageConverter()
  {
    cv::destroyWindow(OPENCV_WINDOW);
  }

  void imageCb(const sensor_msgs::ImageConstPtr& msg)
  {
    cv_bridge::CvImagePtr cv_ptr;
    try
    {
      cv_ptr = cv_bridge::toCvCopy(msg, sensor_msgs::image_encodings::BGR8);
    }
    catch (cv_bridge::Exception& e)
    {
      ROS_ERROR("cv_bridge exception: %s", e.what());
      return;
    }

    // Draw an example circle on the video stream
    if (cv_ptr->image.rows > 60 && cv_ptr->image.cols > 60)
      cv::circle(cv_ptr->image, cv::Point(50, 50), 10, CV_RGB(255,0,0));

    // Update GUI Window
    cv::imshow(OPENCV_WINDOW, cv_ptr->image);
    cv::waitKey(3);
    
    // Output modified video stream
    image_pub_.publish(cv_ptr->toImageMsg());
  }
};

int main(int argc, char** argv)
{
  ros::init(argc, argv, "image_converter");
  ImageConverter ic;
  ros::spin();
  return 0;
}

Originally posted by voladoddi on ROS Answers with karma: 87 on 2014-09-16
Post score: 1

Original comments
Comment by bvbdort on 2014-09-16:
can you post your .cpp file
Comment by voladoddi on 2014-09-16:
I needed to add a target library for the new executable on catkin_libraries. worked. Thank you. However, still not able to see the images.
Do have a look at the .cpp file.

A:

It appears that your image_viewer program uses ros::spin, therefore you will need to link against at least roscpp, this diff should work:
--- cmake_minimum_required(VERSION 2.8.3)
+++ (clipboard)
@@ -20,4 +20,4 @@
    find_package(OpenCV REQUIRED)
    include_directories(${OpenCV_INCLUDE_DIRS})
    add_executable(image_viewer src/see_image.cpp)
-   target_link_libraries(image_viewer ${OpenCV_LIBRARIES})
+   target_link_libraries(image_viewer ${OpenCV_LIBRARIES} ${catkin_LIBRARIES})

Originally posted by William with karma: 17335 on 2014-09-16
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by voladoddi on 2014-09-16:
find_package(OpenCV)
include_directories(${OpenCV_INCLUDE_DIRS})
   add_executable(image_viewer src/see_image.cpp)
   target_link_libraries(image_viewer ${OpenCV_LIBRARIES})
target_link_libraries(image_viewer ${catkin_LIBRARIES})
is what I did. works. Thank you.
Comment by voladoddi on 2014-09-16:
However when I run the executable, I am now not able to see any image windows. I'm trying to visualize the images from a .bag file.
I can see that the topics are published when i run the bag file and say rostopic list
Comment by William on 2014-09-16:
Run rqt_graph and make sure your topics are connected correctly.
Comment by graouve on 2014-09-18:
Awesome this solved my issue as well. For some reason I had to do it on two lines like voladoddi, for it to work.

