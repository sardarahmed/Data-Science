Q:

How to broadcast hardware-encoded video from the logitech C920 to ROS?

The task is as follows: there is a camera logitech c920 with a built-in hardware video encoder in h264, it's connected to BeagleBone Blue (but it's really not important, since instead of it there may be at least raspberry pi, though a laptop, since it's still full of ubuntu ) on it, respectively, ubuntu 16.04 with ROS Kinetic slave and transfer the video over the local wifi network to the laptop with the ROS master. How to get the video from the camera already encoded and transmit it to the ROS master without re-encoding to BeagleBone Blue?

Originally posted by amburkoff on ROS Answers with karma: 26 on 2018-06-26
Post score: 0

Original comments
Comment by jayess on 2018-06-26:
What do you mean by

without re-encoding to BeagleBone Blue

Comment by amburkoff on 2018-06-26:
beaglebone blue to get c camera c920 is already hardware-encoded video and send it as it is in the ROS or as a web server to send it in such a form to the laptop and there somehow shove it into the ROS (to not load the processor with video encoding on the beaglebone)
Comment by gvdhoorn on 2018-06-26:
I believe this is a duplicate of #q232981.
Comment by gvdhoorn on 2018-06-26:
There is a note about "publishing compressed images directly" on the compressed_image_transport page (here). That could work in this case as well, but there is no default x264 transport available.

A:

I solved the problem in half, help send the video stream to ROS.
There are two ways to receive and translate a hardware-encoded video:
https://wiki.matthiasbock.net/index.php/Logitech_C920,_streaming_H.264
and
http://oz9aec.net/software/gstreamer/using-the-logitech-c920-webcam-with-gstreamer-12
and my generalizing article in Russian:
https://habr.com/post/415567/
As a result, according to the second variant, we get:
Broadcast over the network via Gstreamer
On the receiving computer, start the receiver:
gst-launch-1.0 -v udpsrc port=6666 ! application/x-rtp, encoding-name=H264 ! rtph264depay ! h264parse ! avdec_h264 ! videoconvert ! autovideosink

On the device with the camera, we start the transfer of the hardware-coded video:
gst-launch-1.0 uvch264src name=src auto-start=true src.vidsrc ! video/x-h264,width=160,height=120,framerate=30/1 ! h264parse ! rtph264pay ! udpsink host=192.168.1.196 port=6666

And send this video stream to ROS via gscam in my arcticle:
https://habr.com/post/415735/

Originally posted by amburkoff with karma: 26 on 2018-06-28
This answer was ACCEPTED on the original site
Post score: 1

