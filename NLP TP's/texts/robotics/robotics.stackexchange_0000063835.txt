Q:

DWAPlannerROS vs TrajectoryPlannerROS

Hi all,
I am currently looking to implement my own local planner plugin for the navigation stack. I was looking at DWAPlannerROS and TrajectoryPlannerROS to help me start with. Though I am not sure I understand the relation between these 2 planners. Are they just 2 different local planners or is one part of the second?
I am asking because, as far as I understand from this wiki and the source, the DWA algorithm is implemented twice. Once in TrajectoryPlannerROS and another time in DWAPlannerROS.
Am I correct in saying so? And if so, is there a reason why the DWA is coded twice?
Now, if I understand this section, I believe the recommended way to implement a new local planner plugin is to inherit DWAPlanner. Do you confirm?
I am asking because there is a clean tutorial so as to write custom global planners, but I could not find an equivalent for local planners.
Thanks,
Antoine.

Originally posted by arennuit on ROS Answers with karma: 955 on 2014-11-06
Post score: 2

Original comments
Comment by Mani on 2014-11-06:
This might also be helpful: http://answers.ros.org/question/10718/dwa_planner-vs-base_local_planner/?answer=15804#post-id-15804
Comment by arennuit on 2014-11-06:
Haha good point! Thanks ;)
Comment by RB on 2015-01-22:
If we want to change/update trajectories (instruct the automated navigator to follow our trajectory)then which local_planner should be modified?

A:

In principle you can just implement the bare base_local_planner interface. The idea of the section you cited is that some functionality is quite common among local planners, e.g. checkTrajectory. If your local planner behaves similarly it would be a good idea to use the same code. What makes more sense for you depends on your algorithm.

Originally posted by dornhege with karma: 31395 on 2014-11-06
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by arennuit on 2014-11-06:
Okey dok, understood. Thanks for your help!

