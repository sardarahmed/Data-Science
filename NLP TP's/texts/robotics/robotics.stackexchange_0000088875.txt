Q:

Problem getting ROS environment variables with python

I'm trying to get the environment variables ROS_MASTER_URI ,ROS_IP and ROS_HOSTNAME with a python script to show it in some information screen for the user. When I open a terminal and echo myself them I get the expected result. But when I do the same with the script I don't get any values  like they were not set at all. I tried these ways already:

 print(os.environ.get("ROS_MASTER_URI"))
 proc = subprocess.Popen('echo "$ROS_MASTER_URI"',shell=True, universal_newlines=True,stdin=subprocess.PIPE,stdout=subprocess.PIPE, stderr=subprocess.PIPE, executable="/bin/bash")

 print(os.environ)

Does anyone know why this is not working as expected ?
I'm using python version 3.5 and my ros version is kinetic on an ubuntu 16.04

Originally posted by Lycea on ROS Answers with karma: 15 on 2018-09-05
Post score: 0

A:

Are you starting your Python script from a bash session that has sourced the relevant setup.bash file?
If not, then those variables will not be set and that would explain what you report.

Originally posted by gvdhoorn with karma: 86574 on 2018-09-05
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Lycea on 2018-09-06:
Thank you, that actually was the problem. I thought about it bevore but I was the opinion it already used the bashrc for initialisation.  After a small tweak with adding source it now worked :)
fixed with source /opt/ros/kinetic/setup.bash;echo " $ROS_MASTER_URI"

