Q:

Tranform point coordinate from kinect frame to robot frame

Hi All,
I am trying to learn tf for the purpose of using it for getting the coresponding coordinate of a frame with respect to robot frame having the data(x,y,z) from kinect frame. From the turtlesim tutorial I could not understand how i can use it in my case. As I see in turtlesim, there are two child frames(turtle1 and turtle2) and one parent frame which is the world. tutrle1 publishes it relative transform with respect to The world. turtle2 simply follows the turtle1 using this. But as i think here relative tranform between turtle1 and turtle2 is known.
I would really appreciate if someone can suggest me how to do it ? I am really new to tf. Is it possible for me tranform between base_link and optical_depth_frame of kinect and use it to do my task.
Regards,
Subhasis

Originally posted by Subhasis on ROS Answers with karma: 31 on 2013-07-02
Post score: 0

A:

Yes, this is possible and the standard use case.
The relative transform between the turtles is known indirectly as they both have a pose in the world. Likewise the relative transform from kinect to robot must have been fed in from somewhere into tf. This could also happen from different modules as long as there is a transform chain from base_link to the kinect frame.
Just call the tf transform functions, use base_link as the target and the kinect's frame from the message. If that will work depends on the fact that someone must have set it up on your robot.

Originally posted by dornhege with karma: 31395 on 2013-07-02
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Subhasis on 2013-07-02:
Thanks. My robot at the robot is not working with localization. Hence, there is no world coordinate system outside the robot. But, I think I understood your point. I would rather use a static_transform_publisher for my task. And I would have to manually calculate the relative transform.
Comment by dornhege on 2013-07-03:
If you only want to transform between kinect and the robot frame, you won't need localization. Depending on your robot actually setting up an URDF might be a nicer idea than just the static transform publisher (although it would essentially do the same).

