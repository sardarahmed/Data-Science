Q:

With rospy, messages don't seem to be recieved if published soon after creating the publisher

I've got an app like this:
#!/usr/bin/env python
PKG_NAME = 'straight'
import roslib; roslib.load_manifest(PKG_NAME)
import rospy
from std_msgs.msg import String

if __name__ == '__main__':
    rospy.init_node("test")
    speakPub = rospy.Publisher('/testing', String)
    speakPub.publish(String("Hello World"))

And that message never seems to get received anywhere (my other node listening for it, or the rostopic echo i have running on another terminal).  However, if I add rospy.sleep(1) between creating the publisher and using it, then the message gets through.
Am I doing something wrong? Do I need to wait between creating the publisher and using it?

Originally posted by Murph on ROS Answers with karma: 1033 on 2012-04-29
Post score: 5

A:

This is normal (also... I assume you have a rospy.spin() after you publish, or else things are getting destructed too early). See http://answers.ros.org/question/9665/test-for-when-a-rospy-publisher-become-available?answer=14125#post-id-14125
Basically, there is a nonzero amount of time where a subscriber actually subscribes to a publisher. If a publisher publishes a message during that time, the subscriber will not receive it, as it was not yet subscribed when the message was sent. If you want any subscriber to get the last message the publisher sent when it connects, you should use a latched topic.
When you do rospy.sleep(1) before publishing, you are allowing some time for the subscribers to connect before you actually publish the message. Therefore, the subscriber does receive the message.

Originally posted by Eric Perko with karma: 8406 on 2012-04-29
This answer was ACCEPTED on the original site
Post score: 5

