Q:

Why doesn't std_msgs::Float32MultiArray have a Header field?

Some messages (e.g., sensor_msgs::PointCloud2) have Header fields, while many others don't.
In particular, why don't float32 multiarrays (or any other std_msg/ messages) have header fields? Why was the decision made to only selectively provide header fields. How am I supposed to track the timing of messages without header fields, since the header contains the timestamp?

Originally posted by galv on ROS Answers with karma: 13 on 2017-01-13
Post score: 1

A:

From the ROS wiki:

Standard ROS Messages including common message types representing primitive data types and other basic message constructs, such as multiarrays.
...
std_msgs contains wrappers for ROS primitive types, which are documented in the msg specification. It also contains the Empty type, which is useful for sending an empty signal. However, these types do not convey semantic meaning about their contents: every message simply has a field called "data". Therefore, while the messages in this package can be useful for quick prototyping, they are not intended for "long-term" usage.

As such, they are simply not intended to have a header. Headers are added for all the messages with semantic meaning where this makes sense. This goes especially for sensor_msgs, as it is obvious a sensor reading needs to contain the header.
You can and should create your own message with semantic meaning that can hold whatever your require. See also this related discussion on discourse that just popped up recently.

Originally posted by mgruhler with karma: 12390 on 2017-01-14
This answer was ACCEPTED on the original site
Post score: 2

