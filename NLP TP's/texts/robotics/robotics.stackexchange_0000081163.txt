Q:

try to build source moveit with source installed ompl

I am trying to introduce one new planner to my ompl. This is the reason that I need to install source ompl. I successfully built source ompl but failed when I tried to build moveit. Here is my reuslt of catkin build. Anybody has the similar problem?
/home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/src/constraints_library.cpp: In member function ‘ompl::base::StateStoragePtr ompl_interface::ConstraintsLibrary::constructConstraintApproximation(const ModelBasedPlanningContextPtr&, const Constraints&, const Constraints&, const ompl_interface::ConstraintApproximationConstructionOptions&, ompl_interface::ConstraintApproximationConstructionResults&)’:

/home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/src/constraints_library.cpp:439:116: error: no matching function for call to ‘ompl::base::StateStorageWithMetadata<std::pair<std::vector<long unsigned int>, std::map<long unsigned int, std::pair<long unsigned int, long unsigned int> > > >::StateStorageWithMetadata(const ModelBasedStateSpacePtr&)’
ConstraintApproximationStateStorage* cass = new ConstraintApproximationStateStorage(pcontext->getOMPLStateSpace());
                                                                                                                ^
In file included from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/include/moveit/ompl_interface/model_based_planning_context.h:48:0,
                 from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/include/moveit/ompl_interface/planning_context_manager.h:40,
                 from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/include/moveit/ompl_interface/constraints_library.h:41,
                 from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/src/constraints_library.cpp:37:
/opt/ros/indigo/include/ompl/base/StateStorage.h:221:13: note: candidate: ompl::base::StateStorageWithMetadata<M>::StateStorageWithMetadata(const StateSpacePtr&) [with M = std::pair<std::vector<long unsigned int>, std::map<long unsigned int, std::pair<long unsigned int, long unsigned int> > >; ompl::base::StateSpacePtr = std::shared_ptr<ompl::base::StateSpace>]
             StateStorageWithMetadata(const StateSpacePtr &space) : StateStorage(space)
             ^
/opt/ros/indigo/include/ompl/base/StateStorage.h:221:13: note:   no known conversion for argument 1 from ‘const ModelBasedStateSpacePtr {aka const boost::shared_ptr<ompl_interface::ModelBasedStateSpace>}’ to ‘const StateSpacePtr& {aka const std::shared_ptr<ompl::base::StateSpace>&}’
/opt/ros/indigo/include/ompl/base/StateStorage.h:214:15: note: candidate: ompl::base::StateStorageWithMetadata<std::pair<std::vector<long unsigned int>, std::map<long unsigned int, std::pair<long unsigned int, long unsigned int> > > >::StateStorageWithMetadata(const ompl::base::StateStorageWithMetadata<std::pair<std::vector<long unsigned int>, std::map<long unsigned int, std::pair<long unsigned int, long unsigned int> > > >&)
         class StateStorageWithMetadata : public StateStorage
               ^
/opt/ros/indigo/include/ompl/base/StateStorage.h:214:15: note:   no known conversion for argument 1 from ‘const ModelBasedStateSpacePtr {aka const boost::shared_ptr<ompl_interface::ModelBasedStateSpace>}’ to ‘const ompl::base::StateStorageWithMetadata<std::pair<std::vector<long unsigned int>, std::map<long unsigned int, std::pair<long unsigned int, long unsigned int> > > >&’
/opt/ros/indigo/include/ompl/base/StateStorage.h:214:15: note: candidate: ompl::base::StateStorageWithMetadata<std::pair<std::vector<long unsigned int>, std::map<long unsigned int, std::pair<long unsigned int, long unsigned int> > > >::StateStorageWithMetadata(ompl::base::StateStorageWithMetadata<std::pair<std::vector<long unsigned int>, std::map<long unsigned int, std::pair<long unsigned int, long unsigned int> > > >&&)
/opt/ros/indigo/include/ompl/base/StateStorage.h:214:15: note:   no known conversion for argument 1 from ‘const ModelBasedStateSpacePtr {aka const boost::shared_ptr<ompl_interface::ModelBasedStateSpace>}’ to ‘ompl::base::StateStorageWithMetadata<std::pair<std::vector<long unsigned int>, std::map<long unsigned int, std::pair<long unsigned int, long unsigned int> > > >&&’
/home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/src/constraints_library.cpp:471:63: error: no matching function for call to ‘ompl::base::ScopedState<>::ScopedState(const ModelBasedStateSpacePtr&)’
   ompl::base::ScopedState<> temp(pcontext->getOMPLStateSpace());
                                                               ^
In file included from /opt/ros/indigo/include/ompl/base/ProblemDefinition.h:48:0,
                 from /opt/ros/indigo/include/ompl/base/Planner.h:41,
                 from /opt/ros/indigo/include/ompl/geometric/SimpleSetup.h:40,
                 from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/include/moveit/ompl_interface/model_based_planning_context.h:45,
                 from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/include/moveit/ompl_interface/planning_context_manager.h:40,
                 from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/include/moveit/ompl_interface/constraints_library.h:41,
                 from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/src/constraints_library.cpp:37:
/opt/ros/indigo/include/ompl/base/ScopedState.h:124:13: note: candidate: ompl::base::ScopedState<T>::ScopedState(ompl::base::StateSpacePtr, const ompl::base::State*) [with T = ompl::base::StateSpace; ompl::base::StateSpacePtr = std::shared_ptr<ompl::base::StateSpace>]
             ScopedState(StateSpacePtr space, const State *state) : space_(std::move(space))
             ^
/opt/ros/indigo/include/ompl/base/ScopedState.h:124:13: note:   candidate expects 2 arguments, 1 provided
/opt/ros/indigo/include/ompl/base/ScopedState.h:105:13: note: candidate: template<class O> ompl::base::ScopedState<T>::ScopedState(const ompl::base::ScopedState<O>&)
             ScopedState(const ScopedState<O> &other)
             ^
/opt/ros/indigo/include/ompl/base/ScopedState.h:105:13: note:   template argument deduction/substitution failed:
/home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/src/constraints_library.cpp:471:63: note:   ‘const ModelBasedStateSpacePtr {aka const boost::shared_ptr<ompl_interface::ModelBasedStateSpace>}’ is not derived from ‘const ompl::base::ScopedState<T>’
   ompl::base::ScopedState<> temp(pcontext->getOMPLStateSpace());
                                                               ^
In file included from /opt/ros/indigo/include/ompl/base/ProblemDefinition.h:48:0,
                 from /opt/ros/indigo/include/ompl/base/Planner.h:41,
                 from /opt/ros/indigo/include/ompl/geometric/SimpleSetup.h:40,
                 from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/include/moveit/ompl_interface/model_based_planning_context.h:45,
                 from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/include/moveit/ompl_interface/planning_context_manager.h:40,
                 from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/include/moveit/ompl_interface/constraints_library.h:41,
                 from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/src/constraints_library.cpp:37:
/opt/ros/indigo/include/ompl/base/ScopedState.h:96:13: note: candidate: ompl::base::ScopedState<T>::ScopedState(const ompl::base::ScopedState<T>&) [with T = ompl::base::StateSpace]
             ScopedState(const ScopedState<T> &other) : space_(other.getSpace())
             ^
/opt/ros/indigo/include/ompl/base/ScopedState.h:96:13: note:   no known conversion for argument 1 from ‘const ModelBasedStateSpacePtr {aka const boost::shared_ptr<ompl_interface::ModelBasedStateSpace>}’ to ‘const ompl::base::ScopedState<>&’
/opt/ros/indigo/include/ompl/base/ScopedState.h:84:22: note: candidate: ompl::base::ScopedState<T>::ScopedState(ompl::base::StateSpacePtr) [with T = ompl::base::StateSpace; ompl::base::StateSpacePtr = std::shared_ptr<ompl::base::StateSpace>]
             explicit ScopedState(StateSpacePtr space) : space_(std::move(space))
                      ^
/opt/ros/indigo/include/ompl/base/ScopedState.h:84:22: note:   no known conversion for argument 1 from ‘const ModelBasedStateSpacePtr {aka const boost::shared_ptr<ompl_interface::ModelBasedStateSpace>}’ to ‘ompl::base::StateSpacePtr {aka std::shared_ptr<ompl::base::StateSpace>}’
/opt/ros/indigo/include/ompl/base/ScopedState.h:71:22: note: candidate: ompl::base::ScopedState<T>::ScopedState(const SpaceInformationPtr&) [with T = ompl::base::StateSpace; ompl::base::SpaceInformationPtr = std::shared_ptr<ompl::base::SpaceInformation>]
             explicit ScopedState(const SpaceInformationPtr &si) : space_(si->getStateSpace())
                      ^
/opt/ros/indigo/include/ompl/base/ScopedState.h:71:22: note:   no known conversion for argument 1 from ‘const ModelBasedStateSpacePtr {aka const boost::shared_ptr<ompl_interface::ModelBasedStateSpace>}’ to ‘const SpaceInformationPtr& {aka const std::shared_ptr<ompl::base::SpaceInformation>&}’
/home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/src/model_based_planning_context.cpp: In member function ‘virtual void ompl_interface::ModelBasedPlanningContext::configure()’:
/home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/src/model_based_planning_context.cpp:199:64: error: no matching function for call to ‘ompl::base::ScopedState<>::ScopedState(ompl_interface::ModelBasedStateSpacePtr&)’
   ompl::base::ScopedState<> ompl_start_state(spec_.state_space_);
                                                                ^
In file included from /opt/ros/indigo/include/ompl/base/ProblemDefinition.h:48:0,
                 from /opt/ros/indigo/include/ompl/base/Planner.h:41,
                 from /opt/ros/indigo/include/ompl/geometric/SimpleSetup.h:40,
                 from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/include/moveit/ompl_interface/model_based_planning_context.h:45,
                 from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/src/model_based_planning_context.cpp:37:
/opt/ros/indigo/include/ompl/base/ScopedState.h:124:13: note: candidate: ompl::base::ScopedState<T>::ScopedState(ompl::base::StateSpacePtr, const ompl::base::State*) [with T = ompl::base::StateSpace; ompl::base::StateSpacePtr = std::shared_ptr<ompl::base::StateSpace>]
             ScopedState(StateSpacePtr space, const State *state) : space_(std::move(space))
             ^
/opt/ros/indigo/include/ompl/base/ScopedState.h:124:13: note:   candidate expects 2 arguments, 1 provided
/opt/ros/indigo/include/ompl/base/ScopedState.h:105:13: note: candidate: template<class O> ompl::base::ScopedState<T>::ScopedState(const ompl::base::ScopedState<O>&)
             ScopedState(const ScopedState<O> &other)
             ^
/opt/ros/indigo/include/ompl/base/ScopedState.h:105:13: note:   template argument deduction/substitution failed:
/home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/src/model_based_planning_context.cpp:199:64: note:   ‘ompl_interface::ModelBasedStateSpacePtr {aka boost::shared_ptr<ompl_interface::ModelBasedStateSpace>}’ is not derived from ‘const ompl::base::ScopedState<T>’
   ompl::base::ScopedState<> ompl_start_state(spec_.state_space_);
                                                                ^
In file included from /opt/ros/indigo/include/ompl/base/ProblemDefinition.h:48:0,
                 from /opt/ros/indigo/include/ompl/base/Planner.h:41,
                 from /opt/ros/indigo/include/ompl/geometric/SimpleSetup.h:40,
                 from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/include/moveit/ompl_interface/model_based_planning_context.h:45,
                 from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/src/model_based_planning_context.cpp:37:
/opt/ros/indigo/include/ompl/base/ScopedState.h:96:13: note: candidate: ompl::base::ScopedState<T>::ScopedState(const ompl::base::ScopedState<T>&) [with T = ompl::base::StateSpace]
             ScopedState(const ScopedState<T> &other) : space_(other.getSpace())
             ^
/opt/ros/indigo/include/ompl/base/ScopedState.h:96:13: note:   no known conversion for argument 1 from ‘ompl_interface::ModelBasedStateSpacePtr {aka boost::shared_ptr<ompl_interface::ModelBasedStateSpace>}’ to ‘const ompl::base::ScopedState<>&’
/opt/ros/indigo/include/ompl/base/ScopedState.h:84:22: note: candidate: ompl::base::ScopedState<T>::ScopedState(ompl::base::StateSpacePtr) [with T = ompl::base::StateSpace; ompl::base::StateSpacePtr = std::shared_ptr<ompl::base::StateSpace>]
             explicit ScopedState(StateSpacePtr space) : space_(std::move(space))
                      ^
/opt/ros/indigo/include/ompl/base/ScopedState.h:84:22: note:   no known conversion for argument 1 from ‘ompl_interface::ModelBasedStateSpacePtr {aka boost::shared_ptr<ompl_interface::ModelBasedStateSpace>}’ to ‘ompl::base::StateSpacePtr {aka std::shared_ptr<ompl::base::StateSpace>}’
/opt/ros/indigo/include/ompl/base/ScopedState.h:71:22: note: candidate: ompl::base::ScopedState<T>::ScopedState(const SpaceInformationPtr&) [with T = ompl::base::StateSpace; ompl::base::SpaceInformationPtr = std::shared_ptr<ompl::base::SpaceInformation>]
             explicit ScopedState(const SpaceInformationPtr &si) : space_(si->getStateSpace())
                      ^
/opt/ros/indigo/include/ompl/base/ScopedState.h:71:22: note:   no known conversion for argument 1 from ‘ompl_interface::ModelBasedStateSpacePtr {aka boost::shared_ptr<ompl_interface::ModelBasedStateSpace>}’ to ‘const SpaceInformationPtr& {aka const std::shared_ptr<ompl::base::SpaceInformation>&}’
/home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/src/planning_context_manager.cpp: In member function ‘ompl_interface::ModelBasedPlanningContextPtr ompl_interface::PlanningContextManager::getPlanningContext(const planning_interface::PlannerConfigurationSettings&, const StateSpaceFactoryTypeSelector&, const MotionPlanRequest&) const’:
/home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/src/planning_context_manager.cpp:239:101: error: no matching function for call to ‘ompl::geometric::SimpleSetup::SimpleSetup(ompl_interface::ModelBasedStateSpacePtr&)’
     context_spec.ompl_simple_setup_.reset(new ompl::geometric::SimpleSetup(context_spec.state_space_));
                                                                                                     ^
In file included from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/include/moveit/ompl_interface/model_based_planning_context.h:45:0,
                 from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/include/moveit/ompl_interface/planning_context_manager.h:40,
                 from /home/ruinian/ws_moveit/src/moveit/moveit_planners/ompl/ompl_interface/src/planning_context_manager.cpp:37:
/opt/ros/indigo/include/ompl/geometric/SimpleSetup.h:70:22: note: candidate: ompl::geometric::SimpleSetup::SimpleSetup(const StateSpacePtr&)
             explicit SimpleSetup(const base::StateSpacePtr &space);
                      ^
/opt/ros/indigo/include/ompl/geometric/SimpleSetup.h:70:22: note:   no known conversion for argument 1 from ‘ompl_interface::ModelBasedStateSpacePtr {aka boost::shared_ptr<ompl_interface::ModelBasedStateSpace>}’ to ‘const StateSpacePtr& {aka const std::shared_ptr<ompl::base::StateSpace>&}’
/opt/ros/indigo/include/ompl/geometric/SimpleSetup.h:67:22: note: candidate: ompl::geometric::SimpleSetup::SimpleSetup(const SpaceInformationPtr&)
             explicit SimpleSetup(const base::SpaceInformationPtr &si);
                      ^
/opt/ros/indigo/include/ompl/geometric/SimpleSetup.h:67:22: note:   no known conversion for argument 1 from ‘ompl_interface::ModelBasedStateSpacePtr {aka boost::shared_ptr<ompl_interface::ModelBasedStateSpace>}’ to ‘const SpaceInformationPtr& {aka const std::shared_ptr<ompl::base::SpaceInformation>&}’
/opt/ros/indigo/include/ompl/geometric/SimpleSetup.h:63:15: note: candidate: ompl::geometric::SimpleSetup::SimpleSetup(const ompl::geometric::SimpleSetup&)
         class SimpleSetup
               ^
/opt/ros/indigo/include/ompl/geometric/SimpleSetup.h:63:15: note:   no known conversion for argument 1 from ‘ompl_interface::ModelBasedStateSpacePtr {aka boost::shared_ptr<ompl_interface::ModelBasedStateSpace>}’ to ‘const ompl::geometric::SimpleSetup&’
make[2]: *** [ompl_interface/CMakeFiles/moveit_ompl_interface.dir/src/constraints_library.cpp.o] Error 1
make[2]: *** Waiting for unfinished jobs....
make[2]: *** [ompl_interface/CMakeFiles/moveit_ompl_interface.dir/src/model_based_planning_context.cpp.o] Error 1
make[2]: *** [ompl_interface/CMakeFiles/moveit_ompl_interface.dir/src/planning_context_manager.cpp.o] Error 1
make[1]: *** [ompl_interface/CMakeFiles/moveit_ompl_interface.dir/all] Error 2
make: *** [all] Error 2

Originally posted by Oh233 on ROS Answers with karma: 55 on 2017-06-05
Post score: 1

A:

It looks like you still have a debian version of ompl installed. The lines saying /opt/ros/indigo/include/ompl/base/... shouldn't be pointing to the /opt/ros/... path, but instead to the workspace in which you installed ompl. I have just installed both ompl and MoveIt from source, and my ompl include files are located in /home/user/moveit_ws/devel/include/ompl/....
I first installed MoveIt in its own new workspace using catkin build as detailed here. Then I added the ompl package to the workspace src and used catkin build again as detailed here. It all built fine and works perfectly.
Remove your debian ompl package using sudo apt-get remove ros-indigo-ompl and you may have better luck. If you have installed ompl in a different workspace, I highly recommend putting them into the one workspace to avoid potential issues.

Originally posted by ufr3c_tjc with karma: 885 on 2017-06-05
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Oh233 on 2017-06-06:
That debian ompl is installed from my souce ompl code. There are two ways of installation of source I found until now. One is your way. Treat source ompl as a catkin package. What I am not sure is should I set any path to let moveit to point to the ompl in your catkin workspace?
Comment by Oh233 on 2017-06-06:
Or you just remove all other debian ompl?
The other way is the way I use now. I treat ompl as external package and generate debian code under the directory of my ros. I asked maintainer of ompl yesterday and he told me it is due to my ros version is not compatible to the latest ompl.
Comment by ufr3c_tjc on 2017-06-06:
I think I understand what you mean. But yes, if you're installing from source you must remove the debians if you previously installed them. If you're still on indigo it is likely that ompl then may have issues, as the maintainer stated. Try an older source version of ompl and it may work for you.
Comment by Oh233 on 2017-06-06:
Actually there is the third way one guy provided. I didn't try this way since I think this way is kind of unreasonable. He said first install source moveit with binary ompl. Then remove the binary version of ompl and install source ompl. I think the order is opposite.
Comment by ufr3c_tjc on 2017-06-06:
That is the exact way that I installed source MoveIt and ompl; MoveIt first and then delete ompl debian and install it from source. It's the recommended way on the MoveIt website.
Comment by Oh233 on 2017-06-06:
But for my purpose of adding new planner, is this way able to implement new planner in moveit? And my concern of this way is if the binary code I use rosdep to download and source code I download from ompl website are not the same, will there be some errors?
Comment by ufr3c_tjc on 2017-06-06:
I've seen that if you want to write a new planner you must install source code for both MoveIt and ompl. I am not sure about the compatibility of the current ompl package with indigo, but it works fine for me with kinetic. But I'm sure you can find an older version of ompl that works with indigo.

