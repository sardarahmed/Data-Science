Q:

why are .h and .cpp separate in the directory structure?

Way back in the days of yore, I remember automake separated src and include so that it could install headers with a single -r.  CMake on the other hand, allows you to directly install each file into its own special spot. If this is the case, why separate src and include?  For a small project it's not a big deal, for larger projects it can be cumbersome (personal opinion).
is there a REP for this that i missed?

Originally posted by Bob Dean on ROS Answers with karma: 61 on 2014-06-27
Post score: 2

A:

Usually the include path is passed to other projects for inclusion. This makes it easy to provide only the interface for your node that you'd want. As far as I know there is no REP. You can also have headers in the src and it will still work. In my opinion for larger projects not separating the headers would be cumbersome.

Originally posted by dornhege with karma: 31395 on 2014-06-28
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by tfoote on 2014-09-26:
Typically you put all your public facing headers in one place for easy browsing/access. And all your private headers and source are in our source space and don't get installed.  It's also much easier to write one install rule for a directory than for every individual header in a package.

