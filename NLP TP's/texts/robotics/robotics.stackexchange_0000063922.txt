Q:

Guaranteed message delivery

Hello,
It seems ROS makes no guarantee of message delivery.  I know some can be lost at the beginning (nodes haven't fully started up) but of course they can also be dropped later.  It is the dropping messages later that I am concerned about.
I have seen rosbags suggested at the way to get guaranteed message delivery (maybe minus the node start up situation, which I'm not worried about).  It seems they are used for capturing/replaying messages and are not thread-safe.
Has anyone used them for receiving messages in real-time?  Is there another way to go?
I know queue sizes/publishing rates are adjustable and this can minimize loss, but there are certain messages I can't afford to drop, even occassionally.  And I am losing some.
Thanks.

Originally posted by ears_and_tails on ROS Answers with karma: 11 on 2014-11-09
Post score: 1

Original comments
Comment by dornhege on 2014-11-10:
What is your application? There might be ROS ways to do that other than messages via TCP/IP.
Comment by ears_and_tails on 2014-11-14:
Right now I am using the messages to pass sensor data collected from certain nodes to other nodes.  It is very important that I don't miss data.  All the nodes are running on a single physical machine.
Comment by dornhege on 2014-11-17:
Is this high-frequency high-bandwidth data? If not wrapping this into a service might work although it is inconvenitent. I believe originally the sequence id was ment to serve that purpose, but is not used. You could still emulate that manually.

A:

I don't think there is a safe way to overcome this, but not sure. However, if you wish to guarantee the message delivery, maybe it'd be a solution to put the message into a service!?

Originally posted by Wolf with karma: 7555 on 2014-11-10
This answer was ACCEPTED on the original site
Post score: 2

