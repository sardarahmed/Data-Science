Q:

wheel encoders, robot_localization and robot_pose_ekf

Hey!
I'm just testing out the robot_localization package with our robots. Loving the level of documentation :). However, I realized that it handles the data streams differently from robot_pose_ekf. For instance, robot_pose_ekf, expected wheel odometry to produce position data that it then applied differentially i.e. it took the position estimate at t_k-1 and t_k, transformed the difference to the odom frame, and applied it to the state estimate.
However as per the discussion about yaw velocities here, it seems robot_localization would rather just apply wheel velocities generated by the wheel odometry and generate a position information itself. I know robot_localization has a "differential" tag on each dataset but that seems to be removing initial static offsets (i.e. subtract the position estimate at t_0  , not t_k-1). I have two questions:

Are my assumptions above correct?
Am I losing anything by not doing the integration myself and relying on robot_localization to do the integration?

Originally posted by pmukherj on ROS Answers with karma: 21 on 2014-05-20
Post score: 1

A:

Hi!

Yes, you are correct. That parameter is currently a misnomer and I need to correct it (where "correct" means actually carry out differential integration, rather than the static offset treatment I'm currently giving it).

It is my sincere hope that you're not losing anything by letting robot_localization carry out the integration, but if you'd prefer to have control over that, then the fix for (1) should facilitate that.

Originally posted by Tom Moore with karma: 13689 on 2014-05-20
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by pmukherj on 2014-05-20:
Sweet! No worries, and honestly, how robot_localization handles wheel odometry is probably how it was always "classically" done. It may not be necessary to make a "real" differential option available. Just a note on migration from robot_pose_ekf maybe enough!
Comment by Tom Moore on 2014-05-20:
Noted. Perhaps I'll add the behavior of that parameter to the documentation for now and then see how other people feel about it. It sounds like I'm in need of a good migration tutorial.

