Q:

sendTransform and StampedTransform

I saw on one wiki says -- "sendTransform and StampedTransform have opposite ordering of parent and child". Does that mean if in StampedTransform, parent is a, child is b, then the transform get broadcast with parent as b, child as a and we can only do transform from b->a in listener?
wiki link: http://wiki.ros.org/tf/Tutorials/Writing%20a%20tf%20broadcaster%20%28C%2B%2B%29
The sentence is in section 1.2's bottom

Originally posted by RyanPoint on ROS Answers with karma: 3 on 2018-07-13
Post score: 0

Original comments
Comment by jayess on 2018-07-13:
Can you please update your question with links to the wiki pages that you're referring to?

A:

The phrase you mention in the wiki is only referring to the parameter orders for the respective functions. The parent is still the parent and the child is still the child.
On a side note, all valid transforms can be inverted. So if you know the transform from a->b you can always work out the transform from b->a as well.

Originally posted by PeteBlackerThe3rd with karma: 9529 on 2018-07-14
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by RyanPoint on 2018-07-14:
May you explain in Setting up your robot using tf, which defined a transform base_link->base_laser with translation (0.1, 0.0, 0.2), why does transform laser point (1.0, 0.2, 0.0) to base_link result in (1.10, 0.20, 0.20) not (0.9,0.2,-0.2)?
Comment by PeteBlackerThe3rd on 2018-07-14:
If we just look at the X values. base_link->base_laser with translation (0.1) means that the base_laser frame is origin is at 0.1m in the base_link frame. So a point at 1m in the base_laser frame will be at 1.1m in the base_link frame. Hope this makes sense.

