Q:

What does real-time safe means?

Hi,
I have read some ROS tutorials and articles on the web referring to "real-time safe". I do know what "real-time" means but I don't know what "real-time safe" means. Do they have the same meaning? Maybe it is a similar term like "thread safe" but for real-time.
For example this ROS2 article uses it a lot:
https://design.ros2.org/articles/realtime_background.html
Best,

Originally posted by Nochika on ROS Answers with karma: 13 on 2019-08-26
Post score: 0

A:

Maybe it is a similar term like "thread safe" but for real-time.

Yes, I think you can use that analogy.
Essentially it implies that if whatever code you add supports deterministic execution, then the underlying ROS 2 primitives, implemented by the various ROS 2 libraries, will not "interfere" with that determinism.
So anything "real-time safe" is safe to use in a system requiring deterministic execution (ie: real-time).
Which specific grade of real-time-ness that would be (ie: soft, hard or best effort) is not made clear, but in general hard real-time suitability is what is meant.

Originally posted by gvdhoorn with karma: 86574 on 2019-08-26
This answer was ACCEPTED on the original site
Post score: 2

