Q:

A problem occurs in tf while outputting robot_description to rviz

I created and ran a urdf file by combining several examples.
When simply launched to view in rviz, tf_tree was produced normally.
However, since I added a controller and output it to joint_state_broadcaster,
It was confirmed that tf_tree was split.
Below is the tf_tree structure.

What more is needed to determine the cause of this data?
add1) Additionally, it wasn't completely non-functional.
As a result of modifying the joint to fixed, it was confirmed that it was connected normally.
So, I believe this is not a urdf problem.
What's the problem?
add2) /static_tf msgs are found and I cannot see anything in /tf
add 3)) From ros2 topic echo /joint_states
I got this msgs

A:

I think you have misunderstood how TF are supposed to work. Normally, the frames you can see in the TF tree, are the equivalent of the links that you have defined inside your URDF. In URDF format, you connect links through joints, specifying the type of the joint used. In TF, you do this by publishing transforms from one frame to another. You could publish yourself the tfs from each frame and it would work, but luckily, you have some packages to help you with that.
For static transformations (which are the equivalent to fixed joints) you can use robot_state_publisher. For non static ones, like a revolute joint, robot_state_publisher can't determine the state of that joint only reading the URDF data, so you need something else. One solution could be joint_state_publisher which searches which joints are not type fixed, and let's you change their state using its GUI. But in reality, you won't be the one controlling the joint, but any controller you use for it. Then, it would be that controller the one which should be publishing the tf representing that joint in the /tf topic.
It would be great if you could tell us what is the purpose of that TF and what are you trying to do.
If I didn't explain correctly, please do not hesitate to ask again and I will try to edit my answer.

