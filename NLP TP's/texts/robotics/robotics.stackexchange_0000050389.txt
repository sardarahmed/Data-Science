Q:

Wierd TF tree when running RGB-D Slam

Hey,
I have rgbdslam package installed which was released during end of February 2013.
I am running the Rgbdslam node using the following parameters for the frames.
<param name="config/fixed_frame_name"      value="/map"/>
<param name="config/base_frame_name"       value="/base_footprint"/> 

Then i send the model from the GUI of the RGBDslam to the octomap server using the CTRL+M command.
The Octomap server has the following params for the frames.

<param name="frame_id" type="string" value="/map" />
<param name="base_frame_id" value="/camera_rgb_optical_frame" />

Meanwhile in another terminal i use the command "rosrun tf view_frames".
The frame tree that is seen is displayed below.
As seen in the above screen shot there is a loop present in the tf tree which should not be there.
What could be a possible solution to the above problem.? Any help would be much appreciated.
--EDIT--
@tfoote
I was able to write a tf broadcaster which would imitate the faulty tf tree.
Here is a  screenshot of the imitated faulty tree.

The three code snippets that were used were
      broadcaster.sendTransform(
        tf::StampedTransform(
          tf::Transform(odom_quat, tf::Vector3(0.0, 0.0, 0.0)),
          ros::Time::now(),"base_footprint", "map"));
      r.sleep();

      broadcaster.sendTransform(
        tf::StampedTransform(
          tf::Transform(odom_quat, tf::Vector3(0.0, 0.0, 0.0)),
          ros::Time::now(),"map", "base_footprint"));
      r.sleep();

      broadcaster.sendTransform(
        tf::StampedTransform(
          tf::Transform(odom_quat, tf::Vector3(0.0, 1.0, 2.0)),
          ros::Time::now(),"map", "where_mocap_should_be"));
      r.sleep();

Originally posted by Karan on ROS Answers with karma: 263 on 2013-04-15
Post score: 2

Original comments
Comment by Felix Endres on 2013-04-16:
Looks like a bug. Does it cause any problems?
Comment by Karan on 2013-04-16:
I tried to visualize the relative movements of frames in Rviz. The movement is not faulty which means that frames are moving the way the actual camera is moving. So no problem on that part. Is there some other problem which could bother later because of the faulty tf tree ..?
Comment by tfoote on 2013-04-16:
That is odd.  Can you reproduce a graph like that using simple tf publisher examples?
Comment by Karan on 2013-04-16:
@tfoote  I have not really tried to imitate the tf tree using a self written tf publisher.  How would this help.? I mean if i could write one how would it be useful in debugging the problem.?
Comment by tfoote on 2013-04-16:
I'd like to be able to isolate it and reproduce it for debugging/fixing as just a tf problem instead of needing to run the full rgbdslam system to test and debug. If you can reproduce it that way I'll turn it into a ticket.
Comment by tfoote on 2013-04-17:
Thanks. Ticketed here: https://github.com/ros/geometry/issues/10

A:

I've checked it and it is a bug in rgbdslam. The periodic broadcaster sends a transform base->map, but when the clouds are sent (and with them the transforms) the transform goes map->base. I fixed that in the repository, so please update and rebuild.
To create octomaps, I would recommend using the internal function now. In the GUI use Data->Save octomap or use the service call: rosservice call /rgbdslam/ros_ui_s save_octomap filename.ot

Originally posted by Felix Endres with karma: 6468 on 2013-04-17
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Karan on 2013-04-17:
The periodic broadcaster sends a transform base->map. But the frame map is parent of the frame base. Shouldn't the transform be map->base..?   When i use fixed frame to be /map and base frame to be /base_footprint.
Comment by Felix Endres on 2013-04-17:
tf allows only one parent for each frame. I chose this direction, so that there can be another parent of the base frame, e.g. an odometry frame or a robot's base_link. While it might be unconventional, I am not aware of any disadvantages.
Comment by Karan on 2013-04-18:
@Felix Endres Isn't the transformation published to be inverted if the nodes in the /tf tree are inverted ie. the parent becomes the child and the child the parent..? In rgbdslam is the /tf inverted..? Or should i listen to /map->/base tf and the tf library would do that for me.?
Comment by Felix Endres on 2013-04-18:
The tf library would do that. However, my "bugfix" actually introduced a problem. I am working on that and hope to update the repository later today.
Comment by Karan on 2013-04-19:
Let me know when you update the repository so i would install the new one accordingly..
Comment by Felix Endres on 2013-04-19:
I just committed and hope it works now. Let me know.
Comment by Karan on 2013-04-22:
@Felix Endres It works fine. There is no problem with tf tree now.

