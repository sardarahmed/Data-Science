Q:

gmapping frequent crashing

Hi there, I am currently trying to launch gmapping for a mobile wheechair that I have built. I have made a launch file for all the configurations of the robot. All the subscribed topics of the gmapping node are being published with this launch file. Unfortunately my computer crashes as soon as a I launch gmapping when running the following line of code. It also crashes when I tried running the launch file.
rosrun gmapping slam_gmapping scan:=scan
How should I go about debugging this issue? My computer is an Acer TravelMate P253-M running Ubunut 14.04 with ROS Indigo.

robot_config.launch
<launch>
  <node pkg="tf" type="static_transform_publisher" name="base_to_kinect_broadcaster" args="-0.17 0.04 0.1975 0 0 0 \/base_link \/camera_link 100" />
 
  <!--we use the kinect sensor as a fake laser scanner /-->
  <include file="$(find my_personal_robotic_companion)/launch/kinect_laser.launch" />

  <!--serial communication between arduino and pc via usb /-->
  <node name="arduino_serial_node" pkg="rosserial_python" type="serial_node.py" output="screen">
    <param name="port" value="/dev/ttyACM0" />
    <param name="baud" value="57600" />
  </node>
   
<node name="base_controller_node" pkg="my_personal_robotic_companion" type="base_controller">

</node>
</launch>

gmapping.launch
<launch>
  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
    <param name="base_frame" value="base_link"/>
    <param name="odom_frame" value="odom"/>
    <param name="map_update_interval" value="5.0"/>
    <param name="maxUrange" value="6.0"/>
    <param name="maxRange" value="8.0"/>
    <param name="sigma" value="0.05"/>
    <param name="kernelSize" value="1"/>
    <param name="lstep" value="0.05"/>
    <param name="astep" value="0.05"/>
    <param name="iterations" value="5"/>
    <param name="lsigma" value="0.075"/>
    <param name="ogain" value="3.0"/>
    <param name="lskip" value="0"/>
    <param name="minimumScore" value="100"/>
    <param name="srr" value="0.01"/>
    <param name="srt" value="0.02"/>
    <param name="str" value="0.01"/>
    <param name="stt" value="0.02"/>
    <param name="linearUpdate" value="0.5"/>
    <param name="angularUpdate" value="0.436"/>
    <param name="temporalUpdate" value="-1.0"/>
    <param name="resampleThreshold" value="0.5"/>
    <param name="particles" value="80"/>

    <param name="xmin" value="-1.0"/>
    <param name="ymin" value="-1.0"/>
    <param name="xmax" value="1.0"/>
    <param name="ymax" value="1.0"/>

    <param name="delta" value="0.05"/>
    <param name="llsamplerange" value="0.01"/>
    <param name="llsamplestep" value="0.01"/>
    <param name="lasamplerange" value="0.005"/>
    <param name="lasamplestep" value="0.005"/>
    <remap from="scan" to="$(arg scan_topic)"/>
  </node>

</launch>

Originally posted by OwnageManFromLOL on ROS Answers with karma: 149 on 2017-06-09
Post score: 0

Original comments
Comment by gvdhoorn on 2017-06-12:\

 \/base_link \/camera_link

Is this a copy-paste / editing artefact, or is that really like that in your launch file?
If the latter, remove the \.
Comment by OwnageManFromLOL on 2017-06-12:
I was using code from this guy:
https://github.com/sungjik/my_personal_robotic_companion/blob/master/my_personal_robotic_companion/launch/robot_config.launch
He initialized the node with that syntax.
Comment by gvdhoorn on 2017-06-12:
May be, but it's incorrect.
Comment by OwnageManFromLOL on 2017-06-12:
ok I'll remove it. Thanks :)

A:

The middle part of your question is not in code format, so it is a bit difficult for others to read and debug your launch file. It is better if you can modify it. Besides, it is better if you can upload the result of running your launch file.
You have multiple nodes in this launch file, so firstly, you need to find out which node makes it crash.

Launching each node separately with your currently parameters. Luckily, you can directly find out the node crashed using this method.

If you launch each node separately, it works fine, but when you launch them together, they crashed, most probably, the code caused crash is inside callback functions. You can use rostopic pub to find out the problematic node.

After finding out the node causing crash, using gdb to debug that node. The details of using gdb with launch file for debugging can be find here.

Originally posted by Haibo with karma: 91 on 2017-06-11
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by OwnageManFromLOL on 2017-06-12:
Hey Haibo thanks for you suggestions, I really appreciate it. I'll try out what you suggested.
Comment by OwnageManFromLOL on 2017-06-23:
Finally fixed it, turns out odometry was publishing bogus data constantly which caused gmapping to crash!

