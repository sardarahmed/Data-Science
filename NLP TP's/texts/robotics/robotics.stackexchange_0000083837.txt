Q:

AMCL Particle Weights Are Always Equal - Why?

I'm driving the Turtlebot around the turtlebot_world Gazebo environment.  I'm printing out the AMCL particle filter poses and the weights assigned to the poses, and when I drive around for a while (as long as 5 minutes), the weights assigned to the poses in the particle filter are all set to the same value (particle weight = 0.00196, for 500 particles, so they sum to 1, of course).
I expected there to be some variety in the particles' weights  - some higher, some lower.  My theories as to why they're all equal:

I could be printing the weights at the wrong point of the AMCL code
It's a demo Gazebo world and a demo AMCL map - is the set-up too "perfect" for different hypotheses to result in different weights or something?

Here's a code snippet:
File: AMCL/src/amcl_node.cpp
Function:  AmclNode::laserReceived(const sensor_msgs::LaserScanConstPtr& laser_scan)
~Line 1245, Added the following:
for(int i=0;isample_count;i++)      { 
   ROS_DEBUG("Weight: %f",set->samples[i].weight);
}

Originally posted by ElizabethA on ROS Answers with karma: 120 on 2017-11-10
Post score: 0

A:

Particle weights are supposed to be different, but AMCL resamples every resample_interval_ which could be every step.  Regardless, you are indeed getting your data after the measurement update step but also after resampling. After resampling every particle weight is the same. Try looking at the particles after sensor data is integrated. line 1235 before the resampling in the next line

Originally posted by PeterMilani with karma: 1493 on 2017-11-10
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by ElizabethA on 2017-11-11:
Great catch!  I moved the print statement to line 1235 before the resampling, and now I'm seeing variety in the particle weights.  Woohoo!  Thank you.
My resample_interval_ parameter = 1, so it's resampling at every step.
Comment by PeterMilani on 2017-11-16:
great! please mark the answer as correct!

