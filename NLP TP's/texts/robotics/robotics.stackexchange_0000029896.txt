Q:

segmentation fault on running stageros

I am trying to run exploration demo in explore_stage as described in (http://www.ros.org/wiki/explore_stage). When I run "roslaunch explore_stage explore.launch" I get the following error.
[stage-1] process has died [pid 11456, exit code -11].
log files: /home/aravindhan/.ros/log/bd966512-423d-11e0-b00f-5c260a051546/stage-1*.log
From the launch file, I can see that the nodes stageros and static_transform_publisher are launched. So, I tried to launch stageros manually on command line with maze.world file as parameter. It gives a segmentation fault. Any help?

I am using diamondback.
stageros crashes even with the new format of world files.
I changed explore.launch file to launch "stage" instead of "stageros" and the roslaunch seemed to launch stage.
(Is it ok to change stageros to stage? What is the difference between the two.?)
But, after stage is launched I get this error
[Loading __name:=stage]err: unable to open world file __name:=stage : No such file or directory (/backup/Softwares/Stage-3.2.2-Source/libstage/worldfile.cc Load)
worldfile.cc is found in that path and the file permissions are right.
Has anybody run this demo before.? Finding a tough time to get his working.!

I am copying the stack trace of the crash below.
It crashes at line number 196 in stageros.cpp. Looking at the comments at line nos 193-194, is it a known issue? Any fixes for this?
193 // Apparently an Update is needed before the Load to avoid crashes on 194 // startup on some systems.
195 this->UpdateWorld();
196 this->world->Load(fname);
==28396== Process terminating with default action of signal 11 (SIGSEGV): dumping core ==28396== Access not within mapped region at address 0x430
==28396== at 0x4E0C926: ??? (in /usr/lib/mesa/libGL.so.1.2)
==28396== by 0x467DC06: Stg::Canvas::resize(int, int, int, int) (canvas.cc:1288)
==28396== by 0x47082DA: Fl_Group::resize(int, int, int, int) (in /usr/lib/libfltk.so.1.1)
==28396== by 0x474470B: Fl_Window::resize(int, int, int, int) (in /usr/lib/libfltk.so.1.1)
==28396== by 0x4742B10: fl_handle(_XEvent const&) (in /usr/lib/libfltk.so.1.1)
==28396== by 0x47436AD: ??? (in /usr/lib/libfltk.so.1.1)
==28396== by 0x474394C: fl_wait(double) (in /usr/lib/libfltk.so.1.1)
==28396== by 0x46F1B94: Fl::wait(double) (in /usr/lib/libfltk.so.1.1)
==28396== by 0x46F1C3B: Fl::check() (in /usr/lib/libfltk.so.1.1)
==28396== by 0x468B36B: Stg::WorldGui::Load(char const*) (worldgui.cc:262)
==28396== by 0x8055AEE: StageNode::StageNode(int, char*, bool, char const) (stageros.cpp:196)
==28396== by 0x805A4BE: main (stageros.cpp:427)

Originally posted by Aravindhan K Krishnan on ROS Answers with karma: 125 on 2011-02-26
Post score: 1

Original comments
Comment by Eric Perko on 2011-02-27:
Could you post the output you get when you run stageros on the command line? Or any helpful output from the log file specified? Are there any error messages before Stage segfaults?

A:

I took a quick look at the launch files involved. I'm assuming you are using Cturtle or Diamondback. If so, the Stage world file maze.world looks like it hasn't been upgraded to the new world file format. For info on how to do that, see stage_navigation. A bad world file will cause Stage to crash, so this may be the source of your problems.
stageros is the ROS wrapper around Stage that actually exposes data from Stage on ROS topics. If you want ROS integration with Stage, you will have to run stageros.
Update:
I checked out the bosch packages required to run this tutorial. You actually have to upgrade 3 of the files in the bosch_worlds directory before the explore.launch file will run properly. I've made a patch to bosch_worlds available in my Dropbox. Applying those changes to the 3 files in bosch_worlds allowed the explore.launch file to run without modification (after rosmake explore_stage of course)

Originally posted by Eric Perko with karma: 8406 on 2011-02-27
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Eric Perko on 2012-01-03:
Are you actually having trouble with it? It looks like bosch_worlds was updated to include that patch. A quick check would be to look at the segway.inc file - if the origin is called origin and has 4 elements instead of 3, then it should be campatible with Diamondback's Stage.
Comment by ParNurZeal on 2012-01-02:
I'm new to linux. Could you tell me how to patch your file in old bosch_worlds file? Thank you!

