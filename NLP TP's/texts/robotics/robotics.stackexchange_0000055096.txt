Q:

working with 3rd party libraries

I read that download_unpack_build.mk is now discouraged:
https://groups.google.com/forum/#!topic/ros-sig-buildsystem/e027agspX24
and it is now recommended to install them from source or using rosdep.
In the past (fuerte), we have used the tool a lot to download exotic libraries that are not released as ubuntu/debian packages, or don't have a Find*.cmake file, etc. Using the download_unpack_build.mk it was really easy to integrate them in our build system. Especially when we wanted to get a very specific version, and/or patch it to adapt to our needs.
Is there a similar solution in catkin?
I understand that it might cause issues on the build farms, but the packages we are working on are not going to be released.

Originally posted by brice rebsamen on ROS Answers with karma: 1001 on 2013-10-28
Post score: 1

A:

catkin does intentionally not support that use case (see design sketch http://docs.ros.org/api/catkin/html/dev_guide/sketch.html). Simply because it is considered pretty bad practice.
Instead you should create a simple package containing these libraries and make them easily buildable with the existing infrastructure (see http://ros.org/reps/rep-0136.html).
If you want to keep using that kind of work flow you could just stick to rosbuild for these packages. While you can't release dry packages into Hydro (and future distros) you can always build them from source. (But that way you can't use them from catkin packages.)

Originally posted by Dirk Thomas with karma: 16276 on 2013-10-28
This answer was ACCEPTED on the original site
Post score: 1

