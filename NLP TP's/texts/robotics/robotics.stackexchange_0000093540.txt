Q:

Number of TCP connections for a "bidirectional" topic?

Hi all,
I have a (possibly) simple question: assume if I have two nodes A, B that communicate over a topic "/my_topic", i.e., both nodes subscribe and publish to "/my_topic" using TCPROS. How many TCP connections are being created for this? (I am asking because I am concerned with race conditions in my parallel system of many ROS nodes, most probably due to messages being sent to a topic but the intended receiver(s) is/are not already connected.)
According to the ROS 1: Technical Overview, I would assume that there are two TCP connections, one for the publisher on node A and one for B (although and unfortunately, one would be enough).
In other words: in theory, it would be sufficient to just have ONE TCP connection which is used in both directions. In that the case here?
Is that correct?
Thank you so much! :-)

Originally posted by CodeFinder on ROS Answers with karma: 100 on 2019-10-11
Post score: 0

A:

1)

both nodes subscribe and publish to
"/my_topic" using TCPROS.

don't do that. You're not going to know what came from who unless you encoded it in the message, but either way there's going to be alot (50%) of waste both nodes have to deal with. Triggering callbacks to decode wasteful messages isn't "free". Just use 2 topics /my_topic/A & /my_topic/B or something.
2)
Yes, there are 2, each connection will get one. Without g oing deeper into the ros comms layers, I don't believe that is possible (or even if you did).

Originally posted by stevemacenski with karma: 8272 on 2019-10-11
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by CodeFinder on 2019-10-15:
Thanks for clarifying! Unfortunately, I need a single topic in my case and in fact, there are many more robots subscribing and publishing to that single topic (because I require that every robot communicates with every other robot (O(nÂ²)) and I see no other way of achieving this (except for using a topic). Do you?

