Q:

Remaking an RC transmitter for controlling aircraft

I am thinking about working on alternative drone controllers. I am looking into making it more easy to use and a natural feel (debating between sensor bracelets, rings, etc.).
The main issue I have is, I've been looking over all the standard RC transmitters that are used to control RC aircraft, but I am not sure what technology is inside of them, what kind of ICs they use for the actual RC signals. 
I want more information on how to make an RC transmitter myself, mainly the protocol that's used to send messages, and what circuitry is needed to actually transmit that, what kind of components do I need and how should I implement the software?
I was aiming at doing this as a side project (hobby), but now I have the chance to use it as a uni project as well, so I'd like to give it a shot now, but I lack the proper information before getting started. 
I'd rather not take apart my current RC controller and use an oscilloscope to decode the protocol. 
Any answers (short or long) and reading material is appreciated.
Other questions, can the protocol be implemented in software on an embedded system (Raspberry Pi, Arduino, Intel Galileo, etc.)?
I am asking this because the frequency for these are 2.4 GHz.
This is part of a bigger project, drone related currently, and I could use alternative methods of sending the information, through other wireless means, as the first prototype, suggestions are welcomed.
Need: aircraft RC transmitter protocol info, RC transmitter components & schematics, anything else that might help with the transmission side

A:

I am, unfortunately, not going to address your entire question but, rather, focus on the frequency used for communications. Why do you say:

because the frequency for these are 2.4 GHz

By these,  do you mean the Pi, Arduino or Galileo?
These boards are not confined to using 2.4 GHz. The reason 2.4 GHz is so popular is that it is one of the bands that the telecommunication authorities have deemed available for consumer use1, Bluetooth2, XBee (Series 1 and 2), and Wi-Fi3 being the common examples.
It is worth noting that 900 MHz devices generally have a larger range than 2.4 GHz devices. So, depending on the range that you require, you could chose from a wide range of communications devices and frequencies, for example:

Long Range 868MHz XBee Pro (for Europe), or 900MHz (for US) XBees - However these seem to have reached End-Of-Life;

Low Power 868MHz XBees (for Europe), or 900MHz (for US) XBees

868/915MHz RFBees

Also, other frequencies used, in addition to 2.4, 900, 868 MHz, are the 315 and 433 MHz bands:

Simple 433 MHz circuits.

NRF905 Arduino Compatible Wireless Communication Transmission Module

CC1101 Wireless RF Transceiver 315/433/868/915MHZ + SMA Antenna Module

If you do decide to stick with 2.4 GHz then it is well worth considering the successors to the popular nRF24L01:

This product is not recommended for new designs. Nordic recommends its drop-in compatible nRF24L01+ or for a System-on-Chip solution the Nordic nRF24LE1 or nRF24LU1+.

A note on protocols
One of the advantages of using XBees is that they already implement a pretty rugged and secure protocol, so there is less need for you to have to re-invent the wheel. However, they are relatively slow (the data rate is 250kbps half duplex), so should you require FPV then XBee will not be sufficient. See also Drones and camera streaming.
Protocols implemented in software (using a Pi, Arduino, or whatever), could be a little slow and it is probably better to use one that is implemented in hardware as the control of aircraft is somewhat time sensitive, that is to say, the least lag possible is required, for accurate flight control.

