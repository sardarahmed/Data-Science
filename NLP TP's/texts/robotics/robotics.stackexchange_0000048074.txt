Q:

how to pass pointcloud from the callback function in subscriber

Aim-Subscribe to pointcloud from kinect and access it from main() function
I created a class and callback function as its member function.
I am able to subscribe to the pointcloud data from kinect using
 ros::Subscriber sub = nh.subscribe ("/camera/depth_registered/points", 3,&pass_cloud::callback,&cloud1);

I am the changing the member value by the callback but i am not able to see it working.
You can find my code here..Please let me know what changes can be done
https://dl.dropbox.com/u/95042389/sampl.cpp

Originally posted by sai on ROS Answers with karma: 1935 on 2013-02-06
Post score: 0

A:

Avoid global variables. it is bad practice. here is how you could do it:
class pass_cloud
{
public:
pass_cloud (ros::NodeHandle& nh) : nh_(nh), i(0)
{
  sub = nh_.subscribe ("/camera/depth_registered/points",     3,&pass_cloud::callback,this);
} // your constructor and store the passed node handle (nh) to your class attribute nh_ 

void callback (const pcl::PointCloud& cloud) 
{
 input= cloud; // copy the variable that the callback passes in to you class variable (attribute) input
 i=i+1;
}

process()
{
//You might want to add an if statement here to only print if the input is not empty, I am not sure how but something like this if(input is not empty){
std::cout << " " << input.points[i].x << " " << input.points[i].y <<  " " << input.points[i].z << std::endl; std::cout<<"reached here"<<std::endl; 

}

void spin ()
{
 ros::Rate rate (30);
 while (ros::ok ())
 {
 ros::spinOnce ();
 rate.sleep ();
 }
}

protected: // Your class attributes
ros::NodeHandle nh_;
pcl::PointCloud& input;
cloud ros::Subscriber sub;
int i;
}; // end of class

int main(int argc, char **argv)
{

ros::init(argc, argv, "pointcloud_node");
ros::NodeHandle nh;

pass_cloud* node = 0;

node = new pass_cloud(nh);

node->spin (); 
return 0;
}

Hope this helps!

Originally posted by K_Yousif with karma: 735 on 2013-02-07
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by sai on 2013-02-07:
This is very nice but I have some basic questions to ask. could you give your email id
Comment by K_Yousif on 2013-02-07:
I am not a ROS expert as I only started learning ROS less than 2 months ago. But I will be happy to help if can. My email is khalid.ayousif@hotmail.com
Comment by sai on 2013-02-07:
Hi, if possible , could you see the code at this link and tell what might be wrong https://dl.dropbox.com/u/95042389/sampl.cpp
Comment by K_Yousif on 2013-02-07:
In your code, it is being stuck in a for loop, without updating your cloud. I do not think you need a for loop since ros::spin() is already constantly looping until you press ctrl+c, I have updated my code in my answer to your case. Copy and paste it and see if it works. let me know

