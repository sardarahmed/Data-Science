Q:

Rosbridge only one way on my OSX

This probably has the same underlying cause as the problem
I posted in http://answers.ros.org/question/221048/roslibjs-dont-get-goal-result-on-client/, but now I have a simpler way to reproduce the problem and
that uses no code from me and some extra clues.
I'm running OSX Yosemite, ROS Indigo, Rosbridge with ROSlibjs
using the Chrome Browser.
I can call a service from the browser, and it successfully executes
on the server, but I can't get any information back to the browser.
The simplest way I can reproduce this is:
In a terminal window:
$ roscore
In another terminal window:
$ rosrun rospy_tutorials add_two_ints_server  (in the tutorial)
In a third terminal window:
$ roslaunch rosbridge_server rosbridge_websocket.launch  (in the tutorial)

From the web page: http://wiki.ros.org/roslibjs/Tutorials/BasicRosFunctionality
copy the whole page HTML into a file, say, simple.html  Here is is:

 <!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />

<script type="text/javascript" src="http://cdn.robotwebtools.org/EventEmitter2/current/eventemitter2.min.js"></script>
<script type="text/javascript" src="http://cdn.robotwebtools.org/roslibjs/current/roslib.min.js"></script>

<script type="text/javascript" type="text/javascript">
  // Connecting to ROS
  // -----------------

  var ros = new ROSLIB.Ros({
    url : 'ws://localhost:9090'
  });

  ros.on('connection', function() {
    console.log('Connected to websocket server.');
  });

  ros.on('error', function(error) {
    console.log('Error connecting to websocket server: ', error);
  });

  ros.on('close', function() {
    console.log('Connection to websocket server closed.');
  });

  // Publishing a Topic
  // ------------------

  var cmdVel = new ROSLIB.Topic({
    ros : ros,
    name : '/cmd_vel',
    messageType : 'geometry_msgs/Twist'
  });

  var twist = new ROSLIB.Message({
    linear : {
      x : 0.1,
      y : 0.2,
      z : 0.3
    },
    angular : {
      x : -0.1,
      y : -0.2,
      z : -0.3
    }
  });
  cmdVel.publish(twist);

  // Subscribing to a Topic
  // ----------------------

  var listener = new ROSLIB.Topic({
    ros : ros,
    name : '/listener',
    messageType : 'std_msgs/String'
  });

  listener.subscribe(function(message) {
    console.log('Received message on ' + listener.name + ': ' + message.data);
    listener.unsubscribe();
  });

  // Calling a service
  // -----------------

  var addTwoIntsClient = new ROSLIB.Service({
    ros : ros,
    name : '/add_two_ints',
    serviceType : 'rospy_tutorials/AddTwoInts'
  });

  var request = new ROSLIB.ServiceRequest({
    a : 1,
    b : 2
  });

  addTwoIntsClient.callService(request, function(result) {
    console.log('Result for service call on '
      + addTwoIntsClient.name
      + ': '
      + result.sum);
  });

  // Getting and setting a param value
  // ---------------------------------

  ros.getParams(function(params) {
    console.log(params);
  });

  var maxVelX = new ROSLIB.Param({
    ros : ros,
    name : 'max_vel_y'
  });

  maxVelX.set(0.8);
  maxVelX.get(function(value) {
    console.log('MAX VAL: ' + value);
  });
</script>
</head>

<body>
  <h1>Simple roslib Example</h1>
  <p>Check your Web Console for output.</p>
</body>
</html>

In Chrome, browse: file:///your_dir/simple.html

Open the Chrome Development tools:
I see in the console: "Connected to websocket server" (This is good)
but there's nothing else printed in the console (this is bad)
as the JS code indicates it should print out:
Result for service call on /add_two_ints: 3

In the rosrun terminal window, I see printed out:
Returning [1 + 2 = 3]

Indicating that the service request made it to the server and
the server did the computation.
Additional info that perhaps provides some clues:
$ rosnode list
/add_two_ints_server
/rosapi
/rosbridge_websocket
/rosout

$ roswtf
Loaded plugin tf.tfwtf
Package: rospy_tutorials
================================================================================
Static checks summary:

No errors or warnings
================================================================================
Beginning tests of your ROS graph. These may take awhile...
analyzing graph...
... done analyzing graph
running graph rules...
... done running graph rules

Online checks summary:

Found 1 warning(s).
Warnings are things that may be just fine, but are sometimes at fault

WARNING The following node subscriptions are unconnected:
 * /rosbridge_websocket:
   * /listener

$ rostopic pub /listener std_msgs/String "Hello, World"
doesn't cause 
Received message on /listener: "Hello, World" 
to be printed out in the Chrome console, as indicated in the tutorial.

$ printenv | grep ROS
ROS_ROOT=/opt/ros/indigo/share/ros
ROS_PACKAGE_PATH=/Users/Fry/ros_ws/src:/opt/ros/indigo/share:/opt/ros/indigo/stacks
ROS_MASTER_URI=http://localhost:11311
ROSLISP_PACKAGE_DIRECTORIES=/Users/Fry/ros_ws/devel/share/common-lisp
ROS_DISTRO=indigo
ROS_ETC_DIR=/opt/ros/indigo/etc/ros

$ cat /etc/hosts
127.0.0.1           localhost       macbook-pro-2.home

My guess is this has something to due with my particular ROS installation,
esp the Rosbridge package which is difficult to install on OSX
since brew is not supported.
I'd be curious if running this on Ubuntu worked.
Any debugging hints greatly appreciated.
PS: chrome dev tool/Network/WS  for localhost indicates that messages are going out from the browser,
but none are coming into the browser.

Originally posted by Fry on ROS Answers with karma: 126 on 2015-11-23
Post score: 0

Original comments
Comment by Philipp Schillinger on 2015-11-23:
I would really like to help you better, but at least I can tell that the JS code is correct as your exact setup runs for me and prints the expected messages. Only difference is that I am running Ubuntu, but I have no idea how this is related to the problem.
Comment by Fry on 2015-11-23:
Thanks Phillip. This is a big help. Do your environment variables and /etc/hosts also look
the same as mine?
Comment by Philipp Schillinger on 2015-11-24:
Oh, there is "(More)" button... ;) Yes, they look similar. I agree that it really sounds related to this brew thing. But since I don't have access to OSX, I don't have any experience with it, sorry!
Comment by William on 2015-11-24:
I can reproduce what you're talking about. At first I though it was because your JS didn't wait to perform its actions until ROS was connected, but even after wrapping your logic in ros.on('connection', ...); it still is flakey.
Comment by William on 2015-11-24:
I also noticed that the publishing to /cmd_vel works but can take a very long time to show up in rostopic echo /cmd_vel. There is definitely something fishy going on here, but I don't know what it is. There's nothing fundamentally different about OS X or Homebrew that would cause this, afaik.
Comment by William on 2015-11-24:
@ahendrix could this be related to what your problem? (I know you're not using rosbridge, but it could be some underlying issue with rospy).
Comment by William on 2015-11-24:
Nvm, I believe the flakey behavior was because refreshing the webpage would cause the ros bridge to unadvertise and re-advertise the topic, which was messing with rostopic echo. I switched it to be a latched topic and it behaves as I would expect. Not sure about the service...
Comment by William on 2015-11-24:
Yeah it definitely seems like communication back to the web browser is not working, neither the service nor the subscriber in JS receive data in the web browser.

A:

I can definitely reproduce this on my OS X machine (Yosemite 10.10.5) and ROS Indigo. I tried it in Chrome, Safari, and Firefox with the same behavior. Also, I ran the rospy tests and used several complex things which use rospy and didn't have any trouble. This leads me to believe this is likely a bug in the ros bridge reactor (tornado I think) or some underlying Python functionality that is different on OS X/Homebrew. Or it could be how rosbridge is using rospy and exposing some strange bug I can't trigger otherwise.
I'd open an issue against rosbridge and they can in turn open an issue against rospy if they decide that the problem doesn't seem to be theirs.

Originally posted by William with karma: 17335 on 2015-11-24
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Fry on 2015-11-24:
Huge thanks to William!

Its not easy for me to test this on OSX running Jade, but if that solved the problem I'd switch to Jade.
Same for me switching from Yosemite to El Capitan OSX releases.
Might it have to do with OSX websocket security blocking on various PORTs?

Comment by jonfink on 2015-11-25:
Just posted something about this on the rosbridge_suite issues page. Turns out (for me) that the fix is to pip install pymongo rather than bson. Same module name, different API.

