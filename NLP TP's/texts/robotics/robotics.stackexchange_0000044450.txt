Q:

ROS Fuerte snags on OSX Lion

So I think I was finally able to install ROS Fuerte on Mac which cannot easily be accomplished by following religiously the tutorial in there as it keeps on hitting snags. Here are some error resolutions, which I'm not sure they are the optimal ones, maybe someone would like to confirm since I want to install UWSim but I cannot, which could be because of the osx not being ready for it:
rosdep install UWSim ERROR: the following packages/stacks could not have their rosdep keys resolved to system dependencies: UWSim: No definition of [libopenscenegraph] for OS [osx] 

RESOLUTIONS
So open up your Terminal and put up aside the ROS installation tutorial I will try to follow up the problems as they emerge on the screen.

Right up from the beginning, the tutorial asks to write lines to your .bashrc file which is fine, except terminal each time you close and re-open a window is not calling this file, and yes I did go to Terminal > preferences > shell opens with: comand /bin/bash

So what I did was to write in .profile source ~/.bashrc which seems to solve this question, I saw in here that OS X doesn't read .bashrc file on bash start. Instead, it reads the following files (in the following order):

/etc/profile
~/.bash_profile
~/.bash_login
~/.profile

If for any reason one of the instructions fails to install because of denied permissions as it will probably do on easy_install pip, one can "force" it by adding sudo before it.

When you are installing dependencies, log4cxx and swig-wx will turn into a headache.

i)Actually with this one I was not pleased with my solution but as I dug up on github comunity I could not find the proper solution. It snags in
system './autogen.sh'

and it fails to install log4cxx. What I did here was comment this line on the formula (/usr/local/Library/Formula/log4cxx.rb) and it seems to install fine but I'm unsure of it.
ii)Actually swig-wx was updated by Homebrew so if it fails to install just do the command again and it installs fine. If not go to this site which helped me before.

Next when it will probably fail to run the instruction make -j8... This has to do with the boost dependency. I could not figure out why but I downgraded it (boost 1.50.0 to boost 1.49.0) and then it'll work:
brew uninstall
boost pushd $(brew --prefix)
git checkout -f bf4f9aa Library/Formula/boost.rb
popd
brew install -v boost

It is quite confusing (and I still am a bit confused!!!) about the paths used to install the libraries. While it reads on the tutorial installation to send the files to /opt/ros/fuerte, usually the commands come up with ~/ros which will send you the files to the User. If you have installed ros-underlay to /opt/ros/fuerte, you should do the Desktop Full-Install on this path so when you do rosdep install -a it will not turn on you with the "missing dependencies" error.

When you do the rosdep install -a matplotlib will now probably make you grind teeth and it fails to install. As normal proceding doesn't work (osx 10.7, Python 2.7.2 via homebrew), you have to modify the command as follows:
pip install -e git+https://github.com/matplotlib/matplotlib.git#egg=matplotlib

Finally sourcing can also break at one point if you do any experiment on your installation in the between. This could be one solution (lauras topic)

make sure /usr/local/bin comes before > /usr/bin in your $PATH (Lion: > /etc/paths)
install gnu-sed with homebrew (brew install gnu-sed)
link /usr/local/bin/sed to /usr/local/bin/gsed (ln -s /usr/local/bin/gsed /usr/local/bin/sed)

Originally posted by ee05073 on ROS Answers with karma: 53 on 2012-09-27
Post score: 0

Original comments
Comment by Kevin on 2012-09-27:
Hopefully some of these issues will get solved in the next version of ROS. The pre-release is supposed to come out Oct 15.
Comment by WilliamWoodall on 2012-09-28:
This is all useful information, so for any problem you can narrow down, you should add an entry in the troubleshooting section and/or updated the installation instructs where appropriate.

A:

About log4cxx this is was what happened
brew install log4cxx
==> Downloading http://www.apache.org/dyn/closer.cgi?path=logging/log4cxx/0.10.0/apach
==> Best Mirror http://mirrors.fe.up.pt/pub/apache/logging/log4cxx/0.10.0/apache-log4c
######################################################################## 100.0%
==> ./autogen.sh
./autogen.sh: line 23: glibtoolize: command not found
./autogen.sh: line 27: aclocal: command not found
./autogen.sh: line 28: autoconf: command not found
./autogen.sh: line 29: automake: command not found

Error: log4cxx did not build
Logs: /Users/GCCS/Library/Logs/Homebrew/log4cxx/
Help: https://github.com/mxcl/homebrew/wiki/troubleshooting

Originally posted by ee05073 with karma: 53 on 2012-09-28
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by WilliamWoodall on 2012-09-28:
This is a Homebrew problem, it should go into an issue on Homebrew's github.com site. It might have to do with your system, I can install log4cxx fine.
Comment by Kevin on 2012-09-28:
Do you have libtool and the other commands installed from homebrew?
Comment by ee05073 on 2012-09-29:
Yes, I have also tried to install it but it is the same output

