Q:

How to get joint, speed, acceleration values of cartesian path?

I'm currently working with OMPL and waypoints. This tutorial  explains how to use them. Everything working fine and the plan from start to goal is executed. The terminal tells me the following:
[INFO] [1550520522.690988548]: Computed Cartesian path with 3 points (followed 100.000000% of requested trajectory)
[ INFO] [1550520522.692175575]: Execution request received
[ INFO] [1550520522.788166419]: Fake execution of trajectory
[ INFO] [1550520524.088018603]: Completed trajectory execution with status SUCCEEDED ...

Is it possible to see all the joint values for these 3 points? Speed and deceleration of joints?
Maybe it is possible to write these values in a .txt file with an external python file?
Any suggestions are welcome, i just need these values for each point.

Originally posted by DieterWuytens on ROS Answers with karma: 15 on 2019-02-18
Post score: 1

Original comments
Comment by DieterWuytens on 2019-02-18:
For example: in RVIZ I can see that the last link is rapidly changing it's orientation. From 0.25 to -0.25 in approximately 1 second. How can i plot these values in an external file to analyze them?

A:

If you're referring to the Cartesian Paths section of that page: the plan result variable that you get from your invocation of move_group.compute_cartesian_path(..) contains all of the information about the joint poses that make up the Cartesian motion.
You should be able to print(..) it, iterate over it, etc.

I'm currently working with OMPL and waypoints.

Please note that OMPL (or any of the planners actually) is not used when you use compute_cartesian_path(..). It's essentially performing a linear interpolation between your waypoints. That is rather different from the "random search" that OMPL does.

Originally posted by gvdhoorn with karma: 86574 on 2019-02-18
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by DieterWuytens on 2019-02-18:
I didn't know that! How do I integrated OMPL or other planners with these waypoints then? What kind of planner is used for calculation of the path?
print(plan) does work, thanks.

