Q:

export gcc flags though catkin? CFG_EXTRAS?

I have the gcc c++0x flag set for a few of my packages. All the packages that depend on these package also needs the c++0x flag if they must not throw warning when the header files are processed.
Is there a way for catkin to export the flags? I saw the CFG_EXTRAS option for catkin_package(), Do I set the CFG_EXTRAS? What does it stand for?
Thanking you,
Benzun

Originally posted by Benny on ROS Answers with karma: 132 on 2014-06-18
Post score: 0

A:

You can pass multiple "CMake configuration extra" files via catkin_package(CFG_EXTRAS) to be included when downstream packages find your package:
catkin_package(
  CFG_EXTRAS ${PROJECT_NAME}-extras.cmake
)

An example for such a file would be cmake/${PROJECT_NAME}-extras.cmake:
#  for older versions of clang, libstdc++ is used by default and we need to explicitly request libc++ instead
if(APPLE)
  set(CMAKE_CXX_FLAGS "-std=c++0x -stdlib=libc++ ${CMAKE_CXX_FLAGS}")
else()
  set(CMAKE_CXX_FLAGS "-std=c++0x ${CMAKE_CXX_FLAGS}")
endif ()

Originally posted by Dirk Thomas with karma: 16276 on 2014-06-18
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Jeremy Corbett on 2014-10-12:
I think the cmake file must be saved with the ".in" extension i.e. cmake/$PROJECT_NAME-extras.cmake.in. I couldn't get it to work with just .cmake
Comment by Dirk Thomas on 2014-10-13:
Using only the extension ".cmake" is supported. E.g. the following package does exactly that: https://github.com/ros/class_loader

