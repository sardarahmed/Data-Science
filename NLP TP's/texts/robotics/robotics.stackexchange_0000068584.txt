Q:

subscribing to custom message type

I have created a custom message type. I am able to successfully publish it with the topic name "topic".
int8 seq_id
std_msgs/Header timestamp
int8 frame_id
float64 myheight
float64 mywidth
int16 step_value
sensor_msgs/Image my_left
sensor_msgs/Image my_right

is my custom message.
I created a new package. I want to subscribe to the node publishing "topic".
int main(int argc, char **argv)
{
    ros::init(argc, argv, "listener");

    ros::NodeHandle n;

        std::cout << "hello disparity" << std::endl;
    
        ros::Subscriber sub = n.subscribe("mycustomtopic",1000,chatterCallback);
    
        std::cout << "after subscription disparity" << std::endl;
    
        ros::spin();
        
        std::cout << "after spin disparity" << std::endl;
    
        return 0;
}

is my main function.
void chatterCallback(const swahana_v2::rectified_imageConstPtr &msg){
    std::cout << "checker " << std::endl;
    return;
}

is my callback function written in the same node.
and the output is
hello disparity

after subscription disparity

^Cafter spin disparity

following is my CMakeLists.txt
cmake_minimum_required(VERSION 2.8.3)

project(compute_disparity)

set(CMAKE_BUILD_TYPE Release)

find_package(catkin REQUIRED COMPONENTS
  rectifier

  roscpp

  rospy

  std_msgs

  swahana_v2

  sensor_msgs
)

catkin_package()

include_directories( ${catkin_INCLUDE_DIRS})

include_directories(include ${catkin_INCLUDE_DIRS})

add_executable(hsvgmmN src/hsvgmmN.cpp)

target_link_libraries(hsvgmmN ${catkin_LIBRARIES})

add_dependencies(hsvgmmN compute_disparity_generate_messages_cpp)

target_link_libraries(hsvgmmN ${catkin_LIBRARIES})

target_link_libraries (hsvgmmN elas viso ${PCL_LIBRARIES} ${OpenCV_LIBS} )

find_package(message_generation)

catkin_package(CATKIN_DEPENDS message_runtime)

add_message_files(

  DIRECTORY ../swahana_v2/msg

  FILES rectified_image.msg
)

find_package(catkin REQUIRED COMPONENTS swahana_v2)

add_dependencies(hsvgmmN swahana_v2_generate_messages_cpp)

but, "checker" is not getting printed.
This means, there is still some problem with the callback function.
please help!

Originally posted by saikrishnagv on ROS Answers with karma: 11 on 2015-07-10
Post score: 0

Original comments
Comment by cyborg-x1 on 2015-07-13:
Have you had a look on rqt_graph like I wrote in the answer? Are the nodes connected by topic?

A:

You need to add the old package as dependency to your new package.
Inside the CMakeLists.txt and as run and build dependency in package.xml
And in the Callback you need your const <package>::<message>::ConstPtr &msg
CMakeLists.txt:
find_package(catkin REQUIRED COMPONENTS
   ... 
   your_old_package
)

package.xml:
   <run_depend>your_old_package</run_depend>
   <build_depend>your_old_package</build_depend>

I guess you are also missing to link your node inside CMakeLists.txt with roscpp by:
add_executable(<executable_name> <dependencies>)
target_link_libraries(<executable_name> ${catkin_LIBRARIES})

Have you checked rqt_graph if the topics are connected?
(deselect hide checkboxes to see unconnected topics rectangular boxes)
If not you might need to create a launchfile with remap:
http://wiki.ros.org/roslaunch/XML/remap
Have you checked that the publisher is really publishing?
rostopic echo /mycustomtopic
alternatively you could try to publish with rostopic
rostopic pub /mycustomtopic package/MessageType <press tab twice (auto completion)>

Originally posted by cyborg-x1 with karma: 1376 on 2015-07-11
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by saikrishnagv on 2015-07-12:
void chatterCallback(const rectified_imageConstPtr &msg)
is my callback function..
and I got the following error message:
/home/krish/architecture_ws/src/compute_disparity/src/hsvgmmN.cpp:116:28: error: ‘rectified_imageConstPtr’ does not name a type
I have the rectified_image.msg as my custom
Comment by cyborg-x1 on 2015-07-12:
Sorry messed something up, just checked back one of my own callbacks.
Comment by saikrishnagv on 2015-07-12:
that also did not work! :(
Comment by BennyRe on 2015-07-13:
Please post the function signature that doesn't work.
Comment by saikrishnagv on 2015-07-13:
void chatterCallback(const swahana_v2::rectified_image::ConstPtr &msg){
std::cout << "checker" << std::endl;
}
Comment by cyborg-x1 on 2015-07-13:
Is it a typo?
chattercallback -> chatterCallback
(in your line above you write it with lower case letters and here you do camelcase)
Comment by BennyRe on 2015-07-13:
Please also always provide the compiler message.
Comment by saikrishnagv on 2015-07-13:
Linking CXX executable /home/krish/architecture_ws/devel/lib/compute_disparity/hsvgmmN
CMakeFiles/hsvgmmN.dir/src/hsvgmmN.cpp.o: In function `ros::Subscriber ros::NodeHandle::subscribe<swahana_v2::rectified_image_std::allocator<void > >(std::basic_string<char, std::char_traits, std::allocato
Comment by BennyRe on 2015-07-13:
The comment length is limited, so your compiler message got cropped. Please post it in your original question with the edit function.
Comment by saikrishnagv on 2015-07-13:
done! sorry for the inconvinience
Comment by cyborg-x1 on 2015-07-13:
do you have roscpp in your package dependencies?
find_package(catkin REQUIRED COMPONENTS
   roscpp
   your_old_package
)

because it does not find ros::Subscriber::~Subscriber()' ...
Comment by cyborg-x1 on 2015-07-13:
Probably paste the non-commented lines of your CMakeLists.txt as well
Comment by saikrishnagv on 2015-07-13:
yes, it is included
Comment by cyborg-x1 on 2015-07-13:
Actually I think your problem is somewhere else:
hsvgmmN.cpp:(.text.startup+0x15c): undefined reference to `ros::spin()'

Is this line inside your CMakeLists.txt?
target_link_libraries(<executable_name> ${catkin_LIBRARIES})

Comment by saikrishnagv on 2015-07-13:
NO!
I included it now, and it worked!
Comment by cyborg-x1 on 2015-07-13:
So everything works now?
Comment by saikrishnagv on 2015-07-13:
not exactly. please see my edited question
Comment by saikrishnagv on 2015-07-13:
no, they are not connected.
I did "rostopic list" to find out that "mycustomtopic" is being published

