Q:

find 3D location of the sensor when a depth image arrives

Hey buddies! I went through the forum and couldn't find a satisfying answer. Sorry, if I reopened an already-answered question.
Basically, I need to write a ROS node that will print the 3D location of the sensor and the timestamp in a text format when it detects a depth image.
Here is what I think I should do (tho I don't know how to):

Build a robot with odometer and mount a web camera on it.
Create a node that will publish odometer's data. ->odom_node
Create a node that will detect 3D images. -> cam_node
I somehow will make the odom_node to listen to the cam_node.

I have thousands of questions to ask but that would make it too broad, I don't really know where to start.
Could someone direct me to some good tutorials and projects where I can learn and finish the project on my own?
I appreciate all the answers. Thank you in advance.

Originally posted by Rai on ROS Answers with karma: 30 on 2017-03-06
Post score: 0

A:

There are many questions before help can be offered.

print the 3D location of the sensor and the timestamp in a text format when it detects a depth image

Location of the sensor in relation to what? It's position on the map I would presume, so first you would have to create the map.
Print to where (and why??)? I have little information to go on, but am presuming you are using this for navigation (create map with sensor, use map to navigate around the space). If this is not the case, you need to provide more information. If it is the case, look at mapping and the NAV stack.
1,2, & 3 are fairly straightforward. 4, not so much. Why would odom_node listen to cam_node? They each publish information that is used by higher level functions.
regards, Richard

Originally posted by richkappler with karma: 106 on 2017-03-10
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Rai on 2017-03-10:
Thank you for your quick answer. The output should look like this:
FORMAT:
One line per message
DEPTHIMAGE
<timestamp.sec>.<timestamp.usec>
<camera pose w.r.t. odom frame
(x,y,z,qx,qy,qz,qw)>
Please excuse my lack of knowledge about it. I just started learning ROS.
Comment by Rai on 2017-03-10:
I guess I have achieved something in this post??!?!?!?

