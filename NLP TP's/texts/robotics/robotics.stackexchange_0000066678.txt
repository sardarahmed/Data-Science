Q:

Can I use ROS to control Parrot's Bebop

I have been working with ArDrone Autonomy package to control Parrot's ardrone 1.0 and 2.0.
Now I want to work with the new drone and I was wondering how to do it. Can I use ardrone autonomy? Should I change any configuration? Is there any specific package to use Bebop?
Thank you in advance

Originally posted by alexrodriv on ROS Answers with karma: 61 on 2015-03-27
Post score: 6

Original comments
Comment by nanaky on 2015-04-01:
I have the same question. Waiting for an answer!!!
Comment by Cyril Jourdan on 2015-05-01:
I also would like to know how to do that ! I only know this repository : https://github.com/ARDroneSDK3
Haven't tried it yet, but it should be possible to link it to ROS.
Comment by Anurag VV on 2017-04-21:
I am very eager to know the answer to this question. Primarily because I do not exactly know how the controller for ardrone or hector_quadrotor are implemented. It is all very confusing. I keep going in circles. There is no one pipeline layout of how the urdf, dynamics, control are all coded.

A:

Update 2: It's possible now: https://github.com/AutonomyLab/bebop_autonomy
Bebop drone uses a different protocol than Ardrone, therefor it can not be interfaced through ArdroneLIB SDK. That's the reason why ardrone_autonomy is incompatible with Bebop drone. There is currently no ROS driver to control Bebop. As @Cyril_J said, Parrot has released ARDoneSDK3 for Bebop drone. I'll provide my insights about this SDK as a comment.
Update 1: Paparazzi project supports Bebop. I have not yet tried this solution, but it might be possible to bridge ivy (Paparazzi's comm protocol) to ROS either directly or through mavlink <-> ivy bridge. (More info)

Originally posted by Mani with karma: 1704 on 2015-05-14
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by Mani on 2015-05-14:
I am the maintainer/developer of ardrone_autonomy. I got access to Bebop drone a couple of weeks ago and tested and hacked it for a couple of days. The drone itself is a major improvement over Ardrone 2.0. However there is no developer guide for the SDK. (cont)
Comment by Mani on 2015-05-14:
The underlying protocol, the network layer configuration and the logic behind the framework is not clear. The SDK comes with a C example that shows how to control the drone with keyboard and read the video stream. In principal one can build a ROS driver around this example. (cont)
Comment by Mani on 2015-05-14:
I decided not to do that for now for couple of reasons 1) Extra effort is needed to understand how the SDK work.  It means longer development time which I could not commit to 2) Since the protocol is not documented, it is not clear if the streaming video quality can be improved (cont)
Comment by Mani on 2015-05-14:
Currently the streaming video quality is poor with lag and jitter. With this quality, it is not a useful platform for vision processing tasks, which I am personally interested in. If anyone is interested to discuss the options and solutions, please feel free to contact me.

