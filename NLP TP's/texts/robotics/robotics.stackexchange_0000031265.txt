Q:

Hokuyo to camera calibration

I am trying to do the same type of calibration as you guys did in
Scanner to camera calibration

The problem that I'm having is that the corners cannot be found properly in the intensity image.
I was wondering if someone could give me some references to the "interpolation derived from color interpolators, preserving dominant edges" algorithm? That way I could try and implemented to enhance the intensity image.  Or if the algorithm is already implemented as open source where can I find it?
Thanks in advance.
PS: I was going to attach the intensity image but I don't have enough "karma" to do so.

Originally posted by Jose on ROS Answers with karma: 11 on 2011-04-25
Post score: 1

A:

Hi Jose,
I am not familiar with the "interpolation derived from color interpolators, preserving dominant edges".  However, the pr2_calibration stack deals with this issue by naively upsampling the image before using OpenCV's checkerboard detector.  The OpenCV checkerboard detector seems to perform much better on upsampled intensity images.
You can see an example of this approach in pr2_calibration/laser_cb_detector/src/laser_cb_detector.cpp.

Originally posted by vpradeep with karma: 760 on 2011-04-25
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Jose on 2011-04-25:
Yes and I'm actually using the corner finding algorithm from Vezhnevets Vldimir. This algorithm gives me better results than the OpenCV cvFindChessboardCorners.
Comment by vpradeep on 2011-04-25:
Are you also running the subpixel refinement step (cvFindCornerSubPix)?  This should significantly improve your results.
Comment by Jose on 2011-04-25:
Thank you for the quick response, I have tried upsampling the image.  Although, it does give me better results they are far from prefect, that is why I decided to try and find a way to enhance the image.

