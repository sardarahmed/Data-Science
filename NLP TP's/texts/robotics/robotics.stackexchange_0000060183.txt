Q:

How to load a file contained in a package

Let's say I have a file with stored information. I don't want to put the absolute path, neither do I want to roscd mypackage before executing my node so that the file can be found.
Is there an elegant way of doing that on both Python and C++?
If it is not possible, how can I then solve the problem when using roslaunch, because then the file is not found anymore even when change my directory to the packages directory before launching.

Originally posted by Mehdi. on ROS Answers with karma: 3339 on 2014-06-19
Post score: 1

Original comments
Comment by Wolf on 2014-06-19:
Excellent question! I usually set the project source dir as define in CMakeLists.txt ( set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DLOCATION=${PROJECT_SOURCE_DIR}) ) and then use this define (LOCATION) in my code to locate the files. --> Works but what would be the proper way to do that??
Comment by Mehdi. on 2014-06-19:
is {PROJECT_SOURCE_DIR} a general flag recognized by CMake or do you replace it by the global path? In case of the latter option this doesn't fully solve the problem.

A:

You might be interested in the roslib C++ API. Especially the section on packages.
To get the fully qualified path to a package (from there it should be easy enough to navigate to the actual file) you should probably use ros::package::getPath(const std::string& package_name).

Originally posted by gvdhoorn with karma: 86574 on 2014-06-30
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Mehdi. on 2014-06-30:
I think this is the right way to do it. Thanks !
I also found this tutorial that describes how to use the API for both C++ and Python
http://wiki.ros.org/Packages#Client_Library_Support

