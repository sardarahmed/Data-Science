Q:

robot clearance from walls

hi, all,
I have been testing my robot for a while.
there's a problem persists.
the global plan would put the path along and close to the wall.
especially at the corners,
each time at the corners, my robot feels it's too close to the wall (I can see if from rviz), and initiates escape behaviour.
is there a way to move the path away from the walls?
I am using default move_base global planner.
or, does it help if I inflate the global cost map further?
which parameter should I manipulate?
regards
Ray

Originally posted by dreamcase on ROS Answers with karma: 91 on 2014-07-17
Post score: 0

A:

You're on the right track. If the robot is getting close enough that it is doing the recovery behaviors, then it's possible you're not setting the robot footprint correctly. What shape is your robot?
Changing the robot's footprint may change the minimum allowed distance. If you want to allow your robot to go closer, but prefer it to move farther, I would increase the inflation_radius and play with the cost_scaling_factor.

Originally posted by David Lu with karma: 10932 on 2014-07-19
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by dreamcase on 2014-07-19:
hi, David,
it seems inflation_radius doesn't have too much influence on the costmap inflation.
not too much impact when I changed it from default,0.55m to 2m, minimum clearance at the corner change from 0.5m to 0.7m.
cost scaling factor seems reverse proportional to the inflation. smaller scaling factor gives wider inflation
is it suppose so?
Comment by David Lu on 2014-07-19:
That sounds right. What is the shape of your robot, and what do you have the footprint set as?
Comment by dreamcase on 2014-07-19:
the robot looks like a pentagon,
footprint: [[0.1, 0.2], [0.25, 0.0],  [0.1, -0.2],[-0.3, -0.2], [-0.3, 0.2]].
and when I set smaller scaling factors, it seems the local path planner is suppressed, as the obstacles are all inflated, and local planner cannot find a way out.
is there a way to inflate the global costmap while leaving the local costmap untouched?
Comment by David Lu on 2014-07-22:
What distro are you using, and where are you changing the parameters?
Comment by dreamcase on 2014-07-22:
I think it's ok now.
the inflation_radius gives the radius within which objects will inflate, cost_scaling_factor is the one actually inflates the cost map.
Comment by MariaKrgr on 2016-05-05:
I know it's been a while but I'll give it a try: what value did you use for cost_scaling_factor?

