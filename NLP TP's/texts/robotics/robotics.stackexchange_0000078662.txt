Q:

Indigo: build from source on C.H.I.P. fails: cc1plus killed

I am using this set of instructions.........
http://wiki.ros.org/indigo/Installation/Debian
sudo ./src/catkin/bin/catkin_make_isolated --install -DCMAKE_BUILD_TYPE=Release --install-space /opt/ros/indigo

Errors out in step 41 of 48

'ROS_CREATE_SIMPLE_SERIALIZER_ARM'
     ROS_CREATE_SIMPLE_SERIALIZER_ARM(double);
     ^
c++: internal compiler error: Killed (program cc1plus)
Please submit a full bug report,
with preprocessed source if appropriate.
See <file:///usr/share/doc/gcc-4.9/README.Bugs> for instructions.
CMakeFiles/roscpp.dir/build.make:146: recipe for target 'CMakeFiles/roscpp.dir/src/libros/publisher_link.cpp.o' failed
make[2]: *** [CMakeFiles/roscpp.dir/src/libros/publisher_link.cpp.o] Error 4
CMakeFiles/Makefile2:317: recipe for target 'CMakeFiles/roscpp.dir/all' failed
make[1]: *** [CMakeFiles/roscpp.dir/all] Error 2
Makefile:127: recipe for target 'all' failed
make: *** [all] Error 2
<== Failed to process package 'roscpp':
  Command '['/opt/ros/indigo/env.sh', 'make', '-j1', '-l1']' returned non-zero exit status 2

Reproduce this error by running:
==> cd /home/chip/ros_catkin_ws/build_isolated/roscpp && /opt/ros/indigo/env.sh make -j1 -l1

Command failed, exiting.
chip@chip:~/ros_catkin_ws$ sudo ./src/catkin/bin/catkin_make_isolated --install -DCMAKE_BUILD_TYPE=Release --install-space /opt/ros/indig

Edit: I apologize, i honestly didn't know where to look. for precompiled binaries... Any hints?
I was perhaps under the mistaken impression that they did not exist.
https://erlerobotics.gitbooks.io/erle-robotics-erle-brain-a-linux-brain-for-drones/content/en/ros/tutorials/rosinstall.html

Debian Wheezy (7.5)

There are no precompiled binaries of ROS for Debian, while it seems that most of the dependencies are being pulled into the main repositories there are still some missing so compiling requires that the dependencies be made from source as well. The following steps describe how to compile everything from source doing this for a machine running Debian Wheezy.

I don't know when this was written so perhaps it is out of date.
NOTE: I am on a Debian Jessie platform......

Originally posted by w on ROS Answers with karma: 99 on 2017-01-31
Post score: 0

A:

'ROS_CREATE_SIMPLE_SERIALIZER_ARM'

     ROS_CREATE_SIMPLE_SERIALIZER_ARM(double);

From this, I have the impression you are attempting this on an ARM platform. Those are typically resource limited, and compilation of (heavily templated) C++ sources is a resource intensive process. c++: internal compiler error: Killed (program cc1plus) can then often be caused by the system running out-of-memory.
Can you try to reduce the paralellisation by adding -j1 to your catkin_make_isolated call?

Edit:

I apologize, i honestly didn't know where to look. for precompiled binaries... Any hints?

I'm not sure, but you could perhaps use the packages in the Debian repositories part of the DebianScience/Robotics project. They won't have everything, and the versions are fixed (ie: they don't track upstream), but depending on your use-cases it could allow you to avoid a lot of compiling.

Originally posted by gvdhoorn with karma: 86574 on 2017-01-31
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by w on 2017-01-31:
I thank you for the suggestion and have tried exactly that but it still fails, yes it is an arm platform
.
Comment by gvdhoorn on 2017-01-31:
Can you provide a bit more information? How much memory does it have? What platform is this? Do you have swap enabled?
Comment by w on 2017-01-31:
i am using a nextthing chip (($9). I was running the version with the gui enabled. I tried to get it to compile multiple times, it always failed out at the same step. I flashed to a headless image and am reattempting, with the thought that perhaps this will free up enough system resources to complet
Comment by w on 2017-01-31:
e the task. will update as to my progress, thank you for your assistance
Comment by gvdhoorn on 2017-01-31:
Looks like it has only 512MB of ram. C++ compilers are very ram hungry beasts. If you have the skills, I'd look into cross-compilation.
Also looks like it's an ARMv7 device. Have you checked whether you can use any of the pre-built binary distributions?
Comment by w on 2017-01-31:
The installation was successful on the headless (non GUI) image. Thank you for your time and knowledge.
ONWARD to the next Battle!

