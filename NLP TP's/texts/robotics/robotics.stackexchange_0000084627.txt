Q:

robot_upstart: Nodes using third party libraries are ignored [Python]

I'm using ROS on raspberry pi 3. I'm using two third party libraries, one for reading sensor registers from I2C (FaBo9AXIS-MPU9250-Python) and one for generating PWM signal on pins (pigpio).
Any node importing one won't start by ros_upstart as if it doesn't exist in the launch file (also no log file is generated). What's wrong?
Here's one of the nodes:
import rospy
import FaBo9Axis_MPU9250
from sensor_msgs.msg import Imu

rospy.init_node('imu')

mpu9250 = FaBo9Axis_MPU9250.MPU9250()

pub = rospy.Publisher('imu/data_raw',Imu, queue_size = 1)
msg = Imu()
msg.orientation_covariance[0] = -1
msg.header.frame_id = 'imu'
rate = rospy.Rate(100)

while not rospy.is_shutdown():
    accel = mpu9250.readAccel()
    gyro = mpu9250.readGyro()
    
    msg.header.stamp = rospy.Time.now()

    msg.linear_acceleration.x = accel['x'] * 9.81
    msg.linear_acceleration.y = accel['y'] * 9.81
    msg.linear_acceleration.z = accel['z'] * 9.81

    msg.angular_velocity.x = (gyro['x'] - 0.9) * 0.01745329251
    msg.angular_velocity.y = (gyro['y'] - 0.5) * 0.01745329251
    msg.angular_velocity.z = gyro['z'] * 0.01745329251

    pub.publish(msg)
    rate.sleep()

Originally posted by mohsen on ROS Answers with karma: 249 on 2018-01-10
Post score: 1

Original comments
Comment by mgruhler on 2018-01-10:
Well, it is hard to say. But as you are trying this with HW, this ist most often an issue with permissions. Check the documentation and consider setting the ports you are using to world read/writeable...
Comment by mohsen on 2018-01-10:
Thanks. What do you mean by "ports" ?
Comment by 130s on 2018-01-10:
Also check PYTHONPATH of the user that runs the service and see the directory of your python file is included.
Comment by mgruhler on 2018-01-10:
By port I mean the GPIO device and the I2C device. Typically (well, on Ubuntu, Ubuntu Mate, ...) you Need to be in the group dialout to get access to those devices. As the docu states, you don't have the group membership when at the point of time that robot_upstart starts the scripts...
Comment by mohsen on 2018-01-10:
So as I understand,root starts the service and the unprivileged user executes the launch file. I have to make sure the user has access to GPIO.

A:

I tracked down the problem to these two lines in the libraries:
import pigpio

and
bus = smbus.SMBus(1)

Running this command solved the first problem
sudo chown root.gpio /dev/gpiomem && sudo chmod a+x /dev/gpiomem

To fix the second one, I had to modify 99-com.rules .
/etc/udev/rules.d/99-com.rules

It was only necessary to change the mode corresponding to i2c-dev to  0777 (read/write for all).
SUBSYSTEM=="i2c-dev", GROUP="i2c", MODE="0777"

Come to think of it, I could do the same for the gpio line  and probably fix both issues using this file.

Originally posted by mohsen with karma: 249 on 2018-01-10
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by mgruhler on 2018-01-11:
That's what I'm talking about :-)
There are several ways to fix the Group permissions. Using udev is IMO the best one.
Comment by mohsen on 2018-01-11:
Thanks for 130s and your support. It was my first time ever hearing about udev :) so it took a while to get there.

