Q:

Very slow update of global variables - python

Hi
I have made a node which takes input from several different sensors. I want to proces the sensor data and publish a on a new topic.
However when I move the data from the callback functions to my processing algorithm the using global variables, the variables are updated very slowly.
I have a very simplified node of what I have done...
#!/usr/bin/env python

import rospy
from sensor_msgs.msg import LaserScan
from std_msgs.msg import Float64

ranges = []

def callback(data):
     global ranges
     rospy.loginfo(data)
     ranges = data.ranges[200]
def listener():
     rospy.init_node('listener', anonymous=True)
     rospy.Subscriber("scan", LaserScan, callback)      
if __name__ == '__main__':
      while not rospy.is_shutdown():
           listener()
           rospy.Publisher('talk', Float64, queue_size=5).publish(ranges)
           rospy.sleep(0.01)

Originally posted by Oevli on ROS Answers with karma: 30 on 2015-12-04
Post score: 0

A:

if __name__ == '__main__':

      while not rospy.is_shutdown():
           listener()
           rospy.Publisher('talk', Float64, queue_size=5).publish(ranges)
           rospy.sleep(0.01) 

You are re-creating your subscriber every 0.01 seconds, which is probably not what you want.

However when I move the data from the callback functions to my processing algorithm the using global variables, the variables are updated very slowly.

I can imagine that the chances of ROS successfully registering your subscriber, receiving a message and delivering it to your callback in 0.01 sec are rather slim, and only succeeds every now and then. If that leads to most messages being missed, it would appear as if updates to ranges are very slow. In reality, they are probably very infrequent.

Originally posted by gvdhoorn with karma: 86574 on 2015-12-04
This answer was ACCEPTED on the original site
Post score: 2

