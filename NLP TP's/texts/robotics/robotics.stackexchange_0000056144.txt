Q:

Controllers are unable to fight gravity in Gazebo simulation

I am currently trying to simulate a robot in Gazebo using the ROS framework. I used this (www.gazebosim.org/wiki/Tutorials/1.9/ROS_Control_with_Gazebo) Tutorial to get an existing robot model running with the controller from the ros_control package. Everything works fine, the controller for each joints are up and running. I can use the corresponding ROS topics to send commands to each controller.
There is one slight problem: The controllers are even unable to fight the robots own weight. No mather what combination of PID gains I set for the controller, the robot is always pulled down by its own weight.
I am using a UR5 robot for simulation, the URDF file can be found here (www.github.com/ros-industrial/universal_robot/tree/groovy-devel/ur_description).
Here are two screenshots of the simulation, one with gravity enabled:
www.s14.directupload.net/images/131214/u6f4585l.jpg
and one with gravity disabled:
www.s1.directupload.net/images/131214/oya39ubp.jpg
Can anyone help me here?

Originally posted by miniME05 on ROS Answers with karma: 33 on 2013-12-16
Post score: 1

A:

It appears all the effort limits in your URDF are set to 10.0, which seems suspect, are you sure that the joint effort limits are correct? Gazebo will end up limiting the max effort output to that effort limit, so it is quite important.

Originally posted by fergs with karma: 13902 on 2013-12-16
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by miniME05 on 2013-12-16:
tanks for the hint. I will try to edit these values (later or tomorrow) and see if I can get the robot moving properly. Note: I didn't created that URDF file, so i assumed it should work. But 10 Nm on each joint doesn't sound like that much :) Edit: yea, the value of the effort limit was the problem

