Q:

Android ROS Message

I'm unsure where to turn to get help for my question, so I might try my luck here.
I am trying to send a message to a ROS via an Android Application. The message is the string "Hello World".  I tried to do some research and found out that I could use a MessageFactory object but I am unsure what else to do. Can someone point me in the right direction?
I am also aware that my node object has not been initialized. I tried doing some research into but haven't got found any information that can help. Any help here also would be appreciated. It is denoted by the comment "known error here".
I will post my code below, along with the packages I included.
//packages included

import org.ros.android.BitmapFromCompressedImage;
import org.ros.android.view.RosImageView;
import org.ros.android.view.VirtualJoystickView;
import org.ros.message.MessageFactory;
import org.ros.namespace.NameResolver;
import org.ros.node.Node;
import org.ros.node.NodeConfiguration;
import org.ros.node.NodeMainExecutor;
 

  public void executeCommand(NodeMainExecutor nodeMainExecutor){
      Node node;

      try{
          java.net.Socket socket = new java.net.Socket(getMasterUri().getHost(), getMasterUri().getPort());
          java.net.InetAddress local_network_address = socket.getLocalAddress();
          socket.close();
          NodeConfiguration nodeConfiguration = NodeConfiguration.newPublic(local_network_address.getHostAddress(), getMasterUri());

          String craneTopic = "/rosout";

          NameResolver appNameSpace = getMasterNameSpace();
          craneTopic = appNameSpace.resolve(craneTopic).toString();

          MessageFactory factory = node.getTopicMessageFactory();// known error here
          std_msgs.String m = factory.newFromType(std_msgs.String._TYPE);

         //nodeMainExecutor.execute(, nodeConfiguration.setNodeName("android/follow_crane")); // unknown what to put here
         
      }catch (IOException e) {
          Toast.makeText(getApplicationContext(), "Unable to execute command",Toast.LENGTH_SHORT).show();
      }  
  }

Originally posted by ByteMonster on ROS Answers with karma: 1 on 2018-02-19
Post score: 0

Original comments
Comment by ByteMonster on 2018-02-19:
About the node object, I had no idea it had to be declared globally. That now is fixed.
Comment by arunavanag on 2018-02-19:
How are you planning to send the message? TCP? I hope not. Is it a websocket?
Comment by ByteMonster on 2018-02-19:
hi @arunavanag. I am sending the data via a java socket.
Comment by arunavanag on 2018-02-19:
Great then just configure your java socket to send the wlan id and port = 9090 (rosbridge_websocket default port) and send over to the respective topic.
Here these guys are sending it from Windows Unity to ROS websocket : https://github.com/soliagabriel/holoROS/blob/master/Scripts/Source.cs
Comment by arunavanag on 2018-02-19:
Have a look at the source script (its in C#). On the other end just launch rosbridge_websocket, and run your node which has the same topic name.
Also you may wanna see the rosbridge messaging protocol: https://github.com/biobotus/rosbridge_suite/blob/master/ROSBRIDGE_PROTOCOL.md
Comment by arunavanag on 2018-02-19:
Here is rosbridge suite installation if you already dont have it : http://wiki.ros.org/rosbridge_suite
Comment by gvdhoorn on 2018-02-20:
@arunavanag: I believe you missed that the OP is trying to use ROS Android. That is a regular client library for ROS 1. No need to run to rosbridge_suite immediately.
Comment by arunavanag on 2018-02-20:
My bad, I got it wrong.
Comment by gvdhoorn on 2018-02-20:
Suggesting rosbridge_suite is not a bad idea necessarily. It's just that the OP appears to want to use ROS Android.
Comment by ByteMonster on 2018-02-20:
After looking at the links you gave me @arunavanag, I can't seem to salvage anything off that. I appreciate you trying to help me, however. I think I just need to encapsulate the string in a node and send it over but have no idea on how to do it.

A:

Hi @ByteMonster,
To publish messages, you need to create and execute a node. Within the context of the node execution, you can get a publisher and start doing what you want. I'd definitely not go the way of Java sockets in this case; you can use RosJava.
I've created a minimal example app to show the point. You can take a look here: https://github.com/jubeira/ros_android_helloworld, and in particular, at the main activity.
Note that the nodes you create should extend AbstractNodeMain, and the user code should always be in its onStart method. The ConnectedNode received by that method will provide you with methods to create publishers and so on.
Hope it helps!
Edit: You can also take a look at the 'official' code samples in Android Core. The most basic example there is this one: https://github.com/rosjava/android_core/tree/kinetic/android_tutorial_pubsub, which is just a bit more advanced than the one I posted above.

Originally posted by jubeira with karma: 1054 on 2018-02-20
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by jubeira on 2018-02-21:
@ByteMonster were you able to solve your problem?
Comment by ByteMonster on 2018-02-21:
@juberia I was able to use your example as launching platform to solve my problem. I think it is done, I just need to test it. However I did come across an error in the ROSjava. If can't figure it out I will post another question on the forum

