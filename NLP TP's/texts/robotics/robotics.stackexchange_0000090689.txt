Q:

Why did ros prevail?

New to ROS, trying to understand the history of robotic frameworks in general and how this opensource software came to be. So why did ROS prevail over other frameworks. In 2012 trinity researchers had done a study https://ieeexplore.ieee.org/abstract/document/6195127 where player stage and mds had better scores but now ros is the standard.
Is it because of OSRF and it taking over ROS in 2013, or what. Would like to know.
Thanks.

Originally posted by shaqdc1 on ROS Answers with karma: 13 on 2019-02-27
Post score: 1

Original comments
Comment by fvd on 2019-03-19:
@shaqdc1 I don't doubt that this is a duplicate, but a link would be nice.

A:

From what I've seen, ROS has been popular among academics and startup robotic companies for a number of reasons:

The Willow Garage internship program and PR2 program trained a lot of interns on how to use ROS, and when they went back to their universities, they brought ROS with them and trained the other students in their lab about how to use it.
Willow Garage put a lot of effort into the documentation and documentation structure for ROS. This makes it easier to get started than competing frameworks. (This is the primary reason why I started using ROS)
By it's structure, ROS is a federated framework, which makes it easier for developers to use other packages, and easier for developers to release their own work.
OSRF (and Willow Garage before it) provide pre-compiled binaries to run ROS on Ubuntu. This helps make it easier to install and run ROS.
There is a large demand for books about ROS, and therefore a reasonable number of books about ROS.
ROS is (mostly) released under a BSD license that makes it easy for companies to use without worrying about copyright.
There are a number of other companies building and supporting relatively capable ROS-based robots that are targeted at beginners, including the Turtlebot project and most of the robots that have been released by Clearpath Robotics.

The primary measures for the success of ROS are the number of papers that cite the original workshop about ROS at ICRA 2009, and the number of downloads of the ROS binary packages. I believe OSRF publishes both of these metrics.

Originally posted by ahendrix with karma: 47576 on 2019-02-28
This answer was ACCEPTED on the original site
Post score: 7

Original comments
Comment by fvd on 2019-03-01:
+1 to documentation and accessibility. I would add the existing selection of drivers/bridges and the network effect as another major reason. Few things matter as much to new adopters than "Is this the least painful option that does what I need to do?"
Comment by shaqdc1 on 2019-03-04:
@fvd COuld you elaborate what you mean by  existing selection of drivers/bridges and the network effect. I  couldn't quite catch it.
Comment by ahendrix on 2019-03-05:
Drivers: There are lots of good ROS nodes to connect sensors and other hardware to ROS; for example the Hokuyo urg_node, lots of camera drivers, and a variety of mobile bases and actuators.
Comment by ahendrix on 2019-03-05:
Network effect: since there is already lots of good software written that uses ROS, this encourages further development of software using ROS, since people try to re-use existing drivers and algorithms.

