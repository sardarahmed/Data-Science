Q:

bridging the gap between two tf trees

Hello! I am attempting to run a swarm of turtlebot3s from my Ubuntu16.02. I have added namespaces and tf_prefix to relevant .launch files. It seems as though no matter what I change, I can't seem to get rviz to pick up the proper transform, as shown in the following picture: 
and I discovered from view_frames that my two tf trees are persisting as shown here:  .
Is the only way to fix this by publishing a transform to bridge the two base_footprints? Is this even possible? Sorry - this is all still very new to me and the other questions went over my head a little bit. Anyway, thank you for any advice you can offer!

Originally posted by AmateurHour on ROS Answers with karma: 95 on 2018-07-24
Post score: 1

A:

The quick fix would be to just publish a static transform from base_footprint → bot1_tf/bot1/base_footprint, like this:
rosrun tf static_transform_publisher 0 0 0 0 0 0 base_footprint bot1_tf/bot1/base_footprint 10

The more elegant solution would be to make the node that publishes odom → base_footprint to publish odom → bot1_tf/bot1/base_footprint instead. It looks like that node is called bot1/turtlebot3_core. In the launch file that launches that node, try adding the following parameter:
<param name="tf_prefix" value="bot1_tf/bot1/" />

If that doesn't work, read the documentation or source code for that node to figure out if there is a parameter that allows you to set the output frame to bot1_tf/bot1/base_footprint.

Originally posted by Martin Günther with karma: 11816 on 2018-07-24
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by AmateurHour on 2018-07-24:
So the static transformer works, and connects the trees. Great! However, the tf_prefix solution doesn't solve the problem, and the source code for turtlebot3_core is an .ino file for arduino, and changing relevant names had no effect. Also, no map received.Any other suggestions?Really appreciate it!

