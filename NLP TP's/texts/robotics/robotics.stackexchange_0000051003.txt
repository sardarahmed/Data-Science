Q:

Question about new organization of ROS with catkin instead of rosbuild

Hi everyone!!
My name is Ivan. I have worked some years with ROS. But now, I donÂ´t Understand the new organization of package.
For example in Fuerte version, we had this arquitecture:
example-ros-pkg
 - RobotA(Stack)
- Package1
- Package2
- Package3

RobotB(Stack)

Package1
Package2
Package3

RobotD(Stack)
.
.
.
RobotE(Stack)
.
.
.
In a Groovy version, the stack concept has been removed, How can reorganize our repository to respect the new standard?

Thanks for your comments!

Originally posted by Ivan Rojas Jofre on ROS Answers with karma: 70 on 2013-05-08
Post score: 2

A:

The closest equivalent to the old stack concept is the new metapackage, as described here.  A metapackage is a package that only contains references to other packages (no code), plus a special <metapackage/> tag.  This allows users to install a group of packages using a metapackage, just like they did previously with stacks.  Metapackages are also more flexible in that they allow you to group packages that may not be located in the same repository / filesystem.
A suggested layout is shown here for how to organize the metapackage / package hierarchy in groovy:
my_stack/        --> my_metapackage/
  my_package_1/  -->   my_package_1/
    manifest.xml -->     package.xml
  ...
  my_package_n/  -->   my_package_n/
    manifest.xml -->     package.xml
  stack.xml      -->   my_metapackage
                         package.xml (Internally, a tag indicates it's a metapackage)

Originally posted by Jeremy Zoss with karma: 4976 on 2013-05-08
This answer was ACCEPTED on the original site
Post score: 7

Original comments
Comment by Ivan Rojas Jofre on 2013-05-09:
Thanks a lot for you response Jeremy, Now see clearly the new organization, as I read the documentation and I not understood very well the concept

