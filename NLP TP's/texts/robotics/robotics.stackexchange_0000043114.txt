Q:

move_arm how ignore his arm to collision

I know my title is not clear but it's difficult to explain.
So I use a wizard description package with a robot arm (Package Arm navigation).
I can send a goal(pose and articular) and the robot follow a trajectory
I use also a kinect to generate a pointcloud and then a octomap_collision.
My problem it's that the kinect detects the robot like a obstacle and so stops directly.
I can see that there are cubes of collision_map in the robot.
How can I do to avoid this mistake ? The environment server can understand that this points are the robot ?
I think that something exists because it's a very recurrent problem in grasping of object for example.
I don't know if it's more clear. if it isn't, post a question in comment please.
Thanks

Originally posted by jep31 on ROS Answers with karma: 411 on 2012-08-10
Post score: 0

A:

The self-filtering functionality is implemented in the robot_self_filter package. You can check an example launch setup in the pr2_arm_navigation_perception package.

Originally posted by Adolfo Rodriguez T with karma: 3907 on 2012-08-10
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by jep31 on 2012-08-10:
Thanks for your answer, I think it's what I was looking.

This node takes as argument a topic of pointCloud and return the pointCloud filtered ?
How I can generate a yaml of pr2_arm_navigation_perception that it's used in the example ?

Comment by Adolfo Rodriguez T on 2012-08-10:
I presume you're referring to the self_filter config file. It contains info like the min distance at which the filter operates, and the robot links it will work with (along with geometric padding values to account for calibration and sensing errors). This info is specific to your robot setup.
Comment by Adolfo Rodriguez T on 2012-08-10:
Further, the list of links you specify in the config file corresponds to those that will show up in the field of view of your sensor(s). That is, you don't want to waste computational resources trying to filter out links that will never come into view.

