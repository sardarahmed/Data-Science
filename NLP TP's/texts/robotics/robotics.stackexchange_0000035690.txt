Q:

Communication between ROS and wxWidgets

What's the best way of sending and receiving ROS messages to and from a wxWidgets GUI in C++?
I have a GUI that should be updated with status of some ROS nodes and I want to be able to send some ROS messages to ROS nodes when a button is clicked i the GUI (or similar).
I have tried to make wxApp as a ROS node and update the GUI when a ROS message is received, but it does not work (some problems with threads).
There must be a 'default' way of communicating with other C++ programs in a wxWidgets GUI?

Originally posted by Ola Ringdahl on ROS Answers with karma: 328 on 2011-11-14
Post score: 3

A:

I got it to work now. It turned out that I forgot to change the call to wxFrame, so the Frame that was supposed to be a class variable was actually a local variable. :-(
I'm so mad at myself that I didn't see that sooner...
Anyway, if someone else wants to connect ROS and wxWidgets, this is how I did it:
In wxApp:

In OnInit(): call ros::init() (convert wxString in argv to char**)
In Onrun(): create a nodehandle and call subscribe with a reference to the wxFrame object. End OnRun with return wxApp::OnRun();

In wxFrame:

Create a timer event that calls ros::spinonce() in its callback method.
Create a callback method for the ROS message and do some exciting stuff in it :-)

Originally posted by Ola Ringdahl with karma: 328 on 2011-11-15
This answer was ACCEPTED on the original site
Post score: 3

Original comments
Comment by LivingMachine on 2013-07-05:
Hi Ola, I am trying to building a GUI with wxWidgets (using Code::Block). Can you point me where I can find the wxApp::OnRun()? Or where can I read more about it, please.
Comment by Ola Ringdahl on 2013-08-13:
I don't think it is there by default, but you should place it in the App-class, so something like this:
int MyCoolApp::OnRun()
{
// subscribers and stuf goes here
return wxApp::OnRun();
}
Comment by Adri on 2016-02-16:
Hello, Ola. I have some questions for you, I hope you can answer me.
When you said "Create a timer event that calls ros::spinonce() in its callback method.", did you mean that we have to create a wxTimerEvent? http://docs.wxwidgets.org/trunk/classwx_timer_event.html
Comment by Adri on 2016-02-16:
And the other question is: When you said "In OnInit(): call ros::init() (convert wxString in argv to char**)", which argv do you mean?
Thank you in advance.
Comment by Ola Ringdahl on 2016-02-16:
Yes you should create a wxTimerEvent.
In onInit, I do the following:
char** argvForRos  = new char*[argc];
for (int i = 0; i < argc; ++i)
{
argvForRos[i] = strdup(wxString(argv[i]).mb_str());
}
ros::init(argc, _argvForRos, "my
Gui");
Comment by Adri on 2016-02-17:
Thank you for your answer. In onInit I tried directly with a casting and it worked too: ros::init(argc, (char **) argv, "my_other_GUI");
Again, thank you so much, Ola. You helped me a lot, :)
Comment by shyamashi on 2021-06-16:
Hi Ola, Thanks for the answer. However, I am new to C++ and hence struggling a bit. I have tried to incorporate all the things that you said but not working. I want to subscribe to an image from ROS and visualize in the GUI. I am sure there could be several errors in my code but if you could find sometime, please take a look at it https://github.com/ashBabu/Utilities/blob/master/guiTest.cpp, it would be really helpful. Specifically I am struggling to create the timer and 'call subscribe with a reference to the wxFrame objec'. Thanks

