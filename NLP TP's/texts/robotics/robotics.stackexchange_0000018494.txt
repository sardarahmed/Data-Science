Q:

What is the best adaptive controller for robotic arms?

I have a question that lays on practical experience. What is the best adaptive controller for a robotic arm?

Self Tuning Regulator (STR)
Model Reference Adaptive Controller (MARC)
Adaptive Model Predictive Control  (AMPC)
Iterative Learning Control  (ILC)
Gain Scheduling  (GS)
Auto-tuned PID (ATPID)

Notice that robotic arms are mechanical systems so the controller need to be fit into a microcontroller, e.g real time system due to the speed and robustness.

A:

The given strategies can be divided into two groups: model-based and model-free control. The AMPC and MARC suggestions are model-based the other are model-free. Theoretically, a pid controller can be combined with Model-based control but for reason of simplification the assumption is, that each technique is located in a certain group.
Now we can ask if model-based or model-free is the more practical robotic arm controller. The good news is, that the winner can be easily imagined, because only model-based control is able to predict future state-space and this is equal to an increased accuracy. It is interesting to know, that model-based control is seldom teached in universities, because it can't be described mathematically elegant.
It remains one point open which has to do with adaptive control. Adaptive means, that the system learns it's parameters on the fly. It will allow to use the same controller for different robot arms. A heavy one and also a lightweight kinematic chain. The holy grail in adaptive control is a system which adapts itself to any kind of robotic arm, no matter if it's underactuated or fixed, with a low amount of DOF or with more servo motors in it. Creating an adaptive forward model is a bit complicated, and I'm not aware if this problem was already solved in the literature.

