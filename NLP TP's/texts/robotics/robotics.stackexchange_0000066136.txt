Q:

"No module named catkin_pkg.package" on catkin_make w/ Hydro

Working with ROS Hydro on Lubuntu 12.04. I have previously worked with Hydro on this OS before so I am relatively sure theres no compatibility differences between it and the standard Ubuntu 12.04 release. All links below are either to wiki.ros or answers.ros.
I followed the ROS installation tutorial here, selecting the recommended options, and then proceeded to test the installation by following the first tutorial here. However, running: ~/catkin_ws$ catkin_make fails and shows the error down below.
There are several other questions here that deal with similar problems such as here and here, but following the solutions provided did not solve the issue. Here, the possibility of not using the system version of python is brought up. This is possibly the issue but I'm unsure how to confirm or remedy this. If this is the case, I'd have to add the catkin_pkg to the PYTHONPATH, but without confirmation that I am not using the system version of python I'm unsure how and where to do this.
Base path: /home/khitrir/catkin_ws
Source space: /home/khitrir/catkin_ws/src
Build space: /home/khitrir/catkin_ws/build
Devel space: /home/khitrir/catkin_ws/devel
Install space: /home/khitrir/catkin_ws/install
####
#### Running command: "cmake /home/khitrir/catkin_ws/src -DCATKIN_DEVEL_PREFIX=/home/khitrir/catkin_ws/devel -DCMAKE_INSTALL_PREFIX=/home/khitrir/catkin_ws/install" in "/home/khitrir/catkin_ws/build"
####
-- Using CATKIN_DEVEL_PREFIX: /home/khitrir/catkin_ws/devel
-- Using CMAKE_PREFIX_PATH: /opt/ros/hydro
-- This workspace overlays: /opt/ros/hydro
-- Using PYTHON_EXECUTABLE: /usr/local/bin/python
-- Python version: 2.7
-- Using Debian Python package layout
-- Using CATKIN_ENABLE_TESTING: ON
-- Call enable_testing()
-- Using CATKIN_TEST_RESULTS_DIR: /home/khitrir/catkin_ws/build/test_results
-- Found gtest sources under '/usr/src/gtest': gtests will be built
ImportError: "from catkin_pkg.package import parse_package" failed: No module named catkin_pkg.package
Make sure that you have installed "catkin_pkg", it is up to date and on the PYTHONPATH.
CMake Error at /opt/ros/hydro/share/catkin/cmake/safe_execute_process.cmake:11 (message):
  execute_process(/usr/local/bin/python
  "/opt/ros/hydro/share/catkin/cmake/parse_package_xml.py"
  "/opt/ros/hydro/share/catkin/cmake/../package.xml"
  "/home/khitrir/catkin_ws/build/catkin/catkin_generated/version/package.cmake")
  returned error code 1
Call Stack (most recent call first):
  /opt/ros/hydro/share/catkin/cmake/catkin_package_xml.cmake:63 (safe_execute_process)
  /opt/ros/hydro/share/catkin/cmake/all.cmake:152 (_catkin_package_xml)
  /opt/ros/hydro/share/catkin/cmake/catkinConfig.cmake:20 (include)
  CMakeLists.txt:52 (find_package)

-- Configuring incomplete, errors occurred!
Invoking "cmake" failed

Originally posted by khitrir on ROS Answers with karma: 55 on 2015-03-02
Post score: 3

A:

If you haven't explicitly changed the version of python that you're using, you're probably still using the default. You can confirm which version of python you're using with:
which python
python -V

You can confirm that the python-catkin-pkg package is installed correctly by listing the files that it should contain:
dpkg -L python-catkin-pkg

The most important thing to verify here is that python-catkin-pkg is installed into a directory that matches your python version.

Originally posted by ahendrix with karma: 47576 on 2015-03-02
This answer was ACCEPTED on the original site
Post score: 5

Original comments
Comment by khitrir on 2015-03-02:
I though the issue was more the install paths than the actual version number?
Regardless; the outputs are:
$ which python
/usr/local/bin/python
$ python -V
Python 2.7.9
$ dpkg -L python-catkin-pkg

The last output is too long for a comment, see next.
Comment by khitrir on 2015-03-02:
dpkg returns:
Many locations at /usr/lib/python2.7/dist-packages/catkin_pkg
A single location at just  /usr/lib/python2.7/dist-packages/
As well as 5 catkin_* at /usr/bin/
Is this not what's expected?
Comment by ahendrix on 2015-03-03:
It looks like you have a custom install of python in /usr/local/bin that you're using instead of the system version. Did you install a custom version of python?
Comment by khitrir on 2015-03-08:
Not to my knowledge. Being pressed for time and failing to find out how to uninstall the custom version, I just reinstalled the OS, which has solved the problem.
Comment by sg_774 on 2015-10-02:
I am facing a similar problem. ahendrix can u plz help? I am getting following outputs:
sukrit@sukrit-Inspiron-3521:~$ which python
/home/sukrit/anaconda/bin/python
sukrit@sukrit-Inspiron-3521:~$ python -V
Python 2.7.10 :: Anaconda 2.3.0 (64-bit)
and dpkg is returning many locations
Comment by ahendrix on 2015-10-02:
@sg_744 it sounds like you have a different problem. Please ask a new question, and specifically mention that you're using Anaconda python.
Comment by carlosjoserg on 2015-10-27:
Hi there, I'm using CI, and up there, python is 2.7.10, and throws the same error reported here. Package python-catkin-pkg is correctly installed, here is the build log. In my PC, python is 2.7.6 and everything runs well. Any idea?
Comment by carlosjoserg on 2015-10-27:
Nevermind my previous comment, it looks like a CI-related issue.
Comment by ahendrix on 2015-10-27:
Yes. TravisCI uses a non-standard version of python: http://lists.ros.org/pipermail/ros-users/2015-October/069721.html
Comment by carlosjoserg on 2015-11-09:
Indeed. As stated in the answer, I confirm that for those using Travis CI, the solution is to use language: generic, so pyenv is not installed. Thanks again.

