Q:

Fully decentralized network for mobile robots using ROS2

We want to demonstrate a decentralized algorithm for a team of mobile robots (~ 10 robots). We have WiFi adapters on each robot. It is not clear how we can do peer-to-peer communication between robots. We do not want to have a centralized router for communication. How can such a system be implemented? I couldn't find anything in the ROS2 documentation. The fast-DDS discovery server was the best I could find. But it seems we would need a centralized server for this as well. Maybe each robot acts as a discovery server.
Notes:

Mobile robots are moving in the environment. So, there will be a loss of communication and a change in the network topology.
One possible solution we were considering was that each robot alternately broadcasts its message and receives a broadcast message. I am not sure if this is the best solution and how to implement it in ROS2.

P.S.: I understand that this might be a vague question at the moment. I will improve it as I get more concrete information.

A:

ROS2 is inherently decentralized as it uses DDS. So as long as the controller hostnames are known to eachother (via a private network/VPN or some other goofy networking if not on the same router), these controllers are all seen as being in the same ROS2 ecosystem when configured correctly and can publish/subscribe to topics.
I did this with ROS1 using husarnet VPN because it's lightweight and pretty much plug and play (and it has good documentation with ROS). Good luck!

