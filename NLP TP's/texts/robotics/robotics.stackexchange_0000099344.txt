Q:

move_base won't subscribe to /scan topic

I am publishing laser scan data from another framework, but move_base won't subscribe to it. I know it is being published from rostopic echo scan. The sensor frame shows correctly in the tf_tree and I don't see why move_base wont subscribe to the topic.
Here is my move_base.launch file:
<launch>

  <master auto="start"/>
  <!-- Run the map server -->
  <node name="map_server" pkg="map_server" type="map_server" args="/home/jm/isaac/sdk/packages/eband_ros/maps/factory.yaml"/>

  <!-- move_base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

    <rosparam file="$(find isaac_navigation)/param/costmap_common_params.yaml" command="load" />
    <rosparam file="$(find isaac_navigation)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find isaac_navigation)/param/global_costmap_params.yaml" command="load" />

    <param name="base_global_planner" type="string" value="navfn/NavfnROS" />
    <param name="base_local_planner" value="eband_local_planner/EBandPlannerROS" />

  </node>
</launch>

and here is my costmap_common_params.yaml file :
obstacle_range: 0.5
raytrace_range: 3.0
footprint: [[0.57, 0.75],[0.57, -0.75],[-1.153, -0.75],[-1.153, 0.75]]
inflation_radius: 0.25

observation_sources: laser_scan_sensor

laser_scan_sensor: {sensor_frame: base_scan, data_type: LaserScan, topic: scan, marking: true, clearing: true}

I would like to upload the rqt_graph and the rqt_tf_tree pictures but i dont have enough points.
Thanks in advance for helping!

Originally posted by jmyazbeck on ROS Answers with karma: 22 on 2021-06-23
Post score: 0

A:

In the navigation tutorial, notice that costmap_common_params.yaml is loaded twice but in different namespaces:
<rosparam file="$(find my_robot_name_2dnav)/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
<rosparam file="$(find my_robot_name_2dnav)/costmap_common_params.yaml" command="load" ns="local_costmap" />

In your case, you load the common parameters once without a namespace, so the parameters aren't where the two costmaps are looking for their parameters.  You can check the parameter definitions with:
rosparam list

With a correct setup, you should see the common parameters listed under each costmap's namespace, like:
...
/move_base/global_costmap/obstacles_layer/scan_1/clearing
/move_base/global_costmap/obstacles_layer/scan_1/data_type
...
/move_base/local_costmap/obstacles_layer/scan_1/clearing
/move_base/local_costmap/obstacles_layer/scan_1/data_type
...

Originally posted by tryan with karma: 1421 on 2021-06-24
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by jmyazbeck on 2021-06-24:
Awesome, thank you so much. It makes sense and it worked!

