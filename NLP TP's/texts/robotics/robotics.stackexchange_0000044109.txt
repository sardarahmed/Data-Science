Q:

Building custom messages on Desktop

I'm trying to plot a custom message with rxplot on my desktop while my Turtlebot runs. However, this fails and asks if I've built my messages? How can I build custom messages on my desktop computer?
EDIT:
You can't copy and paste from turtlebot to the desktop because the directories are different. Make files only work if they're in the proper directory. I can't roscreate a new package on the desktop in the ROS directory. I can make it anywhere else on the machine, but when I try roscreate-pkg, it's denied, and when I sudo it, roscreate-pkg the command is not found.

Originally posted by IFLORbot on ROS Answers with karma: 33 on 2012-09-13
Post score: 0

A:

Never create packages in /opt/ros nor use sudo for compiling packages.
On the desktop, you need to create an overlay. Then copy the package containing your custom messages into it. If you copied the build directory in your package, too, you will run into compiler errors because the paths have changed. In that case, all you need to do is call rosmake --pre-clean <your package> to make sure that the old build directories are all removed.

Originally posted by Lorenz with karma: 22731 on 2012-09-20
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Lorenz on 2012-09-20:
Sure. They work since the beginning of ros and are commonly used.
Comment by Lorenz on 2012-09-20:
It should. rosws is independent from the ros release.
Comment by IFLORbot on 2012-09-20:
Ok, yeah, sorry I hadn't installed it and assumed it was there.
Comment by IFLORbot on 2012-09-20:
Yeah, that should be it, I'm just having multiple problems either adding the overlay to the package path, or once, I do that, not having interfere with ROS_ROOT. I don't have anymore time today to fix it, so I'll try to mess with it more tomorrow.
Comment by Lorenz on 2012-09-20:
You should not have any problems if you follow the overlay tutorial closely.
Comment by Lorenz on 2012-09-21:
When you create the overlay with rosws init ~/overlay /opt/ros/electric and source ~/overlay/setup.bash  you should be able to access all normal ros packages. Verify that first. Create a subdir in ~/overlay, put your msgs in there and add it with rosws set. Source setup.bash again.
Comment by IFLORbot on 2012-09-21:
That didn't work. Set didn't add the subdirectory to ROS_PACKAGE_PATH, it seems, and it should, right?  I had it working correctly for a minute after I added all the package paths to ROS_PACKAGE_PATH, but then it reverted when I opened a new terminal.
Comment by Lorenz on 2012-09-21:
Did you source the right setup.bash (that one in the overlay)?
Comment by IFLORbot on 2012-09-21:
Yes, I did.
Comment by Lorenz on 2012-09-21:
Have a look at the file ~/overlay/.rosinstall. It should contain an entry for the directory you added using rosws set. setup.bash uses that file to generate the ROS_PACKAGE_PATH.
Comment by IFLORbot on 2012-09-21:
It does. But now there is no ROS_ROOT.
Comment by Lorenz on 2012-09-21:
I actually doubt that. The auto-generated setup.sh should set ROS_ROOT if you initialized with rosws init ~/overlay /opt/ros/electric
Comment by IFLORbot on 2012-09-21:
It didn't. Everything seems to work fine once I reset ROS_ROOT myself. Technically, my root is /opt/ros/electric/ros, I found, so that could have been the problem. If I had set it to that, it probably would have worked without issue.

