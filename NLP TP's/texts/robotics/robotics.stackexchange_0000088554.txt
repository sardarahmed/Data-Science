Q:

Why I can subscribe /map

I tried to launch multiple turtlebot3 navigation. But when I launch the file, I find I didn't subscribe to the /map. I don't know why.

Here is my launch file.
<launch>
    <param name="/use_sim_time" value="true"/>
    <arg name="map_file" default="$(find turtlebot3_navigation)/maps/map.yaml"/>
    <arg name="open_rviz" default="true"/>

    <!-- Run the map server -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" >
        <param name="frame_id" value="/map" />
    </node>

    <group ns="robot1">
        <param name="tf_prefix" value="robot1_tf" />
        <param name="amcl/initial_pose_x" value="1" />
        <param name="amcl/initial_pose_y" value="1" />
        <include file="$(find turtlebot3_navigation)/launch/new_move_base.launch" />
    </group>

    <group ns="robot2">
        <param name="tf_prefix" value="robot2_tf" />
        <param name="amcl/initial_pose_x" value="-1" />
        <param name="amcl/initial_pose_y" value="1" />
        <include file="$(find turtlebot3_navigation)/launch/new_move_base.launch" />
    </group>

    <!--node pkg="rviz" type="rviz" name="rviz" args="-d $(find your_pkg)/config/multi.vcg"
          output="screen" -->
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>
</launch>

new_move_base.launch
<launch>
    <!--- Run AMCL -->
    <include file="$(find turtlebot3_navigation)/launch/amcl.launch" />

    <!-- Define your move_base node -->
    <node pkg="move_base" type="move_base" respawn="false" name="new_move_base" output="screen">
        <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
        <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_burger.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_burger.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find turtlebot3_navigation)/param/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find turtlebot3_navigation)/param/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find turtlebot3_navigation)/param/move_base_params.yaml" command="load" />
        <rosparam file="$(find turtlebot3_navigation)/param/dwa_local_planner_params_burger.yaml" command="load" />

        <remap from="map" to="/map" />
    </node>
</launch>

I think maybe I made mistakes in . I don't know why I can't subscribe to /map.
Btw, I add the 1 turtlebot3 launch file below.
<launch>
  <!-- Arguments -->
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="map_file" default="$(find turtlebot3_navigation)/maps/map.yaml"/>
  <arg name="open_rviz" default="true"/>

  <!-- Turtlebot3 -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>

  <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

  <!-- AMCL -->
  <include file="$(find turtlebot3_navigation)/launch/amcl.launch"/>

  <!-- move_base -->
  <include file="$(find turtlebot3_navigation)/launch/move_base.launch">
    <arg name="model" value="$(arg model)" />
  </include>

  <!-- rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>
  </group>

move_base.launch
<launch>
  <!-- Arguments -->
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="odom" />

  <!-- move_base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/dwa_local_planner_params_$(arg model).yaml" command="load" />
    <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    <remap from="odom" to="$(arg odom_topic)"/>
  </node>
</launch>

    </launch>

Originally posted by Pujie on ROS Answers with karma: 106 on 2018-08-16
Post score: 0

A:

If you unclick the Hide buttons for "Dead Sinks" and "Leaf Topics" in rqt_graph, you'll probably see that amcl and move_base are subscribing to /robot1/map and /robot2/map topics on their respective robots. You probably need to remap the map topics for both nodes to the /map topic.

Originally posted by ahendrix with karma: 47576 on 2018-08-17
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by Pujie on 2018-08-17:
Thank you very much! I tried to do so, but I really don't find the /robot2/map, /robot1/map. I recompile my question.Could you please have a look?
Comment by ahendrix on 2018-08-18:
Ah; I'd forgotten that by default, AMCL (and probably move_base) retrieves the map through the static_map service according to the wiki page: http://wiki.ros.org/amcl .
Comment by Pujie on 2018-08-20:
Got it. Thank you!

