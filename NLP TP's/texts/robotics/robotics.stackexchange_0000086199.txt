Q:

Does tf::StampedTransform create a parent and child frame if they both do not exist?

Hi everyone!
Quick question on tf::StampedTransform. By using that function in C++ does it create parent frame and child frame automatically?
EX:
 br.sendTransform(tf::StampedTransform(transform, ros::Time::now(), "banana", "basket"));

In this case does the frame banana and basket get created?
Thanks!

Originally posted by MechLc on ROS Answers with karma: 41 on 2018-03-27
Post score: 0

Original comments
Comment by gvdhoorn on 2018-03-27:
That depends on how you define when a frame is "created".
Comment by MechLc on 2018-03-27:
I guess my question is where is a frame defined? Within the broadcasters CPP file or somewhere else?

A:

After publishing the transform between 'banana' and 'basket' you can lookup the transform between them on a TransformListener as soon as the message has been received.
There is no explicit creation of a frame, there are only transforms stored between frames. That's why @gvdhoorn is referencing. It will automatically traverse any existing transforms to attempt to find any frame for which there is information.
The availability of a transform that references a frame will avoid the LookupException and cause a ConnectivityException or an ExtrapolationException so in that kind of reference the frame is "created" when published. It does not matter if it's a child or parent.

Originally posted by tfoote with karma: 58457 on 2018-03-27
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by MechLc on 2018-03-27:
so what is the origin of banana(parent frame)?
Comment by mgruhler on 2018-03-28:
There is none (or it is zero, depending on how you view it). You can look up the transform from banana to basket, but as long as neither banana nor basket have transforms available to any other frames, they are completely independent of anything else.

