Q:

Why GpuRaySensor do not support intensity readings?

Hello all
I tried to create a laser sensor plugin based on the gazebo::sensors::GpuRaySensor.
After lots of head breaking i discovered that this sensor do not support intensity reading. The GpuRaySensor::GetRetro function that suposed to provied the intensity readings in the GpuRaySensor.cc file looks like this :
double GpuRaySensor::GetRetro(int /*_index*/) const
{
  return 0.0;
}

https://bitbucket.org/osrf/gazebo/src/d6bfa5238c7c0cb3963716df16475b97f1f0051b/gazebo/sensors/GpuRaySensor.cc?at=default
The questions are : why is it so ?  Is there a fundamental difficulty in applying GPU for intensity reading, or is there some other reason ?  and also, does this capability is planed to be added in the near future ?
Thanks.

Originally posted by dmeltz on Gazebo Answers with karma: 127 on 2014-04-03
Post score: 0

A:

I would say that Nate already answered this question in the gazebo mailing list. Here is the content of Nate's answer:

Retroreflective values are stored in collision shapes, and these values are read by the CPU ray sensor during the collision detection cycle.

The GPU ray sensor uses a shader to compute range readings instead of the collision detection mechanism. This means the GPU ray sensor does not know what collision shape produced the range reading, and cannot get an intensity reading.

It would be possible to get the collision shapes using a selection buffer technique. We don't currently have plans to implement this. I encourage you to file a ticket. We can also help you work on this feature. In the mean time, use the CPU ray sensor to get intensity readings.

Originally posted by Jose Luis Rivero with karma: 1485 on 2014-04-07
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by dmeltz on 2014-04-09:
Yep, after several days that I waited for an answer here, I posted my question in the mailing list, and got Nate's answer.
Thanks for linking.
Comment by stereoline on 2019-02-23:
Is it somehow possible to still access the answer by Nate?
Comment by peci1 on 2019-10-14:
If anybody has a copy of that answer, please post it here. @jose-luis-rivero ?
Comment by Jose Luis Rivero on 2020-01-22:
sorry for the delay, I've edited my answer.
Comment by labude on 2023-06-01:
Are there any updates on this? It would be a very useful feature, but implementing it myself is beyond my current programming skills..

