Q:

What is the difference between different controllers provided in ros_control?

As mentioned in the official documentation, the list of available controllers are:

effort_controllers
joint_effort_controller
joint_position_controller
joint_velocity_controller
joint_state_controller

joint_state_controller

position_controllers

joint_position_controller

velocity_controllers

joint_velocity_controller

I want to know the difference between effort_controllers/joint_position_controller and position_controllers/joint_position_controller and how to use a position controller and which of the above to use?
My application is a joint velocity control of a two link manipulator in Gazebo using ROS Control.
I'm using ROS Kinetic with Ubuntu 16.04 LTS. Gazebo version is 7.12

Originally posted by aniket0112 on ROS Answers with karma: 3 on 2018-05-25
Post score: 0

A:

Please see if the accepted answer to #q203404 clears this up.
Summarising: as an exampleeffort_controllers assume the hw they are controlling supports effort input (ie: force, torque) and so produce efforts to implement a specific control law.
Concretely: think of a torque-controlled joint and the desire to run a position control loop over it. You'd have to use torques to do that.

Originally posted by gvdhoorn with karma: 86574 on 2018-05-25
This answer was ACCEPTED on the original site
Post score: 4

