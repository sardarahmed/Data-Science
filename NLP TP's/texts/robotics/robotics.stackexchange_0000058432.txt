Q:

Why am I getting an rospy error in __getitem__ raise KeyError(key)?

I am trying to launch a python script and hand over a parameter from the launchfile:
script:
#!/usr/bin/env python
import roslib
roslib.load_manifest( 'package_name' )

import rospy
import datetime, sys, yaml
from gazebo_msgs.msg import ModelStates

# some functions
 
if __name__ == '__main__':
    sim = rospy.get_param( '~sim' ) # <- edit

    rospy.init_node('package_name', anonymous=True)
    #something else ...

and I am trying to start it like that:
<?xml version="1.0"?>
<launch>
    <arg name="sim" default="true"/>

    <node name="node_name" pkg="package_name" type="script.py" output="screen">
        
        <param name="sim" value="$( arg sim )" />
    </node>
</launch>

Originally posted by ct2034 on ROS Answers with karma: 862 on 2014-04-02
Post score: 1

Original comments
Comment by Brendan Andrade on 2014-04-03:
import roslib and roslib.load_manifest should not be used if you're using ROS Groovy or later and catkin. Not sure if the inclusion of those lines may be causing your issue.
Comment by lucasw on 2018-07-26:
I ran into this and had simply forgotten that usually I provide a default parameter:
foo = rospy.get_param( '~foo', 5.0)

A:

I know where the problem was now! I was missing the rospy.init_node()
So my main should be:
if __name__ == '__main__':
    rospy.init_node('package_name', anonymous=True)
    sim = rospy.get_param( '~sim' ) # <- edit

    #something else ...

Originally posted by ct2034 with karma: 862 on 2014-04-09
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by ct2034 on 2014-04-09:
can't mark it as answered :(
but it is ..
Comment by Dan Lazewatsky on 2014-04-09:
It's probably a bug that trying to get params without calling init_node doesn't raise an error. @William, @Dirk Thomas?
Comment by William on 2014-04-09:
I'm surprised that doesn't raise an exception.
Comment by William on 2014-04-09:
The only thing I can imagine is that someone else called rospy.init_node in another part of the code and there for the ~ got expanded to something other than package_name.

