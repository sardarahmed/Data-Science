Q:

Sensors for differential drive

I have the following chassis along with an Arduino and a motor shield. 
I'm in the process of developing a tracking mechanism for use with differential drive.
Normally, a photo reflector can be placed adjacent to the wheel that will reflect when each spoke passes through therefore allowing code to be written that will accurately measure each wheels position.
The problem I have is that you cannot see the wheels from inside the chassis, only small holes for the driveshaft. Placing sensors on the outside would look ridiculous and a wall crash would cause havoc.
Would I be able to use a photo reflector on the gears (as shown) if I accurately placed it to count each spoke on the gear itself? I'm a bit hesitant though because even a small bump could misalign the sensor - again causing havoc.
So does any one have an idea on how to track the wheel movements?

A:

Typically, tracking the position and orientation of a vehicle is not accomplished by looking at the wheels — it's done with navigation sensors.  If you were attempting to have closed-loop control (i.e. servo control) of your motors then wheel-mounted position sensors might be appropriate.  But if the goal is to support "autonomous driving", then I don't think position sensors will suffice.  
Put simply, any non-flat terrain or slippage of the tracks would ruin your accuracy.
Instead, I would suggest one or more of the following navigation sensors:

Compass
GPS
Inertial navigation system
Acoustic or laser rangefinder
Acoustic beacons and triangulation

A:

I put together encoders for this exact chassis.  Rather than reflecting ones, I used slot ones.  I thought I could work off the hole in the white gear, but it turns out the plastic is pretty transparent to IR, so I ended up using some black electical tape (high tech, I know) to make opaque regions on the gear.  
After building two encoders, I discovered there's a similar product online: LightBeam OptoInterrupter Module
For my first robot, I’m just using a rough encoder, with 4 counts per wheel revolution.  Here's my description from my blog: 
In looking in the chassis, there’s not a lot of room. As a result, I decided I’d use a small transmissive sensor, rather than a reflective sensor.  Both have an IR emitter and an IR photo detector.  For reflective units, they both face the same direction, and the detector measure IR reflected back to the sensor.  For a transmissive or interrupt sensor, the two units are separated by a gap, and the detector picks up IR passing through the gap. So far, so good.
I ended up using Vishay transmissive optical sensors (model TCST1202) I purchased from DigiKey.  I wired them up based on the circuit posted by Aniss1001 in the “Homemade wheel encoder“ thread on the Arduino forum.

I built the circuit on a prototyping breadboard for testing and got a surprise.  The circuit worked fine, but the gear is transparent to IR!  It turns out that nylon and most plastics used for inexpensive gears are pretty transparent to IR.  I first tried creating an opaque section with a black marker, but while that worked on paper, it didn’t adhere well enough to the gear.  I ended up using a piece of black tape.  Once that worked, I cut some small circuit boards down to size and built the encoders, practicing my soldering skills.
I just used hot glue to mount the encoders.  The encoder boards stick up above the chassis base, so I’m using standoffs to raise the plastic plate with the Romeo controller and other devices.  Here’s a picture of one of the encoders before mounting,, and then mounted on the chassis:

Hope this helps!

A:

One alternative to sensing the wheel movement is to actually track the vehicle movement over ground. I know that some people have done it using optical mouse sensors. The results will depend on the type of underground you are expecting. The upside is however that you track the actual vehicle movement, which is what you are really interested in.

