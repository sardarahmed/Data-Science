Q:

need to understand ground orientation between gazebo and rviz

Update : added URDF and SDF files being used. I have looked these over but I can not see how they would cause the model to run in different directions.
When I send -1,-1 to my joints via the ros gazebo plugin joint/command my model moves backwards but when I process those same commands in rviz via joint/state messages rviz base link moves forward. What would case this. How does ground orientation map between gazebo and rivz?
<sdf version="1.4">
    <model name='rrbot'>

      <static>0</static>

      <link name='base_link'>
        <pose>0 0 0.1 0 0 0</pose>
        <inertial>
          <mass>10</mass>
          <inertia>
            <ixx>1</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>1</iyy>
            <iyz>0</iyz>
            <izz>1</izz>
          </inertia>
        </inertial>

        <visual name='base_visual'>
          <geometry>
            <box>
              <size>0.4 0.2 0.1</size>
            </box>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Red</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>

        <collision name='base_collision'>
          <geometry>
            <box>
              <size>0.4 0.2 0.1</size>
            </box>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode>
                <mu>0.2</mu>
                <mu2>0.2</mu2>
              </ode>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>

        <visual name='caster_visual'>
          <pose>-0.15 0 -.05 0 0 0</pose>
          <geometry>
            <sphere>
              <radius>0.05</radius>
            </sphere>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Blue</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>

        <collision name='caster_collision'>
          <pose>-0.15 0 -.05 0 0 0</pose>
          <geometry>
            <sphere>
              <radius>0.05</radius>
            </sphere>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode>
                <mu>0</mu>
                <mu2>0</mu2>
                <slip1>1.0</slip1>
                <slip2>1.0</slip2>
              </ode>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>

        <visual name='tower_visual'>
          <pose>0.05 0 0.1 0 0 0</pose>
          <geometry>
            <cylinder>
              <length>0.2</length>
              <radius>0.025</radius>
            </cylinder>
          </geometry>
          <material>
            <script>
              <name>Gazebo/White</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>

        <collision name='tower_collision'>
          <pose>0.05 0 0.1 0 0 0</pose>
          <geometry>
            <cylinder>
              <length>0.2</length>
              <radius>0.025</radius>
            </cylinder>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>0</mu>
                <mu2>0</mu2>
                <slip1>1</slip1>
                <slip2>1</slip2>
              </ode>
            </friction>
            <bounce/>
            <contact>
              <ode/>
            </contact>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>

        <sensor name='camera1' type='camera'>
          <visualize>1</visualize>
          <update_rate>30</update_rate>
          <camera name='head'>
            <horizontal_fov>1.39626</horizontal_fov>
            <image>
              <width>800</width>
              <height>800</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.02</near>
              <far>300</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <mean>0</mean>
              <stddev>0.007</stddev>
            </noise>
          </camera>
          <plugin name='camera_controller' filename='libgazebo_ros_camera.so'>
            <alwaysOn>true</alwaysOn>
            <updateRate>1</updateRate>
            <cameraName>camera1</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>camera_frame</frameName>
            <robotNamespace>/rrbot</robotNamespace>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
          </plugin>
          <pose>0.05 0 0.2 0 0 0</pose>
        </sensor>

        <sensor name='head_hokuyo_sensor' type='ray'>
          <visualize>1</visualize>
          <update_rate>40</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>720</samples>
                <resolution>1</resolution>
                <min_angle>-1.5708</min_angle>
                <max_angle>1.5708</max_angle>
              </horizontal>
            </scan>
            <range>
              <min>0.1</min>
              <max>30</max>
              <resolution>0.01</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0</mean>
              <stddev>0.01</stddev>
            </noise>
          </ray>
          <plugin name='gazebo_ros_head_hokuyo_controller' filename='libgazebo_ros_laser.so'>
            <topicName>/scan</topicName>
            <frameName>hokuyo_frame</frameName>
            <robotNamespace>/rrbot</robotNamespace>
          </plugin>
          <pose>0.05 0 0.2 0 0 0</pose>
        </sensor>
      </link>

      <link name='left_wheel'>
        <pose>0.15 -0.13 0.1 0 1.5707 1.5707</pose>
        <inertial>
          <mass>1</mass>
          <inertia>
            <ixx>0.1</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.1</iyy>
            <iyz>0</iyz>
            <izz>0.1</izz>
          </inertia>
        </inertial>

        <collision name='left_wheel_collision'>
          <geometry>
            <cylinder>
              <length>0.05</length>
              <radius>0.1</radius>
            </cylinder>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode>
                <mu>1</mu>
                <mu2>1</mu2>
              </ode>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>

        <visual name='left_wheel_visual'>
          <geometry>
            <cylinder>
              <length>0.05</length>
              <radius>0.1</radius>
            </cylinder>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Red</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>
        <gravity>1</gravity>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <self_collide>0</self_collide>
        <kinematic>0</kinematic>
      </link>
      <joint name='joint1' type='revolute'>
        <pose>0 0 -0.03 0 1.5707 1.5707</pose>
        <child>left_wheel</child>
        <parent>base_link</parent>
        <axis>
          <xyz>0 1 0</xyz>
        </axis>
      </joint>

      <link name='right_wheel'>
        <pose>0.15 0.13 0.1 0 1.5707 1.5707</pose>
        <inertial>
          <mass>1</mass>
          <inertia>
            <ixx>0.1</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.1</iyy>
            <iyz>0</iyz>
            <izz>0.1</izz>
          </inertia>
        </inertial>
        <collision name='right_wheel_collision'>
          <geometry>
            <cylinder>
              <length>0.05</length>
              <radius>0.1</radius>
            </cylinder>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode>
                <mu>1</mu>
                <mu2>1</mu2>
              </ode>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <visual name='right_wheel_visual'>
          <geometry>
            <cylinder>
              <length>0.05</length>
              <radius>0.1</radius>
            </cylinder>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Red</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>
        <gravity>1</gravity>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <self_collide>0</self_collide>
        <kinematic>0</kinematic>
      </link>
      <joint name='joint2' type='revolute'>
        <pose>0 0 0.03 0 1.5707 1.5707</pose>
        <child>right_wheel</child>
        <parent>base_link</parent>
        <axis>
          <xyz>0 1 0</xyz>
        </axis>
      </joint>

      <plugin name='ros_control' filename='libgazebo_ros_control.so'>
        <robotNamespace>/rrbot</robotNamespace>
        <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      </plugin>

    </model>
</sdf>

<?xml version="1.0"?>
<!-- Revolute-Revolute Manipulator -->
<robot name="rrbot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:include filename="$(find rrbot_description)/urdf/materials.xacro" />

  <xacro:property name="PI" value="3.1415926535897931"/>  <!-- ${PI} -->

   <link name='base_link'>
      <collision name='collision'>
        <origin xyz="0 0 .1" rpy="0 0 0"/>
        <geometry>
          <box  size=".4 .2 .1"/>
        </geometry>
      </collision>

      <visual name='visual'>
        <origin xyz="0 0 .1 " rpy="0 0 0"/>
        <geometry>
          <box  size=".4 .2 .1"/>
        </geometry>
      </visual>

      <visual name='caster_visual'>
        <origin xyz="0.15 0 -0.05" rpy="0 0 0"/>
        <geometry>
          <sphere radius=".05"/>
        </geometry>
      </visual>

      <collision name='caster_collision'>
        <origin xyz="0.15 0 -0.05" rpy="0 0 0"/>
        <geometry>
          <sphere radius=".05"/>
        </geometry>

        <surface>
         <friction>
          <ode>
            <mu>0</mu>
            <mu2>0</mu2>
            <slip1>1.0</slip1>
            <slip2>1.0</slip2>
          </ode>
         </friction>
        </surface>

      </collision>

     <inertial>
        <mass value="10" />
        <origin xyz="0 0 .1 " rpy="0 0 0"/>
        <inertia ixx=".1" ixy="0" ixz="0" 
                 iyy=".1" iyz="0" 
                 izz=".1" />
     </inertial>
  </link> 

    
  <link name="left_wheel">
    <collision name="collision">
      <origin xyz="0.15 -0.13 0.1" rpy="0 1.5707 1.5707"/>
      <geometry>
         <cylinder  length="0.05" radius="0.1"/>
      </geometry>
    </collision>
    <visual name="visual">
      <origin xyz="0.15 -0.13 0.1" rpy="0 1.5707 1.5707"/>
      <geometry>
        <cylinder  length="0.05" radius="0.1"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1" />
      <inertia ixx=".1" ixy="0" ixz="0" 
               iyy=".1" iyz="0" 
               izz=".1" />
    </inertial>
  </link>

 
  <joint type="continuous" name="joint1">
    <origin xyz="0.15 -0.13 0.1" rpy="0 1.5707 1.5707"/>
    <child link="left_wheel"/>
    <parent link="base_link"/>
    <axis>
         <xyz>0 1 0</xyz>
     </axis>
    <limit effort="3" velocity="3"/>
  </joint>

  <link name="right_wheel">
    <collision name="collision">
      <origin xyz="0.15 0.13 0.1" rpy="0 1.5707 1.5707"/>
      <geometry>
         <cylinder length="0.05" radius="0.1"/>
      </geometry>
    </collision>
    <visual name="visual">
      <origin xyz="0.15 0.13 0.1" rpy="0 1.5707 1.5707"/>
      <geometry>
        <cylinder  length="0.05" radius="0.1"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1" />
      <inertia ixx=".1" ixy="0" ixz="0" 
               iyy=".1" iyz="0" 
               izz=".1" />
    </inertial>
  </link>

  <joint type="continuous" name="joint2">
    <origin xyz="0.15 0.13 0.1" rpy="0 1.5707 1.5707"/>
    <child link="right_wheel"/>
    <parent link="base_link"/>
    <axis>
         <xyz>0 1 0</xyz>
     </axis>
    <limit effort="3" velocity="3"/>
  </joint>

  <link name="tower_link">

    <visual name="tower_visual">
      <origin xyz="0.1 0 0.1" rpy="0 0 0"/>
      <geometry>
         <cylinder  length="0.2" radius="0.025"/>
      </geometry>
    </visual>

    <collision name="tower_collision">
      <origin xyz="0.1 0 0.1" rpy="0 0 0"/>
      <geometry>
         <cylinder  length="0.2" radius="0.025"/>
      </geometry>
    </collision>

  </link>

  <joint name="camera_joint" type="fixed">
    <origin xyz="0 0.0 0.1" rpy="0 0 0" />
    <axis xyz="0 0 1"/>>
    <parent link="base_link" />
    <child link="tower_link" />
  </joint>

  <link name="hokuyo_frame"/>
  <joint name="hokuyo_frame_joint" type="fixed">
    <child link="hokuyo_frame">hokuyo_frame</child>
    <parent link="tower_link">tower_link</parent>
  </joint>

  <link name="camera_frame"/>
  <joint name="camera_frame_joint" type="fixed">
    <child link="camera_frame">camera_frame</child>
    <parent link="tower_link">tower_link</parent>
  </joint>

  <transmission name="tran1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint1"/>
    <actuator name="motor1">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>   
      <motorTorqueConstant>10</motorTorqueConstant>
    </actuator>
  </transmission>

  <transmission name="tran2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint2"/>
    <actuator name="motor2">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>10</motorTorqueConstant>
    </actuator>
  </transmission>

  <plugin name="ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/rrbot</robotNamespace>
      <controlPeriod>0.001</controlPeriod>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
  </plugin>

</robot>

Originally posted by rnunziata on Gazebo Answers with karma: 107 on 2013-10-10
Post score: 0

A:

I had inverted sign in odomentry on x.

Originally posted by rnunziata with karma: 107 on 2013-10-11
This answer was ACCEPTED on the original site
Post score: 0

