Q:

while(ros :: ok) Dynamic publish

Hi All,
I am beginner in ROS, please excuse me if this question is silly.
I have the below snippet.
int main()
{
     //Initialize and start the node
     ros::Publisher pub;
     //Define and create some messages
     abc;
     while(ros : ok)
     {
           ros_time = ros::time::now();
           pub.publish(abc);
           ros::spinOnce();               
     }

 }

Now I need to update the abc every 5 ms and publish the updated one. Can anybody please tell me how this could be implemented.
Thank you.
KK

Originally posted by kk2105 on ROS Answers with karma: 262 on 2018-06-22
Post score: 1

Original comments
Comment by NEngelhard on 2018-06-22:
Hey! Could you maybe first do the tutorials on creating C++ Publishers? It quite exactly shows you what you need to do.
Comment by kk2105 on 2018-06-22:
@NEngelhard thank you.. Going through the tutorials..

A:

You should use ros::Rate. See this Tutorials.
EDIT:
Exact code is:
 ros::Rate rate(200);
 while(ros::ok())
 {
       //calculate somehow new abc
       abc = new_abc;
       pub.publish(abc);
       loop_rate.sleep();               
 }

Thanks @NEngelhard!

Originally posted by destogl with karma: 877 on 2018-06-22
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by kk2105 on 2018-06-22:
Thank you @destogl  ...  Can we update that message every X ms and re-publish to the node ..?
Comment by destogl on 2018-06-22:
Yes, you should just add new value into abc variable...
Comment by kk2105 on 2018-06-22:
while(ros :: ok)
{
ros_time = ros::time::now();
abc = new_abc;
pub.publish(abc);
ros::spinOnce;
}
@destol Is this the right way of doing it ?
Comment by destogl on 2018-06-22:
Exactly. But if you want to do this every 5ms I would use exact code from my answer.
Comment by kk2105 on 2018-06-23:
@destogl Thank you, I just implemented that  .. But one doubt, you missed sponOnce ?
Comment by destogl on 2018-06-23:
@kishorkumar No I didnâ€˜t missed it. If you read carefully tutorial explanation, in this case one does not need it.
Comment by kk2105 on 2018-06-23:
Thank you very much.. I will try implementing the same and update you on Tuesday..
Comment by kk2105 on 2018-06-26:
@destogl Thanks for the input, I just implemented it and it worked perfectly fine.
Comment by gvdhoorn on 2018-06-26:
ros::ok is not correct, it should be: ros::ok(). At the moment you're probably checking the value of a function pointer (which is always true).
Comment by destogl on 2018-06-26:
Oh. You are right, sorry a typo...
Comment by kk2105 on 2018-06-26:
@gvdhoorn Sorry Typo.. Thanks for the help guys..
In relative to this question I am looking for ways to stop the rosrun.. i have already posted a question and updated the code..

