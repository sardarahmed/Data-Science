Q:

smach introspection server fails in electric

Hi everyone,
I am using smach in electric with the introspection server and the smach_viewer.py.
In electric the smach_viewer.py does not work for me (it just shows the machine but does not update in which state the machine is) and the script running the introspection server periodically shows the following exception:
Exception in thread server_name:status_publisher:
Traceback (most recent call last):
  File "/usr/lib/python2.7/threading.py", line 552, in __bootstrap_inner
    self.run()
  File "/usr/lib/python2.7/threading.py", line 505, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/opt/ros/electric/stacks/executive_smach/smach_ros/src/smach_ros/introspection.py", line 160, in _status_pub_loop
    self._publish_status('HEARTBEAT')
  File "/opt/ros/electric/stacks/executive_smach/smach_ros/src/smach_ros/introspection.py", line 225, in _publish_status
    self._status_pub.publish(state_msg)
  File "/opt/ros/electric/stacks/ros_comm/clients/rospy/src/rospy/topics.py", line 695, in publish
    self.impl.publish(data)
  File "/opt/ros/electric/stacks/ros_comm/clients/rospy/src/rospy/topics.py", line 872, in publish
    serialize_message(b, self.seq, message)
  File "/opt/ros/electric/stacks/ros_comm/clients/rospy/src/rospy/msg.py", line 151, in serialize_message
    msg.serialize(b)
  File "/opt/ros/electric/stacks/executive_smach/smach_msgs/src/smach_msgs/msg/_SmachContainerStatus.py", line 120, in serialize
    buff.write(struct.pack('<I%ss'%length, length, _x.encode()))
UnicodeDecodeError: 'ascii' codec can't decode byte 0x80 in position 0: ordinal not in range(128)

Without the introspection sever or when running smach from diamondback the exception does not show up and everything works as expected. Does anyone have a clue what the problem is?
I used the script "examples/user_data2.py" from the smach_tutorials package and added the introspection server as follows:
--- user_data2.py   2011-08-31 09:41:46.108424577 +0200
+++ user_data_sis.py    2011-08-31 10:13:34.652678420 +0200
@@ -59,7 +59,11 @@
 
 
     # Execute SMACH plan
+   sis = smach_ros.IntrospectionServer('server_name', sm, '/SM_ROOT')
+   sis.start()
     outcome = sm.execute()
+    rospy.spin()
+    sis.stop()
 
 
 if __name__ == '__main__':

Thanks for your help!

Originally posted by sebastian on ROS Answers with karma: 76 on 2011-08-30
Post score: 1

Original comments
Comment by tfoote on 2011-09-29:
This looks like somewhere there's a unicode issues.  Is there any unicode used in your smach state machine states?  0x80 is not a valid ascii code as the backtrace suggests.

A:

I suspect this is a regression caused by a Python 3k compatibility patch in the message generators.  I have backed this out in r15301, but it will take awhile to get this fix deployed as it will required a full deb rebuild.

Originally posted by kwc with karma: 12244 on 2011-10-28
This answer was ACCEPTED on the original site
Post score: 4

Original comments
Comment by kwc on 2011-10-28:
realistically, for true py3k compatibility, the message generator needs to be rewritten to start using "bytes" and use the distinctions that the Python 2.6+ APIs now provide.  This is a significant undertaking, so for now, backing out the Py3k patch.
Comment by jbohren on 2011-10-28:
If so, it looks to me like the Python 3k compatibility is just more restrictive. Really the pickled user data shouldn't be "string" it should be some byte array.

