Q:

Releasing RobotWebTools as .deb?

Hope this isn't too silly question. Is releasing (some of the packages from) RobotWebTools as .deb packages planned? Or does it make sense to release it as .deb (I'm not a javascript developer) ?
To utilize the portability .deb provides, we're adding catkin files to some of the packages from rwt so that they can be released into buildfarm. But how we do is to just fork or branch the original rwt repos and not ideal at all.

Originally posted by 130s on ROS Answers with karma: 10937 on 2013-12-08
Post score: 2

A:

In the early days of RWT, we used to package and distribute debian packages with the RWT JavaScript sources. After lots of consideration, we pulled away from this practice in lieu of more convention web programming standards.
In particular, typically JavaScript sources are served via some web server. When installing a debian package, it is unclear where a JavaScript file should be "installed" since web directors are custom to the server at hand. Furthermore, the ROS build system itself is not intended for JavaScript at all. Catkin, which is really an extension of CMake, is not really a tool used for JavaSript (we instead use Grunt to manage all of our "building" and Travis CI to run tests and integrity checks). The doc builders are also unaware of how to handle JSDoc.
The main reason, though, is that releases of JavaScript files are not made on a per-computer basis (e.g., installing a local copy for any developer or user). Instead, Content Distribution Networks (or CDNs), are used and is what we use to manage our releases. Links to these are listed on the wiki pages as well as in each projects readme: http://wiki.ros.org/roslibjs#CDN_Releases

Originally posted by rtoris288 with karma: 1173 on 2013-12-09
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by 130s on 2014-04-26:
Thanks, and the discussion goes on in the forum https://groups.google.com/d/msg/robot-web-tools/GQdaqbvoyuU/-HivHdd8qJMJ

