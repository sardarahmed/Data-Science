Q:

Error term formulation in Graph SLAM (conceptual doubt)

I am reading A Tutorial on Graph-Based SLAM.Grisetti, Kummerle,  Stachniss & Burgard
On page 5, the error function is introduced as follows 
$$e_{ij}(x_i, x_j) = z_{ij} - \hat{z}_{ij}(xi, xj)$$
here $z_{ij}$ is the mean of virtual measurement and $\hat{z}_{ij}(x_i, x_j)$ is the prediction of the virtual measurement. The following image supplements the description 
 
The Algorithm 1 (on page 6), requires $e_{ij}$ as input. My doubt is regarding the calculation of $e_{ij}$. I need both $z_{ij}$ and $\hat{z}_{ij}$ to calculate $e_{ij}$ 
The evaluation of $\hat{z}_{ij}$ is dependent on the robot poses $x_i$ and $x_j$.
In turn, these robot poses $x_i, x_j$ (as well as $z_{ij}$) are calculated using $z_{raw}$ (incrementally with Odometry?) and to calculate $\hat{z}_{ij}$ we are again going to (indirectly) use $z_{raw}$. And that does not make sense because then $e_{ij}=0$? 
Surely, I'm missing something about how $z_{ij}$ and $\hat{z}_{ij}$ differ!
Kindly help me resolve the above doubt! Any concrete example of $z_{ij}$ and $\hat{z}_{ij}$ are appreciated.

A:

Good question. That is quite confusing in the beginning. 
Let's say you have an observation of a relative pose zij between two positions(or nodes) from your wheel odometry.
Then, you accumulate the relative poses to create the trajectory of your robot. From the accumulated trajectory you can extract zij_hat.
Given obesrvation and prediction, the error function is
eij = zij - zij_hat
which are zero initially except the loop closure terms. For example, if you have 4 nodes with a loop closure at 4 and 1, your errors looks like this.
e12 = 0
e23 = 0
e34 = 0
e41 = big error!
During the optimization, your initially accumulated trajectory moves, therefore, e12..e34 are not zero anymore.
Optimization moves the nodes to reduce the error at e41 which result in distributing the error to other nodes.
The paper you are reading is not a good tutorial(in my opinion) by the way. 

