Q:

Include .rosinstall in a version-controlled repository?

I wonder whether it's useful to include the (in my case manually generated) .rosinstall file into my ROS package's GIT repository. If so, developers can just get the project via GIT and then call rosinstall and source one of the shell scripts in order to compile my project without hassle... Is there any drawback which I might have overlooked?

Originally posted by Julius on ROS Answers with karma: 960 on 2011-03-16
Post score: 3

A:

Instead of including the .rosinstall file, it is a much better practice to include the original rosinstall file (no dot prefix).  The .rosinstall file encodes information about a specific installation on a specific machine.  The original rosinstall file can be safely used to generate any number of installations on multiple machines.
Most VCSs allow you to pull individual files by url.
Then you can write your install instructions like this:
rosinstall ~/my_project /opt/ros/diamondback 'http://my_vcs_server/path_to_file.rosinstall'

Originally posted by kwc with karma: 12244 on 2011-03-16
This answer was ACCEPTED on the original site
Post score: 2

Original comments
Comment by Julius on 2011-03-16:
Thanks, I've implemented this solution. My rosinstall file now does not only include dependencies but also refers to the GIT repository of my own project. I like installation instructions that can be written in one single command-line.
Comment by mjcarroll on 2011-03-16:
This is what we do.  With Github, you don't have to do a full checkout, instead use https://github.com/USERNAME/REPO/raw/BRANCH/file.rosinstall

