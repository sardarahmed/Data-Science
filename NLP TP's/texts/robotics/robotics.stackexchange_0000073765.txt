Q:

Is there any reactive proximity collision checker package available?

Yes,
Recently I have been developing my own motion planning system using ROS stack, but I want to add a collision checker as my safety controller just to make double sure that the navigation is  truly safe even with high odometry error. I have adopted  Kobuki's control system on my own robot, however, the safety controller stated in the mentioned article only detects if there is a cliff or wheel fall-off event and there is no proximity checking based on frontal or rear laser scanning. 
I had also browsed through this page but since my robot's odometry is still under improvement, I cannot guarantee constant satisfied poses to provide to octomap_server and thus this way of collision avoidance renders useless for my case. Another idea is to use grid cells in rolling window to detect obstacle, as stated here, but still may not work with high odometry error. 
So, my question is, is there any available proximity collision checking based on laser readings alone? The package would notice when you are too close to the wall, then it will ask you to stop, just based on its scanning reading. Maybe I am wrong in my understanding of collision avoidance. so feel free to correct me if you may.

Originally posted by Megacephalo on ROS Answers with karma: 106 on 2016-05-05
Post score: 2

A:

After one month without any movement out there, I wrote, compiled and tested my own proximity collision checker. I think indeed the question needs to be asked another way around, but never mind. Now, I can answer my own question. The answer is yes ! I wrote it, and by now is the most usable safety range proximity safety controller by far at my disposal. For those who needs it, the package is here, enjoy and send me some feedback and PR if you please ! Thank you !

Originally posted by Megacephalo with karma: 106 on 2016-06-16
This answer was ACCEPTED on the original site
Post score: 0

