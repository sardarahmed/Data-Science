Q:

bloom 'Release Tag' mapping

On the Releasing a Package for the First Time page it states that:

If you have a different version tagging scheme, then bloom can handle that using the 'Release Tag' configuration which you will see later in this tutorial while configuring a release track.

However, the tutorial page gives no details on the 'Release Tag':

The next few options (Version and Release Tag) should be okay to leave as the defaults and are rarely changed unless you are releasing a non-catkin package. Simply press enter to accept the default.

On another Answers.ros.org question Version tagging for new releases and distributions, it also references that you can use a different tagging scheme:

Also, usually we make tags simply x.y.z and we do not use prefixes or suffixes like vx.y.z or anything like that. Though we don't require that you do that, and bloom can handle different tagging schemes as long as they are consistent.

But I can't seem to find "How" to map between the version in the package.xml and that tags that are implemented in Git.
Can someone point me to the documentation on using the "Release Tag" properly? Or an existing example?
I'm building an external third party library which is tagged with "vX.Y.Z". In the package.xml I'm using "X.Y.Z" since catkin_make will enforce that version scheme.
But what do I use in for 'bloom-release' to map between v0.9.2 git tag and 0.9.2 in the package.xml?
Or is the mapping not possible, and I need to request that the upstream git repo add duplicate tags without the prefix 'v'?

Originally posted by mdhorn on ROS Answers with karma: 67 on 2016-06-24
Post score: 0

A:

You can set the release_tag by default it is :{version} In your case if it's just prefixing a v you can use v:{version}.
For more complicated release tag names the fallback is to simply set the full tag name manually for each release using the :{ask} key and bloom will prompt you at runtime.
release_tag parsing

Originally posted by tfoote with karma: 58457 on 2016-06-24
This answer was ACCEPTED on the original site
Post score: 2

