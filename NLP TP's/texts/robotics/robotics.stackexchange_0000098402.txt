Q:

ROS2 Foxy : Unable to locate package ros-foxy-desktop

running ubuntu 20.04 fresh install.. followed the directions here EXACTLY, and still unable to locate package... any ideas why?
odroid@odroid:~$ sudo apt install ros-foxy-desktop
Reading package lists... Done
Building dependency tree
Reading state information... Done
E: Unable to locate package ros-foxy-desktop

here is the output when i run:  apt-cache search ros-foxy*
odroid@odroid:~$ apt-cache search ros-foxy*
ros-foxy-ament-cmake - The entry point package for the ament buildsystem in CMake.
ros-foxy-ament-cmake-auto - The auto-magic functions for ease to use of the ament buildsystem in CMake.
ros-foxy-ament-cmake-core - The core of the ament buildsystem in CMake.
ros-foxy-ament-cmake-export-definitions - The ability to export definitions to downstream packages in the ament buildsystem.
ros-foxy-ament-cmake-export-dependencies - The ability to export dependencies to downstream packages in the ament buildsystem in CMake.
ros-foxy-ament-cmake-export-include-directories - The ability to export include directories to downstream packages in the ament buildsystem in CMake.
ros-foxy-ament-cmake-export-interfaces - The ability to export interfaces to downstream packages in the ament buildsystem in CMake.
ros-foxy-ament-cmake-export-libraries - The ability to export libraries to downstream packages in the ament buildsystem in CMake.
ros-foxy-ament-cmake-export-link-flags - The ability to export link flags to downstream packages in the ament buildsystem.
ros-foxy-ament-cmake-gmock - The ability to add Google mock-based tests in the ament buildsystem in CMake.
ros-foxy-ament-cmake-gtest - The ability to add gtest-based tests in the ament buildsystem in CMake.
ros-foxy-ament-cmake-include-directories - The functionality to order include directories according to a chain of prefixes in 

the ament buildsystem in CMake.
ros-foxy-ament-cmake-libraries - The functionality to deduplicate libraries in the ament buildsystem in CMake.
ros-foxy-ament-cmake-nose - The ability to add nose-based tests in the ament buildsystem in CMake.

ros-foxy-ament-cmake-pytest - The ability to run Python tests using pytest in the ament buildsystem in CMake.
ros-foxy-ament-cmake-python - The ability to use Python in the ament buildsystem in CMake.
ros-foxy-ament-cmake-target-dependencies - The ability to add definitions, include directories and libraries of a package to a target in the ament buildsystem in CMake.
ros-foxy-ament-cmake-test - The ability to add tests in the ament buildsystem in CMake.
ros-foxy-ament-cmake-version - The ability to override the exported package version in the ament buildsystem.
ros-foxy-ament-package - The parser for the manifest files in the ament buildsystem.
ros-foxy-gmock-vendor - The package provides GoogleMock.
ros-foxy-gtest-vendor - The package provides GoogleTest.
ros-foxy-ros-workspace - Provides the prefix level environment files for ROS 2 packages.

Originally posted by jmalbert97 on ROS Answers with karma: 3 on 2021-02-23
Post score: 0

A:

Most likely you are running a 32-bit operating system (armhf) that is not a tier 1 support platform, (only amd64 and arm64 are).
If that is the case, this QA should answer your question: https://answers.ros.org/question/371683/no-ros-foxy-ros-base-for-armhf-why/

Originally posted by marguedas with karma: 3606 on 2021-02-23
This answer was ACCEPTED on the original site
Post score: 1

Original comments
Comment by jmalbert97 on 2021-02-23:
Thank you so much, you are 100% correct, 32 bit OS. Building from source now :)
Comment by gvdhoorn on 2021-02-23:
We really should document this better, or give it more visibility.
There are so many Q&As about the exact same subject.
And as RPis and similar platforms are getting ever more popular, we're going to see many more of these.
Comment by marguedas on 2021-02-23:
+1, it looks even more easy to miss on the ROS2 instructions. Looks like the ROS1 table of OS/Arches while more visible was often overlooked. Do you have an idea of how to make this more visible? A banner at the top of installation pages maybe?
The fact that there are some ros-foxy-* debs available but not even ros-core is very confusing.
@nuclearsandwich would it be an option to remove these packages for armhf?
Comment by gvdhoorn on 2021-02-23:
I guess those packages are available as they are pure Python packages.
They do make it easier to start building from source on these architectures btw: instead of having to pip install everything ..

Do you have an idea of how to make this more visible? A banner at the top of installation pages maybe?

Something like that.
Perhaps a very clear and distinctive section right at the beginning of the installation tutorials, listing the architectures supported and whether there are binary packages available.

