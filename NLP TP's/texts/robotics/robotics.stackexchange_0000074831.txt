Q:

Python Process Died Exit Code -11

I have a node, "ReceiveOrder.py", that is run via a roslaunch file and unexpectedly dies when I run it.
I have two clues to offer:

The following is part of what I see in the roslaunch terminal window.  You'll see that exit code -11 is shown.  What does this mean?  I don't see anything else that is more specific in this runtime feedback
NODES
/
ReceiveOrder (robot_arm/ReceiveOrder.py)
rviz_HPLaptop_4443_4042809988877892707 (rviz/rviz)
ROS_MASTER_URI=http://localhost:11311
core service [/rosout] found
process[ReceiveOrder-1]: started with pid [4461]
process[rviz_HPLaptop_4443_4042809988877892707-2]: started with pid [4462]
[ INFO] [1466968712.255484346]: rviz version 1.11.14
[ INFO] [1466968712.255610062]: compiled against Qt version 4.8.6
[ INFO] [1466968712.255653092]: compiled against OGRE version 1.8.1 (Byatis)
[ INFO] [1466968712.466849981]: Stereo is NOT SUPPORTED
[ INFO] [1466968712.467064489]: OpenGl version: 2.1 (GLSL 1.2).
[ReceiveOrder-1] process has died [pid 4461, exit code -11, cmd /home/daalt/ar01/src/robot_arm/ReceiveOrder.py __name:=ReceiveOrder __log:=/home/daalt/.ros/log/1300bd8c-3bcf-11e6-8a67-002315aba7e4/ReceiveOrder-1.log].
log file: /home/daalt/.ros/log/1300bd8c-3bcf-11e6-8a67-002315aba7e4/ReceiveOrder-1*.log

I only see [INFO] messages in the ReceiveOrder-1.log file, no warnings or errors.  However there is this line that suggests that something is going on with the rospy clock:
[rospy.simtime][INFO] 2016-06-26 14:18:32,722: /use_sim_time is not set, will not subscribe to simulated time [/clock] topic

The only place where the question of clock comes into question, as far as I know, is when I define a spin rate in the "ReceiveOrder.py" Python node.
I'm not sure what direction to go in based on these clues.  Does anyone suspect something specific going on here or, at least, suggest something I can do to investigate further?
Thank you, ROS community!!

Originally posted by daalt on ROS Answers with karma: 159 on 2016-06-26
Post score: 0

Original comments
Comment by gvdhoorn on 2016-06-27:
-11 is a SEGFAULT. For a Python interpreter, that is a bit of a strange error to run in to. Are you doing anything with C/C++ interop and Python?
Comment by daalt on 2016-06-27:
No C/C++ interop within my node.  I traced it to the following line where the node crashes:
robot = moveit_commander.RobotCommander()

I made the following imports so I would think that this command is supported:
import sys
import copy
import rospy
import moveit_commander

Comment by gvdhoorn on 2016-06-27:
The MoveIt commander is a C++ class / many C++ classes wrapped in a thin layer of Python. A Python interpreter will never (well, never) SEGFAULT because of missing import statements. Perhaps report this at the moveit_commander issue tracker?
Comment by daalt on 2016-06-27:
Thanks, gvdhoorn.  I also ran a barebones node and it failed immediately after the moveit_commander import.  Error message mentioned:
boost: mutex lock failed in pthread_mutex_lock: Invalid argument

I'll start a new thread on this before submitting an issue.

A:

One thing I noticed when I studied the tutorials more closely is that I didn't have the correct package directory structure with a "src" subdirectory under the package directory.  Rebuilding the project with the correct directory structure resulted in me being able to successfully run the node.

Originally posted by daalt with karma: 159 on 2016-06-27
This answer was ACCEPTED on the original site
Post score: 0

Original comments
Comment by gvdhoorn on 2016-06-28:
If that actually lets you run MoveIt commander successfully that would be something to report, because it would indicate that there could be an implicit assumption on workspace layout somewhere in the commander classes. It'd be nice if you reported that.

