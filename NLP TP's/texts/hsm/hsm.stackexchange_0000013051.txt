Q:

Why do we still use degrees and cycles if we all implicitly use radians in trigonometric functions?

For various reasons already discussed in other stackexchange posts, we implicitly use radians in trigonometric functions by convention. For example, one period of $sin(x)$ lies in $0 \leq x < 2\pi$, when we could have instead used $\sin_{\text{degree}}(d)=\sin(\frac{\pi}{180}d)$ or $\sin_{\text{cycle}}(c)=\sin(2 \pi c)$ where one period lies in $0 \leq d < 360$ or $0 \leq c < 1$.
So how did we still end up using degrees and cycles? Angles are measured in degrees more often than radians in basic geometry content, where $\sin$ may even mean $\sin_{\text{degree}}$ with no warning. Ordinary frequency (cycles per second a.k.a hertz) is often used instead of angular frequency (radians per second).

A:

We do not use radians "by convention". Radian is a necessary intrinsic measure of an angle, which is related to the "fact of nature" that the length of a unit circle is $2\pi$. Turns is also a natural measure, which is sometimes preferred to radians, when it is convenient.
Degrees are different, the reason of using them is purely historical, related to
the ancient Babylonian numeration system, with base 60. So the use of degrees, and other similar things is motivated by history tradition and convenience. Like hours,
grads and other measures of angles of historic/cultural origin.

A:

I ran across an answer to my satisfaction, but it sort of turns the question on its head: "Why do we implicitly use radians in trigonometric functions if we still use degrees and cycles?" It's not as historical as I imagined, but there is a bit.
Each choice may arise more naturally in different contexts:

Degrees: integers for a wide variety of angles, early astronomy (days in year), chords geometry
Cycles: rotations, describing periodic signals as periods per unit time
Radians: arc geometry, limits scaling, derivatives scaling

Each choice lets you do the same math, but once we hit the Computer Age, the radian's advantage with limits became indispensible.
I'm not going to describe the entirety of the iterative CORDIC algorithm or its applications, just an overview for sine and cosine. With each iteration $k$, it adjusts the angle of a unit vector by $\arctan (2^{-k})$ toward the target angle, so that the unit vector's position (sine and cosine) can be adjusted with cheap bit-shifts instead of generic multiplication. $\arctan$ isn't cheap, of course, but $\arctan (2^{-k})$  can be precomputed for a natural number sequence $k$ and stored in a lookup table. It is the lookup table where the choice of degree/cycle/radian is made.
With radians, $\lim_{x \to 0^+} \arctan (x)/x = 1$, so at large enough $k$, you can take $\arctan (2^{-k}) = 2^{-k}$ and don't need to precompute further. Adjustment by $2^{-k}$ only requires changing a single bit. By contrast, $\lim_{x \to 0^+} \arctan_{cycle} (x)/x = 1 / (2 \pi) $ and $\lim_{x \to 0^+} \arctan_{degree} (x)/x = 180 / \pi $. Adjustment by $2^{-k}/ (2 \pi)$ and $2^{-k}180 / \pi$ requires full-on addition.

