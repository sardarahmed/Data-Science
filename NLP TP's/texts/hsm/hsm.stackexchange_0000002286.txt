Q:

Why does logical-AND take operator precedence (evaluated first) over logical-OR?

Does logical-AND have precedence over logical-OR because of a reason or was it an arbitrary choice made sometime in the distant past?
(Perhaps it could have been the other way around: OR-terms evaluated first, then AND'ed together?)
I've Googled and can't seem to find an answer; most mathematical and computer language references state the precedence rankings of various operations but not the origins.
NOTE: I don't believe this question has anything to do with notation, but rather the order that operations are performed.

A:

"And" is often seen as the multiplication in Boole's algebra, sometime written $\times$ and "Or" is seen as the addition (and sometime written $+$, though $+$ is more often used for xor than for or), which is why they commonly inherit the precedance of their namesakes.
Note that both are distributive over the other, and it's the neutral element (0 for or, 1 for and) that gives the correspondance.
So the next question that has to be addressed is why multiplication usually has precedence over addition (note that some programming languages, notably, do not follow this convention).
It seems to have arisen from a global consensus, mainly over concerns of simplicity of writing polynomials, but wasn't formalised until the 20th century. This is because mathematicians don't care so much about precedence, but wider teaching of mathematics in textbooks, as well as the rise of IT-science, have made it compulsory to formalise these rules.

